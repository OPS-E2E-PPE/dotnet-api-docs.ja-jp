<Type Name="HtmlElement" FullName="System.Windows.Forms.HtmlElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="46645cdabc04bff4f122287422e619306d7f63b0" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83518329" /></Metadata><TypeSignature Language="C#" Value="public sealed class HtmlElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HtmlElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.HtmlElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HtmlElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlElement sealed" />
  <TypeSignature Language="F#" Value="type HtmlElement = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3bdea-101">Web ページ内の HTML 要素を表します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-101">Represents an HTML element inside of a Web page.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-102"><xref:System.Windows.Forms.HtmlElement> は、`BODY`、`TABLE`、`FORM`など、HTML ドキュメント内で可能な任意の型の要素を表します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-102"><xref:System.Windows.Forms.HtmlElement> represents any possible type of element in an HTML document, such as `BODY`, `TABLE`, and `FORM`, among others.</span></span> <span data-ttu-id="3bdea-103">クラスは、すべての要素で検索することが予想される最も一般的なプロパティを公開します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-103">The class exposes the most common properties you can expect to find on all elements.</span></span>  
  
 <span data-ttu-id="3bdea-104">ほとんどの要素には*子要素*があり、その下に配置されている他の HTML 要素を使用できます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-104">Most elements can have *child elements*: other HTML elements that are placed underneath them.</span></span> <span data-ttu-id="3bdea-105"><xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> プロパティを使用して、指定された要素に子があるかどうかをテストし、<xref:System.Windows.Forms.HtmlElement.Children%2A> コレクションを反復処理します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-105">Use the <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> property to test whether a given element has children, and the <xref:System.Windows.Forms.HtmlElement.Children%2A> collection to iterate through them.</span></span> <span data-ttu-id="3bdea-106"><xref:System.Windows.Forms.HtmlElement.Parent%2A> プロパティは、現在の要素が入れ子になっている <xref:System.Windows.Forms.HtmlElement> を返します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-106">The <xref:System.Windows.Forms.HtmlElement.Parent%2A> property returns the <xref:System.Windows.Forms.HtmlElement> in which the current element is nested.</span></span>  
  
 <span data-ttu-id="3bdea-107">多くの場合、<xref:System.Windows.Forms.HtmlElement>によって直接公開されていない、基になる要素の属性、プロパティ、およびメソッドにアクセスする必要があります。たとえば、`IMG` 要素の `SRC` 属性や `FORM`の `Submit` メソッドなどです。</span><span class="sxs-lookup"><span data-stu-id="3bdea-107">You often need access to attributes, properties, and methods on the underlying element that are not directly exposed by <xref:System.Windows.Forms.HtmlElement>, such as the `SRC` attribute on an `IMG` element or the `Submit` method on a `FORM`.</span></span> <span data-ttu-id="3bdea-108"><xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> メソッドと <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> メソッドを使用すると、特定の要素の任意の属性またはプロパティを取得したり、変更したりできます。一方、マネージドキュメントオブジェクトモデル (DOM) に公開されていないメソッドへのアクセスは、<xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> によって提供されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-108">The <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> methods enable you to retrieve and alter any attribute or property on a specific element, while <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> provides access to any methods not exposed in the managed Document Object Model (DOM).</span></span> <span data-ttu-id="3bdea-109">アプリケーションにアンマネージコードのアクセス許可がある場合は、<xref:System.Windows.Forms.HtmlElement.DomElement%2A> 属性を使用して、非公開のプロパティおよびメソッドにアクセスすることもできます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-109">If your application has unmanaged code permission, you can also access unexposed properties and methods with the <xref:System.Windows.Forms.HtmlElement.DomElement%2A> attribute.</span></span>  
  
 <span data-ttu-id="3bdea-110">要素が特定の型であるかどうかをテストするには、<xref:System.Windows.Forms.HtmlElement.TagName%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-110">Use the <xref:System.Windows.Forms.HtmlElement.TagName%2A> property to test whether an element is of a specific type.</span></span>  
  
 <span data-ttu-id="3bdea-111">任意の HTML ドキュメントを実行時に変更できます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-111">Any HTML document can be modified at run time.</span></span> <span data-ttu-id="3bdea-112"><xref:System.Windows.Forms.HtmlDocument>の <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> メソッドを使用して新しい <xref:System.Windows.Forms.HtmlElement> オブジェクトを作成し、<xref:System.Windows.Forms.HtmlElement.AppendChild%2A> または <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> メソッドを使用して別の要素に追加することができます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-112">You can create new <xref:System.Windows.Forms.HtmlElement> objects with the <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> method of <xref:System.Windows.Forms.HtmlDocument>, and add them to another element using the <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> or <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> methods.</span></span> <span data-ttu-id="3bdea-113">また、要素を HTML タグとして作成し、既存の要素の <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> プロパティに割り当てることもできます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-113">You can also create the elements as HTML tags and assign them to an existing element's <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-114">次のコード例では、任意の HTML ドキュメントを調べて、HTML 要素を記述する文字列を派生させます。この文字列は、ドキュメント内の要素が入れ子になっている深さを示すインデントとレベル番号を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-114">The following code example shows how to examine an arbitrary HTML document and derive a string describing the HTML elements, with indentation and level numbers used to indicate how deeply nested the elements are in the document.</span></span> <span data-ttu-id="3bdea-115">このコード例では、アプリケーションが `WebBrowser1`という名前の <xref:System.Windows.Forms.WebBrowser> コントロールをホストする必要があります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-115">This code example requires that your application hosts a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.HtmlElement#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=104876"><span data-ttu-id="3bdea-116">IHTMLElement インターフェイス</span><span class="sxs-lookup"><span data-stu-id="3bdea-116">IHTMLElement Interface</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=104877"><span data-ttu-id="3bdea-117">IHTMLElement2 インターフェイス</span><span class="sxs-lookup"><span data-stu-id="3bdea-117">IHTMLElement2 Interface</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=104878"><span data-ttu-id="3bdea-118">IHTMLElement3 インターフェイス</span><span class="sxs-lookup"><span data-stu-id="3bdea-118">IHTMLElement3 Interface</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=104879"><span data-ttu-id="3bdea-119">IHTMLElement4 インターフェイス</span><span class="sxs-lookup"><span data-stu-id="3bdea-119">IHTMLElement4 Interface</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElementCollection All { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElementCollection All" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.All" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property All As HtmlElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElementCollection ^ All { System::Windows::Forms::HtmlElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.All : System.Windows.Forms.HtmlElementCollection" Usage="System.Windows.Forms.HtmlElement.All" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-120">現在の要素の下位にあるすべての要素の <see cref="T:System.Windows.Forms.HtmlElementCollection" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-120">Gets an <see cref="T:System.Windows.Forms.HtmlElementCollection" /> of all elements underneath the current element.</span></span></summary>
        <value><span data-ttu-id="3bdea-121">現在の要素の直接的または間接的な子であるすべての要素のコレクション。</span><span class="sxs-lookup"><span data-stu-id="3bdea-121">A collection of all elements that are direct or indirect children of the current element.</span></span> <span data-ttu-id="3bdea-122">たとえば、現在の要素が<c>テーブル</c>の場合、<see cref="P:System.Windows.Forms.HtmlElement.All" /><c>は、テーブル</c>内のすべての、 <c>TR</c>、および<c>TD</c>要素、および、セル内に含まれる<c>DIV</c>や<c>SPAN</c>要素などの他の要素を返します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-122">If the current element is a <c>TABLE</c>, for example, <see cref="P:System.Windows.Forms.HtmlElement.All" /> will return every <c>TH</c>, <c>TR</c>, and <c>TD</c> element within the table, as well as any other elements, such as <c>DIV</c> and <c>SPAN</c> elements, contained within the cells.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-123">現在の要素を直接の親として持つ要素のみにアクセスするには、代わりに <xref:System.Windows.Forms.HtmlElement.Children%2A> コレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-123">To access only those elements which have the current element as their direct parent, use the <xref:System.Windows.Forms.HtmlElement.Children%2A> collection instead.</span></span>  
  
 <span data-ttu-id="3bdea-124">このコレクションの要素は、必ずしもソースの順序で返されるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-124">Elements in this collection will not necessarily be returned in source order.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElement.Children" />
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement AppendChild (System.Windows.Forms.HtmlElement newElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlElement AppendChild(class System.Windows.Forms.HtmlElement newElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendChild (newElement As HtmlElement) As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlElement ^ AppendChild(System::Windows::Forms::HtmlElement ^ newElement);" />
      <MemberSignature Language="F#" Value="member this.AppendChild : System.Windows.Forms.HtmlElement -&gt; System.Windows.Forms.HtmlElement" Usage="htmlElement.AppendChild newElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newElement" Type="System.Windows.Forms.HtmlElement" />
      </Parameters>
      <Docs>
        <param name="newElement"><span data-ttu-id="3bdea-125">ツリーのこの位置に追加する <see cref="T:System.Windows.Forms.HtmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="3bdea-125">The <see cref="T:System.Windows.Forms.HtmlElement" /> to append to this location in the tree.</span></span></param>
        <summary><span data-ttu-id="3bdea-126">要素を別の要素のサブツリーに追加します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-126">Adds an element to another element's subtree.</span></span></summary>
        <returns><span data-ttu-id="3bdea-127">ツリーに追加された後の要素。</span><span class="sxs-lookup"><span data-stu-id="3bdea-127">The element after it has been added to the tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-128">HTML ドキュメントオブジェクトモデル (DOM) を使用すると、HTML ファイルの実行時の内容をさまざまな方法で変更できます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-128">The HTML Document Object Model (DOM) enables you to alter the run-time contents of an HTML file in a number of ways.</span></span> <span data-ttu-id="3bdea-129">既存のドキュメントに新しい要素を追加したり、ページ上の要素を移動したりするには、<xref:System.Windows.Forms.HtmlElement.AppendChild%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-129">Use <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> to add new elements to an existing document, or to move an element on the page.</span></span>  
  
 <span data-ttu-id="3bdea-130">要素が既に親になっている場合は、別の要素に要素を追加すると、その要素が前の親から自動的に削除されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-130">If an element has already been parented, appending an element to another element will automatically remove that element from its previous parent.</span></span>  
  
 <span data-ttu-id="3bdea-131"><xref:System.Windows.Forms.HtmlElement.AppendChild%2A> を使用して実行時にドキュメントに加えられた追加は、<xref:System.Windows.Forms.WebBrowser> コントロールで <xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A> メソッドを呼び出すと保持されません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-131">Any additions made to a document at run-time using <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> will not be persisted when you call the <xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A> method on the <xref:System.Windows.Forms.WebBrowser> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-132">次のコード例では、<xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> メソッドを使用して新しいハイパーリンクを作成し、`BODY` 要素で `AppendChild` を使用してページの末尾に追加します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-132">The following code example creates a new hyperlink using the <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> method and adds it to end of a page using `AppendChild` on the `BODY` element.</span></span> <span data-ttu-id="3bdea-133">この例では、アプリケーションに `WebBrowser1`という名前の <xref:System.Windows.Forms.WebBrowser> コントロールが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-133">The example requires that your application contains a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.HtmlElement#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.HtmlDocument.CreateElement(System.String)" />
        <related type="ExternalDocumentation" href="https://developer.mozilla.org/docs/Web/API/Node/appendChild"><span data-ttu-id="3bdea-134">appendChild メソッド</span><span class="sxs-lookup"><span data-stu-id="3bdea-134">appendChild Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AttachEventHandler">
      <MemberSignature Language="C#" Value="public void AttachEventHandler (string eventName, EventHandler eventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachEventHandler(string eventName, class System.EventHandler eventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachEventHandler (eventName As String, eventHandler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachEventHandler(System::String ^ eventName, EventHandler ^ eventHandler);" />
      <MemberSignature Language="F#" Value="member this.AttachEventHandler : string * EventHandler -&gt; unit" Usage="htmlElement.AttachEventHandler (eventName, eventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventHandler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="eventName"><span data-ttu-id="3bdea-135">処理するイベントの名前。</span><span class="sxs-lookup"><span data-stu-id="3bdea-135">The name of the event you want to handle.</span></span></param>
        <param name="eventHandler"><span data-ttu-id="3bdea-136">イベントを処理するマネージド コード。</span><span class="sxs-lookup"><span data-stu-id="3bdea-136">The managed code that handles the event.</span></span></param>
        <summary><span data-ttu-id="3bdea-137">HTML DOM の指定したイベントにイベント ハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-137">Adds an event handler for a named event on the HTML Document Object Model (DOM).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-138">マネージドキュメントオブジェクトモデル (DOM) は、選択された数のイベントのみを公開します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-138">The Managed Document Object Model (DOM) exposes only a select number of events.</span></span> <span data-ttu-id="3bdea-139">ほとんどの非公開イベントは、特定の種類の要素に対してのみ定義されます。`submit` イベントなど `FORM` の要素でのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="3bdea-139">Most of the unexposed events are only defined for specific types of elements; such as the `submit` event, which is valid only on `FORM` elements.</span></span> <span data-ttu-id="3bdea-140">これらの非公開イベントにイベントハンドラーを追加するには、<xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-140">Use <xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A> to add an event handler to these unexposed events.</span></span>  
  
 <span data-ttu-id="3bdea-141">ドキュメントの読み込みが完了するまで、ドキュメントまたはそのオブジェクトの1つにイベントをアタッチしないでください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-141">You should not attach an event to the document or one of its objects until the document has completed loading.</span></span> <span data-ttu-id="3bdea-142">このメソッドを呼び出す最も早い段階は、<xref:System.Windows.Forms.WebBrowser> コントロールの <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> イベントです。</span><span class="sxs-lookup"><span data-stu-id="3bdea-142">The earliest you should call this method is in the <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> event of the <xref:System.Windows.Forms.WebBrowser> control.</span></span>  
  
 <span data-ttu-id="3bdea-143">使用できるアンマネージイベントの詳細については、「[マネージ HTML ドキュメントオブジェクトモデルの非公開メンバーへのアクセス](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md)」および「IHTMLElement インターフェイス: [IHTMLElement](https://go.microsoft.com/fwlink/?LinkId=104876)、 [IHTMLElement2](https://go.microsoft.com/fwlink/?LinkId=104877)、 [IHTMLElement3](https://go.microsoft.com/fwlink/?LinkId=104878)、 [IHTMLElement4](https://go.microsoft.com/fwlink/?LinkId=104879)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-143">For more information about the available unmanaged events, see [Accessing Unexposed Members on the Managed HTML Document Object Model](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md) and the IHTMLElement interfaces: [IHTMLElement](https://go.microsoft.com/fwlink/?LinkId=104876), [IHTMLElement2](https://go.microsoft.com/fwlink/?LinkId=104877), [IHTMLElement3](https://go.microsoft.com/fwlink/?LinkId=104878), [IHTMLElement4](https://go.microsoft.com/fwlink/?LinkId=104879).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://developer.mozilla.org/docs/Web/API/EventTarget/addEventListener"><span data-ttu-id="3bdea-144">EventTarget. addEventListener ()</span><span class="sxs-lookup"><span data-stu-id="3bdea-144">EventTarget.addEventListener()</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanHaveChildren">
      <MemberSignature Language="C#" Value="public bool CanHaveChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanHaveChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.CanHaveChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanHaveChildren As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanHaveChildren { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanHaveChildren : bool" Usage="System.Windows.Forms.HtmlElement.CanHaveChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-145">この要素が子要素を持つことができるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-145">Gets a value indicating whether this element can have child elements.</span></span></summary>
        <value><span data-ttu-id="3bdea-146">要素が子要素を持つことができる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bdea-146"><see langword="true" /> if element can have child elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-147">`IMG` や `SCRIPT`などの一部の要素には、子を含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-147">Some elements, such as `IMG` and `SCRIPT`, cannot have any children.</span></span> <span data-ttu-id="3bdea-148"><xref:System.Windows.Forms.HtmlElement.AppendChild%2A> を呼び出す前、または任意の要素で <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> する前に、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-148">Use this property before you call <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> or <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> on an arbitrary element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-149">次のコード例では、<xref:System.Windows.Forms.HtmlDocument>の <xref:System.Windows.Forms.HtmlElement.Click> イベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-149">The following code example handles the <xref:System.Windows.Forms.HtmlElement.Click> event on <xref:System.Windows.Forms.HtmlDocument>.</span></span> <span data-ttu-id="3bdea-150">マウスクリックを使用して要素が前に選択されていなかった場合、コードは `MoveElement`という名前のプライベートクラス変数に要素を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-150">If an element was not previous selected using a mouse click, the code assigns the element to a private class variable named `MoveElement`.</span></span> <span data-ttu-id="3bdea-151">要素が選択されている場合、コードは、クリックした要素に追加しようとします。</span><span class="sxs-lookup"><span data-stu-id="3bdea-151">If an element was selected, the code attempts to append it to the element that was just clicked.</span></span> <span data-ttu-id="3bdea-152">このコード例では、アプリケーションが `WebBrowser1`という名前の <xref:System.Windows.Forms.WebBrowser> コントロールをホストし、<xref:System.Windows.Forms.HtmlDocument>に <xref:System.Windows.Forms.HtmlElement.Click> イベントのイベントハンドラーを既に追加している必要があります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-152">This code example requires that your application hosts a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`, and that you have already added an event handler for the <xref:System.Windows.Forms.HtmlElement.Click> event on <xref:System.Windows.Forms.HtmlDocument>.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.HtmlElement#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElementCollection Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElementCollection Children" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As HtmlElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElementCollection ^ Children { System::Windows::Forms::HtmlElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Windows.Forms.HtmlElementCollection" Usage="System.Windows.Forms.HtmlElement.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-153">現在の要素のすべての子の <see cref="T:System.Windows.Forms.HtmlElementCollection" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-153">Gets an <see cref="T:System.Windows.Forms.HtmlElementCollection" /> of all children of the current element.</span></span></summary>
        <value><span data-ttu-id="3bdea-154">現在の要素を親とするすべての <see cref="T:System.Windows.Forms.HtmlElement" /> オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="3bdea-154">A collection of all <see cref="T:System.Windows.Forms.HtmlElement" /> objects that have the current element as a parent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-155">HTML ファイル内の要素の多くは、その下に他の HTML 要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-155">Many of the elements inside of an HTML file can have other HTML elements underneath them.</span></span> <span data-ttu-id="3bdea-156"><xref:System.Windows.Forms.HtmlElement.Children%2A> コレクションには、ドキュメントのツリー構造を調べるための簡単なメカニズムが用意されています。</span><span class="sxs-lookup"><span data-stu-id="3bdea-156">The <xref:System.Windows.Forms.HtmlElement.Children%2A> collection provides a simple mechanism for exploring the tree structure of a document.</span></span>  
  
 <span data-ttu-id="3bdea-157"><xref:System.Windows.Forms.HtmlElement.Children%2A> は、直接の親が現在の要素である要素のみを公開します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-157"><xref:System.Windows.Forms.HtmlElement.Children%2A> only exposes elements whose direct parent is the current element.</span></span> <span data-ttu-id="3bdea-158">`TABLE` 要素の <xref:System.Windows.Forms.HtmlElement> がある場合、<xref:System.Windows.Forms.HtmlElement.Children%2A> は `TABLE`内のすべての `TR` (行) 要素を提供します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-158">If you have an <xref:System.Windows.Forms.HtmlElement> for a `TABLE` element, <xref:System.Windows.Forms.HtmlElement.Children%2A> will give you all of the `TR` (row) elements inside of the `TABLE`.</span></span> <span data-ttu-id="3bdea-159">`TR` 要素の内部に含まれる `TD` (セル) 要素を取得するには、各 `TR` 要素の <xref:System.Windows.Forms.HtmlElement.Children%2A> コレクションを使用するか、<xref:System.Windows.Forms.HtmlElement.All%2A> の <xref:System.Windows.Forms.HtmlElement>コレクションを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-159">To retrieve the `TD` (cell) elements contained inside of the `TR` elements, you will need to use either the <xref:System.Windows.Forms.HtmlElement.Children%2A> collection on each individual `TR` element, or use the <xref:System.Windows.Forms.HtmlElement.All%2A> collection on <xref:System.Windows.Forms.HtmlElement>.</span></span>  
  
 <span data-ttu-id="3bdea-160">このコレクションの要素は、ソースの順序が保証されていません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-160">Elements in this collection are not guaranteed to be in source order.</span></span>  
  
 <span data-ttu-id="3bdea-161"><xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> が `false`場合、`Children` は常に空になります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-161">If <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> is `false`, `Children` will always be empty.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-162">次のコード例では、任意の HTML ドキュメントを調べて、要素を記述する文字列を取得します。この文字列は、ドキュメント内の要素が入れ子になっている深さを示すインデントとレベル番号を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-162">The following code example examines an arbitrary HTML document and derive a string describing the elements, with indentation and level numbers used to indicate how deeply nested the elements are in the document.</span></span> <span data-ttu-id="3bdea-163">これは、すべての要素の `Children` コレクションを再帰的に検索することによって行われます。これは、ドキュメントの先頭にある HTML 要素から始まります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-163">It does this by searching the `Children` collection of all elements recursively, starting with the HTML element at the top of the document.</span></span> <span data-ttu-id="3bdea-164">このコード例では、アプリケーションに `WebBrowser1`という名前の <xref:System.Windows.Forms.WebBrowser> コントロールが必要です。</span><span class="sxs-lookup"><span data-stu-id="3bdea-164">This code example requires that your application has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.HtmlElement#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElement.All" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.Click : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-165">ユーザーが要素をマウスの左ボタンでクリックしたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-165">Occurs when the user clicks on the element with the left mouse button.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-166">要素の <xref:System.Windows.Forms.HtmlElement.Click> イベントの既定のアクションを取り消すには、<xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-166">You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.Click> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="3bdea-167"><xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> プロパティを `true`に設定しない限り、要素の <xref:System.Windows.Forms.HtmlElement.Click> イベントは、その要素の親要素および <xref:System.Windows.Forms.HtmlDocument> クラス自体でも発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-167">A <xref:System.Windows.Forms.HtmlElement.Click> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="3bdea-168">現在入力フォーカスがない要素をユーザーがクリックすると、<xref:System.Windows.Forms.HtmlElement.Focusing> イベントの後、その要素の <xref:System.Windows.Forms.HtmlElement.LostFocus> イベントの前に、<xref:System.Windows.Forms.HtmlElement.Click> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-168">If the user clicks on an element that does not currently have input focus, the <xref:System.Windows.Forms.HtmlElement.Click> event will occur after the <xref:System.Windows.Forms.HtmlElement.Focusing> event, but before the <xref:System.Windows.Forms.HtmlElement.LostFocus> event for that element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-169">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-169">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3bdea-170">この例では、イベントハンドラーは、<xref:System.Windows.Forms.HtmlElement.Click> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-170">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.Click> event.</span></span> <span data-ttu-id="3bdea-171">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-171">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3bdea-172">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-172">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3bdea-173">コード例を実行するには、`HtmlElement1`という <xref:System.Windows.Forms.HtmlElement> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-173">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="3bdea-174">次に、イベントハンドラーが <xref:System.Windows.Forms.HtmlElement.Click> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-174">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.Click> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#432](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#432)]
 [!code-vb[System.Windows.Forms.EventExamples#432](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#432)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536913.aspx"><span data-ttu-id="3bdea-175">onclick イベント</span><span class="sxs-lookup"><span data-stu-id="3bdea-175">onclick Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ClientRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ClientRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ClientRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.ClientRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ClientRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.HtmlElement.ClientRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-176">HTML ドキュメントにおける要素のクライアント領域の境界を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-176">Gets the bounds of the client area of the element in the HTML document.</span></span></summary>
        <value><span data-ttu-id="3bdea-177">要素が占有しているクライアント領域から、境界線とスクロール バーの領域を除いた領域。</span><span class="sxs-lookup"><span data-stu-id="3bdea-177">The client area occupied by the element, minus any area taken by borders and scroll bars.</span></span> <span data-ttu-id="3bdea-178">要素の表示要素を含めた位置および寸法を取得するには、代わりに <see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /> を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-178">To obtain the position and dimensions of the element inclusive of its adornments, use <see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /> instead.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-179"><xref:System.Windows.Forms.HtmlElement.ClientRectangle%2A> は、明示的な高さと幅が割り当てられている要素、または絶対位置を使用する要素に対してのみ位置データを返します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-179"><xref:System.Windows.Forms.HtmlElement.ClientRectangle%2A> will return position data only for elements that have been assigned an explicit height and width, or elements that use absolute positioning.</span></span> <span data-ttu-id="3bdea-180">位置スタイルが `absolute`に設定されている場合、ドキュメントは絶対に配置されます。その後、HTML ページの任意の座標に配置できます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-180">A document is absolutely positioned if its position style is set to `absolute`, after which it can be positioned at any coordinate on the HTML page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-181"><xref:System.Windows.Forms.WebBrowser> コントロールのホストインスタンスに次の HTML ページを読み込んだとします。</span><span class="sxs-lookup"><span data-stu-id="3bdea-181">Assume you have loaded the following HTML page into a hosted instance of the <xref:System.Windows.Forms.WebBrowser> control.</span></span>  
  
```  
<HTML>  
  
    <BODY>  
  
        <DIV id="div1" style="position:absolute;top:100px;left:100px;border-      style:solid;border-width:1px;">  
            Edit this text.  
        </DIV>  
  
    </BODY>  
  
</HTML>  
```  
  
 <span data-ttu-id="3bdea-182">次のコード例では、クライアント領域の幅が400ピクセル (高さ50ピクセル) 未満の場合にこの要素を取得し、その次元を拡張する方法を示します。また、ユーザーがテキストを入力できるように `DIV` `contentEditable` 状態に設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-182">The following code example demonstrates retrieving this element and expanding its dimensions if the client area is less than 400 pixels wide by 50 pixels high, and also sets the `DIV` to the `contentEditable` state so that the user can input text.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.HtmlElement#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" />
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms533564.aspx"><span data-ttu-id="3bdea-183">clientLeft プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-183">clientLeft Property</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms533565.aspx"><span data-ttu-id="3bdea-184">clientTop プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-184">clientTop Property</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms533566.aspx"><span data-ttu-id="3bdea-185">clientWidth プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-185">clientWidth Property</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms533563.aspx"><span data-ttu-id="3bdea-186">clientHeight プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-186">clientHeight Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DetachEventHandler">
      <MemberSignature Language="C#" Value="public void DetachEventHandler (string eventName, EventHandler eventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DetachEventHandler(string eventName, class System.EventHandler eventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.DetachEventHandler(System.String,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DetachEventHandler (eventName As String, eventHandler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DetachEventHandler(System::String ^ eventName, EventHandler ^ eventHandler);" />
      <MemberSignature Language="F#" Value="member this.DetachEventHandler : string * EventHandler -&gt; unit" Usage="htmlElement.DetachEventHandler (eventName, eventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventHandler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="eventName"><span data-ttu-id="3bdea-187">処理するイベントの名前。</span><span class="sxs-lookup"><span data-stu-id="3bdea-187">The name of the event you want to handle.</span></span></param>
        <param name="eventHandler"><span data-ttu-id="3bdea-188">イベントを処理するマネージド コード。</span><span class="sxs-lookup"><span data-stu-id="3bdea-188">The managed code that handles the event.</span></span></param>
        <summary><span data-ttu-id="3bdea-189">HTML DOM (Document Object Model) の指定したイベントからイベント ハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-189">Removes an event handler from a named event on the HTML Document Object Model (DOM).</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536411.aspx"><span data-ttu-id="3bdea-190">detachEvent メソッド</span><span class="sxs-lookup"><span data-stu-id="3bdea-190">detachEvent Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlDocument Document { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlDocument Document" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.Document" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Document As HtmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlDocument ^ Document { System::Windows::Forms::HtmlDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Document : System.Windows.Forms.HtmlDocument" Usage="System.Windows.Forms.HtmlElement.Document" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-191">この要素が属する <see cref="T:System.Windows.Forms.HtmlDocument" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-191">Gets the <see cref="T:System.Windows.Forms.HtmlDocument" /> to which this element belongs.</span></span></summary>
        <value><span data-ttu-id="3bdea-192">この要素の親ドキュメント。</span><span class="sxs-lookup"><span data-stu-id="3bdea-192">The parent document of this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-193">一部の HTML ページでは、`FRAMESET` タグを使用してフレームをホストできます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-193">Some HTML pages can host frames using the `FRAMESET` tags.</span></span> <span data-ttu-id="3bdea-194">この場合、個々の `FRAME` 要素には、<xref:System.Windows.Forms.HtmlDocument>の独自のインスタンスが含まれます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-194">In this case, each individual `FRAME` element will contain its own instance of <xref:System.Windows.Forms.HtmlDocument>.</span></span> <span data-ttu-id="3bdea-195">このプロパティは、<xref:System.Windows.Forms.HtmlElementEventArgs>からイベントハンドラー内の要素への参照を受け取って、要素が存在するドキュメントに対して何らかのアクションを実行する必要がある場合に最も役立ちます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-195">This property is most useful when you have received a reference to an element in an event handler from the <xref:System.Windows.Forms.HtmlElementEventArgs>, and need to perform some action on the document in which the element resides.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.HtmlDocument" />
      </Docs>
    </Member>
    <Member MemberName="DomElement">
      <MemberSignature Language="C#" Value="public object DomElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DomElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.DomElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DomElement As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DomElement { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DomElement : obj" Usage="System.Windows.Forms.HtmlElement.DomElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-196">この要素のアンマネージ インターフェイスへのポインターを取得します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-196">Gets an unmanaged interface pointer for this element.</span></span></summary>
        <value><span data-ttu-id="3bdea-197">要素の COM <c>IUnknown</c>ポインター。 <c>IHTMLELEMENT</c>などの HTML 要素インターフェイスのいずれかにキャストできます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-197">The COM <c>IUnknown</c> pointer for the element, which you can cast to one of the HTML element interfaces, such as <c>IHTMLElement</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-198"><xref:System.Windows.Forms.HtmlElement> は、コンポーネントオブジェクトモデル (COM) を使用して記述された Internet Explorer ドキュメントオブジェクトモデル (DOM) のラッパーです。</span><span class="sxs-lookup"><span data-stu-id="3bdea-198"><xref:System.Windows.Forms.HtmlElement> is a wrapper for the Internet Explorer Document Object Model (DOM), which is written using the Component Object Model (COM).</span></span> <span data-ttu-id="3bdea-199">`IHTMLElement`など、基になる COM インターフェイスの非公開プロパティまたはメソッドにアクセスする必要がある場合は、このオブジェクトを使用してクエリを実行できます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-199">If you need to access unexposed properties or methods on the underlying COM interfaces, such as `IHTMLElement`, you can use this object to query for them.</span></span>  
  
 <span data-ttu-id="3bdea-200">アンマネージインターフェイスを使用するには、MSHTML ライブラリ (mshtml) をアプリケーションにインポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-200">In order to use the unmanaged interfaces, you will need to import the MSHTML library (mshtml.dll) into your application.</span></span> <span data-ttu-id="3bdea-201">ただし、`Invoke` メソッドを使用して、非公開のプロパティとメソッドを実行することもできます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-201">However, you can also execute unexposed properties and methods using the `Invoke` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-202">次のコード例では、アンマネージインターフェイスを使用して、現在選択されているテキストを取得し、ユーザーが選択した URL をハイパーリンクに変換します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-202">The following code example uses unmanaged interfaces to take the currently selected text and convert it into a hyperlink, with the URL chosen by the user.</span></span> <span data-ttu-id="3bdea-203">このコードは、フォームに `WebBrowser1`という名前の <xref:System.Windows.Forms.WebBrowser> コントロールがあり、アンマネージ MSHTML ライブラリがプロジェクトへの参照として追加されていることを前提として記述されています。</span><span class="sxs-lookup"><span data-stu-id="3bdea-203">This code was written under the assumption that your form has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`, and that you have added the unmanaged MSHTML library as a reference to your project.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.HtmlElement#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlDocument.DomDocument" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=104877"><span data-ttu-id="3bdea-204">IHTMLElement2 インターフェイス</span><span class="sxs-lookup"><span data-stu-id="3bdea-204">IHTMLElement2 Interface</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ DoubleClick;" />
      <MemberSignature Language="F#" Value="member this.DoubleClick : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.DoubleClick : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-205">ユーザーが要素上でマウスの左ボタンを 2 回すばやく連続的にクリックしたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-205">Occurs when the user clicks the left mouse button over an element twice, in rapid succession.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-206">ダブルクリックは、ユーザーのオペレーティングシステムのマウス設定によって決まります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-206">A double-click is determined by the mouse settings of the user's operating system.</span></span> <span data-ttu-id="3bdea-207">ユーザーは、2 回のクリックではなくダブルクリックと見なされるマウス ボタンのクリック間隔を設定できます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-207">The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</span></span>  
  
 <span data-ttu-id="3bdea-208">要素の <xref:System.Windows.Forms.HtmlElement.DoubleClick> イベントの既定のアクションを取り消すには、<xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-208">You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.DoubleClick> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="3bdea-209"><xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> プロパティを `true`に設定しない限り、要素の <xref:System.Windows.Forms.HtmlElement.DoubleClick> イベントは、その要素の親要素および <xref:System.Windows.Forms.HtmlDocument> クラス自体でも発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-209">A <xref:System.Windows.Forms.HtmlElement.DoubleClick> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-210">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-210">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3bdea-211">この例では、イベントハンドラーは、<xref:System.Windows.Forms.HtmlElement.DoubleClick> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-211">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.DoubleClick> event.</span></span> <span data-ttu-id="3bdea-212">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-212">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3bdea-213">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-213">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3bdea-214">コード例を実行するには、`HtmlElement1`という <xref:System.Windows.Forms.HtmlElement> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-214">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="3bdea-215">次に、イベントハンドラーが <xref:System.Windows.Forms.HtmlElement.DoubleClick> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-215">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.DoubleClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#433](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#433)]
 [!code-vb[System.Windows.Forms.EventExamples#433](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#433)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536921.aspx"><span data-ttu-id="3bdea-216">ondblclick イベント</span><span class="sxs-lookup"><span data-stu-id="3bdea-216">ondblclick Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Drag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler Drag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler Drag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.Drag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drag As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ Drag;" />
      <MemberSignature Language="F#" Value="member this.Drag : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.Drag : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-217">ユーザーがテキストをさまざまな位置にドラッグしたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-217">Occurs when the user drags text to various locations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-218">このイベントは、テキストが次の場所にドラッグされたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-218">This event occurs when text is dragged to the following locations:</span></span>  
  
-   <span data-ttu-id="3bdea-219"><xref:System.Windows.Forms.WebBrowser> コントロールまたは Internet Explorer でホストされている HTML ページ内またはその間</span><span class="sxs-lookup"><span data-stu-id="3bdea-219">Within or between HTML pages hosted in the <xref:System.Windows.Forms.WebBrowser> control or Internet Explorer</span></span>  
  
-   <span data-ttu-id="3bdea-220">別のアプリケーションに</span><span class="sxs-lookup"><span data-stu-id="3bdea-220">To another application</span></span>  
  
-   <span data-ttu-id="3bdea-221">Windows デスクトップに</span><span class="sxs-lookup"><span data-stu-id="3bdea-221">To the Windows desktop</span></span>  
  
 <span data-ttu-id="3bdea-222">要素の <xref:System.Windows.Forms.HtmlElement.Drag> イベントの既定のアクションを取り消すには、<xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-222">You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.Drag> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="3bdea-223"><xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> プロパティを `true`に設定しない限り、要素の <xref:System.Windows.Forms.HtmlElement.Drag> イベントは、その要素の親要素および <xref:System.Windows.Forms.HtmlDocument> クラス自体でも発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-223">A <xref:System.Windows.Forms.HtmlElement.Drag> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-224">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-224">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3bdea-225">この例では、イベントハンドラーは、<xref:System.Windows.Forms.HtmlElement.Drag> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-225">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.Drag> event.</span></span> <span data-ttu-id="3bdea-226">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-226">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3bdea-227">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-227">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3bdea-228">コード例を実行するには、`HtmlElement1`という <xref:System.Windows.Forms.HtmlElement> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-228">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="3bdea-229">次に、イベントハンドラーが <xref:System.Windows.Forms.HtmlElement.Drag> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-229">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.Drag> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#434](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#434)]
 [!code-vb[System.Windows.Forms.EventExamples#434](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#434)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536923.aspx"><span data-ttu-id="3bdea-230">ondrag イベント</span><span class="sxs-lookup"><span data-stu-id="3bdea-230">ondrag Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DragEnd">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler DragEnd;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler DragEnd" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.DragEnd" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnd As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ DragEnd;" />
      <MemberSignature Language="F#" Value="member this.DragEnd : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.DragEnd : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-231">ユーザーがドラッグ操作を終了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-231">Occurs when a user finishes a drag operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-232">要素の <xref:System.Windows.Forms.HtmlElement.DragEnd> イベントの既定のアクションを取り消すには、<xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-232">You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.DragEnd> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="3bdea-233"><xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> プロパティを `true`に設定しない限り、要素の <xref:System.Windows.Forms.HtmlElement.DragEnd> イベントは、その要素の親要素および <xref:System.Windows.Forms.HtmlDocument> クラス自体でも発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-233">A <xref:System.Windows.Forms.HtmlElement.DragEnd> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-234">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-234">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3bdea-235">この例では、イベントハンドラーは、<xref:System.Windows.Forms.HtmlElement.DragEnd> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-235">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.DragEnd> event.</span></span> <span data-ttu-id="3bdea-236">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-236">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3bdea-237">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-237">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3bdea-238">コード例を実行するには、`HtmlElement1`という <xref:System.Windows.Forms.HtmlElement> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-238">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="3bdea-239">次に、イベントハンドラーが <xref:System.Windows.Forms.HtmlElement.DragEnd> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-239">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.DragEnd> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#435](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#435)]
 [!code-vb[System.Windows.Forms.EventExamples#435](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#435)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536924.aspx"><span data-ttu-id="3bdea-240">ondragend イベント</span><span class="sxs-lookup"><span data-stu-id="3bdea-240">ondragend Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.DragLeave : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-241">ユーザーがこの要素上への項目のドラッグを終了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-241">Occurs when the user is no longer dragging an item over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3bdea-242">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-242">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3bdea-243">この例では、イベントハンドラーは、<xref:System.Windows.Forms.HtmlElement.DragLeave> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-243">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.DragLeave> event.</span></span> <span data-ttu-id="3bdea-244">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-244">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3bdea-245">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-245">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3bdea-246">コード例を実行するには、`HtmlElement1`という <xref:System.Windows.Forms.HtmlElement> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-246">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="3bdea-247">次に、イベントハンドラーが <xref:System.Windows.Forms.HtmlElement.DragLeave> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-247">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.DragLeave> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#436](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#436)]
 [!code-vb[System.Windows.Forms.EventExamples#436](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#436)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.DragOver : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-248">ユーザーがテキストを要素上にドラッグしたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-248">Occurs when the user drags text over the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-249">要素の <xref:System.Windows.Forms.HtmlElement.DragOver> イベントの既定のアクションを取り消すには、<xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-249">You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.DragOver> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="3bdea-250"><xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> プロパティを `true`に設定しない限り、要素の <xref:System.Windows.Forms.HtmlElement.DragOver> イベントは、その要素の親要素および <xref:System.Windows.Forms.HtmlDocument> クラス自体でも発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-250">A <xref:System.Windows.Forms.HtmlElement.DragOver> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-251">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-251">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3bdea-252">この例では、イベントハンドラーは、<xref:System.Windows.Forms.HtmlElement.DragOver> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-252">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.DragOver> event.</span></span> <span data-ttu-id="3bdea-253">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-253">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3bdea-254">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-254">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3bdea-255">コード例を実行するには、`HtmlElement1`という <xref:System.Windows.Forms.HtmlElement> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-255">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="3bdea-256">次に、イベントハンドラーが <xref:System.Windows.Forms.HtmlElement.DragOver> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-256">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.DragOver> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#437](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#437)]
 [!code-vb[System.Windows.Forms.EventExamples#437](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#437)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536927.aspx"><span data-ttu-id="3bdea-257">ondragover イベント</span><span class="sxs-lookup"><span data-stu-id="3bdea-257">ondragover Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.HtmlElement.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-258">ユーザーがこの要素にデータを入力できるかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-258">Gets or sets whether the user can input data into this element.</span></span></summary>
        <value><span data-ttu-id="3bdea-259">要素がユーザーの入力を受け付ける場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bdea-259"><see langword="true" /> if the element allows user input; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-260">テキストボックスやオプションボタンなどの `FORM` 要素の場合、<xref:System.Windows.Forms.HtmlElement.Enabled%2A> を `false` に設定すると、ユーザーはこれらのフォームフィールドを使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-260">For `FORM` elements such as text boxes and radio buttons, setting <xref:System.Windows.Forms.HtmlElement.Enabled%2A> to `false` will prevent the user from using these form fields.</span></span> <span data-ttu-id="3bdea-261">`DIV` や `SPAN`などの他の要素の場合、<xref:System.Windows.Forms.HtmlElement.Enabled%2A> を `false` に設定すると、要素内のすべてのテキストが影付きで表示されます。ただし、テキストは選択可能なままです。</span><span class="sxs-lookup"><span data-stu-id="3bdea-261">For other elements, such as `DIV` or `SPAN`, setting <xref:System.Windows.Forms.HtmlElement.Enabled%2A> to `false` will cause all text within the element to appear shaded; however, the text will still be selectable.</span></span> <span data-ttu-id="3bdea-262">選択を取り消すには、<xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A> メソッドを使用して、非公開 `onselectstart` イベントのイベントハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-262">To cancel selection, add an event handler for the unexposed `onselectstart` event using the <xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms533734.aspx"><span data-ttu-id="3bdea-263">disabled プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-263">disabled Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="htmlElement.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="3bdea-264">同じかどうかを確認する対象のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bdea-264">The object to test for equality.</span></span></param>
        <summary><span data-ttu-id="3bdea-265">指定したオブジェクトが現在の要素と等しいかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="3bdea-265">Tests if the supplied object is equal to the current element.</span></span></summary>
        <returns><span data-ttu-id="3bdea-266"><paramref name="obj" /> が <see cref="T:System.Windows.Forms.HtmlElement" /> の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bdea-266"><see langword="true" /> if <paramref name="obj" /> is an <see cref="T:System.Windows.Forms.HtmlElement" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement FirstChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElement FirstChild" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstChild As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElement ^ FirstChild { System::Windows::Forms::HtmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstChild : System.Windows.Forms.HtmlElement" Usage="System.Windows.Forms.HtmlElement.FirstChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-267">ドキュメント ツリーにおいてこの要素のすぐ下にある次の要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-267">Gets the next element below this element in the document tree.</span></span></summary>
        <value><span data-ttu-id="3bdea-268">ソース ドキュメントの階層において、現在の要素の下位にある最初の要素を表す <see cref="T:System.Windows.Forms.HtmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="3bdea-268">An <see cref="T:System.Windows.Forms.HtmlElement" /> representing the first element contained underneath the current element, in source order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-269"><xref:System.Windows.Forms.HtmlElement.FirstChild%2A> を <xref:System.Windows.Forms.HtmlElement.NextSibling%2A> と組み合わせて使用し、HTML ドキュメントのドキュメントツリーをウォークします。</span><span class="sxs-lookup"><span data-stu-id="3bdea-269">Use <xref:System.Windows.Forms.HtmlElement.FirstChild%2A> in conjunction with <xref:System.Windows.Forms.HtmlElement.NextSibling%2A> to walk the document tree for an HTML document.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms533755.aspx"><span data-ttu-id="3bdea-270">firstChild プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-270">firstChild Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Focus();" />
      <MemberSignature Language="F#" Value="member this.Focus : unit -&gt; unit" Usage="htmlElement.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bdea-271">ユーザーの入力フォーカスを現在の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-271">Puts user input focus on the current element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-272">要素にフォーカスを設定すると、その要素にフォーカスが付与され、アクティブな要素になります。たとえば、フォーカスを持つ要素は、<xref:System.Windows.Forms.HtmlDocument>の <xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A> プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-272">Setting the focus on an element both gives that element focus and makes it the active element; for example, the element that has focus will be returned by the <xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A> property of <xref:System.Windows.Forms.HtmlDocument>.</span></span>  
  
 <span data-ttu-id="3bdea-273"><xref:System.Windows.Forms.HtmlElement.Focus%2A> が呼び出された後にユーザーが入力したキーストロークは、その要素に送信されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-273">Any key strokes entered by a user after <xref:System.Windows.Forms.HtmlElement.Focus%2A> has been called will be sent to that element.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536425.aspx"><span data-ttu-id="3bdea-274">フォーカス方法</span><span class="sxs-lookup"><span data-stu-id="3bdea-274">focus Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Focusing">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler Focusing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler Focusing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.Focusing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Focusing As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ Focusing;" />
      <MemberSignature Language="F#" Value="member this.Focusing : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.Focusing : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-275">要素が初めてユーザーの入力フォーカスを得たときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-275">Occurs when the element first receives user input focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-276">ユーザーがタスクバーまたは ALT + TAB キーを使用して別のアプリケーションに切り替えられる前にフォーカスがあった要素は、ユーザーがアプリケーションに切り替えたときに、<xref:System.Windows.Forms.HtmlElement.Focusing> と <xref:System.Windows.Forms.HtmlElement.GotFocus> イベントを再び受け取ります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-276">An element that had focus before the user switched to another application using the taskbar or the ALT+TAB keys will receive the <xref:System.Windows.Forms.HtmlElement.Focusing> and <xref:System.Windows.Forms.HtmlElement.GotFocus> events again when the user switches back to your application.</span></span>  
  
 <span data-ttu-id="3bdea-277">このイベントの既定の動作を取り消すことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-277">You cannot cancel the default behavior of this event.</span></span> <span data-ttu-id="3bdea-278">要素からフォーカスを削除するには、<xref:System.Windows.Forms.HtmlElement.GotFocus> イベント内から別の要素に対して <xref:System.Windows.Forms.HtmlElement.Focus%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-278">To remove focus from an element, call <xref:System.Windows.Forms.HtmlElement.Focus%2A> on a different element from within the <xref:System.Windows.Forms.HtmlElement.GotFocus> event.</span></span>  
  
 <span data-ttu-id="3bdea-279"><xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> プロパティを `true`に設定しない限り、要素の <xref:System.Windows.Forms.HtmlElement.Focusing> イベントは、その要素の親および <xref:System.Windows.Forms.HtmlDocument> クラス自体でも発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-279">A <xref:System.Windows.Forms.HtmlElement.Focusing> event on an element will also occur on that element's parents and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-280">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-280">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3bdea-281">この例では、イベントハンドラーは、<xref:System.Windows.Forms.HtmlElement.Focusing> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-281">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.Focusing> event.</span></span> <span data-ttu-id="3bdea-282">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-282">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="3bdea-283">コード例を実行するには、`HtmlElement1`という <xref:System.Windows.Forms.HtmlElement> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-283">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="3bdea-284">次に、イベントハンドラーが <xref:System.Windows.Forms.HtmlElement.Focusing> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-284">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.Focusing> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#438](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#438)]
 [!code-vb[System.Windows.Forms.EventExamples#438](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#438)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536935.aspx"><span data-ttu-id="3bdea-285">onfocusin イベント</span><span class="sxs-lookup"><span data-stu-id="3bdea-285">onfocusin Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public string GetAttribute (string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAttribute(string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttribute (attributeName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAttribute(System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="member this.GetAttribute : string -&gt; string" Usage="htmlElement.GetAttribute attributeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeName"><span data-ttu-id="3bdea-286">属性の名前。</span><span class="sxs-lookup"><span data-stu-id="3bdea-286">The name of the attribute.</span></span> <span data-ttu-id="3bdea-287">この引数では、大文字と小文字が区別されません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-287">This argument is case-insensitive.</span></span></param>
        <summary><span data-ttu-id="3bdea-288">要素の名前付き属性の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-288">Retrieves the value of the named attribute on the element.</span></span></summary>
        <returns><span data-ttu-id="3bdea-289"><see cref="T:System.String" /> 値としての、要素のこの属性の値。</span><span class="sxs-lookup"><span data-stu-id="3bdea-289">The value of this attribute on the element, as a <see cref="T:System.String" /> value.</span></span> <span data-ttu-id="3bdea-290">指定した属性がこの要素に存在しない場合は、空の文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-290">If the specified attribute does not exist on this element, returns an empty string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-291">HTML の属性は、その要素の有効な名前と値のペアです。</span><span class="sxs-lookup"><span data-stu-id="3bdea-291">An attribute in HTML is any valid name/value pair for that element.</span></span> <span data-ttu-id="3bdea-292"><xref:System.Windows.Forms.HtmlElement> は、すべての要素に共通する属性のみを公開し、特定の種類の要素にのみ適用される属性を残します。`SRC` は `IMG` タグの定義済みの属性です。たとえば、`DIV` タグには定義されていません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-292"><xref:System.Windows.Forms.HtmlElement> exposes only those attributes that are common to all elements, leaving out those that only apply to certain types of elements; `SRC` is a predefined attribute for the `IMG` tag, for example, but not for the `DIV` tag.</span></span> <span data-ttu-id="3bdea-293"><xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> と <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> を使用して、マネージドキュメントオブジェクトモデル (DOM) に公開されていない属性を操作します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-293">Use <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> to manipulate attributes not exposed on the managed Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="3bdea-294"><xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> と <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> では大文字と小文字が区別されません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-294"><xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-295">次のコード例では、<xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> を使用して、`Description`という名前の `META` タグを検索し、HTML ドキュメント内のすべての `META` タグを取得します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-295">The following code example retrieves all of the `META` tags within an HTML document, using <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> to find the `META` tag with the name `Description`.</span></span> <span data-ttu-id="3bdea-296">この例では、アプリケーションに `WebBrowser1`という名前の <xref:System.Windows.Forms.WebBrowser> コントロールが必要です。</span><span class="sxs-lookup"><span data-stu-id="3bdea-296">The example requires that your application has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.HtmlDocument#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536429.aspx"><span data-ttu-id="3bdea-297">getAttribute メソッド</span><span class="sxs-lookup"><span data-stu-id="3bdea-297">getAttribute Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElementCollection GetElementsByTagName (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlElementCollection GetElementsByTagName(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.GetElementsByTagName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetElementsByTagName (tagName As String) As HtmlElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlElementCollection ^ GetElementsByTagName(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="member this.GetElementsByTagName : string -&gt; System.Windows.Forms.HtmlElementCollection" Usage="htmlElement.GetElementsByTagName tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="3bdea-298">取得する <see cref="T:System.Windows.Forms.HtmlElement" /> オブジェクトのタグの名前。</span><span class="sxs-lookup"><span data-stu-id="3bdea-298">The name of the tag whose <see cref="T:System.Windows.Forms.HtmlElement" /> objects you wish to retrieve.</span></span></param>
        <summary><span data-ttu-id="3bdea-299"><c>HTML</c> タグで指定することで、HTML で表される要素のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-299">Retrieves a collection of elements represented in HTML by the specified <c>HTML</c> tag.</span></span></summary>
        <returns><span data-ttu-id="3bdea-300"><c>HTML</c> タグ名が <paramref name="tagName" /> と等しいすべての要素を含む <see cref="T:System.Windows.Forms.HtmlElementCollection" />。</span><span class="sxs-lookup"><span data-stu-id="3bdea-300">An <see cref="T:System.Windows.Forms.HtmlElementCollection" /> containing all elements whose <c>HTML</c> tag name is equal to <paramref name="tagName" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536439.aspx"><span data-ttu-id="3bdea-301">getElementsByTagName メソッド</span><span class="sxs-lookup"><span data-stu-id="3bdea-301">getElementsByTagName Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="htmlElement.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bdea-302">特定の型についてハッシュ関数として機能します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-302">Serves as a hash function for a particular type.</span></span></summary>
        <returns><span data-ttu-id="3bdea-303">現在の <see cref="T:System.Object" /> のハッシュ コードです。</span><span class="sxs-lookup"><span data-stu-id="3bdea-303">A hash code for the current <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.GotFocus : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-304">要素がユーザーの入力フォーカスを得たときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-304">Occurs when the element has received user input focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-305">このイベントの既定の動作をキャンセルしたり、バブルから除外したりすることはできません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-305">You can neither cancel this event's default behavior, nor prevent it from bubbling.</span></span> <span data-ttu-id="3bdea-306">要素からフォーカスを削除するには、<xref:System.Windows.Forms.HtmlElement.GotFocus> イベント内から別の要素に対して <xref:System.Windows.Forms.HtmlElement.Focus%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-306">To remove focus from an element, call <xref:System.Windows.Forms.HtmlElement.Focus%2A> on a different element from within the <xref:System.Windows.Forms.HtmlElement.GotFocus> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-307">次の HTML コードをファイルに保存し、そのファイルを Windows フォームプロジェクトの <xref:System.Windows.Forms.WebBrowser> コントロールに読み込みます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-307">Save the following HTML code into a file, and load the file into a <xref:System.Windows.Forms.WebBrowser> control in a Windows Forms project.</span></span>  
  
```  
<HTML>  
    <BODY>  
        <FORM name="form1">  
            <INPUT type="text" size=20 name="text1">  
            <INPUT type="text" size=20 name="text2">  
            <INPUT type="text" size=20 name="text3">  
        </FORM>  
    </BODY>  
</HTML>  
```  
  
 <span data-ttu-id="3bdea-308">次のコード例では、前の要素に5文字未満の文字が含まれている場合に、タブオーダー内の次の `INPUT` 要素でユーザー入力フォーカスを受け取ることができないようにします。</span><span class="sxs-lookup"><span data-stu-id="3bdea-308">The following code example prevents the next `INPUT` element in the tab order from receiving user input focus if the previous element contains less than five characters.</span></span> <span data-ttu-id="3bdea-309">この例では、前に説明した HTML ファイルが `WebBrowser1`という名前の <xref:System.Windows.Forms.WebBrowser> コントロールのインスタンスに読み込まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-309">The example requires that the previously mentioned HTML file is loaded into an instance of the <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#15)]
 [!code-vb[System.Windows.Forms.HtmlElement#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536934.aspx"><span data-ttu-id="3bdea-310">onfocus イベント</span><span class="sxs-lookup"><span data-stu-id="3bdea-310">onfocus Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="System.Windows.Forms.HtmlElement.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-311">要素を識別するラベルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-311">Gets or sets a label by which to identify the element.</span></span></summary>
        <value><span data-ttu-id="3bdea-312">この要素の固有の識別子。</span><span class="sxs-lookup"><span data-stu-id="3bdea-312">The unique identifier for the element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-313"><xref:System.Windows.Forms.HtmlElement.Id%2A> は一意である必要があります。同じドキュメント内で同じ <xref:System.Windows.Forms.HtmlElement.Id%2A> を持つ2つの要素を持つことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-313"><xref:System.Windows.Forms.HtmlElement.Id%2A> must be unique; you cannot have two elements with the same <xref:System.Windows.Forms.HtmlElement.Id%2A> inside of the same document.</span></span> <span data-ttu-id="3bdea-314"><xref:System.Windows.Forms.HtmlElement.Name%2A> プロパティを使用して、論理的に関連する要素のグループに同じ識別子を指定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-314">Use the <xref:System.Windows.Forms.HtmlElement.Name%2A> property to give the same identifier to a group of logically related elements.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElement.Name" />
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms533880.aspx"><span data-ttu-id="3bdea-315">id プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-315">id Property</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534184.aspx"><span data-ttu-id="3bdea-316">name プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-316">name Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InnerHtml">
      <MemberSignature Language="C#" Value="public string InnerHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerHtml" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.InnerHtml" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerHtml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InnerHtml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerHtml : string with get, set" Usage="System.Windows.Forms.HtmlElement.InnerHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-317">この要素の下位にある HTML マークアップを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-317">Gets or sets the HTML markup underneath this element.</span></span></summary>
        <value><span data-ttu-id="3bdea-318">現在の要素の子要素を定義する HTML マークアップ。</span><span class="sxs-lookup"><span data-stu-id="3bdea-318">The HTML markup that defines the child elements of the current element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-319">既存の HTML ページに新しい要素を追加するには、<xref:System.Windows.Forms.HtmlElement.AppendChild%2A> メソッドや <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> メソッドなど、いくつかの方法があります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-319">There are several ways to add new elements to an existing HTML page, such as the <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> and <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> methods.</span></span> <span data-ttu-id="3bdea-320">多くの場合、新しい要素に多くの属性やスタイルを設定する必要があるときに、<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> を使用すると、新しいコンテンツを簡単に追加できます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-320">Using <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> is often the fastest way to add new content when you have to set many attributes or styles on your new elements.</span></span>  
  
 <span data-ttu-id="3bdea-321"><xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> は、呼び出し元のオブジェクトを表す HTML を <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> に含まないという点で <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> とは異なります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-321"><xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> differs from <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> in that <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will not include the HTML that represents the object you are calling.</span></span> <span data-ttu-id="3bdea-322">これら2つのプロパティの違いの詳細については、「<xref:System.Windows.Forms.HtmlElement.OuterHtml%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-322">See <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> for more information about the difference between these two properties.</span></span>  
  
 <span data-ttu-id="3bdea-323"><xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> 設定すると、以前に要素に追加されたすべての子が破棄されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-323">Setting <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> destroys any children previously appended to the element.</span></span> <span data-ttu-id="3bdea-324">DOM から要素を取得し、その親の ' <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> プロパティに新しい HTML を割り当てると、その要素への参照は無意味になり、プロパティとメソッドを呼び出すときの動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-324">If you retrieve an element from the DOM and then assign new HTML to its parents' <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, your reference to that element will be useless, and its behavior when it calls its properties and methods is undefined.</span></span>  
  
 <span data-ttu-id="3bdea-325">一部の要素では、<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> の設定は有効な操作ではありません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-325">For some elements, setting <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> is not a valid operation.</span></span> <span data-ttu-id="3bdea-326">一部の HTML タグには `IMG` タグなどの終了タグがないため、入れ子になった要素を含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-326">Some HTML tags have no closing tag, such as the `IMG` tag, and therefore cannot contain nested elements.</span></span> <span data-ttu-id="3bdea-327">`SCRIPT` タグなど、一部のタグにはテキストコンテンツのみを含めることができます。<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> を設定すると、エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-327">Some tags, such as the `SCRIPT` tag, can only contain text content; setting <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will result in an error.</span></span> <span data-ttu-id="3bdea-328">どちらの種類のタグでも、<xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> プロパティは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-328">For both types of tags, the <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> property will return `false`.</span></span> <span data-ttu-id="3bdea-329">ただし、`TABLE` と `TR` 要素に <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> を設定することもできません。これらの要素に正しくない形式の HTML を割り当てると、ドキュメントのレンダリングが破損する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-329">However, you also cannot set <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> on `TABLE` and `TR` elements, as assigning malformed HTML to these elements could corrupt the rendering of the document.</span></span> <span data-ttu-id="3bdea-330"><xref:System.Windows.Forms.HtmlElement.AppendChild%2A> またはアンマネージ `IHTMLTable` インターフェイスの `insertRow` メソッドと `insertCell` メソッドを使用して、`TABLE`に行とセルを追加します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-330">Use <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> or the `insertRow` and `insertCell` methods on the unmanaged `IHTMLTable` interface to add rows and cells to a `TABLE`.</span></span>  
  
 <span data-ttu-id="3bdea-331">HTML マークアップではなく、要素へのテキストの割り当てのみが必要な場合は、代わりに <xref:System.Windows.Forms.HtmlElement.InnerText%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-331">If you need only to assign text to an element and not HTML markup, use the <xref:System.Windows.Forms.HtmlElement.InnerText%2A> property instead.</span></span>  
  
 <span data-ttu-id="3bdea-332"><xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> に値を割り当てると、<xref:System.Windows.Forms.HtmlElement.InnerText%2A>を使用して以前に割り当てられたすべてのテキスト値が破棄されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-332">Assigning a value to <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will destroy any text values previously assigned using <xref:System.Windows.Forms.HtmlElement.InnerText%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3bdea-333">この要素に子要素を作成することはできません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-333">Creating child elements on this element is not allowed.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)" />
        <altmember cref="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)" />
        <altmember cref="P:System.Windows.Forms.HtmlElement.InnerText" />
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms533897.aspx"><span data-ttu-id="3bdea-334">innerHTML プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-334">innerHTML Property</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536452.aspx"><span data-ttu-id="3bdea-335">insertAdjacentHTML メソッド</span><span class="sxs-lookup"><span data-stu-id="3bdea-335">insertAdjacentHTML Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string with get, set" Usage="System.Windows.Forms.HtmlElement.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-336">要素に割り当てられたテキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-336">Gets or sets the text assigned to the element.</span></span></summary>
        <value><span data-ttu-id="3bdea-337">要素のテキスト。HTML マークアップは含まれません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-337">The element's text, absent any HTML markup.</span></span> <span data-ttu-id="3bdea-338">要素に子要素がある場合、その子要素に含まれるテキストのみが保持されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-338">If the element contains child elements, only the text in those child elements will be preserved.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-339"><xref:System.Windows.Forms.HtmlElement.InnerText%2A>を持つ要素に HTML を割り当てようとすると、テキストファイル内の HTML を表示する場合と同様に、HTML コードがドキュメント内でリテラルとして表示されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-339">If you attempt to assign HTML to an element with <xref:System.Windows.Forms.HtmlElement.InnerText%2A>, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file.</span></span> <span data-ttu-id="3bdea-340"><xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> プロパティを使用して HTML を要素に割り当てると、<xref:System.Windows.Forms.HtmlElement.InnerText%2A> は、その HTML 内のすべてのテキストをマークアップが削除された状態で返します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-340">If you assign HTML to an element using the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, <xref:System.Windows.Forms.HtmlElement.InnerText%2A> will return all of the text in that HTML with the markup removed.</span></span>  
  
 <span data-ttu-id="3bdea-341"><xref:System.Windows.Forms.HtmlElement.InnerText%2A> に値を割り当てると、その要素に属するすべての子要素が破棄されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-341">Assigning a value to <xref:System.Windows.Forms.HtmlElement.InnerText%2A> will destroy any child elements that belong to the element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-342">次のコードでは <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>を使用して新しいハイパーリンクを作成し、<xref:System.Windows.Forms.HtmlElement.InnerText%2A> プロパティを使用してリンクにテキストを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-342">The following code creates a new hyperlink using <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>, and assigns text to the link using the <xref:System.Windows.Forms.HtmlElement.InnerText%2A> property.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.HtmlElement#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3bdea-343">指定した要素に、テキストを含めることはできません (たとえば、<c>IMG</c> 要素)。</span><span class="sxs-lookup"><span data-stu-id="3bdea-343">The specified element cannot contain text (for example, an <c>IMG</c> element).</span></span></exception>
        <altmember cref="P:System.Windows.Forms.HtmlElement.InnerHtml" />
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms533899.aspx"><span data-ttu-id="3bdea-344">innerText プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-344">innerText Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InsertAdjacentElement">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement InsertAdjacentElement (System.Windows.Forms.HtmlElementInsertionOrientation orient, System.Windows.Forms.HtmlElement newElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlElement InsertAdjacentElement(valuetype System.Windows.Forms.HtmlElementInsertionOrientation orient, class System.Windows.Forms.HtmlElement newElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAdjacentElement (orient As HtmlElementInsertionOrientation, newElement As HtmlElement) As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlElement ^ InsertAdjacentElement(System::Windows::Forms::HtmlElementInsertionOrientation orient, System::Windows::Forms::HtmlElement ^ newElement);" />
      <MemberSignature Language="F#" Value="member this.InsertAdjacentElement : System.Windows.Forms.HtmlElementInsertionOrientation * System.Windows.Forms.HtmlElement -&gt; System.Windows.Forms.HtmlElement" Usage="htmlElement.InsertAdjacentElement (orient, newElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="orient" Type="System.Windows.Forms.HtmlElementInsertionOrientation" />
        <Parameter Name="newElement" Type="System.Windows.Forms.HtmlElement" />
      </Parameters>
      <Docs>
        <param name="orient"><span data-ttu-id="3bdea-345">現在の要素を基準とした、この要素の挿入位置。</span><span class="sxs-lookup"><span data-stu-id="3bdea-345">Where to insert this element in relation to the current element.</span></span></param>
        <param name="newElement"><span data-ttu-id="3bdea-346">挿入する新しい要素。</span><span class="sxs-lookup"><span data-stu-id="3bdea-346">The new element to insert.</span></span></param>
        <summary><span data-ttu-id="3bdea-347">新しい要素をドキュメント オブジェクト モデル (DOM) に挿入します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-347">Insert a new element into the Document Object Model (DOM).</span></span></summary>
        <returns><span data-ttu-id="3bdea-348">挿入された <see cref="T:System.Windows.Forms.HtmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="3bdea-348">The <see cref="T:System.Windows.Forms.HtmlElement" /> that was just inserted.</span></span> <span data-ttu-id="3bdea-349">挿入が失敗した場合は <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-349">If insertion failed, this will return <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-350">このメソッドは、<xref:System.Windows.Forms.WebBrowser> コントロールの <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> イベントが発生するまで呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-350">Do not call this method until after the <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> event on the <xref:System.Windows.Forms.WebBrowser> control has occurred.</span></span> <span data-ttu-id="3bdea-351">ドキュメントが読み込みを完了しないため、その前にこのメソッドを呼び出すと例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-351">Calling this method before then can result in an exception, as the document will not have finished loading.</span></span>  
  
 <span data-ttu-id="3bdea-352"><xref:System.Windows.Forms.HtmlElementInsertionOrientation> の値が有効かどうかは、要素の型によって異なります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-352">Whether a value of <xref:System.Windows.Forms.HtmlElementInsertionOrientation> is valid will depend on the type of the element.</span></span> <span data-ttu-id="3bdea-353">たとえば、<xref:System.Windows.Forms.HtmlElementInsertionOrientation.AfterBegin> は、要素が `DIV`である場合には有効ですが、`SCRIPT` または `IMG` 要素である場合は有効ではなく、子要素を含むことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-353">For example, <xref:System.Windows.Forms.HtmlElementInsertionOrientation.AfterBegin> is valid if the element is a `DIV`, but not if it is a `SCRIPT` or `IMG` element, neither of which can contain child elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-354">次のコード例では、ユーザーが ADatum.com サーバーの外部に表示するすべてのページの上部に `DIV` 要素を挿入します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-354">The following code example inserts a `DIV` element into the top of every page that users view outside of the ADatum.com server.</span></span> <span data-ttu-id="3bdea-355">この例では、フォームに `WebBrowser1`という名前の <xref:System.Windows.Forms.WebBrowser> コントロールが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-355">The example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span> <span data-ttu-id="3bdea-356">このサンプルでは、<xref:System.Text.RegularExpressions>名前空間もインポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-356">Your sample must also import the namespace <xref:System.Text.RegularExpressions>.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#9)]
 [!code-vb[System.Windows.Forms.HtmlElement#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536451.aspx"><span data-ttu-id="3bdea-357">insertAdjacentElement メソッド</span><span class="sxs-lookup"><span data-stu-id="3bdea-357">insertAdjacentElement Method</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeMember">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3bdea-358">現在の要素に固有のメソッドを実行します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-358">Executes a method unique to the current element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object InvokeMember(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeMember (methodName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ methodName);" />
      <MemberSignature Language="F#" Value="member this.InvokeMember : string -&gt; obj" Usage="htmlElement.InvokeMember methodName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="3bdea-359">呼び出されるプロパティまたはメソッドの名前。</span><span class="sxs-lookup"><span data-stu-id="3bdea-359">The name of the property or method to invoke.</span></span></param>
        <summary><span data-ttu-id="3bdea-360">この要素の基になる DOM 要素に対して非公開メソッドを実行します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-360">Executes an unexposed method on the underlying DOM element of this element.</span></span></summary>
        <returns><span data-ttu-id="3bdea-361">このメソッドで返される要素を表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="3bdea-361">The element returned by this method, represented as an <see cref="T:System.Object" />.</span></span> <span data-ttu-id="3bdea-362">この <see cref="T:System.Object" /> が別の HTML 要素で、アンマネージ MSHTML ライブラリへの参照がプロジェクトに追加されている場合は、これを適切なアンマネージ インターフェイスにキャストできます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-362">If this <see cref="T:System.Object" /> is another HTML element, and you have a reference to the unmanaged MSHTML library added to your project, you can cast it to its appropriate unmanaged interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-363">このメソッドを使用して、マネージコードと同等のものを持たないドキュメントオブジェクトモデル (DOM) からメソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-363">This method can be used to call methods from the Document Object Model (DOM) that do not have equivalents in managed code.</span></span> <span data-ttu-id="3bdea-364">このバージョンの <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> を使用して、引数を受け取らない非公開メソッドを実行します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-364">Use this version of <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> to execute unexposed methods that take no arguments.</span></span> <span data-ttu-id="3bdea-365">例については、「<xref:System.Windows.Forms.HtmlElement.InvokeMember%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-365">For an example, see <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string methodName, params object[] parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object InvokeMember(string methodName, object[] parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeMember (methodName As String, ParamArray parameter As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ methodName, ... cli::array &lt;System::Object ^&gt; ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.InvokeMember : string * obj[] -&gt; obj" Usage="htmlElement.InvokeMember (methodName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="parameter" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="3bdea-366">呼び出されるプロパティまたはメソッドの名前。</span><span class="sxs-lookup"><span data-stu-id="3bdea-366">The name of the property or method to invoke.</span></span></param>
        <param name="parameter"><span data-ttu-id="3bdea-367">渡されるパラメーターのリスト。</span><span class="sxs-lookup"><span data-stu-id="3bdea-367">A list of parameters to pass.</span></span></param>
        <summary><span data-ttu-id="3bdea-368">現在の HTML ページにスクリプト言語で定義されている関数を実行します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-368">Executes a function defined in the current HTML page by a scripting language.</span></span></summary>
        <returns><span data-ttu-id="3bdea-369">関数によって返される要素を表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="3bdea-369">The element returned by the function, represented as an <see cref="T:System.Object" />.</span></span> <span data-ttu-id="3bdea-370">この <see cref="T:System.Object" /> が別の HTML 要素で、アンマネージ MSHTML ライブラリへの参照がプロジェクトに追加されている場合は、これを適切なアンマネージ インターフェイスにキャストできます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-370">If this <see cref="T:System.Object" /> is another HTML element, and you have a reference to the unmanaged MSHTML library added to your project, you can cast it to its appropriate unmanaged interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-371">このメソッドを使用して、マネージコードと同等のものを持たないドキュメントオブジェクトモデル (DOM) からメソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-371">This method can be used to call methods from the Document Object Model (DOM) that do not have equivalents in managed code.</span></span> <span data-ttu-id="3bdea-372"><xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> に指定されたすべての引数は、名前付きスクリプト関数に渡される前に Win32 `VARIANT` データ型に変換されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-372">All arguments supplied to <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> will be converted to Win32 `VARIANT` data types before they are passed to the named scripting function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-373">次のコード例では、`dataTable` と呼ばれる `TABLE` を取得し、非公開の `moveRow` メソッドを使用して、テーブルの末尾から先頭に行を移動します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-373">The following code example gets a `TABLE` called `dataTable` and uses the unexposed `moveRow` method to move a row from the end of the table to the beginning.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.HtmlElement#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.KeyDown : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-374">ユーザーがキーボードのキーを押したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-374">Occurs when the user presses a key on the keyboard.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-375"><xref:System.Windows.Forms.HtmlElement.KeyDown> は <xref:System.Windows.Forms.HtmlElement.KeyPress>の前に発生し、<xref:System.Windows.Forms.HtmlElement.KeyUp>前に発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-375"><xref:System.Windows.Forms.HtmlElement.KeyDown> occurs before <xref:System.Windows.Forms.HtmlElement.KeyPress>, which in turns occurs before <xref:System.Windows.Forms.HtmlElement.KeyUp>.</span></span>  
  
 <span data-ttu-id="3bdea-376">要素の <xref:System.Windows.Forms.HtmlElement.KeyDown> イベントの既定のアクションを取り消すには、<xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-376">You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.KeyDown> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="3bdea-377"><xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> プロパティを `true`に設定しない限り、要素の <xref:System.Windows.Forms.HtmlElement.KeyDown> イベントは、その要素の親要素および <xref:System.Windows.Forms.HtmlDocument> クラス自体でも発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-377">A <xref:System.Windows.Forms.HtmlElement.KeyDown> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-378">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-378">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3bdea-379">この例では、イベントハンドラーは、<xref:System.Windows.Forms.HtmlElement.KeyDown> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-379">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.KeyDown> event.</span></span> <span data-ttu-id="3bdea-380">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-380">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3bdea-381">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-381">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3bdea-382">コード例を実行するには、`HtmlElement1`という <xref:System.Windows.Forms.HtmlElement> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-382">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="3bdea-383">次に、イベントハンドラーが <xref:System.Windows.Forms.HtmlElement.KeyDown> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-383">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.KeyDown> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#442](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#442)]
 [!code-vb[System.Windows.Forms.EventExamples#442](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#442)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536938.aspx"><span data-ttu-id="3bdea-384">onkeydown イベント</span><span class="sxs-lookup"><span data-stu-id="3bdea-384">onkeydown Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeyPress">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler KeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler KeyPress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.KeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyPress As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ KeyPress;" />
      <MemberSignature Language="F#" Value="member this.KeyPress : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.KeyPress : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-385">ユーザーがキーボードのキーを押して離したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-385">Occurs when the user presses and releases a key on the keyboard.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-386"><xref:System.Windows.Forms.HtmlElement.KeyPress> は <xref:System.Windows.Forms.HtmlElement.KeyDown> の後、<xref:System.Windows.Forms.HtmlElement.KeyUp>する前に発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-386"><xref:System.Windows.Forms.HtmlElement.KeyPress> occurs after <xref:System.Windows.Forms.HtmlElement.KeyDown> and before <xref:System.Windows.Forms.HtmlElement.KeyUp>.</span></span>  
  
 <span data-ttu-id="3bdea-387">要素の <xref:System.Windows.Forms.HtmlElement.KeyPress> イベントの既定のアクションを取り消すには、<xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-387">You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.KeyPress> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="3bdea-388"><xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> プロパティを `true`に設定しない限り、要素の <xref:System.Windows.Forms.HtmlElement.KeyPress> イベントは、その要素の親要素および <xref:System.Windows.Forms.HtmlDocument> クラス自体でも発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-388">A <xref:System.Windows.Forms.HtmlElement.KeyPress> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-389">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-389">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3bdea-390">この例では、イベントハンドラーは、<xref:System.Windows.Forms.HtmlElement.KeyPress> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-390">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.KeyPress> event.</span></span> <span data-ttu-id="3bdea-391">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-391">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3bdea-392">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-392">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3bdea-393">コード例を実行するには、`HtmlElement1`という <xref:System.Windows.Forms.HtmlElement> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-393">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="3bdea-394">次に、イベントハンドラーが <xref:System.Windows.Forms.HtmlElement.KeyPress> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-394">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.KeyPress> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#443](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#443)]
 [!code-vb[System.Windows.Forms.EventExamples#443](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#443)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536939.aspx"><span data-ttu-id="3bdea-395">onkeypress イベント</span><span class="sxs-lookup"><span data-stu-id="3bdea-395">onkeypress Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.KeyUp : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-396">ユーザーがキーボードのキーを離したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-396">Occurs when the user releases a key on the keyboard.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-397"><xref:System.Windows.Forms.HtmlElement.KeyUp> は、<xref:System.Windows.Forms.HtmlElement.KeyDown>後に発生する <xref:System.Windows.Forms.HtmlElement.KeyPress>の後に発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-397"><xref:System.Windows.Forms.HtmlElement.KeyUp> occurs after <xref:System.Windows.Forms.HtmlElement.KeyPress>, which occurs after <xref:System.Windows.Forms.HtmlElement.KeyDown>.</span></span>  
  
 <span data-ttu-id="3bdea-398">このイベントを取り消すことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-398">You cannot cancel this event.</span></span>  
  
 <span data-ttu-id="3bdea-399"><xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> プロパティを `true`に設定しない限り、要素の <xref:System.Windows.Forms.HtmlElement.KeyUp> イベントは、その要素の親要素および <xref:System.Windows.Forms.HtmlDocument> クラス自体でも発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-399">A <xref:System.Windows.Forms.HtmlElement.KeyUp> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-400">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-400">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3bdea-401">この例では、イベントハンドラーは、<xref:System.Windows.Forms.HtmlElement.KeyUp> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-401">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.KeyUp> event.</span></span> <span data-ttu-id="3bdea-402">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-402">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3bdea-403">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-403">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3bdea-404">コード例を実行するには、`HtmlElement1`という <xref:System.Windows.Forms.HtmlElement> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-404">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="3bdea-405">次に、イベントハンドラーが <xref:System.Windows.Forms.HtmlElement.KeyUp> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-405">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.KeyUp> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#444](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#444)]
 [!code-vb[System.Windows.Forms.EventExamples#444](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#444)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536940.aspx"><span data-ttu-id="3bdea-406">onkeyup イベント</span><span class="sxs-lookup"><span data-stu-id="3bdea-406">onkeyup Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LosingFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler LosingFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler LosingFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.LosingFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LosingFocus As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ LosingFocus;" />
      <MemberSignature Language="F#" Value="member this.LosingFocus : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.LosingFocus : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-407">要素がユーザーの入力フォーカスを失うときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-407">Occurs when the element is losing user input focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3bdea-408">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-408">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3bdea-409">この例では、イベントハンドラーは、<xref:System.Windows.Forms.HtmlElement.LosingFocus> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-409">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.LosingFocus> event.</span></span> <span data-ttu-id="3bdea-410">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-410">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="3bdea-411">コード例を実行するには、`HtmlElement1`という <xref:System.Windows.Forms.HtmlElement> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-411">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="3bdea-412">次に、イベントハンドラーが <xref:System.Windows.Forms.HtmlElement.LosingFocus> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-412">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.LosingFocus> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#440](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#440)]
 [!code-vb[System.Windows.Forms.EventExamples#440](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#440)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.LostFocus : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-413">要素がユーザーの入力フォーカスを失ったときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-413">Occurs when the element has lost user input focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-414">要素は、ユーザーがページ上で選択したか、またはその要素の <xref:System.Windows.Forms.HtmlElement.Focus%2A> メソッドを呼び出しているアプリケーションによってフォーカスが返されるまで <xref:System.Windows.Forms.HtmlElement.LostFocus> 発生した後に、キーストロークイベントを受信しなくなります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-414">An element will no longer receive key stroke events after <xref:System.Windows.Forms.HtmlElement.LostFocus> occurs until it is given focus again, either by the user selecting it on the page or by the application calling the <xref:System.Windows.Forms.HtmlElement.Focus%2A> method on that element.</span></span>  
  
 <span data-ttu-id="3bdea-415">このイベントを取り消すことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-415">You cannot cancel this event.</span></span>  
  
 <span data-ttu-id="3bdea-416"><xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> プロパティを `true`に設定しない限り、要素の <xref:System.Windows.Forms.HtmlElement.LostFocus> イベントは、その要素の親および <xref:System.Windows.Forms.HtmlDocument> クラス自体でも発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-416">An <xref:System.Windows.Forms.HtmlElement.LostFocus> event on an element will also occur on that element's parents and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-417">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-417">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3bdea-418">この例では、イベントハンドラーは、<xref:System.Windows.Forms.HtmlElement.LostFocus> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-418">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.LostFocus> event.</span></span> <span data-ttu-id="3bdea-419">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-419">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="3bdea-420">コード例を実行するには、`HtmlElement1`という <xref:System.Windows.Forms.HtmlElement> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-420">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="3bdea-421">次に、イベントハンドラーが <xref:System.Windows.Forms.HtmlElement.LostFocus> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-421">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.LostFocus> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#441](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#441)]
 [!code-vb[System.Windows.Forms.EventExamples#441](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#441)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536936.aspx"><span data-ttu-id="3bdea-422">onfocusout イベント</span><span class="sxs-lookup"><span data-stu-id="3bdea-422">onfocusout Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.MouseDown : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-423">ユーザーがマウス ボタンを押したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-423">Occurs when the user presses a mouse button.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-424">要素の <xref:System.Windows.Forms.HtmlElement.MouseDown> イベントの既定のアクションを取り消すには、<xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-424">You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.MouseDown> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="3bdea-425"><xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> プロパティを `true`に設定しない限り、要素の <xref:System.Windows.Forms.HtmlElement.MouseDown> イベントは、その要素の親要素および <xref:System.Windows.Forms.HtmlDocument> クラス自体でも発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-425">A <xref:System.Windows.Forms.HtmlElement.MouseDown> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-426">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-426">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3bdea-427">この例では、イベントハンドラーは、<xref:System.Windows.Forms.HtmlElement.MouseDown> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-427">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.MouseDown> event.</span></span> <span data-ttu-id="3bdea-428">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-428">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3bdea-429">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-429">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3bdea-430">コード例を実行するには、`HtmlElement1`という <xref:System.Windows.Forms.HtmlElement> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-430">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="3bdea-431">次に、イベントハンドラーが <xref:System.Windows.Forms.HtmlElement.MouseDown> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-431">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.MouseDown> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#446](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#446)]
 [!code-vb[System.Windows.Forms.EventExamples#446](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#446)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536944.aspx"><span data-ttu-id="3bdea-432">onmousedown イベント</span><span class="sxs-lookup"><span data-stu-id="3bdea-432">onmousedown Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.MouseEnter : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-433">ユーザーがマウス カーソルを現在の要素上に初めて移動させたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-433">Occurs when the user first moves the mouse cursor over the current element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3bdea-434">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-434">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3bdea-435">この例では、イベントハンドラーは、<xref:System.Windows.Forms.HtmlElement.MouseEnter> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-435">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.MouseEnter> event.</span></span> <span data-ttu-id="3bdea-436">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-436">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3bdea-437">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-437">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3bdea-438">コード例を実行するには、`HtmlElement1`という <xref:System.Windows.Forms.HtmlElement> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-438">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="3bdea-439">次に、イベントハンドラーが <xref:System.Windows.Forms.HtmlElement.MouseEnter> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-439">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.MouseEnter> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#449](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#449)]
 [!code-vb[System.Windows.Forms.EventExamples#449](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#449)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.MouseLeave : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-440">ユーザーがマウス カーソルを現在の要素から移動させたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-440">Occurs when the user moves the mouse cursor off of the current element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3bdea-441">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-441">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3bdea-442">この例では、イベントハンドラーは、<xref:System.Windows.Forms.HtmlElement.MouseLeave> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-442">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.MouseLeave> event.</span></span> <span data-ttu-id="3bdea-443">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-443">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3bdea-444">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-444">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3bdea-445">コード例を実行するには、`HtmlElement1`という <xref:System.Windows.Forms.HtmlElement> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-445">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="3bdea-446">次に、イベントハンドラーが <xref:System.Windows.Forms.HtmlElement.MouseLeave> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-446">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.MouseLeave> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#450](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#450)]
 [!code-vb[System.Windows.Forms.EventExamples#450](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#450)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.MouseMove : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-447">ユーザーがマウス カーソルを要素上に通過させたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-447">Occurs when the user moves the mouse cursor across the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-448">このイベントを取り消すことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-448">You cannot cancel this event.</span></span>  
  
 <span data-ttu-id="3bdea-449"><xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> プロパティを `true`に設定しない限り、要素の <xref:System.Windows.Forms.HtmlElement.MouseMove> イベントは、その要素の親要素および <xref:System.Windows.Forms.HtmlDocument> クラス自体でも発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-449">A <xref:System.Windows.Forms.HtmlElement.MouseMove> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-450">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-450">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3bdea-451">この例では、イベントハンドラーは、<xref:System.Windows.Forms.HtmlElement.MouseMove> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-451">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.MouseMove> event.</span></span> <span data-ttu-id="3bdea-452">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-452">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3bdea-453">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-453">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3bdea-454">コード例を実行するには、`HtmlElement1`という <xref:System.Windows.Forms.HtmlElement> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-454">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="3bdea-455">次に、イベントハンドラーが <xref:System.Windows.Forms.HtmlElement.MouseMove> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-455">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.MouseMove> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#445](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#445)]
 [!code-vb[System.Windows.Forms.EventExamples#445](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#445)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536947.aspx"><span data-ttu-id="3bdea-456">onmousemove イベント</span><span class="sxs-lookup"><span data-stu-id="3bdea-456">onmousemove Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseOver">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.MouseOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseOver As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseOver;" />
      <MemberSignature Language="F#" Value="member this.MouseOver : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.MouseOver : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-457">マウス カーソルが要素の境界内に入ったときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-457">Occurs when the mouse cursor enters the bounds of the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-458">要素の <xref:System.Windows.Forms.HtmlElement.MouseOver> イベントの既定のアクションを取り消すには、<xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-458">You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.MouseOver> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="3bdea-459"><xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> プロパティを `true`に設定しない限り、要素の <xref:System.Windows.Forms.HtmlElement.MouseOver> イベントは、その要素の親要素および <xref:System.Windows.Forms.HtmlDocument> クラス自体でも発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-459">A <xref:System.Windows.Forms.HtmlElement.MouseOver> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-460">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-460">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3bdea-461">この例では、イベントハンドラーは、<xref:System.Windows.Forms.HtmlElement.MouseOver> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-461">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.MouseOver> event.</span></span> <span data-ttu-id="3bdea-462">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-462">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3bdea-463">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-463">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3bdea-464">コード例を実行するには、`HtmlElement1`という <xref:System.Windows.Forms.HtmlElement> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-464">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="3bdea-465">次に、イベントハンドラーが <xref:System.Windows.Forms.HtmlElement.MouseOver> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-465">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.MouseOver> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#447](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#447)]
 [!code-vb[System.Windows.Forms.EventExamples#447](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#447)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536949.aspx"><span data-ttu-id="3bdea-466">onmouseover イベント</span><span class="sxs-lookup"><span data-stu-id="3bdea-466">onmouseover Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.MouseUp : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-467">ユーザーがマウス ボタンを離したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-467">Occurs when the user releases a mouse button.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-468">要素の <xref:System.Windows.Forms.HtmlElement.MouseUp> イベントの既定のアクションを取り消すには、<xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-468">You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.MouseUp> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="3bdea-469"><xref:System.Windows.Forms.HtmlElementEventArgs> クラスの <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> プロパティを `true`に設定しない限り、要素の <xref:System.Windows.Forms.HtmlElement.MouseUp> イベントは、その要素の親要素および <xref:System.Windows.Forms.HtmlDocument> クラス自体でも発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-469">A <xref:System.Windows.Forms.HtmlElement.MouseUp> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-470">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-470">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3bdea-471">この例では、イベントハンドラーは、<xref:System.Windows.Forms.HtmlElement.MouseUp> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-471">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.MouseUp> event.</span></span> <span data-ttu-id="3bdea-472">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-472">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3bdea-473">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-473">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3bdea-474">コード例を実行するには、`HtmlElement1`という <xref:System.Windows.Forms.HtmlElement> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-474">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="3bdea-475">次に、イベントハンドラーが <xref:System.Windows.Forms.HtmlElement.MouseUp> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-475">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.MouseUp> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#448](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#448)]
 [!code-vb[System.Windows.Forms.EventExamples#448](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#448)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536950.aspx"><span data-ttu-id="3bdea-476">onmouseup イベント</span><span class="sxs-lookup"><span data-stu-id="3bdea-476">onmouseup Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.HtmlElement.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-477">要素の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-477">Gets or sets the name of the element.</span></span></summary>
        <value><span data-ttu-id="3bdea-478">要素の名前を表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="3bdea-478">A <see cref="T:System.String" /> representing the element's name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-479"><xref:System.Windows.Forms.HtmlDocument>の <xref:System.Windows.Forms.HtmlElement.All%2A> プロパティの <xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A> メソッドを使用して、ドキュメントから要素を取得するには、<xref:System.Windows.Forms.HtmlElement.Name%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-479">Use the <xref:System.Windows.Forms.HtmlElement.Name%2A> property to retrieve elements from a document using the <xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A> method on the <xref:System.Windows.Forms.HtmlElement.All%2A> property of <xref:System.Windows.Forms.HtmlDocument>.</span></span>  
  
 <span data-ttu-id="3bdea-480">`INPUT` 要素に適用された場合、フォームがサーバーに送信されるときに、<xref:System.Windows.Forms.HtmlElement.Name%2A> によってその要素のデータの変数名が定義されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-480">When applied to `INPUT` elements, <xref:System.Windows.Forms.HtmlElement.Name%2A> defines the variable name for that element's data when its form is submitted to the server.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534184.aspx"><span data-ttu-id="3bdea-481">name プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-481">name Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement NextSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElement NextSibling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSibling As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElement ^ NextSibling { System::Windows::Forms::HtmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSibling : System.Windows.Forms.HtmlElement" Usage="System.Windows.Forms.HtmlElement.NextSibling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-482">ドキュメント ツリーにおいてこの要素と同じレベルにある次の要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-482">Gets the next element at the same level as this element in the document tree.</span></span></summary>
        <value><span data-ttu-id="3bdea-483">現在の要素の右側にある要素を表す <see cref="T:System.Windows.Forms.HtmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="3bdea-483">An <see cref="T:System.Windows.Forms.HtmlElement" /> representing the element to the right of the current element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-484"><xref:System.Windows.Forms.HtmlElement.NextSibling%2A> を <xref:System.Windows.Forms.HtmlElement.FirstChild%2A> と組み合わせて使用し、HTML 要素のドキュメントツリーをウォークします。</span><span class="sxs-lookup"><span data-stu-id="3bdea-484">Use <xref:System.Windows.Forms.HtmlElement.NextSibling%2A> in conjunction with <xref:System.Windows.Forms.HtmlElement.FirstChild%2A> to walk the document tree for an HTML element.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534189.aspx"><span data-ttu-id="3bdea-485">nextSibling プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-485">nextSibling Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OffsetParent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement OffsetParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElement OffsetParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.OffsetParent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetParent As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElement ^ OffsetParent { System::Windows::Forms::HtmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OffsetParent : System.Windows.Forms.HtmlElement" Usage="System.Windows.Forms.HtmlElement.OffsetParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-486"><see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /> を計算するときの基準となる要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-486">Gets the element from which <see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /> is calculated.</span></span></summary>
        <value><span data-ttu-id="3bdea-487">オフセットを計算するときの基準となる要素。</span><span class="sxs-lookup"><span data-stu-id="3bdea-487">The element from which the offsets are calculated.</span></span>  
  
<span data-ttu-id="3bdea-488">要素の親、または要素の階層に含まれる別の要素が、相対位置または絶対位置を使用している場合、<see langword="OffsetParent" /> は、相対位置または絶対位置を使用している要素のうち、現在の要素が入れ子になっている最初の要素です。</span><span class="sxs-lookup"><span data-stu-id="3bdea-488">If an element's parent or another element in the element's hierarchy uses relative or absolute positioning, <see langword="OffsetParent" /> will be the first relatively or absolutely positioned element in which the current element is nested.</span></span> <span data-ttu-id="3bdea-489">現在の要素の上にある要素が絶対位置または相対的に配置されていない場合、<see langword="OffsetParent" /> はドキュメントの<c>本文</c>タグになります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-489">If none of the elements above the current element are absolutely or relatively positioned, <see langword="OffsetParent" /> will be the <c>BODY</c> tag of the document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-490">要素は、既定のフローの配置という3つの方法のいずれかで HTML ページに配置できます。要素が親を基準とした固定量でオフセットされる相対位置。および絶対配置。要素には、ドキュメントの左上隅を基準とした固定の座標位置が指定されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-490">Elements can be positioned on an HTML page in one of three ways: default flow positioning; relative positioning, in which the element is offset by a fixed amount relative to its parent; and absolute positioning, in which the element is given a fixed coordinate position relative to the upper-left corner of the document.</span></span>  
  
 <span data-ttu-id="3bdea-491">ドキュメントの要素が相対位置または絶対位置を使用する場合は、`OffsetParent` を使用して、クライアント領域で要素の座標位置を計算できます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-491">When a document's elements use relative or absolute positioning, you can use `OffsetParent` to calculate an element's coordinate position in the client area.</span></span>  
  
 <span data-ttu-id="3bdea-492">HTML での要素の配置の詳細については、「[要素の配置につい](https://msdn.microsoft.com/library/ms533005.aspx)て」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-492">For more information about element positioning in HTML, see [About Element Positioning](https://msdn.microsoft.com/library/ms533005.aspx).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-493">次のコード例は、`span1`、`span2` および `span3`の <xref:System.Windows.Forms.HtmlElement.OffsetParent%2A> と <xref:System.Windows.Forms.HtmlElement.OffsetRectangle%2A> の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="3bdea-493">The following code example shows how <xref:System.Windows.Forms.HtmlElement.OffsetParent%2A> and <xref:System.Windows.Forms.HtmlElement.OffsetRectangle%2A> differ for `span1`, `span2` and `span3`:</span></span>  
  
```  
<HTML>  
    <BODY id="documentBody">  
  
        <DIV id="div1">  
            <SPAN id="span1">Placeholder text 1.</SPAN>  
        </DIV>  
  
        <DIV id="div2" style="position:relative;top:100px;left:100px;">  
            <SPAN id="span2">Placeholder text 2.</SPAN>  
        </DIV>  
  
        <DIV id="div3" style="position:absolute;top:200px;left:200px;">  
            <DIV id="div4" style="position:relative;top:100px;left:100px;">  
                <SPAN id="span3">Placeholder text 3.</SPAN>  
            </DIV>  
        </DIV>  
  
    </BODY>  
</HTML>  
```  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.HtmlElement#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534302.aspx"><span data-ttu-id="3bdea-494">offsetParent プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-494">offsetParent Property</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms530302.aspx"><span data-ttu-id="3bdea-495">要素の次元と位置の測定</span><span class="sxs-lookup"><span data-stu-id="3bdea-495">Measuring Element Dimension and Location</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OffsetRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle OffsetRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle OffsetRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.OffsetRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle OffsetRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.OffsetRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.HtmlElement.OffsetRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-496">親を基準とした要素の相対的な位置を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-496">Gets the location of an element relative to its parent.</span></span></summary>
        <value><span data-ttu-id="3bdea-497">親を基準とした、要素の相対的な X および Y 座標位置、幅、および高さ。</span><span class="sxs-lookup"><span data-stu-id="3bdea-497">The x- and y-coordinate positions of the element, and its width and its height, in relation to its parent.</span></span>  
  
<span data-ttu-id="3bdea-498">要素の親が相対位置または絶対位置を使用している場合、<see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /> は親要素のオフセットを返します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-498">If an element's parent is relatively or absolutely positioned, <see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /> will return the offset of the parent element.</span></span> <span data-ttu-id="3bdea-499">要素自体が親を基準とした相対位置を使用している場合、<see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /> はその親からのオフセットを返します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-499">If the element itself is relatively positioned with respect to its parent, <see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /> will return the offset from its parent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-500">要素は、次の3つの方法のいずれかで HTML ページに配置できます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-500">Elements can be positioned on an HTML page in one of three ways:</span></span>  
  
-   <span data-ttu-id="3bdea-501">既定のフローの配置。</span><span class="sxs-lookup"><span data-stu-id="3bdea-501">Default flow positioning.</span></span>  
  
-   <span data-ttu-id="3bdea-502">相対位置。要素は、その親を基準として固定量でオフセットされます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-502">Relative positioning, in which the element is offset by a fixed amount relative to its parent.</span></span>  
  
-   <span data-ttu-id="3bdea-503">絶対位置。要素には、ドキュメントの左上隅を基準とした固定の座標位置が与えられます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-503">Absolute positioning, in which the element is given a fixed coordinate position relative to the upper-left corner of the document.</span></span>  
  
 <span data-ttu-id="3bdea-504">HTML での要素の配置の詳細については、「[要素の配置につい](https://msdn.microsoft.com/library/ms533005.aspx)て」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-504">For more information about element positioning in HTML, see [About Element Positioning](https://msdn.microsoft.com/library/ms533005.aspx).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-505">次のコード例は、`span1`、`span2` および `span3`の <xref:System.Windows.Forms.HtmlElement.OffsetParent%2A> と <xref:System.Windows.Forms.HtmlElement.OffsetRectangle%2A> の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="3bdea-505">The following code example shows how <xref:System.Windows.Forms.HtmlElement.OffsetParent%2A> and <xref:System.Windows.Forms.HtmlElement.OffsetRectangle%2A> differ for `span1`, `span2` and `span3`:</span></span>  
  
```  
<HTML>  
    <BODY id="documentBody">  
  
        <DIV id="div1">  
            <SPAN id="span1">Placeholder text 1.</SPAN>  
        </DIV>  
  
        <DIV id="div2" style="position:relative;top:100px;left:100px;">  
            <SPAN id="span2">Placeholder text 2.</SPAN>  
        </DIV>  
  
        <DIV id="div3" style="position:absolute;top:200px;left:200px;">  
            <DIV id="div4" style="position:relative;top:100px;left:100px;">  
                <SPAN id="span3">Placeholder text 3.</SPAN>  
            </DIV>  
        </DIV>  
  
    </BODY>  
</HTML>  
```  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.HtmlElement#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElement.OffsetParent" />
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534200.aspx"><span data-ttu-id="3bdea-506">offsetLeft プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-506">offsetLeft Property</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534303.aspx"><span data-ttu-id="3bdea-507">offsetTop プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-507">offsetTop Property</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534304.aspx"><span data-ttu-id="3bdea-508">offsetWidth プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-508">offsetWidth Property</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534199.aspx"><span data-ttu-id="3bdea-509">offsetHeight プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-509">offsetHeight Property</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms530302.aspx"><span data-ttu-id="3bdea-510">要素の次元と位置の測定</span><span class="sxs-lookup"><span data-stu-id="3bdea-510">Measuring Element Dimension and Location</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Forms.HtmlElement left, System.Windows.Forms.HtmlElement right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Forms.HtmlElement left, class System.Windows.Forms.HtmlElement right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As HtmlElement, right As HtmlElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Forms::HtmlElement ^ left, System::Windows::Forms::HtmlElement ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Forms.HtmlElement * System.Windows.Forms.HtmlElement -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Forms.HtmlElement" />
        <Parameter Name="right" Type="System.Windows.Forms.HtmlElement" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="3bdea-511">最初の <see cref="T:System.Windows.Forms.HtmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="3bdea-511">The first <see cref="T:System.Windows.Forms.HtmlElement" />.</span></span></param>
        <param name="right"><span data-ttu-id="3bdea-512">2 つめの <see cref="T:System.Windows.Forms.HtmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="3bdea-512">The second <see cref="T:System.Windows.Forms.HtmlElement" />.</span></span></param>
        <summary><span data-ttu-id="3bdea-513">2 つの要素が等しいかどうかを比較します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-513">Compares two elements for equality.</span></span></summary>
        <returns><span data-ttu-id="3bdea-514">両方のパラメーターが <see langword="null" /> の場合、または、基になる COM インターフェイスが両方の要素で同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bdea-514"><see langword="true" /> if both parameters are <see langword="null" />, or if both elements have the same underlying COM interface; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-515">等値演算子は、指定された <xref:System.Windows.Forms.HtmlElement> クラスによってラップされる、基になる COM オブジェクトの `IUnknown` ポインターをテストします。</span><span class="sxs-lookup"><span data-stu-id="3bdea-515">The equality operator tests the `IUnknown` pointers of the underlying COM objects wrapped by the supplied <xref:System.Windows.Forms.HtmlElement> classes.</span></span>  
  
 <span data-ttu-id="3bdea-516">この演算子の同等のメソッドは <xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3bdea-516">The equivalent method for this operator is <xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Forms.HtmlElement left, System.Windows.Forms.HtmlElement right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Forms.HtmlElement left, class System.Windows.Forms.HtmlElement right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As HtmlElement, right As HtmlElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Forms::HtmlElement ^ left, System::Windows::Forms::HtmlElement ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Forms.HtmlElement * System.Windows.Forms.HtmlElement -&gt; bool" Usage="System.Windows.Forms.HtmlElement.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Forms.HtmlElement" />
        <Parameter Name="right" Type="System.Windows.Forms.HtmlElement" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="3bdea-517">最初の <see cref="T:System.Windows.Forms.HtmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="3bdea-517">The first <see cref="T:System.Windows.Forms.HtmlElement" />.</span></span></param>
        <param name="right"><span data-ttu-id="3bdea-518">2 つめの <see cref="T:System.Windows.Forms.HtmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="3bdea-518">The second <see cref="T:System.Windows.Forms.HtmlElement" />.</span></span></param>
        <summary><span data-ttu-id="3bdea-519">2 つの <see cref="T:System.Windows.Forms.HtmlElement" /> オブジェクトが等しくないかどうかを比較します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-519">Compares two <see cref="T:System.Windows.Forms.HtmlElement" /> objects for inequality.</span></span></summary>
        <returns><span data-ttu-id="3bdea-520">一方の要素だけが <see langword="null" /> の場合、または 2 つのオブジェクトが等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bdea-520"><see langword="true" /> is only one element is <see langword="null" />, or the two objects are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="3bdea-521">この演算子の同等のメソッドは、<xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=nameWithType> を否定したものです。</span><span class="sxs-lookup"><span data-stu-id="3bdea-521">The equivalent method for this operator is the negation of <xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OuterHtml">
      <MemberSignature Language="C#" Value="public string OuterHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterHtml" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.OuterHtml" />
      <MemberSignature Language="VB.NET" Value="Public Property OuterHtml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OuterHtml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OuterHtml : string with get, set" Usage="System.Windows.Forms.HtmlElement.OuterHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-522">現在の要素の HTML コードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-522">Gets or sets the current element's HTML code.</span></span></summary>
        <value><span data-ttu-id="3bdea-523">現在の要素とその子の HTML コード。</span><span class="sxs-lookup"><span data-stu-id="3bdea-523">The HTML code for the current element and its children.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-524"><xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> は現在の要素の周囲のタグを除く現在の要素に含まれているすべての HTML <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> を返しますが、次の例のように、現在の要素のタグとタグに含まれている HTML が含まれます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-524">Whereas <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will return all HTML contained in the current element excluding the current element's surrounding tags, <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> includes the current element's tag as well as the HTML that tag contains, for example:</span></span>  
  
 `<HTML>`  
  
 `<BODY>`  
  
 `<DIV id="div1">`  
  
 `Hello`  
  
 `<DIV id="div2">`  
  
 `World`  
  
 `<DIV id="div3">`  
  
 `How are you?`  
  
 `</DIV>`  
  
 `</DIV>`  
  
 `</DIV>`  
  
 `</BODY>`  
  
 `</HTML>`  
  
 <span data-ttu-id="3bdea-525">この例では、`div2` で <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> を呼び出すと、次のように返されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-525">In this example, calling <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> on `div2` will return:</span></span>  
  
 `<DIV id="div2">`  
  
 `World`  
  
 `<DIV id="div3">`  
  
 `How are you?`  
  
 `</DIV>`  
  
 `</DIV>`  
  
 <span data-ttu-id="3bdea-526"><xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> を呼び出すと、次の結果が返されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-526">Calling <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will return:</span></span>  
  
 `World`  
  
 `<DIV id="div3">`  
  
 `How are you?`  
  
 `</DIV>`  
  
 <span data-ttu-id="3bdea-527"><xref:System.Windows.Forms.HtmlElement.OuterHtml%2A>に新しい値を割り当てた場合、現在の要素参照は無効になります。先ほど割り当てた HTML の名前、プロパティ、および子コンテンツは反映されません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-527">If you assign a new value to <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A>, the current element reference will become invalid; it will not reflect the name, properties and child content of the HTML you have just assigned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElement.InnerHtml" />
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534310.aspx"><span data-ttu-id="3bdea-528">outerHTML プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-528">outerHTML Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OuterText">
      <MemberSignature Language="C#" Value="public string OuterText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.OuterText" />
      <MemberSignature Language="VB.NET" Value="Public Property OuterText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OuterText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OuterText : string with get, set" Usage="System.Windows.Forms.HtmlElement.OuterText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-529">現在の要素のテキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-529">Gets or sets the current element's text.</span></span></summary>
        <value><span data-ttu-id="3bdea-530">現在の要素、およびその要素の子に含まれるテキスト。</span><span class="sxs-lookup"><span data-stu-id="3bdea-530">The text inside the current element, and in the element's children.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-531"><xref:System.Windows.Forms.HtmlElement.OuterText%2A>を持つ要素に HTML を割り当てようとすると、テキストファイル内の HTML を表示する場合と同様に、HTML コードがドキュメント内でリテラルとして表示されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-531">If you attempt to assign HTML to an element with <xref:System.Windows.Forms.HtmlElement.OuterText%2A>, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file.</span></span> <span data-ttu-id="3bdea-532"><xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> プロパティを使用して HTML を要素に割り当てると、<xref:System.Windows.Forms.HtmlElement.OuterText%2A> は、その HTML 内のすべてのテキストをマークアップが削除された状態で返します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-532">If you assign HTML to an element using the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, <xref:System.Windows.Forms.HtmlElement.OuterText%2A> will return all of the text in that HTML with the markup removed.</span></span>  
  
 <span data-ttu-id="3bdea-533"><xref:System.Windows.Forms.HtmlElement.OuterText%2A> に値を割り当てると、その要素に属するすべての子要素が破棄されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-533">Assigning a value to <xref:System.Windows.Forms.HtmlElement.OuterText%2A> will destroy any child elements that belong to the element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3bdea-534">この要素外のテキストを設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-534">You cannot set text outside of this element.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.HtmlElement.InnerText" />
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534311.aspx"><span data-ttu-id="3bdea-535">outerText プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-535">outerText Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElement Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElement ^ Parent { System::Windows::Forms::HtmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.HtmlElement" Usage="System.Windows.Forms.HtmlElement.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-536">現在の要素の親要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-536">Gets the current element's parent element.</span></span></summary>
        <value><span data-ttu-id="3bdea-537">HTML ドキュメントの階層で現在の要素の上位にある要素。</span><span class="sxs-lookup"><span data-stu-id="3bdea-537">The element above the current element in the HTML document's hierarchy.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-538"><xref:System.Windows.Forms.HtmlElement.Parent%2A> プロパティを使用すると、要素のコンテキストを検出できます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-538">The <xref:System.Windows.Forms.HtmlElement.Parent%2A> property enables discovery of an element's context.</span></span> <span data-ttu-id="3bdea-539">これは、<xref:System.Windows.Forms.HtmlElement.Click>などのイベントハンドラー内で最も役に立ちます。これは、ドキュメントのオブジェクト階層内の任意の場所にある任意の要素に対して起動できます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-539">It is most useful inside of event handlers such as <xref:System.Windows.Forms.HtmlElement.Click>, which can fire for any element anywhere in the document's object hierarchy.</span></span>  
  
 <span data-ttu-id="3bdea-540">Html 要素の <xref:System.Windows.Forms.HtmlElement.Parent%2A> プロパティ (HTML ドキュメントの先頭) は、それ自体に戻ります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-540">The <xref:System.Windows.Forms.HtmlElement.Parent%2A> property of the HTML element (the top of an HTML document) points back to itself.</span></span> <span data-ttu-id="3bdea-541">ループ内で <xref:System.Windows.Forms.HtmlElement.Parent%2A> を呼び出す場合は、ループのブレーク条件によって現在の要素の型と `Parent` プロパティの型が比較されていることを確認します。そうでない場合は、コードが無限ループを実行する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3bdea-541">If you call <xref:System.Windows.Forms.HtmlElement.Parent%2A> inside a loop, verify that the loop's break condition compares the type of the current element and the type of the `Parent` property, or else your code may execute an infinite loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-542">次のコード例では、ドキュメント内のすべての `IMG` タグを検索し、<xref:System.Windows.Forms.HtmlElement.Parent%2A> プロパティを使用して、`IMG` が別のページにハイパーリンクされているかどうかをテストします。そうである場合は、コードによって `IMG` タグの `ALT` 属性に URL が割り当てられるため、ユーザーはイメージをマウスでポイントしてどこに移動するかを確認できます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-542">The following code example finds all of the `IMG` tags in a document, and uses the <xref:System.Windows.Forms.HtmlElement.Parent%2A> property to test whether the `IMG` is hyperlinked to another page; if it is, the code assigns the URL to the `ALT` attribute of the `IMG` tag, so that users can mouse over the image to see where it will take them.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.HtmlElement#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534327.aspx"><span data-ttu-id="3bdea-543">parentElement プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-543">parentElement Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (string eventName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseEvent(string eventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.RaiseEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (eventName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseEvent(System::String ^ eventName);" />
      <MemberSignature Language="F#" Value="member this.RaiseEvent : string -&gt; unit" Usage="htmlElement.RaiseEvent eventName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventName"><span data-ttu-id="3bdea-544">発生させるイベントの名前です。</span><span class="sxs-lookup"><span data-stu-id="3bdea-544">The name of the event to raise.</span></span></param>
        <summary><span data-ttu-id="3bdea-545">指定したイベントを発生させて、すべての登録されたイベント ハンドラーを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-545">Causes the named event to call all registered event handlers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-546">このメソッドは、HTML ドキュメントオブジェクトモデル (DOM) イベントにアクセスするために使用されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-546">This method is used to access HTML Document Object Model (DOM) events.</span></span> <span data-ttu-id="3bdea-547">[IHTMLElement3:: fireEvent](https://go.microsoft.com/fwlink/?LinkId=103189)メソッドを直接呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-547">It directly calls the [IHTMLElement3::fireEvent](https://go.microsoft.com/fwlink/?LinkId=103189) method.</span></span> <span data-ttu-id="3bdea-548"><xref:System.Windows.Forms.HtmlElement> クラスを使用して DOM を使用する方法の詳細については、「[マネージ HTML ドキュメントオブジェクトモデルの非公開メンバーへのアクセス](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-548">For more information about how to use the DOM through the <xref:System.Windows.Forms.HtmlElement> class, see [Accessing Unexposed Members on the Managed HTML Document Object Model](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFocus">
      <MemberSignature Language="C#" Value="public void RemoveFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.RemoveFocus" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveFocus();" />
      <MemberSignature Language="F#" Value="member this.RemoveFocus : unit -&gt; unit" Usage="htmlElement.RemoveFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bdea-549">現在の要素にフォーカスがある場合、そのフォーカスを要素から削除します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-549">Removes focus from the current element, if that element has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-550">このメソッドを呼び出すと、要素の <xref:System.Windows.Forms.HtmlElement.LostFocus> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-550">Calling this method raises the <xref:System.Windows.Forms.HtmlElement.LostFocus> event for the element.</span></span>  
  
 <span data-ttu-id="3bdea-551">このメソッドを使用して要素からフォーカスが削除されると、タブオーダー内の次の要素ではなく、要素を含むドキュメントに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-551">When focus is cleared from an element using this method, it is given to the document containing the element, not to the next element in the tab order.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536347.aspx"><span data-ttu-id="3bdea-552">ぼかしメソッド</span><span class="sxs-lookup"><span data-stu-id="3bdea-552">blur Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ScrollIntoView">
      <MemberSignature Language="C#" Value="public void ScrollIntoView (bool alignWithTop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollIntoView(bool alignWithTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.ScrollIntoView(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollIntoView (alignWithTop As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollIntoView(bool alignWithTop);" />
      <MemberSignature Language="F#" Value="member this.ScrollIntoView : bool -&gt; unit" Usage="htmlElement.ScrollIntoView alignWithTop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alignWithTop" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="alignWithTop"><span data-ttu-id="3bdea-553"><see langword="true" /> の場合、オブジェクトの最上部がウィンドウの最上部に表示されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-553">If <see langword="true" />, the top of the object will be displayed at the top of the window.</span></span> <span data-ttu-id="3bdea-554"><see langword="false" /> の場合、オブジェクトの最下部がウィンドウの最下部に表示されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-554">If <see langword="false" />, the bottom of the object will be displayed at the bottom of the window.</span></span></param>
        <summary><span data-ttu-id="3bdea-555">この要素の最上端または最下端がドキュメントのウィンドウに位置合わせされるまで、この要素を含むドキュメントをスクロールします。</span><span class="sxs-lookup"><span data-stu-id="3bdea-555">Scrolls through the document containing this element until the top or bottom edge of this element is aligned with the document's window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3bdea-556">次のコード例では、要素を名前で検索し、ページ内をスクロールして、要素の上部が表示されているページの一番上に揃うようにします。</span><span class="sxs-lookup"><span data-stu-id="3bdea-556">The following code example finds an element by name and scrolls through the page so that the top of the element is aligned with the top of the visible page.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#12)]
 [!code-vb[System.Windows.Forms.HtmlElement#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536730.aspx"><span data-ttu-id="3bdea-557">scrollIntoView メソッド</span><span class="sxs-lookup"><span data-stu-id="3bdea-557">scrollIntoView Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ScrollLeft">
      <MemberSignature Language="C#" Value="public int ScrollLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.ScrollLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ScrollLeft { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollLeft : int with get, set" Usage="System.Windows.Forms.HtmlElement.ScrollLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-558">要素の端とその内容の左端との距離を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-558">Gets or sets the distance between the edge of the element and the left edge of its content.</span></span></summary>
        <value><span data-ttu-id="3bdea-559">要素の左端とその内容の左端とのピクセル単位の距離。</span><span class="sxs-lookup"><span data-stu-id="3bdea-559">The distance, in pixels, between the left edge of the element and the left edge of its content.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-560">スクロール領域の完全な大きさは、<xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>を使用して使用できます。`ScrollLeft` と <xref:System.Windows.Forms.HtmlElement.ScrollTop%2A> は、開発者が設定できるスクロール領域の2つのプロパティであるため、独立して公開されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-560">The full dimensions of the scroll area are available using <xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>; `ScrollLeft` and <xref:System.Windows.Forms.HtmlElement.ScrollTop%2A> are exposed independently because these are the only two properties of the scroll area that developers can set.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534617.aspx"><span data-ttu-id="3bdea-561">scrollLeft プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-561">scrollLeft Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ScrollRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ScrollRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ScrollRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.ScrollRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScrollRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ScrollRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ScrollRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.HtmlElement.ScrollRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-562">要素のスクロール可能な領域の寸法を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-562">Gets the dimensions of an element's scrollable region.</span></span></summary>
        <value><span data-ttu-id="3bdea-563">要素のスクロール可能な領域のサイズと座標位置。</span><span class="sxs-lookup"><span data-stu-id="3bdea-563">The size and coordinate location of the scrollable area of an element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-564">要素のコンテンツがその次元のサイズを超える場合、要素にはスクロール可能な領域があります。ただし、要素のオーバーフロースタイルでは、スクロールバーの表示が禁止されています。</span><span class="sxs-lookup"><span data-stu-id="3bdea-564">An element will have a scrollable region if its content exceeds the size of its dimensions, unless the overflow style on the element forbids rendering scrollbars.</span></span>  
  
 <span data-ttu-id="3bdea-565">スクロール領域のサイズを直接変更することはできませんが、スクロール領域の端と要素の端との距離を変更できます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-565">You cannot modify the size of the scroll area directly, but you can modify the distance between the edges of the scroll area and the edges of the element.</span></span> <span data-ttu-id="3bdea-566">これを実現するには、<xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A> と <xref:System.Windows.Forms.HtmlElement.ScrollTop%2A> のプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-566">Use the <xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A> and <xref:System.Windows.Forms.HtmlElement.ScrollTop%2A> properties to achieve this.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534617.aspx"><span data-ttu-id="3bdea-567">scrollLeft プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-567">scrollLeft Property</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534618.aspx"><span data-ttu-id="3bdea-568">scrollTop プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-568">scrollTop Property</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534615.aspx"><span data-ttu-id="3bdea-569">scrollHeight プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-569">scrollHeight Property</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534619.aspx"><span data-ttu-id="3bdea-570">scrollWidth プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-570">scrollWidth Property</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534312.aspx"><span data-ttu-id="3bdea-571">overflow プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-571">overflow Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ScrollTop">
      <MemberSignature Language="C#" Value="public int ScrollTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollTop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.ScrollTop" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollTop As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ScrollTop { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollTop : int with get, set" Usage="System.Windows.Forms.HtmlElement.ScrollTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-572">要素の端とその内容の上端との距離を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-572">Gets or sets the distance between the edge of the element and the top edge of its content.</span></span></summary>
        <value><span data-ttu-id="3bdea-573">要素の上端とその内容の上端とのピクセル単位の距離。</span><span class="sxs-lookup"><span data-stu-id="3bdea-573">The distance, in pixels, between the top edge of the element and the top edge of its content.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-574">スクロール領域の完全な大きさは、<xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>を使用して使用できます。<xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A> と `ScrollTop` は、開発者が設定できるスクロール領域の2つのプロパティであるため、独立して公開されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-574">The full dimensions of the scroll area are available using <xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>; <xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A> and `ScrollTop` are exposed independently because these are the only two properties of the scroll area that developers can set.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534618.aspx"><span data-ttu-id="3bdea-575">scrollTop プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-575">scrollTop Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public void SetAttribute (string attributeName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAttribute(string attributeName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttribute (attributeName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAttribute(System::String ^ attributeName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetAttribute : string * string -&gt; unit" Usage="htmlElement.SetAttribute (attributeName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeName"><span data-ttu-id="3bdea-576">設定する属性名です。</span><span class="sxs-lookup"><span data-stu-id="3bdea-576">The name of the attribute to set.</span></span></param>
        <param name="value"><span data-ttu-id="3bdea-577">この属性の新しい値。</span><span class="sxs-lookup"><span data-stu-id="3bdea-577">The new value of this attribute.</span></span></param>
        <summary><span data-ttu-id="3bdea-578">要素の名前付き属性の値を設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-578">Sets the value of the named attribute on the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-579">HTML の属性は、その要素の有効な名前と値のペアです。</span><span class="sxs-lookup"><span data-stu-id="3bdea-579">An attribute in HTML is any valid name-value pair for that element.</span></span> <span data-ttu-id="3bdea-580"><xref:System.Windows.Forms.HtmlElement> は、すべての要素に共通する属性のみを公開し、特定の種類の要素にのみ適用される属性を残します。`SRC` は `IMG` タグの定義済みの属性です。たとえば、`DIV` タグには定義されていません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-580"><xref:System.Windows.Forms.HtmlElement> exposes only those attributes that are common to all elements, leaving out those that only apply to certain types of elements; `SRC` is a predefined attribute for the `IMG` tag, for example, but not for the `DIV` tag.</span></span> <span data-ttu-id="3bdea-581"><xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> と <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> を使用して、マネージドキュメントオブジェクトモデル (DOM) に公開されていない属性を操作します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-581">Use <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> to manipulate attributes not exposed on the managed Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="3bdea-582">`attributeName` が要素で定義されている属性でない場合、<xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> によって要素に新しい属性として定義されます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-582">If `attributeName` is not a defined attribute on an element, <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> will define it on the element as a new attribute.</span></span>  
  
 <span data-ttu-id="3bdea-583"><xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> と <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> では大文字と小文字が区別されません。</span><span class="sxs-lookup"><span data-stu-id="3bdea-583"><xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> are case-insensitive.</span></span>  
  
 <span data-ttu-id="3bdea-584"><xref:System.Windows.Forms.HtmlElement> に `class` 属性を設定するには、の最初の引数を指定するときに、属性を `className` として参照する必要があり <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A></span><span class="sxs-lookup"><span data-stu-id="3bdea-584">To set the `class` attribute on an <xref:System.Windows.Forms.HtmlElement> , you must refer to the attribute as `className` when specifying the first argument to <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-585">次のコード例では、<xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> を使用してイメージの `SRC` 属性を設定することにより、現在のドキュメントに新しい `IMG` 要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-585">The following code example adds a new `IMG` element to the current document, using <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> to set the `SRC` attribute for the image.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#13)]
 [!code-vb[System.Windows.Forms.HtmlElement#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536739.aspx"><span data-ttu-id="3bdea-586">setAttribute メソッド</span><span class="sxs-lookup"><span data-stu-id="3bdea-586">setAttribute Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public string Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Style" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Style { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Style : string with get, set" Usage="System.Windows.Forms.HtmlElement.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-587">現在の要素のスタイルのセミコロン区切りリストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-587">Gets or sets a semicolon-delimited list of styles for the current element.</span></span></summary>
        <value><span data-ttu-id="3bdea-588">要素のすべてのスタイルを記述した文字列。</span><span class="sxs-lookup"><span data-stu-id="3bdea-588">A string consisting of all of the element's styles</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-589">HTML ドキュメントオブジェクトモデル (DOM) は、World Wide Web コンソーシアムカスケードスタイルシート仕様で定義されているスタイルを使用して、要素の表示を制御します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-589">The HTML Document Object Model (DOM) uses styles as defined in the World Wide Web Consortiums Cascading Style Sheets specification to control the display of an element.</span></span> <span data-ttu-id="3bdea-590"><xref:System.Windows.Forms.HtmlElement.Style%2A> プロパティのスタイルは、コロンで区切られた名前と値のペアの形式をとります。各ペアは、次のようにセミコロンで区切られます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-590">Styles in the <xref:System.Windows.Forms.HtmlElement.Style%2A> property take the form of colon-delimited name-value pairs, with each pair separated by a semicolon, as follows:</span></span>  
  
 `style-name1:value1;...;[style-nameN:valueN;]`  
  
 <span data-ttu-id="3bdea-591">たとえば、`DIV` 要素のフォントを14ポイントの新しいローマ太字に設定するには、次の文字列を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-591">To set the font for a `DIV` element to 14-point Times New Roman bold, for example, you would assign the following string:</span></span>  
  
 `font-face:Times New Roman;font-size:14px;font-weight:bold;`  
  
 <span data-ttu-id="3bdea-592">HTML DOM で使用できるすべてのスタイルの完全な一覧については、「[スタイル属性](https://msdn.microsoft.com/library/ms534651.aspx)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bdea-592">For a full list of all available styles in the HTML DOM, see [STYLE Attribute](https://msdn.microsoft.com/library/ms534651.aspx).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public short TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property TabIndex As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short TabIndex { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int16 with get, set" Usage="System.Windows.Forms.HtmlElement.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-593">この要素のタブ オーダーにおける位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-593">Gets or sets the location of this element in the tab order.</span></span></summary>
        <value><span data-ttu-id="3bdea-594">タブ オーダーにおける要素の数値インデックス。</span><span class="sxs-lookup"><span data-stu-id="3bdea-594">The numeric index of the element in the tab order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-595"><xref:System.Windows.Forms.HtmlElement.TabIndex%2A> は、ユーザーが TAB キーを押したときに、次にフォーカスを受け取る HTML ドキュメント内の要素を決定します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-595"><xref:System.Windows.Forms.HtmlElement.TabIndex%2A> determines which element in an HTML document will next receive focus when the user presses the TAB key.</span></span> <span data-ttu-id="3bdea-596">既定では、タブオーダーに含まれる要素は `INPUT` 要素、`SELECT` コントロール、および `contentEditable` プロパティが `true`に設定されているすべての要素です。</span><span class="sxs-lookup"><span data-stu-id="3bdea-596">By default, the only elements included in the tab order are `INPUT` elements, the `SELECT` control, and any element whose `contentEditable` property is set to `true`.</span></span> <span data-ttu-id="3bdea-597">明示的な <xref:System.Windows.Forms.HtmlElement.TabIndex%2A>を割り当てることによって、`DIV`などの HTML 要素をタブオーダーに含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-597">You can include any HTML element in the tab order, such as a `DIV`, by assigning it an explicit <xref:System.Windows.Forms.HtmlElement.TabIndex%2A>.</span></span>  
  
 <span data-ttu-id="3bdea-598">-32767 ~ 32767 の範囲の <xref:System.Windows.Forms.HtmlElement.TabIndex%2A> の有効な値。</span><span class="sxs-lookup"><span data-stu-id="3bdea-598">Valid values for <xref:System.Windows.Forms.HtmlElement.TabIndex%2A> range from -32767 to 32767.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534654.aspx"><span data-ttu-id="3bdea-599">tabIndex プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-599">tabIndex Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="public string TagName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.TagName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TagName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string" Usage="System.Windows.Forms.HtmlElement.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bdea-600">HTML タグの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-600">Gets the name of the HTML tag.</span></span></summary>
        <value><span data-ttu-id="3bdea-601">HTML マークアップを使用してこの要素を作成するために使用する名前。</span><span class="sxs-lookup"><span data-stu-id="3bdea-601">The name used to create this element using HTML markup.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bdea-602">HTML ドキュメントオブジェクトモデルの多くの要素には、それらの要素に固有の属性、プロパティ、およびメソッドがあります。`A` 要素の `HREF` 属性、`FORM`の `Submit` メソッドなど。</span><span class="sxs-lookup"><span data-stu-id="3bdea-602">Many elements in the HTML Document Object Model have attributes, properties, and methods that are unique to those elements; such as the `HREF` attribute on the `A` element, or the `Submit` method on `FORM`.</span></span> <span data-ttu-id="3bdea-603"><xref:System.Windows.Forms.HtmlElement.TagName%2A> は、任意の型の要素を持つ可能性があり、型固有の操作を実行する必要がある場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="3bdea-603">Use <xref:System.Windows.Forms.HtmlElement.TagName%2A> when you have an element of a potentially arbitrary type, and need to perform a type-specific operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bdea-604">次のコード例では、ドキュメント内のすべての `IMG` タグを検索し、`TagName` プロパティを使用して、`IMG` が別のページにハイパーリンクされているかどうかをテストします。そうである場合は、コードによって `IMG` タグの `ALT` 属性に URL が割り当てられるため、ユーザーはイメージをマウスでポイントしてどこに移動するかを確認できます。</span><span class="sxs-lookup"><span data-stu-id="3bdea-604">The following code example finds all of the `IMG` tags in a document, and uses the `TagName` property to test whether the `IMG` is hyperlinked to another page; if it is, the code assigns the URL to the `ALT` attribute of the `IMG` tag, so that users can mouse over the image to see where it will take them.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.HtmlElement#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.HtmlDocument.GetElementsByTagName(System.String)" />
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534657.aspx"><span data-ttu-id="3bdea-605">tagName プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bdea-605">tagName Property</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
