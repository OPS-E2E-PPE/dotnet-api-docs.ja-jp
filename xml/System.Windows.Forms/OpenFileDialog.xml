<Type Name="OpenFileDialog" FullName="System.Windows.Forms.OpenFileDialog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4635f07c9b9b7edef98f4ae46d663ad5689bd67a" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75178343" /></Metadata><TypeSignature Language="C#" Value="public sealed class OpenFileDialog : System.Windows.Forms.FileDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OpenFileDialog extends System.Windows.Forms.FileDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OpenFileDialog" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OpenFileDialog&#xA;Inherits FileDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpenFileDialog sealed : System::Windows::Forms::FileDialog" />
  <TypeSignature Language="F#" Value="type OpenFileDialog = class&#xA;    inherit FileDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FileDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.OpenFileDialogDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a3488-101">ユーザーにファイルを開けるように指示するダイアログ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="a3488-101">Displays a standard dialog box that prompts the user to open a file.</span></span> <span data-ttu-id="a3488-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="a3488-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3488-103">このクラスを使用すると、ファイルが存在するかどうかを確認し、ファイルを開くことができます。</span><span class="sxs-lookup"><span data-stu-id="a3488-103">This class allows you to check whether a file exists and to open it.</span></span> <span data-ttu-id="a3488-104"><xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> プロパティは、ダイアログボックスに読み取り専用チェックボックスを表示するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="a3488-104">The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property determines whether a read-only check box appears in the dialog box.</span></span> <span data-ttu-id="a3488-105"><xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> プロパティは、読み取り専用チェックボックスをオンにするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="a3488-105">The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property indicates whether the read-only check box is checked.</span></span>  
  
 <span data-ttu-id="a3488-106">このクラスのコア機能のほとんどは、<xref:System.Windows.Forms.FileDialog> クラスにあります。</span><span class="sxs-lookup"><span data-stu-id="a3488-106">Most of the core functionality for this class is found in the <xref:System.Windows.Forms.FileDialog> class.</span></span>  

<span data-ttu-id="a3488-107">右から左へ記述するオペレーティングシステムで、含まれるフォームの <xref:System.Windows.Forms.Control.RightToLeft> プロパティをに設定すると、ダイアログの **[ファイル名]**、**[開く]**、 **[キャンセル**] の各ボタンがローカライズされ <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> ます。</span><span class="sxs-lookup"><span data-stu-id="a3488-107">On a right-to-left operating system, setting the containing form's <xref:System.Windows.Forms.Control.RightToLeft> property to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> localizes the dialog's **File Name**, **Open**, and **Cancel** buttons.</span></span> <span data-ttu-id="a3488-108">プロパティが <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>に設定されていない場合は、代わりに英語のテキストが使用されます。</span><span class="sxs-lookup"><span data-stu-id="a3488-108">If the property is not set to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, English text is used instead.</span></span>  

 <span data-ttu-id="a3488-109">ファイルではなくフォルダーを選択できるようにするには、代わりに <xref:System.Windows.Forms.FolderBrowserDialog> を使用します。</span><span class="sxs-lookup"><span data-stu-id="a3488-109">If you want to give the user the ability to select a folder instead of a file, use <xref:System.Windows.Forms.FolderBrowserDialog> instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3488-110">次のコード例では、<xref:System.Windows.Forms.OpenFileDialog>を作成し、いくつかのプロパティを設定してファイル拡張子フィルターとダイアログの動作を定義し、<xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType> メソッドを使用してダイアログボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="a3488-110">The following code example creates an <xref:System.Windows.Forms.OpenFileDialog>, sets several properties to define the file extension filter and dialog behavior, and displays the dialog box using the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a3488-111">この例では、フォームに <xref:System.Windows.Forms.Button> が配置され、<xref:System.IO> 名前空間への参照が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a3488-111">The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and a reference to the <xref:System.IO> namespace added to it.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.FileDialog" />
    <altmember cref="T:System.Windows.Forms.CommonDialog" />
    <altmember cref="T:System.Windows.Forms.SaveFileDialog" />
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="a3488-112">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="a3488-112">How to: Read Text from a File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenFileDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpenFileDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3488-113"><see cref="T:System.Windows.Forms.OpenFileDialog" /> クラスのインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a3488-113">Initializes an instance of the <see cref="T:System.Windows.Forms.OpenFileDialog" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3488-114">これは、<xref:System.Windows.Forms.OpenFileDialog> クラスのコンパイラによって提供される既定のコンストラクターです。</span><span class="sxs-lookup"><span data-stu-id="a3488-114">This is the default, compiler-supplied constructor for the <xref:System.Windows.Forms.OpenFileDialog> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckFileExists">
      <MemberSignature Language="C#" Value="public override bool CheckFileExists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckFileExists" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CheckFileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckFileExists { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckFileExists : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.CheckFileExists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3488-115">存在しないファイルの名前をユーザーが指定した場合に、ダイアログ ボックスが警告を表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a3488-115">Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.</span></span></summary>
        <value><span data-ttu-id="a3488-116">存在しないファイルの名前をユーザーが指定した場合にダイアログ ボックスが警告を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3488-116"><see langword="true" /> if the dialog box displays a warning when the user specifies a file name that does not exist; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a3488-117">既定値は <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="a3488-117">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="Multiselect">
      <MemberSignature Language="C#" Value="public bool Multiselect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiselect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.Multiselect" />
      <MemberSignature Language="VB.NET" Value="Public Property Multiselect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Multiselect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiselect : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.Multiselect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3488-118">ダイアログ ボックスで複数のファイルを選択できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a3488-118">Gets or sets a value indicating whether the dialog box allows multiple files to be selected.</span></span></summary>
        <value><span data-ttu-id="a3488-119">ダイアログ ボックスで複数のファイルを同時に選択できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3488-119"><see langword="true" /> if the dialog box allows multiple files to be selected together or concurrently; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a3488-120">既定値は <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="a3488-120">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3488-121">選択したファイル名の完全な一覧にアクセスするには、<xref:System.Windows.Forms.FileDialog.FileNames%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="a3488-121">Use the <xref:System.Windows.Forms.FileDialog.FileNames%2A> property to access the full list of selected file names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3488-122">次のコード例では、ユーザーが複数のイメージを選択して、フォーム上の <xref:System.Windows.Forms.PictureBox> コントロールに表示できます。</span><span class="sxs-lookup"><span data-stu-id="a3488-122">The following code example allows the user to select a number of images and display them in <xref:System.Windows.Forms.PictureBox> controls on a Form.</span></span> <span data-ttu-id="a3488-123"><xref:System.Windows.Forms.OpenFileDialog>の初期化、<xref:System.Windows.Forms.FileDialog.Title%2A> と <xref:System.Windows.Forms.FileDialog.Filter%2A> プロパティの設定、<xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> プロパティを true に設定してユーザーが複数のファイルを選択できるようにする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a3488-123">It demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the <xref:System.Windows.Forms.FileDialog.Title%2A> and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> property to true.</span></span> <span data-ttu-id="a3488-124">このコード例では、フォームに `openFileDialog1`という名前の <xref:System.Windows.Forms.OpenFileDialog> コントロール、`SelectFileButton`という名前の <xref:System.Windows.Forms.Button>、および <xref:System.Windows.Forms.FlowLayoutPanel> という名前の `flowLayoutPanel1`が既に存在することを前提としています。</span><span class="sxs-lookup"><span data-stu-id="a3488-124">This code example assumes that your form already has an <xref:System.Windows.Forms.OpenFileDialog> control named `openFileDialog1`, a <xref:System.Windows.Forms.Button> named `SelectFileButton`, and a <xref:System.Windows.Forms.FlowLayoutPanel> named `flowLayoutPanel1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FileDialog.FileNames" />
        <altmember cref="P:System.Windows.Forms.FileDialog.Filter" />
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenFile () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenFile();" />
      <MemberSignature Language="F#" Value="member this.OpenFile : unit -&gt; System.IO.Stream" Usage="openFileDialog.OpenFile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3488-125">ユーザーが選択したファイルを読み取り専用で開きます。</span><span class="sxs-lookup"><span data-stu-id="a3488-125">Opens the file selected by the user, with read-only permission.</span></span> <span data-ttu-id="a3488-126">このファイルは、<see cref="P:System.Windows.Forms.FileDialog.FileName" /> プロパティで指定されます。</span><span class="sxs-lookup"><span data-stu-id="a3488-126">The file is specified by the <see cref="P:System.Windows.Forms.FileDialog.FileName" /> property.</span></span></summary>
        <returns><span data-ttu-id="a3488-127">ユーザーが選択した読み取り専用ファイルを指定する <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="a3488-127">A <see cref="T:System.IO.Stream" /> that specifies the read-only file selected by the user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3488-128"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> メソッドは、ダイアログボックスからファイルをすばやく開くための機能を提供するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="a3488-128">The <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to provide a facility to quickly open a file from the dialog box.</span></span> <span data-ttu-id="a3488-129">ファイルは、セキュリティ上の理由で読み取り専用モードで開かれています。</span><span class="sxs-lookup"><span data-stu-id="a3488-129">The file is opened in read-only mode for security purposes.</span></span> <span data-ttu-id="a3488-130">読み取り/書き込みモードでファイルを開くには、<xref:System.IO.FileStream>などの別の方法を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a3488-130">To open a file in read/write mode, you must use another method, such as <xref:System.IO.FileStream>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3488-131">次のコード例は、<xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a3488-131">The following code example demonstrates how to use the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3488-132">ファイル名が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a3488-132">The file name is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileDialogPermission"><span data-ttu-id="a3488-133">ファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="a3488-133">to open a file.</span></span> <span data-ttu-id="a3488-134"><see cref="F:System.Security.Permissions.FileDialogPermissionAccess.Open" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="a3488-134">Associated enumeration: <see cref="F:System.Security.Permissions.FileDialogPermissionAccess.Open" />.</span></span></permission>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChecked">
      <MemberSignature Language="C#" Value="public bool ReadOnlyChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnlyChecked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnlyChecked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnlyChecked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnlyChecked : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3488-135">読み取り専用チェック ボックスがオンかオフかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a3488-135">Gets or sets a value indicating whether the read-only check box is selected.</span></span></summary>
        <value><span data-ttu-id="a3488-136">読み取り専用チェック ボックスがオンの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3488-136"><see langword="true" /> if the read-only check box is selected; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a3488-137">既定値は <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="a3488-137">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3488-138"><xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> の状態は、ダイアログボックスで選択したファイルを開くために <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType> が使用する読み取り/書き込みモードには影響しません。</span><span class="sxs-lookup"><span data-stu-id="a3488-138">The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> state does not affect the read/write mode that <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType> uses to open a file selected in the dialog box.</span></span> <span data-ttu-id="a3488-139"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> は、常に読み取り専用モードでファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="a3488-139"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> will always open the file in read-only mode.</span></span>  
  
 <span data-ttu-id="a3488-140">[読み取り専用] チェックボックスがダイアログボックスに表示されるようにするには、<xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> プロパティを事前に設定しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="a3488-140">The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property must be set before in order for the read-only check box to appear in the dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3488-141">次のコード例は、<xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a3488-141">The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property.</span></span> <span data-ttu-id="a3488-142">この例では、<xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> プロパティが `true`に設定された <xref:System.Windows.Forms.OpenFileDialog> ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="a3488-142">This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`.</span></span> <span data-ttu-id="a3488-143">ユーザーがファイルを読み取り専用モードで開くオプションをクリックすると、<xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> プロパティが `true`に評価され、<xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> メソッドを使用してファイルが開きます。</span><span class="sxs-lookup"><span data-stu-id="a3488-143">If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property evaluates to `true`, and the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file.</span></span> <span data-ttu-id="a3488-144">それ以外の場合は、<xref:System.IO.FileStream> クラスを使用して、読み取り/書き込みモードでファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="a3488-144">Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.</span></span>  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="openFileDialog.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3488-145">すべてのプロパティを既定値にリセットします。</span><span class="sxs-lookup"><span data-stu-id="a3488-145">Resets all properties to their default values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileName">
      <MemberSignature Language="C#" Value="public string SafeFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SafeFileName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SafeFileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeFileName : string" Usage="System.Windows.Forms.OpenFileDialog.SafeFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3488-146">ダイアログ ボックスで選択されたファイルのファイル名と拡張子を取得します。</span><span class="sxs-lookup"><span data-stu-id="a3488-146">Gets the file name and extension for the file selected in the dialog box.</span></span> <span data-ttu-id="a3488-147">ファイル名にはパスは含まれません。</span><span class="sxs-lookup"><span data-stu-id="a3488-147">The file name does not include the path.</span></span></summary>
        <value><span data-ttu-id="a3488-148">ダイアログ ボックスで選択されたファイルのファイル名と拡張子。</span><span class="sxs-lookup"><span data-stu-id="a3488-148">The file name and extension for the file selected in the dialog box.</span></span> <span data-ttu-id="a3488-149">ファイル名にはパスは含まれません。</span><span class="sxs-lookup"><span data-stu-id="a3488-149">The file name does not include the path.</span></span> <span data-ttu-id="a3488-150">既定値は空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="a3488-150">The default value is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3488-151">安全なファイル名 (パスのないファイル名と拡張子のみ) を使用して、アプリケーションのセキュリティを向上させることができます。これは、パス情報を公開しないためです。</span><span class="sxs-lookup"><span data-stu-id="a3488-151">A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.</span></span> <span data-ttu-id="a3488-152">このプロパティは、信頼が制限された状態で実行されるコードにアクセスできる必要があります。</span><span class="sxs-lookup"><span data-stu-id="a3488-152">This property should be accessible to code running with limited trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileNames">
      <MemberSignature Language="C#" Value="public string[] SafeFileNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] SafeFileNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ SafeFileNames { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeFileNames : string[]" Usage="System.Windows.Forms.OpenFileDialog.SafeFileNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3488-153">ダイアログ ボックスで選択されたすべてのファイルのファイル名と拡張子の配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="a3488-153">Gets an array of file names and extensions for all the selected files in the dialog box.</span></span> <span data-ttu-id="a3488-154">ファイル名にはパスは含まれません。</span><span class="sxs-lookup"><span data-stu-id="a3488-154">The file names do not include the path.</span></span></summary>
        <value><span data-ttu-id="a3488-155">ダイアログ ボックスで選択されたすべてのファイルのファイル名と拡張子の配列。</span><span class="sxs-lookup"><span data-stu-id="a3488-155">An array of file names and extensions for all the selected files in the dialog box.</span></span> <span data-ttu-id="a3488-156">ファイル名にはパスは含まれません。</span><span class="sxs-lookup"><span data-stu-id="a3488-156">The file names do not include the path.</span></span> <span data-ttu-id="a3488-157">ファイルが 1 つも選択されていない場合は、空の配列が返されます。</span><span class="sxs-lookup"><span data-stu-id="a3488-157">If no files are selected, an empty array is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3488-158">安全なファイル名 (パスのないファイル名と拡張子のみ) を使用して、アプリケーションのセキュリティを向上させることができます。これは、パス情報を公開しないためです。</span><span class="sxs-lookup"><span data-stu-id="a3488-158">A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.</span></span> <span data-ttu-id="a3488-159">このプロパティは、信頼が制限された状態で実行されるコードにアクセスできる必要があります。</span><span class="sxs-lookup"><span data-stu-id="a3488-159">This property should be accessible to code running with limited trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowReadOnly">
      <MemberSignature Language="C#" Value="public bool ShowReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowReadOnly : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3488-160">ダイアログ ボックスに読み取り専用チェック ボックスが表示されているかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a3488-160">Gets or sets a value indicating whether the dialog box contains a read-only check box.</span></span></summary>
        <value><span data-ttu-id="a3488-161">ダイアログ ボックスに読み取り専用チェック ボックスが表示されている場合は <see langword="true" />。それ以外の場合は<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3488-161"><see langword="true" /> if the dialog box contains a read-only check box; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a3488-162">既定値は <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="a3488-162">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a3488-163">次のコード例は、<xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a3488-163">The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property.</span></span> <span data-ttu-id="a3488-164">この例では、<xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> プロパティが `true`に設定された <xref:System.Windows.Forms.OpenFileDialog> ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="a3488-164">This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`.</span></span> <span data-ttu-id="a3488-165">ユーザーがファイルを読み取り専用モードで開くオプションをクリックすると、そのファイルを開くために <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> メソッドが使用されます。</span><span class="sxs-lookup"><span data-stu-id="a3488-165">If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file.</span></span> <span data-ttu-id="a3488-166">それ以外の場合は、<xref:System.IO.FileStream> クラスを使用して、読み取り/書き込みモードでファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="a3488-166">Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.</span></span>  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
  </Members>
</Type>
