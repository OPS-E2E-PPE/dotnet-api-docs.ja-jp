<Type Name="ListBox" FullName="System.Windows.Forms.ListBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="05ab88af9994d866180b488ca8a0d9a6e9026cf1" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73397104" /></Metadata><TypeSignature Language="C#" Value="public class ListBox : System.Windows.Forms.ListControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListBox extends System.Windows.Forms.ListControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBox" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox&#xA;Inherits ListControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListBox : System::Windows::Forms::ListControl" />
  <TypeSignature Language="F#" Value="type ListBox = class&#xA;    inherit ListControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ListControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.DefaultBindingProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Items")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListBoxDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListBoxDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1fbb4-101">項目のリストを表示する Windows コントロールを表します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-101">Represents a Windows control to display a list of items.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-102"><xref:System.Windows.Forms.ListBox> コントロールを使用すると、ユーザーがクリックして選択できる項目の一覧をユーザーに表示できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-102">The <xref:System.Windows.Forms.ListBox> control enables you to display a list of items to the user that the user can select by clicking.</span></span> <span data-ttu-id="1fbb4-103"><xref:System.Windows.Forms.ListBox> コントロールでは、<xref:System.Windows.Forms.ListBox.SelectionMode%2A> プロパティを使用して1つまたは複数の選択を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-103">A <xref:System.Windows.Forms.ListBox> control can provide single or multiple selections using the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property.</span></span> <span data-ttu-id="1fbb4-104"><xref:System.Windows.Forms.ListBox> には、項目の単純なリストではなく、列に項目を表示できるようにするための <xref:System.Windows.Forms.ListBox.MultiColumn%2A> プロパティも用意されています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-104">The <xref:System.Windows.Forms.ListBox> also provides the <xref:System.Windows.Forms.ListBox.MultiColumn%2A> property to enable the display of items in columns instead of a straight vertical list of items.</span></span> <span data-ttu-id="1fbb4-105">これにより、コントロールはより表示される項目を表示でき、ユーザーは項目までスクロールする必要がなくなります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-105">With this, the control can display more visible items and the user no longer needs to scroll to an item.</span></span>  
  
 <span data-ttu-id="1fbb4-106">通常、<xref:System.Windows.Forms.ListBox>に表示する項目を描画するタスクは、Windows によって処理されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-106">Typically, Windows handles the task of drawing the items to display in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-107"><xref:System.Windows.Forms.ListBox.DrawMode%2A> プロパティを使用して、<xref:System.Windows.Forms.ListBox.MeasureItem> イベントと <xref:System.Windows.Forms.ListBox.DrawItem> イベントを処理することで、Windows によって提供される自動描画をオーバーライドし、自分で項目を描画することができます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-107">You can use the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property, and handle the <xref:System.Windows.Forms.ListBox.MeasureItem> and <xref:System.Windows.Forms.ListBox.DrawItem> events so you can override the automatic drawing that Windows provides and draw the items yourself.</span></span> <span data-ttu-id="1fbb4-108">オーナー描画の <xref:System.Windows.Forms.ListBox> コントロールを使用して、リスト内の各項目のテキストに可変高さの項目、画像、または別の色やフォントを表示できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-108">You can use owner-drawn <xref:System.Windows.Forms.ListBox> controls to display variable-height items, images, or a different color or font for the text of each item in the list.</span></span> <span data-ttu-id="1fbb4-109"><xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> プロパティ、<xref:System.Windows.Forms.ListBox.GetItemHeight%2A>、および <xref:System.Windows.Forms.ListBox.GetItemRectangle%2A> は、独自の項目を描画するのにも役立ちます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-109">The <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> property, <xref:System.Windows.Forms.ListBox.GetItemHeight%2A>, and <xref:System.Windows.Forms.ListBox.GetItemRectangle%2A> also help you draw your own items.</span></span>  
  
 <span data-ttu-id="1fbb4-110"><xref:System.Windows.Forms.ListBox> には、表示と選択の機能に加えて、<xref:System.Windows.Forms.ListBox> に項目を効率的に追加したり、リストの項目内のテキストを検索したりできる機能も用意されています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-110">In addition to display and selection functionality, the <xref:System.Windows.Forms.ListBox> also provides features that enable you to efficiently add items to the <xref:System.Windows.Forms.ListBox> and to find text within the items of the list.</span></span> <span data-ttu-id="1fbb4-111"><xref:System.Windows.Forms.ListBox.BeginUpdate%2A> メソッドと <xref:System.Windows.Forms.ListBox.EndUpdate%2A> メソッドを使用すると、項目がリストに追加されるたびにコントロールが再描画されることなく、多数の項目を <xref:System.Windows.Forms.ListBox> に追加できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-111">The <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ListBox.EndUpdate%2A> methods enable you to add a large number of items to the <xref:System.Windows.Forms.ListBox> without the control being repainted each time an item is added to the list.</span></span> <span data-ttu-id="1fbb4-112"><xref:System.Windows.Forms.ListBox.FindString%2A> および <xref:System.Windows.Forms.ListBox.FindStringExact%2A> メソッドを使用すると、特定の検索文字列を含むリスト内の項目を検索できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-112">The <xref:System.Windows.Forms.ListBox.FindString%2A> and <xref:System.Windows.Forms.ListBox.FindStringExact%2A> methods enable you to search for an item in the list that contains a specific search string.</span></span>  
  
 <span data-ttu-id="1fbb4-113"><xref:System.Windows.Forms.ListBox.Items%2A>、<xref:System.Windows.Forms.ListBox.SelectedItems%2A>、および <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> の各プロパティは、<xref:System.Windows.Forms.ListBox>で使用される3つのコレクションへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-113">The <xref:System.Windows.Forms.ListBox.Items%2A>, <xref:System.Windows.Forms.ListBox.SelectedItems%2A>, and <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> properties provide access to the three collections that are used by the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-114">次の表は、<xref:System.Windows.Forms.ListBox> によって使用される3つのコレクションと、コントロール内での使用方法の概要を示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-114">The following table outlines the three collections used by the <xref:System.Windows.Forms.ListBox> and their use within the control.</span></span>  
  
|<span data-ttu-id="1fbb4-115">Collection クラス</span><span class="sxs-lookup"><span data-stu-id="1fbb4-115">Collection class</span></span>|<span data-ttu-id="1fbb4-116"><xref:System.Windows.Forms.ListBox> 内で使用する</span><span class="sxs-lookup"><span data-stu-id="1fbb4-116">Use within the <xref:System.Windows.Forms.ListBox></span></span>|  
|----------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:System.Windows.Forms.ListBox.ObjectCollection>|<span data-ttu-id="1fbb4-117"><xref:System.Windows.Forms.ListBox> コントロールに含まれるすべての項目を格納します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-117">Contains all items contained in the <xref:System.Windows.Forms.ListBox> control.</span></span>|  
|<xref:System.Windows.Forms.ListBox.SelectedObjectCollection>|<span data-ttu-id="1fbb4-118"><xref:System.Windows.Forms.ListBox> コントロールに含まれる項目のサブセットである、選択された項目のコレクションを格納します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-118">Contains a collection of the selected items which is a subset of the items contained in the <xref:System.Windows.Forms.ListBox> control.</span></span>|  
|<xref:System.Windows.Forms.ListBox.SelectedIndexCollection>|<span data-ttu-id="1fbb4-119">選択されたインデックスのコレクションが格納されます。これは、<xref:System.Windows.Forms.ListBox.ObjectCollection>のインデックスのサブセットです。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-119">Contains a collection of the selected indexes, which is a subset of the indexes of the <xref:System.Windows.Forms.ListBox.ObjectCollection>.</span></span> <span data-ttu-id="1fbb4-120">これらのインデックスは、選択された項目を指定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-120">These indexes specify items that are selected.</span></span>|  
  
 <span data-ttu-id="1fbb4-121">次の3つの例は、<xref:System.Windows.Forms.ListBox> クラスがサポートする3つのインデックス付きコレクションを示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-121">The following three examples show the three indexed collections that the <xref:System.Windows.Forms.ListBox> class supports.</span></span>  
  
 <span data-ttu-id="1fbb4-122">次の表は、<xref:System.Windows.Forms.ListBox.ObjectCollection> が <xref:System.Windows.Forms.ListBox> の項目とその選択状態を <xref:System.Windows.Forms.ListBox>例の中に格納する方法の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-122">The following table shows an example of how the <xref:System.Windows.Forms.ListBox.ObjectCollection> stores the items of the <xref:System.Windows.Forms.ListBox> as well as their selection state within an example <xref:System.Windows.Forms.ListBox>.</span></span>  
  
|<span data-ttu-id="1fbb4-123">インデックス</span><span class="sxs-lookup"><span data-stu-id="1fbb4-123">Index</span></span>|<span data-ttu-id="1fbb4-124">アイテム</span><span class="sxs-lookup"><span data-stu-id="1fbb4-124">Item</span></span>|<span data-ttu-id="1fbb4-125">リストボックス内の選択状態</span><span class="sxs-lookup"><span data-stu-id="1fbb4-125">Selection state within the ListBox</span></span>|  
|-----------|----------|----------------------------------------|  
|<span data-ttu-id="1fbb4-126">0</span><span class="sxs-lookup"><span data-stu-id="1fbb4-126">0</span></span>|<span data-ttu-id="1fbb4-127">object1</span><span class="sxs-lookup"><span data-stu-id="1fbb4-127">object1</span></span>|<span data-ttu-id="1fbb4-128">未選択</span><span class="sxs-lookup"><span data-stu-id="1fbb4-128">Unselected</span></span>|  
|<span data-ttu-id="1fbb4-129">1</span><span class="sxs-lookup"><span data-stu-id="1fbb4-129">1</span></span>|<span data-ttu-id="1fbb4-130">object2</span><span class="sxs-lookup"><span data-stu-id="1fbb4-130">object2</span></span>|<span data-ttu-id="1fbb4-131">選択済み</span><span class="sxs-lookup"><span data-stu-id="1fbb4-131">Selected</span></span>|  
|<span data-ttu-id="1fbb4-132">2</span><span class="sxs-lookup"><span data-stu-id="1fbb4-132">2</span></span>|<span data-ttu-id="1fbb4-133">object3</span><span class="sxs-lookup"><span data-stu-id="1fbb4-133">object3</span></span>|<span data-ttu-id="1fbb4-134">未選択</span><span class="sxs-lookup"><span data-stu-id="1fbb4-134">Unselected</span></span>|  
|<span data-ttu-id="1fbb4-135">3</span><span class="sxs-lookup"><span data-stu-id="1fbb4-135">3</span></span>|<span data-ttu-id="1fbb4-136">object4</span><span class="sxs-lookup"><span data-stu-id="1fbb4-136">object4</span></span>|<span data-ttu-id="1fbb4-137">選択済み</span><span class="sxs-lookup"><span data-stu-id="1fbb4-137">Selected</span></span>|  
|<span data-ttu-id="1fbb4-138">4</span><span class="sxs-lookup"><span data-stu-id="1fbb4-138">4</span></span>|<span data-ttu-id="1fbb4-139">object5</span><span class="sxs-lookup"><span data-stu-id="1fbb4-139">object5</span></span>|<span data-ttu-id="1fbb4-140">選択済み</span><span class="sxs-lookup"><span data-stu-id="1fbb4-140">Selected</span></span>|  
  
 <span data-ttu-id="1fbb4-141">この表は、前の表に示した <xref:System.Windows.Forms.ListBox.ObjectCollection> に基づいて、<xref:System.Windows.Forms.ListBox.SelectedObjectCollection> がどのように表示されるかを示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-141">Based on the <xref:System.Windows.Forms.ListBox.ObjectCollection> shown in the previous table, this table shows how the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> would appear.</span></span>  
  
|<span data-ttu-id="1fbb4-142">インデックス</span><span class="sxs-lookup"><span data-stu-id="1fbb4-142">Index</span></span>|<span data-ttu-id="1fbb4-143">アイテム</span><span class="sxs-lookup"><span data-stu-id="1fbb4-143">Item</span></span>|  
|-----------|----------|  
|<span data-ttu-id="1fbb4-144">0</span><span class="sxs-lookup"><span data-stu-id="1fbb4-144">0</span></span>|<span data-ttu-id="1fbb4-145">object2</span><span class="sxs-lookup"><span data-stu-id="1fbb4-145">object2</span></span>|  
|<span data-ttu-id="1fbb4-146">1</span><span class="sxs-lookup"><span data-stu-id="1fbb4-146">1</span></span>|<span data-ttu-id="1fbb4-147">object4</span><span class="sxs-lookup"><span data-stu-id="1fbb4-147">object4</span></span>|  
|<span data-ttu-id="1fbb4-148">2</span><span class="sxs-lookup"><span data-stu-id="1fbb4-148">2</span></span>|<span data-ttu-id="1fbb4-149">object5</span><span class="sxs-lookup"><span data-stu-id="1fbb4-149">object5</span></span>|  
  
 <span data-ttu-id="1fbb4-150">この表は、前の表に示した <xref:System.Windows.Forms.ListBox.ObjectCollection> に基づいて、<xref:System.Windows.Forms.ListBox.SelectedIndexCollection> がどのように表示されるかを示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-150">Based on the <xref:System.Windows.Forms.ListBox.ObjectCollection> shown in the previous table, this table shows how the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> would appear.</span></span>  
  
|<span data-ttu-id="1fbb4-151">インデックス</span><span class="sxs-lookup"><span data-stu-id="1fbb4-151">Index</span></span>|<span data-ttu-id="1fbb4-152">項目のインデックス</span><span class="sxs-lookup"><span data-stu-id="1fbb4-152">Index of item</span></span>|  
|-----------|-------------------|  
|<span data-ttu-id="1fbb4-153">0</span><span class="sxs-lookup"><span data-stu-id="1fbb4-153">0</span></span>|<span data-ttu-id="1fbb4-154">1</span><span class="sxs-lookup"><span data-stu-id="1fbb4-154">1</span></span>|  
|<span data-ttu-id="1fbb4-155">1</span><span class="sxs-lookup"><span data-stu-id="1fbb4-155">1</span></span>|<span data-ttu-id="1fbb4-156">3</span><span class="sxs-lookup"><span data-stu-id="1fbb4-156">3</span></span>|  
|<span data-ttu-id="1fbb4-157">2</span><span class="sxs-lookup"><span data-stu-id="1fbb4-157">2</span></span>|<span data-ttu-id="1fbb4-158">4</span><span class="sxs-lookup"><span data-stu-id="1fbb4-158">4</span></span>|  
  
 <span data-ttu-id="1fbb4-159"><xref:System.Windows.Forms.ListBox.ObjectCollection> クラスの <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> メソッドを使用すると、<xref:System.Windows.Forms.ListBox>に項目を追加できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-159">The <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class enables you to add items to the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-160"><xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> メソッドは、<xref:System.Windows.Forms.ListBox>にメンバーを追加するときに、任意のオブジェクトを受け入れることができます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-160">The <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method can accept any object when adding a member to the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-161">オブジェクトを <xref:System.Windows.Forms.ListBox>に追加しようとすると、オブジェクト内のメンバー名が <xref:System.Windows.Forms.ListControl.DisplayMember%2A> プロパティで指定されていない限り、コントロールはオブジェクトの <xref:System.Object.ToString%2A> メソッドで定義されたテキストを使用します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-161">When an object is being added to the <xref:System.Windows.Forms.ListBox>, the control uses the text defined in the <xref:System.Object.ToString%2A> method of the object unless a member name within the object is specified in the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property.</span></span> <span data-ttu-id="1fbb4-162"><xref:System.Windows.Forms.ListBox.ObjectCollection> クラスの <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> メソッドを使用して項目を追加するだけでなく、<xref:System.Windows.Forms.ListControl> クラスの <xref:System.Windows.Forms.ListControl.DataSource%2A> プロパティを使用して項目を追加することもできます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-162">In addition to adding items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class you can also add items using the <xref:System.Windows.Forms.ListControl.DataSource%2A> property of the <xref:System.Windows.Forms.ListControl> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fbb4-163">基本の Windows フォームで <xref:System.Windows.Forms.ListBox>、<xref:System.Windows.Forms.ComboBox>、または <xref:System.Windows.Forms.CheckedListBox> を持っていて、派生 Windows フォームでこれらのコントロールの文字列コレクションを変更する場合は、基本 Windows フォームのこれらのコントロールの文字列コレクションを空にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-163">If you have a <xref:System.Windows.Forms.ListBox>, <xref:System.Windows.Forms.ComboBox>, or <xref:System.Windows.Forms.CheckedListBox> on a base Windows form and want to modify the string collections of those controls in a derived Windows form, the string collections of those controls in the base Windows form must be empty.</span></span> <span data-ttu-id="1fbb4-164">文字列コレクションが空でない場合は、別の Windows フォームを派生させると読み取り専用になります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-164">If the string collections are not empty, they become read-only when you derive another Windows form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-165">次のコード例では、複数の項目を1つの列に表示し、コントロールの一覧で複数の項目を選択できる <xref:System.Windows.Forms.ListBox> コントロールを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-165">The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list.</span></span> <span data-ttu-id="1fbb4-166">この例のコードでは、<xref:System.Windows.Forms.ListBox.ObjectCollection> クラスの <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> メソッドを使用して <xref:System.Windows.Forms.ListBox> に50項目を追加し、<xref:System.Windows.Forms.ListBox.SetSelected%2A> メソッドを使用してリストから3つの項目を選択します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-166">The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.</span></span> <span data-ttu-id="1fbb4-167">このコードでは、<xref:System.Windows.Forms.ListBox.SelectedIndices%2A> プロパティを使用して、<xref:System.Windows.Forms.ListBox.SelectedObjectCollection> コレクションの値、<xref:System.Windows.Forms.ListBox.SelectedItems%2A> プロパティ、および <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>を表示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-167">The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection, through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property, and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>, through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property.</span></span> <span data-ttu-id="1fbb4-168">この例では、コードがに配置され、<xref:System.Windows.Forms.Form>から呼び出される必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-168">This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic ListBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ListBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ListBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ListBox Example/CS/source.cs#1)]
 [!code-vb[Classic ListBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ListBox Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fbb4-169"><see cref="T:System.Windows.Forms.ListBox" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-169">Initializes a new instance of the <see cref="T:System.Windows.Forms.ListBox" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1fbb4-170">次のコード例では、複数の項目を1つの列に表示し、コントロールの一覧で複数の項目を選択できる <xref:System.Windows.Forms.ListBox> コントロールを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-170">The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list.</span></span> <span data-ttu-id="1fbb4-171">この例のコードでは、<xref:System.Windows.Forms.ListBox.ObjectCollection> クラスの <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> メソッドを使用して <xref:System.Windows.Forms.ListBox> に50項目を追加し、<xref:System.Windows.Forms.ListBox.SetSelected%2A> メソッドを使用してリストから3つの項目を選択します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-171">The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.</span></span> <span data-ttu-id="1fbb4-172">このコードでは、<xref:System.Windows.Forms.ListBox.SelectedIndices%2A> プロパティを使用して、<xref:System.Windows.Forms.ListBox.SelectedObjectCollection> コレクションの値、<xref:System.Windows.Forms.ListBox.SelectedItems%2A> プロパティ、および <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>を表示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-172">The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection, through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property, and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>, through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property.</span></span> <span data-ttu-id="1fbb4-173">この例では、コードがに配置され、<xref:System.Windows.Forms.Form>から呼び出される必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-173">This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic ListBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ListBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ListBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ListBox Example/CS/source.cs#1)]
 [!code-vb[Classic ListBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ListBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItemsCore">
      <MemberSignature Language="C#" Value="protected virtual void AddItemsCore (object[] value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddItemsCore(object[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.AddItemsCore(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddItemsCore (value As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddItemsCore(cli::array &lt;System::Object ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddItemsCore : obj[] -&gt; unit&#xA;override this.AddItemsCore : obj[] -&gt; unit" Usage="listBox.AddItemsCore value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated.  There is no replacement.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1fbb4-174">オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-174">An array of objects.</span></span></param>
        <summary><span data-ttu-id="1fbb4-175">このメンバーは互換性のために残されており、代わりのメンバーはありません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-175">This member is obsolete, and there is no replacement.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSelection">
      <MemberSignature Language="C#" Value="protected override bool AllowSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.AllowSelection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property AllowSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool AllowSelection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowSelection : bool" Usage="System.Windows.Forms.ListBox.AllowSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-176"><see cref="T:System.Windows.Forms.ListBox" /> でリスト項目の選択が現在有効かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-176">Gets a value indicating whether the <see cref="T:System.Windows.Forms.ListBox" /> currently enables selection of list items.</span></span></summary>
        <value><span data-ttu-id="1fbb4-177"><see cref="T:System.Windows.Forms.SelectionMode" /> が <see cref="F:System.Windows.Forms.SelectionMode.None" /> ではない場合<see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-177"><see langword="true" /> if <see cref="T:System.Windows.Forms.SelectionMode" /> is not <see cref="F:System.Windows.Forms.SelectionMode.None" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ListBox.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-178">コントロールの背景色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-178">Gets or sets the background color for the control.</span></span></summary>
        <value><span data-ttu-id="1fbb4-179">コントロールの背景色を表す <see cref="T:System.Drawing.Color" /> 。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-179">A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</span></span> <span data-ttu-id="1fbb4-180">既定値は <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> プロパティの値です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-180">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.ListBox.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-181">このクラスでは、このプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-181">This property is not relevant to this class.</span></span></summary>
        <value><span data-ttu-id="1fbb4-182">フォームの背景イメージ。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-182">The background image of the form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-183">このクラスでは、このプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-183">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListBox.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-184">ラベルの <see cref="P:System.Windows.Forms.ListBox.BackgroundImage" /> プロパティが変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-184">Occurs when the <see cref="P:System.Windows.Forms.ListBox.BackgroundImage" /> property of the label changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-185">このクラスでは、このイベントは使用されません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-185">This event is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.ListBox.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-186"><see cref="T:System.Windows.Forms.ListBox" /> 列挙体で定義された <see cref="T:System.Windows.Forms.ImageLayout" /> の背景イメージ レイアウトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-186">Gets or sets the background image layout for a <see cref="T:System.Windows.Forms.ListBox" /> as defined in the <see cref="T:System.Windows.Forms.ImageLayout" /> enumeration.</span></span></summary>
        <value><span data-ttu-id="1fbb4-187"><see cref="T:System.Windows.Forms.ImageLayout" /> の値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-187">One of the values of <see cref="T:System.Windows.Forms.ImageLayout" />.</span></span> <span data-ttu-id="1fbb4-188">値は、<see langword="Center" />、<see langword="None" />、<see langword="Stretch" />、<see langword="Tile" />、または <see langword="Zoom" /> です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-188">The values are <see langword="Center" />, <see langword="None" />, <see langword="Stretch" />, <see langword="Tile" />, or <see langword="Zoom" />.</span></span> <span data-ttu-id="1fbb4-189">既定値は <see langword="Center" /> です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-189"><see langword="Center" /> is the default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-190">このクラスでは、このプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-190">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="1fbb4-191">指定した列挙値が存在しません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-191">The specified enumeration value does not exist.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListBox.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-192"><see cref="P:System.Windows.Forms.ListBox.BackgroundImageLayout" /> プロパティが変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-192">Occurs when the <see cref="P:System.Windows.Forms.ListBox.BackgroundImageLayout" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-193">このクラスでは、このイベントは使用されません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-193">This event is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.BeginUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginUpdate();" />
      <MemberSignature Language="F#" Value="member this.BeginUpdate : unit -&gt; unit" Usage="listBox.BeginUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fbb4-194">項目を <see cref="T:System.Windows.Forms.ListBox" /> に 1 つずつ追加するときにパフォーマンスを維持するには、<see cref="M:System.Windows.Forms.ListBox.EndUpdate" /> メソッドが呼び出されるまでコントロールを再描画しないようにします。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-194">Maintains performance while items are added to the <see cref="T:System.Windows.Forms.ListBox" /> one at a time by preventing the control from drawing until the <see cref="M:System.Windows.Forms.ListBox.EndUpdate" /> method is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-195">複数の項目を <xref:System.Windows.Forms.ListBox> に追加するには、<xref:System.Windows.Forms.ListBox.ObjectCollection> クラスの <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> メソッド (<xref:System.Windows.Forms.ListBox>の <xref:System.Windows.Forms.ListBox.Items%2A> プロパティを使用) を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-195">The preferred way to add multiple items to the <xref:System.Windows.Forms.ListBox> is to use the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class (through the <xref:System.Windows.Forms.ListBox.Items%2A> property of the <xref:System.Windows.Forms.ListBox>).</span></span> <span data-ttu-id="1fbb4-196">これにより、1回の操作でリストに項目の配列を追加できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-196">This enables you to add an array of items to the list in a single operation.</span></span> <span data-ttu-id="1fbb4-197">ただし、<xref:System.Windows.Forms.ListBox.ObjectCollection> クラスの <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> メソッドを使用して一度に1つずつ項目を追加する場合は、<xref:System.Windows.Forms.ListBox.BeginUpdate%2A> メソッドを使用して、リストに項目が追加されるたびに、コントロールが <xref:System.Windows.Forms.ListBox> を再描画しないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-197">However, if you want to add items one at a time using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class, you can use the <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> method to prevent the control from repainting the <xref:System.Windows.Forms.ListBox> each time an item is added to the list.</span></span> <span data-ttu-id="1fbb4-198">リストに項目を追加するタスクを完了したら、<xref:System.Windows.Forms.ListBox.EndUpdate%2A> メソッドを呼び出して、<xref:System.Windows.Forms.ListBox> を再描画できるようにします。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-198">Once you have completed the task of adding items to the list, call the <xref:System.Windows.Forms.ListBox.EndUpdate%2A> method to enable the <xref:System.Windows.Forms.ListBox> to repaint.</span></span> <span data-ttu-id="1fbb4-199">このように項目を追加すると、多数の項目がリストに追加されている場合に、<xref:System.Windows.Forms.ListBox> の flickered 描画を防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-199">This way of adding items can prevent flickered drawing of the <xref:System.Windows.Forms.ListBox> when a large number of items are being added to the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-200">次のコード例では、<xref:System.Windows.Forms.ListBox>に5000項目を追加するときに、<xref:System.Windows.Forms.ListBox.BeginUpdate%2A> メソッドと <xref:System.Windows.Forms.ListBox.EndUpdate%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-200">The following code example uses the <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ListBox.EndUpdate%2A> methods while adding five thousand items to a <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-201">この例では、`listBox1`という名前の <xref:System.Windows.Forms.ListBox> コントロールが <xref:System.Windows.Forms.Form> に追加され、このメソッドがフォーム内に配置され、このメソッドから呼び出されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-201">This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a <xref:System.Windows.Forms.Form> and that this method is placed within the form and called from it.</span></span>  
  
 [!code-cpp[Classic ListBox.BeginUpdate Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ListBox.BeginUpdate Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ListBox.BeginUpdate Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ListBox.BeginUpdate Example/CS/source.cs#1)]
 [!code-vb[Classic ListBox.BeginUpdate Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ListBox.BeginUpdate Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.EndUpdate" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.ListBox.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-202"><see cref="T:System.Windows.Forms.ListBox" /> の周囲に描画される境界線の種類を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-202">Gets or sets the type of border that is drawn around the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <value><span data-ttu-id="1fbb4-203"><see cref="T:System.Windows.Forms.BorderStyle" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-203">One of the <see cref="T:System.Windows.Forms.BorderStyle" /> values.</span></span> <span data-ttu-id="1fbb4-204">既定値は、<see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" /> です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-204">The default is <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="1fbb4-205">値が、<see cref="T:System.Windows.Forms.BorderStyle" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-205">The value is not one of the <see cref="T:System.Windows.Forms.BorderStyle" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="ClearSelected">
      <MemberSignature Language="C#" Value="public void ClearSelected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearSelected() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ClearSelected" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearSelected ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearSelected();" />
      <MemberSignature Language="F#" Value="member this.ClearSelected : unit -&gt; unit" Usage="listBox.ClearSelected " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fbb4-206"><see cref="T:System.Windows.Forms.ListBox" /> 内のすべての項目を選択解除します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-206">Unselects all items in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-207">このメソッドを呼び出すことは、<xref:System.Windows.Forms.ListBox.SelectedIndex%2A> プロパティを負の 1 (-1) に設定することと同じです。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-207">Calling this method is equivalent to setting the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property to negative one (-1).</span></span> <span data-ttu-id="1fbb4-208">このメソッドを使用すると、リスト内のすべての項目をすばやく選択解除できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-208">You can use this method to quickly unselect all items in the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-209">次のコード例では、<xref:System.Windows.Forms.ListBox.SelectedIndex%2A> プロパティを <xref:System.Windows.Forms.ListBox.TopIndex%2A> プロパティと共に使用して、現在選択されている項目を <xref:System.Windows.Forms.ListBox>の表示領域内の項目リストの先頭に移動する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-209">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property with the <xref:System.Windows.Forms.ListBox.TopIndex%2A> property to move the currently selected item to the top of the list of items in the display area of the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-210">この例では、<xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=nameWithType> クラスの <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> メソッドを使用して項目を削除する方法と、<xref:System.Windows.Forms.ListBox.ClearSelected%2A> メソッドを使用してすべての項目選択をクリアする方法について詳しく説明します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-210">The example further demonstrates how to remove items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=nameWithType> class, and how to clear all item selection using the <xref:System.Windows.Forms.ListBox.ClearSelected%2A> method.</span></span> <span data-ttu-id="1fbb4-211">このコードは、まず、<xref:System.Windows.Forms.ListBox> 内の現在選択されている項目を一覧の先頭に移動します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-211">The code first moves the currently selected item in the <xref:System.Windows.Forms.ListBox> to the top of the list.</span></span> <span data-ttu-id="1fbb4-212">次に、現在選択されている項目の前にあるすべての項目を削除し、<xref:System.Windows.Forms.ListBox>のすべての選択を解除します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-212">The code then removes all items before the currently selected item and clears all selections in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-213">この例では、項目を含む <xref:System.Windows.Forms.ListBox> をフォームに追加し、項目が <xref:System.Windows.Forms.ListBox>で現在選択されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-213">This example requires that a <xref:System.Windows.Forms.ListBox> containing items is added to a form and that an item is currently selected in the <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 [!code-cpp[ListBox.SelectedIndex#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.SelectedIndex/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.SelectedIndex#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.SelectedIndex/CS/form1.cs#1)]
 [!code-vb[ListBox.SelectedIndex#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.SelectedIndex/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListBox.SelectedIndex" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListBox.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-214"><see cref="T:System.Windows.Forms.ListBox" /> コントロールがクリックされたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-214">Occurs when the <see cref="T:System.Windows.Forms.ListBox" /> control is clicked.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidth">
      <MemberSignature Language="C#" Value="public int ColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnWidth : int with get, set" Usage="System.Windows.Forms.ListBox.ColumnWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-215">複数列の <see cref="T:System.Windows.Forms.ListBox" /> の列幅を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-215">Gets or sets the width of columns in a multicolumn <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <value><span data-ttu-id="1fbb4-216">コントロール内の各列の幅 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-216">The width, in pixels, of each column in the control.</span></span> <span data-ttu-id="1fbb4-217">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-217">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-218">値をゼロ (0) に設定すると、各列に既定の幅が割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-218">If you set the value to zero (0), a default width is assigned to each column.</span></span> <span data-ttu-id="1fbb4-219"><xref:System.Windows.Forms.ListBox> が複数列 <xref:System.Windows.Forms.ListBox>の場合、このプロパティは、リスト内の各列の現在の幅を返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-219">If the <xref:System.Windows.Forms.ListBox> is a multicolumn <xref:System.Windows.Forms.ListBox>, this property returns the current width of each column in the list.</span></span> <span data-ttu-id="1fbb4-220">このプロパティを使用すると、複数列の <xref:System.Windows.Forms.ListBox> の各列でアイテムを正しく表示できるようになります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-220">You can use this property to ensure that each column in a multicolumn <xref:System.Windows.Forms.ListBox> can properly display its items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-221">次のコード例は、単純な2列の <xref:System.Windows.Forms.ListBox>を示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-221">The following code example demonstrates a simple two-column <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ListBox.MultiColumn#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBox.MultiColumn/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBox.MultiColumn#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBox.MultiColumn/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fbb4-222">0 未満の値がプロパティに代入されています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-222">A value less than zero is assigned to the property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="listBox.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fbb4-223">このコントロールの新しいアクセシビリティ オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-223">Creates a new accessibility object for this control.</span></span></summary>
        <returns><span data-ttu-id="1fbb4-224">このコントロールのアクセシビリティ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-224">An accessibility object for this control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItemCollection">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.ListBox.ObjectCollection CreateItemCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.ListBox/ObjectCollection CreateItemCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.CreateItemCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItemCollection () As ListBox.ObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::ListBox::ObjectCollection ^ CreateItemCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateItemCollection : unit -&gt; System.Windows.Forms.ListBox.ObjectCollection&#xA;override this.CreateItemCollection : unit -&gt; System.Windows.Forms.ListBox.ObjectCollection" Usage="listBox.CreateItemCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListBox+ObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fbb4-225">項目コレクションの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-225">Creates a new instance of the item collection.</span></span></summary>
        <returns><span data-ttu-id="1fbb4-226">新しい項目コレクションを表す <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-226">A <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> that represents the new item collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1fbb4-227">派生クラスでこれをオーバーライドして、項目を格納する別のコレクションを提供できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-227">You can override this in your derived classes to provide a different collection to store your items.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.ListBox.ObjectCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.ListBox.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-228">コントロール ハンドルが作成されるときに必要な作成パラメーターを取得します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-228">Gets the required creation parameters when the control handle is created.</span></span></summary>
        <value><span data-ttu-id="1fbb4-229">コントロールを識別するハンドルを作成するときに必要な作成パラメーターを格納している <see cref="T:System.Windows.Forms.CreateParams" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-229">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1fbb4-230">アンマネージコードを操作するために使用します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-230">for operating with unmanaged code.</span></span> <span data-ttu-id="1fbb4-231">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="1fbb4-231">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CustomTabOffsets">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListBox.IntegerCollection CustomTabOffsets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListBox/IntegerCollection CustomTabOffsets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.CustomTabOffsets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomTabOffsets As ListBox.IntegerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListBox::IntegerCollection ^ CustomTabOffsets { System::Windows::Forms::ListBox::IntegerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomTabOffsets : System.Windows.Forms.ListBox.IntegerCollection" Usage="System.Windows.Forms.ListBox.CustomTabOffsets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListBox+IntegerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-232"><see cref="T:System.Windows.Forms.ListBox" /> 内の項目間のタブ幅を取得します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-232">Gets the width of the tabs between the items in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <value><span data-ttu-id="1fbb4-233">タブ幅を表す整数のコレクション。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-233">A collection of integers representing the tab widths.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-234">整数配列には、タブ空間が昇順で格納されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-234">The integer array contains the tab spaces in ascending order.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultItemHeight">
      <MemberSignature Language="C#" Value="public const int DefaultItemHeight = 13;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DefaultItemHeight = (13)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ListBox.DefaultItemHeight" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultItemHeight As Integer  = 13" />
      <MemberSignature Language="C++ CLI" Value="public: int DefaultItemHeight = 13;" />
      <MemberSignature Language="F#" Value="val mutable DefaultItemHeight : int" Usage="System.Windows.Forms.ListBox.DefaultItemHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-235">オーナー描画 <see cref="T:System.Windows.Forms.ListBox" /> の既定の項目の高さを指定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-235">Specifies the default item height for an owner-drawn <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.ListBox.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-236">コントロールの既定のサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-236">Gets the default size of the control.</span></span></summary>
        <value><span data-ttu-id="1fbb4-237">コントロールの既定の <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-237">The default <see cref="T:System.Drawing.Size" /> of the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListBox.DrawItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawItem As DrawItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawItemEventHandler ^ DrawItem;" />
      <MemberSignature Language="F#" Value="member this.DrawItem : System.Windows.Forms.DrawItemEventHandler " Usage="member this.DrawItem : System.Windows.Forms.DrawItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-238">オーナー描画 <see cref="T:System.Windows.Forms.ListBox" /> のビジュアルな部分を変更すると発生します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-238">Occurs when a visual aspect of an owner-drawn <see cref="T:System.Windows.Forms.ListBox" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-239">このイベントは、オーナー描画 <xref:System.Windows.Forms.ListBox> によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-239">This event is used by an owner-drawn <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-240">イベントは、<xref:System.Windows.Forms.ListBox.DrawMode%2A> プロパティが `DrawMode.OwnerDrawFixed` または `DrawMode.OwnerDrawVariable`に設定されている場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-240">The event is only raised when the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is set to `DrawMode.OwnerDrawFixed` or `DrawMode.OwnerDrawVariable`.</span></span> <span data-ttu-id="1fbb4-241">このイベントを使用して、<xref:System.Windows.Forms.ListBox>に項目を描画するために必要なタスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-241">You can use this event to perform the tasks needed to draw items in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-242">可変サイズの項目がある場合 (<xref:System.Windows.Forms.ListBox.DrawMode%2A> プロパティが `DrawMode.OwnerDrawVariable`に設定されている場合)、項目を描画する前に、<xref:System.Windows.Forms.ListBox.MeasureItem> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-242">If you have a variable-sized item (when the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is set to `DrawMode.OwnerDrawVariable`), before drawing an item, the <xref:System.Windows.Forms.ListBox.MeasureItem> event is raised.</span></span> <span data-ttu-id="1fbb4-243"><xref:System.Windows.Forms.ListBox.MeasureItem> イベントのイベントハンドラーを作成して、<xref:System.Windows.Forms.ListBox.DrawItem> イベントのイベントハンドラーに描画する項目のサイズを指定することができます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-243">You can create an event handler for the <xref:System.Windows.Forms.ListBox.MeasureItem> event to specify the size for the item that you are going to draw in your event handler for the <xref:System.Windows.Forms.ListBox.DrawItem> event.</span></span>  
  
 <span data-ttu-id="1fbb4-244">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-244">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-245">次のコード例は、オーナー描画の <xref:System.Windows.Forms.ListBox> 項目を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-245">The following code example demonstrates how to create owner-drawn <xref:System.Windows.Forms.ListBox> items.</span></span> <span data-ttu-id="1fbb4-246">このコードでは、<xref:System.Windows.Forms.ListBox.DrawMode%2A> プロパティを使用して、描画される項目が固定サイズであることを指定し、<xref:System.Windows.Forms.ListBox.DrawItem> イベントを使用して各項目の描画を <xref:System.Windows.Forms.ListBox>に実行します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-246">The code uses the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to specify that the items drawn are fixed sized and the <xref:System.Windows.Forms.ListBox.DrawItem> event to perform the drawing of each item into the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-247">このコード例では、イベントハンドラーにパラメーターとして渡された <xref:System.Windows.Forms.DrawItemEventArgs> クラスのプロパティとメソッドを使用して、項目を描画します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-247">The example code uses the properties and methods of the <xref:System.Windows.Forms.DrawItemEventArgs> class passed as a parameter to the event handler to draw the items.</span></span> <span data-ttu-id="1fbb4-248">この例では、`listBox1` と呼ばれる <xref:System.Windows.Forms.ListBox> コントロールがフォームに追加されており、<xref:System.Windows.Forms.ListBox.DrawItem> イベントがコード例で定義されているイベントハンドラーによって処理される必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-248">This example requires that a <xref:System.Windows.Forms.ListBox> control called `listBox1` has been added to a form and that the <xref:System.Windows.Forms.ListBox.DrawItem> event is handled by the event handler defined in the example code.</span></span> <span data-ttu-id="1fbb4-249">また、この例では、項目が "Apple"、"オレンジ"、および "Plum" という順序で <xref:System.Windows.Forms.ListBox> に追加されている必要もあります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-249">The example also requires that items have been added to the <xref:System.Windows.Forms.ListBox> with the text of "Apple", "Orange", and "Plum" in that order.</span></span>  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DrawMode">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DrawMode DrawMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DrawMode DrawMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.DrawMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DrawMode As DrawMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DrawMode DrawMode { System::Windows::Forms::DrawMode get(); void set(System::Windows::Forms::DrawMode value); };" />
      <MemberSignature Language="F#" Value="member this.DrawMode : System.Windows.Forms.DrawMode with get, set" Usage="System.Windows.Forms.ListBox.DrawMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-250">コントロールの描画モードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-250">Gets or sets the drawing mode for the control.</span></span></summary>
        <value><span data-ttu-id="1fbb4-251">コントロールの項目を描画するときのモードを表す <see cref="T:System.Windows.Forms.DrawMode" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-251">One of the <see cref="T:System.Windows.Forms.DrawMode" /> values representing the mode for drawing the items of the control.</span></span> <span data-ttu-id="1fbb4-252">既定値は、<see langword="DrawMode.Normal" /> です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-252">The default is <see langword="DrawMode.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1fbb4-253">次のコード例は、オーナー描画の <xref:System.Windows.Forms.ListBox> 項目を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-253">The following code example demonstrates how to create owner-drawn <xref:System.Windows.Forms.ListBox> items.</span></span> <span data-ttu-id="1fbb4-254">このコードでは、<xref:System.Windows.Forms.ListBox.DrawMode%2A> プロパティを使用して、描画される項目が固定サイズであることを指定し、<xref:System.Windows.Forms.ListBox.DrawItem> イベントを使用して各項目の描画を <xref:System.Windows.Forms.ListBox>に実行します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-254">The code uses the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to specify that the items drawn are fixed sized and the <xref:System.Windows.Forms.ListBox.DrawItem> event to perform the drawing of each item into the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-255">このコード例では、イベントハンドラーにパラメーターとして渡された <xref:System.Windows.Forms.DrawItemEventArgs> クラスのプロパティとメソッドを使用して、項目を描画します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-255">The example code uses the properties and methods of the <xref:System.Windows.Forms.DrawItemEventArgs> class passed as a parameter to the event handler to draw the items.</span></span> <span data-ttu-id="1fbb4-256">この例では、`listBox1` と呼ばれる <xref:System.Windows.Forms.ListBox> コントロールがフォームに追加されており、<xref:System.Windows.Forms.ListBox.DrawItem> イベントがコード例で定義されているイベントハンドラーによって処理される必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-256">This example requires that a <xref:System.Windows.Forms.ListBox> control called `listBox1` has been added to a form and that the <xref:System.Windows.Forms.ListBox.DrawItem> event is handled by the event handler defined in the example code.</span></span> <span data-ttu-id="1fbb4-257">また、この例では、項目が "Apple"、"オレンジ"、および "Plum" という順序で <xref:System.Windows.Forms.ListBox> に追加されている必要もあります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-257">The example also requires that items have been added to the <xref:System.Windows.Forms.ListBox> with the text of "Apple", "Orange", and "Plum" in that order.</span></span>  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="1fbb4-258">プロパティに割り当てられている値は <see cref="T:System.Windows.Forms.DrawMode" /> 列挙体のメンバーではありません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-258">The value assigned to the property is not a member of the <see cref="T:System.Windows.Forms.DrawMode" /> enumeration.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fbb4-259">複数列の <see cref="T:System.Windows.Forms.ListBox" /> の高さは可変にできません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-259">A multicolumn <see cref="T:System.Windows.Forms.ListBox" /> cannot have a variable-sized height.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DrawMode" />
        <altmember cref="E:System.Windows.Forms.ListBox.DrawItem" />
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.EndUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUpdate();" />
      <MemberSignature Language="F#" Value="member this.EndUpdate : unit -&gt; unit" Usage="listBox.EndUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fbb4-260"><see cref="T:System.Windows.Forms.ListBox" /> メソッドによって描画が中断された後、<see cref="M:System.Windows.Forms.ListBox.BeginUpdate" /> コントロールの描画を再開します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-260">Resumes painting the <see cref="T:System.Windows.Forms.ListBox" /> control after painting is suspended by the <see cref="M:System.Windows.Forms.ListBox.BeginUpdate" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-261"><xref:System.Windows.Forms.ListBox> に項目を追加するには、<xref:System.Windows.Forms.ListBox>の <xref:System.Windows.Forms.ListBox.Items%2A> プロパティを使用して <xref:System.Windows.Forms.ListBox.ObjectCollection> クラスの <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> メソッドを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-261">The preferred way to add items to the <xref:System.Windows.Forms.ListBox> is to use the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class (through the <xref:System.Windows.Forms.ListBox.Items%2A> property of the <xref:System.Windows.Forms.ListBox>).</span></span> <span data-ttu-id="1fbb4-262">これにより、リストに項目の配列を一度に追加できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-262">This enables you to add an array of items to the list at one time.</span></span> <span data-ttu-id="1fbb4-263">ただし、<xref:System.Windows.Forms.ListBox.ObjectCollection> クラスの <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> メソッドを使用して一度に1つずつ項目を追加する場合は、<xref:System.Windows.Forms.ListBox.BeginUpdate%2A> メソッドを使用して、リストに項目が追加されるたびに、コントロールが <xref:System.Windows.Forms.ListBox> を再描画しないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-263">However, if you want to add items one at a time using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class, you can use the <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> method to prevent the control from repainting the <xref:System.Windows.Forms.ListBox> each time an item is added to the list.</span></span> <span data-ttu-id="1fbb4-264">リストに項目を追加するタスクを完了したら、<xref:System.Windows.Forms.ListBox.EndUpdate%2A> メソッドを呼び出して、<xref:System.Windows.Forms.ListBox> を再描画できるようにします。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-264">Once you have completed the task of adding items to the list, call the <xref:System.Windows.Forms.ListBox.EndUpdate%2A> method to enable the <xref:System.Windows.Forms.ListBox> to repaint.</span></span> <span data-ttu-id="1fbb4-265">このように項目を追加すると、多数の項目がリストに追加されている場合に、<xref:System.Windows.Forms.ListBox> の flickered 描画を防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-265">This way of adding items can prevent flickered drawing of the <xref:System.Windows.Forms.ListBox> when a large number of items are being added to the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-266">次のコード例では、<xref:System.Windows.Forms.ListBox>に5000項目を追加するときに、<xref:System.Windows.Forms.ListBox.BeginUpdate%2A> メソッドと <xref:System.Windows.Forms.ListBox.EndUpdate%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-266">The following code example uses the <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ListBox.EndUpdate%2A> methods while adding five thousand items to a <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-267">この例では、`listBox1`という名前の <xref:System.Windows.Forms.ListBox> コントロールが <xref:System.Windows.Forms.Form> に追加され、このメソッドがフォーム内に配置され、このメソッドから呼び出されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-267">This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a <xref:System.Windows.Forms.Form> and that this method is placed within the form and called from it.</span></span>  
  
 [!code-cpp[Classic ListBox.BeginUpdate Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ListBox.BeginUpdate Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ListBox.BeginUpdate Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ListBox.BeginUpdate Example/CS/source.cs#1)]
 [!code-vb[Classic ListBox.BeginUpdate Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ListBox.BeginUpdate Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.BeginUpdate" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindString">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1fbb4-268"><see cref="T:System.Windows.Forms.ListBox" /> 内で、指定した文字列で始まる最初の項目を検索します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-268">Finds the first item in the <see cref="T:System.Windows.Forms.ListBox" /> that starts with the specified string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindString">
      <MemberSignature Language="C#" Value="public int FindString (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindString(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.FindString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindString (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindString(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.FindString : string -&gt; int" Usage="listBox.FindString s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="1fbb4-269">検索するテキストです。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-269">The text to search for.</span></span></param>
        <summary><span data-ttu-id="1fbb4-270"><see cref="T:System.Windows.Forms.ListBox" /> 内で、指定した文字列で始まる最初の項目を検索します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-270">Finds the first item in the <see cref="T:System.Windows.Forms.ListBox" /> that starts with the specified string.</span></span></summary>
        <returns><span data-ttu-id="1fbb4-271">最初に見つかった項目の 0 から始まるインデックス番号。一致する項目が見つからない場合は <see langword="ListBox.NoMatches" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-271">The zero-based index of the first item found; returns <see langword="ListBox.NoMatches" /> if no match is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-272">このメソッドで実行される検索では、大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-272">The search performed by this method is not case-sensitive.</span></span> <span data-ttu-id="1fbb4-273">検索では、指定された検索文字列パラメーターに部分的に一致する単語を検索し、`s`します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-273">The search looks for words that partially match the specified search string parameter, `s`.</span></span> <span data-ttu-id="1fbb4-274">このメソッドを使用すると、指定した文字列に一致する最初の項目を検索できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-274">You can use this method to search for the first item that matches the specified string.</span></span> <span data-ttu-id="1fbb4-275">その後、<xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> メソッドを使用して、または項目のテキストを変更することで、検索テキストを含む項目を削除するなどのタスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-275">You can then perform tasks such as removing the item that contains the search text by using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> method or changing the item's text.</span></span> <span data-ttu-id="1fbb4-276">指定したテキストが見つかったら、<xref:System.Windows.Forms.ListBox>内のテキストの他のインスタンスを検索する場合は、<xref:System.Windows.Forms.ListBox>内の開始インデックスを指定するためのパラメーターを提供するバージョンの <xref:System.Windows.Forms.ListBox.FindString%2A> メソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-276">Once you have found the specified text, if you want to search for other instances of the text in the <xref:System.Windows.Forms.ListBox>, you can use the version of the <xref:System.Windows.Forms.ListBox.FindString%2A> method that provides a parameter for specifying a starting index within the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-277">部分一致ではなく完全一致する単語の検索を実行する場合は、<xref:System.Windows.Forms.ListBox.FindStringExact%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-277">If you want to perform a search for an exact word match instead of a partial match, use the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-278">次のコード例は、<xref:System.Windows.Forms.ListBox.FindString%2A> メソッドを使用して、<xref:System.Windows.Forms.ListBox>内の文字列の最初のインスタンスを検索する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-278">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindString%2A> method to search for the first instance of a string in a <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-279">検索文字列に一致する項目が見つからない場合 <xref:System.Windows.Forms.ListBox.FindString%2A> は-1 の値を返し、例では <xref:System.Windows.Forms.MessageBox>を表示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-279">If no items are found that match the search string <xref:System.Windows.Forms.ListBox.FindString%2A> returns a -1 value and the example displays a <xref:System.Windows.Forms.MessageBox>.</span></span> <span data-ttu-id="1fbb4-280">検索テキストに一致する項目が見つかった場合、この例では、<xref:System.Windows.Forms.ListBox.SetSelected%2A> メソッドを使用して、<xref:System.Windows.Forms.ListBox>内の項目を選択します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-280">If an item is found that matches the search text, the example uses the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method to select the item in the <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 [!code-cpp[ListBox.FindString2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.FindString2/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.FindString2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.FindString2/CS/form1.cs#1)]
 [!code-vb[ListBox.FindString2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.FindString2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1fbb4-281"><paramref name="s" /> パラメーターの値が -1 未満か項目数以上です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-281">The value of the <paramref name="s" /> parameter is less than -1 or greater than or equal to the item count.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.ListBox.FindStringExact(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FindString">
      <MemberSignature Language="C#" Value="public int FindString (string s, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindString(string s, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.FindString(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindString (s As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindString(System::String ^ s, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindString : string * int -&gt; int" Usage="listBox.FindString (s, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="1fbb4-282">検索するテキストです。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-282">The text to search for.</span></span></param>
        <param name="startIndex"><span data-ttu-id="1fbb4-283">最初の検索対象項目の前にある項目の 0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-283">The zero-based index of the item before the first item to be searched.</span></span> <span data-ttu-id="1fbb4-284">コントロールの先頭から検索する場合は -1 に設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-284">Set to negative one (-1) to search from the beginning of the control.</span></span></param>
        <summary><span data-ttu-id="1fbb4-285"><see cref="T:System.Windows.Forms.ListBox" /> 内で、指定した文字列で始まる最初の項目を検索します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-285">Finds the first item in the <see cref="T:System.Windows.Forms.ListBox" /> that starts with the specified string.</span></span> <span data-ttu-id="1fbb4-286">指定した開始インデックスから検索が開始します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-286">The search starts at a specific starting index.</span></span></summary>
        <returns><span data-ttu-id="1fbb4-287">最初に見つかった項目の 0 から始まるインデックス番号。一致する項目が見つからない場合は <see langword="ListBox.NoMatches" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-287">The zero-based index of the first item found; returns <see langword="ListBox.NoMatches" /> if no match is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-288">このメソッドで実行される検索では、大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-288">The search performed by this method is not case-sensitive.</span></span> <span data-ttu-id="1fbb4-289">検索では、指定された検索文字列パラメーターに部分的に一致する単語を検索し、`s`します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-289">The search looks for words that partially match the specified search string parameter, `s`.</span></span> <span data-ttu-id="1fbb4-290">このメソッドを使用すると、<xref:System.Windows.Forms.ListBox>の項目リスト内で指定した開始インデックス位置にある、指定した文字列に一致する最初の項目を検索できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-290">You can use this method to search for the first item that matches the specified string at the specified starting index within the list of items for the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-291">その後、<xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> メソッドを使用して、または項目のテキストを変更することで、検索テキストを含む項目を削除するなどのタスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-291">You can then perform tasks such as removing the item that contains the search text by using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> method or changing the item's text.</span></span> <span data-ttu-id="1fbb4-292">このメソッドは、通常、開始インデックスを指定しないバージョンのこのメソッドを使用して呼び出しが行われた後に使用されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-292">This method is typically used after a call has been made using the version of this method that does not specify a starting index.</span></span> <span data-ttu-id="1fbb4-293">リストに最初の項目が見つかったら、通常、このメソッドを使用して、検索テキストの最初に見つかったインスタンスの後にある項目の `startIndex` パラメーターでインデックス位置を指定することで、検索テキストのインスタンスをさらに検索します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-293">Once an initial item has been found in the list, this method is typically used to find further instances of the search text by specifying the index position in the `startIndex` parameter of the item after the first found instance of the search text.</span></span> <span data-ttu-id="1fbb4-294">部分一致ではなく完全一致する単語の検索を実行する場合は、<xref:System.Windows.Forms.ListBox.FindStringExact%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-294">If you want to perform a search for an exact word match instead of a partial match, use the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fbb4-295">検索が <xref:System.Windows.Forms.ListBox>の下部に達すると、<xref:System.Windows.Forms.ListBox> の先頭から `startIndex` パラメーターで指定された項目まで検索が続行されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-295">When the search reaches the bottom of the <xref:System.Windows.Forms.ListBox>, it continues searching from the top of the <xref:System.Windows.Forms.ListBox> back to the item specified by the `startIndex` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-296">次のコード例は、<xref:System.Windows.Forms.ListBox.FindString%2A> メソッドを使用して、<xref:System.Windows.Forms.ListBox>の項目内の検索テキストのすべてのインスタンスを検索する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-296">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindString%2A> method to search for all instances of the search text in the items of the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-297">この例では、<xref:System.Windows.Forms.ListBox.FindString%2A> メソッドのバージョンを使用します。これを使用すると、<xref:System.Windows.Forms.ListBox> 内のすべての項目を連続して検索するための開始検索インデックスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-297">The example uses the version of the <xref:System.Windows.Forms.ListBox.FindString%2A> method that enables you to specify a starting search index from which to do a continual search of all items in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-298">また、この例では、<xref:System.Windows.Forms.ListBox.FindString%2A> のメソッドが項目リストの一番下に達した後にリストの先頭から検索を開始するタイミングを決定して、再帰的な検索を防止する方法も示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-298">The example also demonstrates how to determine when the <xref:System.Windows.Forms.ListBox.FindString%2A> method begins searching from the top of the list after it reaches the bottom of the list of items to prevent a recursive search.</span></span> <span data-ttu-id="1fbb4-299"><xref:System.Windows.Forms.ListBox>に項目が見つかると、<xref:System.Windows.Forms.ListBox.SetSelected%2A> メソッドを使用して項目が選択されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-299">Once items are found in the <xref:System.Windows.Forms.ListBox>, they are selected using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.</span></span>  
  
 [!code-cpp[ListBox.FindString#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.FindString/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.FindString#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.FindString/CS/form1.cs#1)]
 [!code-vb[ListBox.FindString#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.FindString/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1fbb4-300"><paramref name="startIndex" /> パラメーターの値がゼロ未満か、<see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> クラスの <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> プロパティの値以上です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-300">The <paramref name="startIndex" /> parameter is less than zero or greater than or equal to the value of the <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> property of the <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> class.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.ListBox.FindStringExact(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Contains(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindStringExact">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1fbb4-301"><see cref="T:System.Windows.Forms.ListBox" /> 内で、指定した文字列と正確に一致する最初の項目を検索します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-301">Finds the first item in the <see cref="T:System.Windows.Forms.ListBox" /> that exactly matches the specified string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindStringExact">
      <MemberSignature Language="C#" Value="public int FindStringExact (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindStringExact(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.FindStringExact(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindStringExact (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindStringExact(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.FindStringExact : string -&gt; int" Usage="listBox.FindStringExact s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="1fbb4-302">検索するテキストです。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-302">The text to search for.</span></span></param>
        <summary><span data-ttu-id="1fbb4-303"><see cref="T:System.Windows.Forms.ListBox" /> 内で、指定した文字列と正確に一致する最初の項目を検索します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-303">Finds the first item in the <see cref="T:System.Windows.Forms.ListBox" /> that exactly matches the specified string.</span></span></summary>
        <returns><span data-ttu-id="1fbb4-304">最初に見つかった項目の 0 から始まるインデックス番号。一致する項目が見つからない場合は <see langword="ListBox.NoMatches" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-304">The zero-based index of the first item found; returns <see langword="ListBox.NoMatches" /> if no match is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-305">このメソッドで実行される検索では、大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-305">The search performed by this method is not case-sensitive.</span></span> <span data-ttu-id="1fbb4-306">検索では、検索文字列パラメーターに指定されている単語と完全に一致するものを検索 `s`ます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-306">The search looks for an exact match to the words specified in the search string parameter, `s`.</span></span> <span data-ttu-id="1fbb4-307">このメソッドを使用すると、指定した文字列に一致する最初の項目を検索できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-307">You can use this method to search for the first item that matches the specified string.</span></span> <span data-ttu-id="1fbb4-308">その後、<xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> メソッドを使用して、または項目のテキストを変更することで、検索テキストを含む項目を削除するなどのタスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-308">You can then perform tasks such as removing the item that contains the search text by using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> method or changing the item's text.</span></span> <span data-ttu-id="1fbb4-309">指定したテキストが見つかったら、<xref:System.Windows.Forms.ListBox>内のテキストの他のインスタンスを検索する場合は、<xref:System.Windows.Forms.ListBox>内の開始インデックスを指定するためのパラメーターを提供するバージョンの <xref:System.Windows.Forms.ListBox.FindStringExact%2A> メソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-309">Once you have found the specified text, if you want to search for other instances of the text in the <xref:System.Windows.Forms.ListBox>, you can use the version of the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method that provides a parameter for specifying a starting index within the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-310">単語の完全一致ではなく部分的な検索を実行する場合は、<xref:System.Windows.Forms.ListBox.FindString%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-310">If you want to perform partial word search instead of an exact word match, use the <xref:System.Windows.Forms.ListBox.FindString%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-311">次のコード例は、<xref:System.Windows.Forms.ListBox.FindStringExact%2A?displayProperty=nameWithType> メソッドを使用して、指定した文字列と完全に一致する項目を <xref:System.Windows.Forms.ListBox> コントロールで検索する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-311">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindStringExact%2A?displayProperty=nameWithType> method to search a <xref:System.Windows.Forms.ListBox> control for an item that exactly matches a specified string.</span></span> <span data-ttu-id="1fbb4-312">検索文字列に一致する項目が見つからない場合、<xref:System.Windows.Forms.ListBox.FindStringExact%2A> は-1 値を返し、例では <xref:System.Windows.Forms.MessageBox>を表示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-312">If no items are found that match the search string, <xref:System.Windows.Forms.ListBox.FindStringExact%2A> returns a -1 value and the example displays a <xref:System.Windows.Forms.MessageBox>.</span></span> <span data-ttu-id="1fbb4-313">検索テキストに一致する項目が見つかった場合、この例では、<xref:System.Windows.Forms.ListBox.SetSelected%2A> メソッドを使用して、<xref:System.Windows.Forms.ListBox>内の項目を選択します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-313">If an item is found that matches the search text, the example uses the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method to select the item in the <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 [!code-cpp[ListBox.FindStringExact#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.FindStringExact/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.FindStringExact#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.FindStringExact/CS/form1.cs#1)]
 [!code-vb[ListBox.FindStringExact#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.FindStringExact/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.FindString(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FindStringExact">
      <MemberSignature Language="C#" Value="public int FindStringExact (string s, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindStringExact(string s, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.FindStringExact(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindStringExact (s As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindStringExact(System::String ^ s, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindStringExact : string * int -&gt; int" Usage="listBox.FindStringExact (s, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="1fbb4-314">検索するテキストです。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-314">The text to search for.</span></span></param>
        <param name="startIndex"><span data-ttu-id="1fbb4-315">最初の検索対象項目の前にある項目の 0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-315">The zero-based index of the item before the first item to be searched.</span></span> <span data-ttu-id="1fbb4-316">コントロールの先頭から検索する場合は -1 に設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-316">Set to negative one (-1) to search from the beginning of the control.</span></span></param>
        <summary><span data-ttu-id="1fbb4-317"><see cref="T:System.Windows.Forms.ListBox" /> 内で、指定した文字列と正確に一致する最初の項目を検索します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-317">Finds the first item in the <see cref="T:System.Windows.Forms.ListBox" /> that exactly matches the specified string.</span></span> <span data-ttu-id="1fbb4-318">指定した開始インデックスから検索が開始します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-318">The search starts at a specific starting index.</span></span></summary>
        <returns><span data-ttu-id="1fbb4-319">最初に見つかった項目の 0 から始まるインデックス番号。一致する項目が見つからない場合は <see langword="ListBox.NoMatches" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-319">The zero-based index of the first item found; returns <see langword="ListBox.NoMatches" /> if no match is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-320">このメソッドで実行される検索では、大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-320">The search performed by this method is not case-sensitive.</span></span> <span data-ttu-id="1fbb4-321">検索では、指定された検索文字列パラメーターと完全に一致する単語を検索し、`s`します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-321">The search looks for words that exactly match the specified search string parameter, `s`.</span></span> <span data-ttu-id="1fbb4-322">このメソッドを使用すると、<xref:System.Windows.Forms.ListBox>の項目リスト内で指定した開始インデックス位置にある、指定した文字列に一致する最初の項目を検索できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-322">You can use this method to search for the first item that matches the specified string at the specified starting index within the list of items for the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-323">その後、<xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> メソッドを使用して検索テキストを含む項目を削除したり、項目のテキストを変更したりするなどのタスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-323">You can then perform tasks such as removing the item that contains the search text using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> method or change the item's text.</span></span> <span data-ttu-id="1fbb4-324">このメソッドは、通常、開始インデックスを指定しないバージョンのこのメソッドを使用して呼び出しが行われた後に使用されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-324">This method is typically used after a call has been made using the version of this method that does not specify a starting index.</span></span> <span data-ttu-id="1fbb4-325">リストに最初の項目が見つかったら、通常、このメソッドを使用して、検索テキストの最初に見つかったインスタンスの後にある項目の `startIndex` パラメーターでインデックス位置を指定することで、検索テキストのインスタンスをさらに検索します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-325">Once an initial item has been found in the list, this method is typically used to find further instances of the search text by specifying the index position in the `startIndex` parameter of the item after the first found instance of the search text.</span></span> <span data-ttu-id="1fbb4-326">単語の完全一致ではなく一部の単語検索を実行する場合は、<xref:System.Windows.Forms.ListBox.FindString%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-326">If you want to perform a partial word search instead of an exact word match, use the <xref:System.Windows.Forms.ListBox.FindString%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fbb4-327">検索が <xref:System.Windows.Forms.ListBox>の下部に達すると、<xref:System.Windows.Forms.ListBox> の先頭から `startIndex` パラメーターで指定された項目まで検索が続行されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-327">When the search reaches the bottom of the <xref:System.Windows.Forms.ListBox>, it continues searching from the top of the <xref:System.Windows.Forms.ListBox> back to the item specified by the `startIndex` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-328">次のコード例は、<xref:System.Windows.Forms.ListBox.FindStringExact%2A> メソッドを使用して、指定した検索テキストと完全に一致する <xref:System.Windows.Forms.ListBox> 内のすべての項目を検索する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-328">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method to search for all items in a <xref:System.Windows.Forms.ListBox> that exactly match the specified search text.</span></span> <span data-ttu-id="1fbb4-329">この例では、<xref:System.Windows.Forms.ListBox.FindStringExact%2A> メソッドのバージョンを使用します。これを使用すると、<xref:System.Windows.Forms.ListBox> 内のすべての項目を連続して検索するための開始検索インデックスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-329">The example uses the version of the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method that enables you to specify a starting search index from which to do a continual search of all items in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-330">また、この例では、<xref:System.Windows.Forms.ListBox.FindStringExact%2A> メソッドが項目リストの一番下に達した後にリストの先頭から検索を開始するタイミングを判断し、再帰的な検索を回避する方法も示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-330">The example also demonstrates how to determine when the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method begins searching from the top of the list after it reaches the bottom of the list of items, to prevent a recursive search.</span></span> <span data-ttu-id="1fbb4-331"><xref:System.Windows.Forms.ListBox>に項目が見つかると、<xref:System.Windows.Forms.ListBox.SetSelected%2A> メソッドを使用して項目が選択されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-331">Once items are found in the <xref:System.Windows.Forms.ListBox>, they are selected using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.</span></span>  
  
 [!code-cpp[ListBox.FindStringExact2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.FindStringExact2/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.FindStringExact2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.FindStringExact2/CS/form1.cs#1)]
 [!code-vb[ListBox.FindStringExact2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.FindStringExact2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1fbb4-332"><paramref name="startIndex" /> パラメーターの値がゼロ未満か、<see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> クラスの <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> プロパティの値以上です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-332">The <paramref name="startIndex" /> parameter is less than zero or greater than or equal to the value of the <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> property of the <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> class.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.ListBox.FindString(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.ListBox.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-333">コントロールによって表示されるテキストのフォントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-333">Gets or sets the font of the text displayed by the control.</span></span></summary>
        <value><span data-ttu-id="1fbb4-334">コントロールによって表示されるテキストに適用される <see cref="T:System.Drawing.Font" /> 。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-334">The <see cref="T:System.Drawing.Font" /> to apply to the text displayed by the control.</span></span> <span data-ttu-id="1fbb4-335">既定値は <see cref="P:System.Windows.Forms.Control.DefaultFont" /> プロパティの値です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-335">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont" /> property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ListBox.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-336">コントロールの前景色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-336">Gets or sets the foreground color of the control.</span></span></summary>
        <value><span data-ttu-id="1fbb4-337">コントロールの前景の <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-337">The foreground <see cref="T:System.Drawing.Color" /> of the control.</span></span> <span data-ttu-id="1fbb4-338">既定値は <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> プロパティの値です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-338">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemHeight">
      <MemberSignature Language="C#" Value="public int GetItemHeight (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetItemHeight(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.GetItemHeight(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemHeight (index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetItemHeight(int index);" />
      <MemberSignature Language="F#" Value="member this.GetItemHeight : int -&gt; int" Usage="listBox.GetItemHeight index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="1fbb4-339">高さが返される項目の 0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-339">The zero-based index of the item to return the height for.</span></span></param>
        <summary><span data-ttu-id="1fbb4-340"><see cref="T:System.Windows.Forms.ListBox" /> 内の項目の高さを返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-340">Returns the height of an item in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <returns><span data-ttu-id="1fbb4-341">指定した項目の高さ (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-341">The height, in pixels, of the specified item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-342"><xref:System.Windows.Forms.ListBox.DrawMode%2A> プロパティが `DrawMode.OwnerDrawVariable`に設定されていない場合、standard <xref:System.Windows.Forms.ListBox> 内のすべての項目のサイズが同じであるため、index パラメーターの値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-342">If the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is not set to `DrawMode.OwnerDrawVariable`, the value of the index parameter is ignored because all items in a standard <xref:System.Windows.Forms.ListBox> are the same size.</span></span> <span data-ttu-id="1fbb4-343">オーナー描画 <xref:System.Windows.Forms.ListBox> を使用して <xref:System.Windows.Forms.ListBox>内の項目のサイズを決定するときに、このプロパティを使用できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-343">You can use this property when you are using an owner-drawn <xref:System.Windows.Forms.ListBox> to determine the size of any item within the <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1fbb4-344"><paramref name="index" /> パラメーターで指定された値が 0 未満か、項目数より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-344">The specified value of the <paramref name="index" /> parameter is less than zero or greater than the item count.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetItemRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetItemRectangle (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetItemRectangle(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.GetItemRectangle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemRectangle (index As Integer) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetItemRectangle(int index);" />
      <MemberSignature Language="F#" Value="member this.GetItemRectangle : int -&gt; System.Drawing.Rectangle" Usage="listBox.GetItemRectangle index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="1fbb4-345">外接する四角形が返される項目の 0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-345">The zero-based index of item whose bounding rectangle you want to return.</span></span></param>
        <summary><span data-ttu-id="1fbb4-346"><see cref="T:System.Windows.Forms.ListBox" /> 内の項目の外接する四角形を返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-346">Returns the bounding rectangle for an item in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <returns><span data-ttu-id="1fbb4-347">指定した項目の外接する四角形を表す <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-347">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle for the specified item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-348">`index` パラメーターで指定した項目が表示されない場合、このメソッドによって返される四角形は、コントロールの表示部分の外側に配置されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-348">If the item specified in the `index` parameter is not visible, the rectangle returned by this method will be outside the visible portion of the control.</span></span> <span data-ttu-id="1fbb4-349">このメソッドを使用して、リスト内の項目のサイズと位置を決定できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-349">You can use this method to determine the size and position of an item within the list.</span></span> <span data-ttu-id="1fbb4-350">項目の高さ (特に可変高さのオーナー描画リスト項目) を取得するには、<xref:System.Windows.Forms.ListBox.GetItemHeight%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-350">To get the height of an item, especially a variable-height owner drawn list item, you can use the <xref:System.Windows.Forms.ListBox.GetItemHeight%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1fbb4-351"><paramref name="index" /> パラメーターの値がゼロ未満か、<see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> クラスの <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> プロパティの値以上です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-351">The <paramref name="index" /> parameter is less than zero or greater than or equal to the value of the <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> property of the <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetScaledBounds">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Rectangle GetScaledBounds(valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetScaledBounds (bounds As Rectangle, factor As SizeF, specified As BoundsSpecified) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Rectangle GetScaledBounds(System::Drawing::Rectangle bounds, System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.GetScaledBounds : System.Drawing.Rectangle * System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; System.Drawing.Rectangle" Usage="listBox.GetScaledBounds (bounds, factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="factor" Type="System.Drawing.SizeF" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="bounds"><span data-ttu-id="1fbb4-352">ディスプレイの範囲の取得条件となる領域を指定する <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-352">A <see cref="T:System.Drawing.Rectangle" /> that specifies the area for which to retrieve the display bounds.</span></span></param>
        <param name="factor"><span data-ttu-id="1fbb4-353">コントロールの境界の高さおよび幅。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-353">The height and width of the control's bounds.</span></span></param>
        <param name="specified"><span data-ttu-id="1fbb4-354">コントロールのサイズと位置を定義するときに使用するコントロールの境界を指定する <see cref="T:System.Windows.Forms.BoundsSpecified" /> の値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-354">One of the values of <see cref="T:System.Windows.Forms.BoundsSpecified" /> that specifies the bounds of the control to use when defining its size and position.</span></span></param>
        <summary><span data-ttu-id="1fbb4-355"><see cref="T:System.Windows.Forms.ListBox" /> のスケールが設定される境界を取得します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-355">Retrieves the bounds within which the <see cref="T:System.Windows.Forms.ListBox" /> is scaled.</span></span></summary>
        <returns><span data-ttu-id="1fbb4-356">コントロールのスケールが設定される境界を表す <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-356">A <see cref="T:System.Drawing.Rectangle" /> representing the bounds within which the control is scaled.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-357"><xref:System.Windows.Forms.ListBox> クラスは <xref:System.Windows.Forms.Control.GetScaledBounds%2A?displayProperty=nameWithType> メソッドをオーバーライドして、要求された高さが現在の高さではなく拡大縮小されるようにします。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-357">The <xref:System.Windows.Forms.ListBox> class overrides the <xref:System.Windows.Forms.Control.GetScaledBounds%2A?displayProperty=nameWithType> method to ensure that the requested height is scaled rather than the current height.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelected">
      <MemberSignature Language="C#" Value="public bool GetSelected (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetSelected(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.GetSelected(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelected (index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetSelected(int index);" />
      <MemberSignature Language="F#" Value="member this.GetSelected : int -&gt; bool" Usage="listBox.GetSelected index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="1fbb4-358">選択されているかどうかを確認する対象となる項目の 0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-358">The zero-based index of the item that determines whether it is selected.</span></span></param>
        <summary><span data-ttu-id="1fbb4-359">指定した項目が選択されているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-359">Returns a value indicating whether the specified item is selected.</span></span></summary>
        <returns><span data-ttu-id="1fbb4-360">指定した項目が <see cref="T:System.Windows.Forms.ListBox" /> 内で現在選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-360"><see langword="true" /> if the specified item is currently selected in the <see cref="T:System.Windows.Forms.ListBox" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-361">このメソッドを使用すると、指定した項目が選択されているかどうかをすばやく判断できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-361">You can use this method to quickly determine whether a specified item is selected.</span></span> <span data-ttu-id="1fbb4-362">このメソッドは、複数選択 <xref:System.Windows.Forms.ListBox> 内の特定の項目を選択したときに特定の操作を実行する必要がある場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-362">This method is useful when a specific operation needs to be performed when a specific item in a multiple-selection <xref:System.Windows.Forms.ListBox> is selected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-363">次のコード例では、<xref:System.Windows.Forms.ListBox.GetSelected%2A> メソッドを使用して、選択されていない項目を選択し、選択されている項目の選択を解除するために <xref:System.Windows.Forms.ListBox> 内の項目を選択する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-363">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.GetSelected%2A> method to determine which items in a <xref:System.Windows.Forms.ListBox> are selected in order to select the items that are not selected and deselect the items that are selected.</span></span> <span data-ttu-id="1fbb4-364">また、この例では、<xref:System.Windows.Forms.ListBox.SelectionMode%2A> プロパティを使用して <xref:System.Windows.Forms.ListBox> に複数の項目を選択し、<xref:System.Windows.Forms.ListBox.Sorted%2A> プロパティを使用して <xref:System.Windows.Forms.ListBox> 内の項目を自動的に並べ替える方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-364">The example also demonstrates using the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property to enable a <xref:System.Windows.Forms.ListBox> to have more than one selected item and uses the <xref:System.Windows.Forms.ListBox.Sorted%2A> property to demonstrate how to sort items in a <xref:System.Windows.Forms.ListBox> automatically.</span></span> <span data-ttu-id="1fbb4-365">この例では、`listBox1`という名前の <xref:System.Windows.Forms.ListBox>がフォームに追加され、この例で定義されている `InitializeMyListBox` メソッドがフォームの <xref:System.Windows.Forms.Form.Load> イベントから呼び出されることが必要です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-365">This example requires that a <xref:System.Windows.Forms.ListBox>, named `listBox1`, has been added to a form and that the `InitializeMyListBox` method defined in the example is called from the <xref:System.Windows.Forms.Form.Load> event of the form.</span></span>  
  
 [!code-cpp[ListBox.GetSelected#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.GetSelected/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.GetSelected#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.GetSelected/CS/form1.cs#1)]
 [!code-vb[ListBox.GetSelected#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.GetSelected/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1fbb4-366"><paramref name="index" /> パラメーターの値がゼロ未満か、<see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> クラスの <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> プロパティの値以上です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-366">The <paramref name="index" /> parameter is less than zero or greater than or equal to the value of the <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> property of the <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HorizontalExtent">
      <MemberSignature Language="C#" Value="public int HorizontalExtent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HorizontalExtent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.HorizontalExtent" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalExtent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HorizontalExtent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalExtent : int with get, set" Usage="System.Windows.Forms.ListBox.HorizontalExtent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-367"><see cref="T:System.Windows.Forms.ListBox" /> の水平スクロール バーでスクロールできる幅を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-367">Gets or sets the width by which the horizontal scroll bar of a <see cref="T:System.Windows.Forms.ListBox" /> can scroll.</span></span></summary>
        <value><span data-ttu-id="1fbb4-368">水平スクロール バーでコントロールをスクロールできる幅 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-368">The width, in pixels, that the horizontal scroll bar can scroll the control.</span></span> <span data-ttu-id="1fbb4-369">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-369">The default is zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-370">このプロパティは、<xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> プロパティが `true`に設定されている場合にのみ有用な値を報告します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-370">This property only reports a useful value if the <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> property is set to `true`.</span></span> <span data-ttu-id="1fbb4-371"><xref:System.Windows.Forms.ListBox> の幅がこのプロパティの値よりも小さい場合、水平スクロールバーは <xref:System.Windows.Forms.ListBox>内の項目を水平方向にスクロールします。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-371">If the width of the <xref:System.Windows.Forms.ListBox> is smaller than the value of this property, the horizontal scroll bar horizontally scrolls items in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-372"><xref:System.Windows.Forms.ListBox> の幅がこの値以上の場合、水平スクロールバーは非表示になります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-372">If the width of the <xref:System.Windows.Forms.ListBox> is equal to or greater than this value, the horizontal scroll bar is hidden.</span></span> <span data-ttu-id="1fbb4-373">このプロパティの値は、<xref:System.Windows.Forms.ListBox>によって動的に更新されることはありません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-373">The value of this property is not dynamically updated by the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-374">このプロパティは、<xref:System.Windows.Forms.ListBox> の項目がオーナー描画の場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-374">This property is useful when the items of the <xref:System.Windows.Forms.ListBox> are owner-drawn.</span></span> <span data-ttu-id="1fbb4-375">たとえば、<xref:System.Windows.Forms.ListBox> のオーナー描画項目が200ピクセル幅で、<xref:System.Windows.Forms.ListBox> の幅が60ピクセルの場合、項目の右端をコントロールの表示領域にスクロールするために、<xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> プロパティを200に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-375">For example, if the owner drawn items of the <xref:System.Windows.Forms.ListBox> are 200 pixels wide, but the <xref:System.Windows.Forms.ListBox> is 60 pixels wide, the <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> property would need to be set to 200 in order to scroll the right edge of the items into the visible region of the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-376">次のコード例では、<xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> プロパティと <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> プロパティを使用して、<xref:System.Windows.Forms.ListBox> コントロールのすべての項目テキストを表示する水平スクロールバーを表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-376">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> and <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> properties to display a horizontal scroll bar that shows all item text in the <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="1fbb4-377">また、この例では、<xref:System.Windows.Forms.ListBox.IntegralHeight%2A> プロパティを使用して、<xref:System.Windows.Forms.ListBox> コントロールのサイズのために項目が部分的に表示されないようにしています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-377">The example also uses the <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> property to ensure that items are not partially displayed due to the size of the <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="1fbb4-378">この例では、`listBox1`という名前の <xref:System.Windows.Forms.ListBox> コントロールがフォームに追加されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-378">This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.</span></span>  
  
 [!code-cpp[ListView.HorizontalExtent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.HorizontalExtent/CPP/form1.cpp#1)]
 [!code-csharp[ListView.HorizontalExtent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.HorizontalExtent/CS/form1.cs#1)]
 [!code-vb[ListView.HorizontalExtent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.HorizontalExtent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListBox.HorizontalScrollbar" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollbar">
      <MemberSignature Language="C#" Value="public bool HorizontalScrollbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HorizontalScrollbar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.HorizontalScrollbar" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HorizontalScrollbar { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollbar : bool with get, set" Usage="System.Windows.Forms.ListBox.HorizontalScrollbar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-379">水平スクロール バーをコントロールに表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-379">Gets or sets a value indicating whether a horizontal scroll bar is displayed in the control.</span></span></summary>
        <value><span data-ttu-id="1fbb4-380">水平スクロール バーをコントロールに表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-380"><see langword="true" /> to display a horizontal scroll bar in the control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1fbb4-381">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-381">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-382"><xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> プロパティは、<xref:System.Windows.Forms.ListBox> 内の項目の幅がコントロールの右端を超えて拡張する場合に、<xref:System.Windows.Forms.ListBox> で水平スクロールバーを表示するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-382">The <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> property determines whether the <xref:System.Windows.Forms.ListBox> should display a horizontal scroll bar when the width of items within the <xref:System.Windows.Forms.ListBox> extend beyond the right edge of the control.</span></span> <span data-ttu-id="1fbb4-383">このプロパティが `true`に設定されている場合、<xref:System.Windows.Forms.ListBox>内の項目の幅に基づいて、スクロールバーが自動的に表示されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-383">When this property is set to `true`, the scroll bar is automatically displayed based on the width of items in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-384"><xref:System.Windows.Forms.ListBox> がオーナー描画 <xref:System.Windows.Forms.ListBox>の場合は、水平スクロールバーを正しく表示するために、<xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-384">If the <xref:System.Windows.Forms.ListBox> is an owner-drawn <xref:System.Windows.Forms.ListBox>, in order to properly display a horizontal scroll bar, you must set the <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-385">次のコード例では、<xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> プロパティと <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> プロパティを使用して、<xref:System.Windows.Forms.ListBox> コントロールのすべての項目テキストを表示する水平スクロールバーを表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-385">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> and <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> properties to display a horizontal scroll bar that shows all item text in the <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="1fbb4-386">また、この例では、<xref:System.Windows.Forms.ListBox.IntegralHeight%2A> プロパティを使用して、<xref:System.Windows.Forms.ListBox> コントロールのサイズのために項目が部分的に表示されないようにしています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-386">The example also uses the <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> property to ensure that items are not partially displayed due to the size of the <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="1fbb4-387">この例では、`listBox1`という名前の <xref:System.Windows.Forms.ListBox> コントロールがフォームに追加されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-387">This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.</span></span>  
  
 [!code-cpp[ListView.HorizontalExtent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.HorizontalExtent/CPP/form1.cpp#1)]
 [!code-csharp[ListView.HorizontalExtent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.HorizontalExtent/CS/form1.cs#1)]
 [!code-vb[ListView.HorizontalExtent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.HorizontalExtent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListBox.HorizontalExtent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexFromPoint">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1fbb4-388">指定した座標にある項目の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-388">Returns the zero-based index of the item at the specified coordinates.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexFromPoint">
      <MemberSignature Language="C#" Value="public int IndexFromPoint (System.Drawing.Point p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexFromPoint(valuetype System.Drawing.Point p) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IndexFromPoint(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexFromPoint (p As Point) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexFromPoint(System::Drawing::Point p);" />
      <MemberSignature Language="F#" Value="member this.IndexFromPoint : System.Drawing.Point -&gt; int" Usage="listBox.IndexFromPoint p" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="p"><span data-ttu-id="1fbb4-389">項目のインデックスを取得するために使用する座標を保持している <see cref="T:System.Drawing.Point" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-389">A <see cref="T:System.Drawing.Point" /> object containing the coordinates used to obtain the item index.</span></span></param>
        <summary><span data-ttu-id="1fbb4-390">指定した座標にある項目の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-390">Returns the zero-based index of the item at the specified coordinates.</span></span></summary>
        <returns><span data-ttu-id="1fbb4-391">指定した座標にある項目の 0 から始まるインデックス番号。一致する項目が見つからない場合は <see langword="ListBox.NoMatches" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-391">The zero-based index of the item found at the specified coordinates; returns <see langword="ListBox.NoMatches" /> if no match is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-392">このメソッドを使用すると、コントロール内の特定の位置にある項目を特定できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-392">This method enables you to determine which item is located at a specific location within the control.</span></span> <span data-ttu-id="1fbb4-393">このメソッドを使用すると、ユーザーが <xref:System.Windows.Forms.ListBox>を右クリックしたときに選択されるリスト内の項目を特定できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-393">You can use this method to determine which item within the list is selected when a user right-clicks the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-394">カーソルの位置を特定し、<xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> メソッドの `p` パラメーターに渡して、ユーザーがマウスで右クリックした項目を特定できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-394">The location of the cursor can be determined and passed to the `p` parameter of the <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method to determine which item the user right-clicked the mouse over.</span></span> <span data-ttu-id="1fbb4-395">その後、ユーザーにショートカットメニューを表示して、特定の項目に基づいてタスクや機能を提供することができます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-395">You can then display a shortcut menu to the user to provide tasks and features based on the specific item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-396">次のコード例は、<xref:System.Windows.Forms.RichTextBox> コントロールにドロップする項目を含む <xref:System.Windows.Forms.ListBox> コントロールを使用してドラッグアンドドロップ操作を実行する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-396">The following code example demonstrates how to perform drag-and-drop operations using a <xref:System.Windows.Forms.ListBox> control that contains items to drop into a <xref:System.Windows.Forms.RichTextBox> control.</span></span> <span data-ttu-id="1fbb4-397">フォームのコンストラクターは、<xref:System.Windows.Forms.RichTextBox.AllowDrop%2A> プロパティを `true` に設定して、<xref:System.Windows.Forms.RichTextBox> でドラッグアンドドロップ操作を実行できるようにします。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-397">The constructor of the form sets the <xref:System.Windows.Forms.RichTextBox.AllowDrop%2A> property to `true` to enable drag-and-drop operations to occur in the <xref:System.Windows.Forms.RichTextBox>.</span></span> <span data-ttu-id="1fbb4-398">この例では、<xref:System.Windows.Forms.ListBox> の <xref:System.Windows.Forms.Control.MouseDown> イベントを使用して、<xref:System.Windows.Forms.Control.DoDragDrop%2A> メソッドを呼び出すことによってドラッグ操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-398">The example uses the <xref:System.Windows.Forms.Control.MouseDown> event of the <xref:System.Windows.Forms.ListBox> to start the drag operation by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method.</span></span> <span data-ttu-id="1fbb4-399">この例では、<xref:System.Windows.Forms.Control.DragEnter> イベントを使用して、<xref:System.Windows.Forms.RichTextBox> にドラッグされている項目が有効なデータ型であるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-399">The example uses the <xref:System.Windows.Forms.Control.DragEnter> event to determine if an item being dragged into the <xref:System.Windows.Forms.RichTextBox> is a valid data type.</span></span> <span data-ttu-id="1fbb4-400"><xref:System.Windows.Forms.Control.DragDrop> イベントは、<xref:System.Windows.Forms.RichTextBox>内の現在のカーソル位置にある <xref:System.Windows.Forms.RichTextBox> コントロールに、ドラッグされた項目の実際の削除を実行します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-400">The <xref:System.Windows.Forms.Control.DragDrop> event performs the actual dropping of a dragged item into the <xref:System.Windows.Forms.RichTextBox> control at the current cursor location within the <xref:System.Windows.Forms.RichTextBox>.</span></span> <span data-ttu-id="1fbb4-401">この例では、<xref:System.Windows.Forms.Control.DragDrop> イベントと <xref:System.Windows.Forms.Control.DragEnter> イベントが、この例で定義されているイベントハンドラーに接続されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-401">This example requires that the <xref:System.Windows.Forms.Control.DragDrop> and <xref:System.Windows.Forms.Control.DragEnter> events have been connected to the event handlers defined in the example.</span></span>  
  
 [!code-cpp[RichTextBox.AllowDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.AllowDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.AllowDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.AllowDrop/CS/form1.cs#1)]
 [!code-vb[RichTextBox.AllowDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.AllowDrop/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexFromPoint">
      <MemberSignature Language="C#" Value="public int IndexFromPoint (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexFromPoint(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IndexFromPoint(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexFromPoint (x As Integer, y As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexFromPoint(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.IndexFromPoint : int * int -&gt; int" Usage="listBox.IndexFromPoint (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1fbb4-402">検索する位置の x 座標。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-402">The x-coordinate of the location to search.</span></span></param>
        <param name="y"><span data-ttu-id="1fbb4-403">検索する位置の y 座標。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-403">The y-coordinate of the location to search.</span></span></param>
        <summary><span data-ttu-id="1fbb4-404">指定した座標にある項目の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-404">Returns the zero-based index of the item at the specified coordinates.</span></span></summary>
        <returns><span data-ttu-id="1fbb4-405">指定した座標にある項目の 0 から始まるインデックス番号。一致する項目が見つからない場合は <see langword="ListBox.NoMatches" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-405">The zero-based index of the item found at the specified coordinates; returns <see langword="ListBox.NoMatches" /> if no match is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-406">このメソッドを使用すると、コントロール内の特定の位置にある項目を特定できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-406">This method enables you to determine which item that is located at a specific location within the control.</span></span> <span data-ttu-id="1fbb4-407">このメソッドを使用すると、ユーザーが <xref:System.Windows.Forms.ListBox>を右クリックしたときに選択されるリスト内の項目を特定できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-407">You can use this method to determine which item within the list is selected when a user right-clicks the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-408">カーソルの位置を特定し、`x` に渡し、<xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> メソッドの `y` パラメーターを使用して、ユーザーがマウスで右クリックした項目を特定できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-408">The location of the cursor can be determined and passed to the `x` and `y` parameters of the <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method to determine which item the user right-clicked the mouse over.</span></span> <span data-ttu-id="1fbb4-409">その後、ユーザーにショートカットメニューを表示して、特定の項目に基づいてタスクや機能を提供することができます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-409">You can then display a shortcut menu to the user to provide tasks and features based on the specific item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-410">次のコード例は、<xref:System.Windows.Forms.RichTextBox> コントロールにドロップする項目を含む <xref:System.Windows.Forms.ListBox> コントロールを使用してドラッグアンドドロップ操作を実行する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-410">The following code example demonstrates how to perform drag-and-drop operations using a <xref:System.Windows.Forms.ListBox> control that contains items to drop into a <xref:System.Windows.Forms.RichTextBox> control.</span></span> <span data-ttu-id="1fbb4-411">フォームのコンストラクターは、<xref:System.Windows.Forms.RichTextBox.AllowDrop%2A> プロパティを `true` に設定して、<xref:System.Windows.Forms.RichTextBox> でドラッグアンドドロップ操作を実行できるようにします。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-411">The constructor of the form sets the <xref:System.Windows.Forms.RichTextBox.AllowDrop%2A> property to `true` to enable drag-and-drop operations to occur in the <xref:System.Windows.Forms.RichTextBox>.</span></span> <span data-ttu-id="1fbb4-412">この例では、<xref:System.Windows.Forms.ListBox> の <xref:System.Windows.Forms.Control.MouseDown> イベントを使用して、<xref:System.Windows.Forms.Control.DoDragDrop%2A> メソッドを呼び出すことによってドラッグ操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-412">The example uses the <xref:System.Windows.Forms.Control.MouseDown> event of the <xref:System.Windows.Forms.ListBox> to start the drag operation by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method.</span></span> <span data-ttu-id="1fbb4-413">この例では、<xref:System.Windows.Forms.Control.DragEnter> イベントを使用して、<xref:System.Windows.Forms.RichTextBox> にドラッグされている項目が有効なデータ型であるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-413">The example uses the <xref:System.Windows.Forms.Control.DragEnter> event to determine if an item being dragged into the <xref:System.Windows.Forms.RichTextBox> is a valid data type.</span></span> <span data-ttu-id="1fbb4-414"><xref:System.Windows.Forms.Control.DragDrop> イベントは、<xref:System.Windows.Forms.RichTextBox>内の現在のカーソル位置にある <xref:System.Windows.Forms.RichTextBox> コントロールに、ドラッグされた項目の実際の削除を実行します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-414">The <xref:System.Windows.Forms.Control.DragDrop> event performs the actual dropping of a dragged item into the <xref:System.Windows.Forms.RichTextBox> control at the current cursor location within the <xref:System.Windows.Forms.RichTextBox>.</span></span> <span data-ttu-id="1fbb4-415">この例では、<xref:System.Windows.Forms.Control.DragDrop> イベントと <xref:System.Windows.Forms.Control.DragEnter> イベントが、この例で定義されているイベントハンドラーに接続されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-415">This example requires that the <xref:System.Windows.Forms.Control.DragDrop> and <xref:System.Windows.Forms.Control.DragEnter> events have been connected to the event handlers defined in the example.</span></span>  
  
 [!code-cpp[RichTextBox.AllowDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.AllowDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.AllowDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.AllowDrop/CS/form1.cs#1)]
 [!code-vb[RichTextBox.AllowDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.AllowDrop/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntegralHeight">
      <MemberSignature Language="C#" Value="public bool IntegralHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IntegralHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegralHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property IntegralHeight As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IntegralHeight { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IntegralHeight : bool with get, set" Usage="System.Windows.Forms.ListBox.IntegralHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-416">一部の項目しか表示されない状況を避けるために、コントロールのサイズを変更するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-416">Gets or sets a value indicating whether the control should resize to avoid showing partial items.</span></span></summary>
        <value><span data-ttu-id="1fbb4-417">一部の項目しか表示されない状況を避けるためにコントロールのサイズを変更する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-417"><see langword="true" /> if the control resizes so that it does not display partial items; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1fbb4-418">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-418">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-419">このプロパティが `true`に設定されている場合、項目が部分的に表示されないように、コントロールのサイズが自動的に変更されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-419">When this property is set to `true`, the control automatically resizes to ensure that an item is not partially displayed.</span></span> <span data-ttu-id="1fbb4-420">フォームの領域要件に基づいて <xref:System.Windows.Forms.ListBox> の元のサイズを維持する場合は、このプロパティを `false`に設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-420">If you want to maintain the original size of the <xref:System.Windows.Forms.ListBox> based on the space requirements of your form, set this property to `false`.</span></span>  
  
 <span data-ttu-id="1fbb4-421">既定では、<xref:System.Windows.Forms.ListBox> と <xref:System.Windows.Forms.CheckedListBox> のサイズは、項目全体だけを表示するように設定されています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-421">By default, the <xref:System.Windows.Forms.ListBox> and the <xref:System.Windows.Forms.CheckedListBox> sizes are such that they show only whole items.</span></span> <span data-ttu-id="1fbb4-422"><xref:System.Windows.Forms.ListBox> または <xref:System.Windows.Forms.CheckedListBox> がドッキングされた領域に完全に収まるようにするには、<xref:System.Windows.Forms.ListBox.IntegralHeight%2A> を `false`に設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-422">If you want the <xref:System.Windows.Forms.ListBox> or <xref:System.Windows.Forms.CheckedListBox> to completely fill a docked area, set <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> to `false`.</span></span> <span data-ttu-id="1fbb4-423">これにより、コントロールは領域を完全に塗りつぶしますが、最後の項目は完全には表示されません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-423">This causes the control to completely fill the area, but the last item is not fully displayed.</span></span>  
  
 <span data-ttu-id="1fbb4-424"><xref:System.Windows.Forms.ListBox> に項目が含まれていない場合、このプロパティは無効です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-424">If the <xref:System.Windows.Forms.ListBox> does not contain any items, this property has no effect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fbb4-425">整数の高さは、クライアント領域の高さではなく、<xref:System.Windows.Forms.ListBox>の高さに基づいています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-425">The integral height is based on the height of the <xref:System.Windows.Forms.ListBox>, rather than the client area height.</span></span> <span data-ttu-id="1fbb4-426">結果として、<xref:System.Windows.Forms.ListBox.IntegralHeight%2A> プロパティが `true`設定されている場合でも、スクロールバーが表示されている場合はアイテムが部分的に表示される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-426">As a result, when the <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> property is set `true`, items can still be partially shown if scroll bars are displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fbb4-427"><xref:System.Windows.Forms.ListBox.DrawMode%2A> プロパティが `DrawMode.OwnerDrawVariable`に設定されている場合、このプロパティは無効になります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-427">If the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is set to `DrawMode.OwnerDrawVariable`, this property has no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-428">次のコード例では、<xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> プロパティと <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> プロパティを使用して、<xref:System.Windows.Forms.ListBox> コントロールのすべての項目テキストを表示する水平スクロールバーを表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-428">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> and <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> properties to display a horizontal scroll bar that shows all item text in the <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="1fbb4-429">また、この例では、<xref:System.Windows.Forms.ListBox.IntegralHeight%2A> プロパティを使用して、<xref:System.Windows.Forms.ListBox> コントロールのサイズのために項目が部分的に表示されないようにしています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-429">The example also uses the <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> property to ensure that items are not partially displayed due to the size of the <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="1fbb4-430">この例では、`listBox1`という名前の <xref:System.Windows.Forms.ListBox> コントロールがフォームに追加されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-430">This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.</span></span>  
  
 [!code-cpp[ListView.HorizontalExtent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.HorizontalExtent/CPP/form1.cpp#1)]
 [!code-csharp[ListView.HorizontalExtent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.HorizontalExtent/CS/form1.cs#1)]
 [!code-vb[ListView.HorizontalExtent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.HorizontalExtent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListBox.DrawMode" />
      </Docs>
    </Member>
    <Member MemberName="ItemHeight">
      <MemberSignature Language="C#" Value="public virtual int ItemHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ItemHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ItemHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ItemHeight : int with get, set" Usage="System.Windows.Forms.ListBox.ItemHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(13)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-431"><see cref="T:System.Windows.Forms.ListBox" /> 内の項目の高さを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-431">Gets or sets the height of an item in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <value><span data-ttu-id="1fbb4-432">コントロール内の項目の高さ (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-432">The height, in pixels, of an item in the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-433"><xref:System.Windows.Forms.ListBox.DrawMode%2A> プロパティが `DrawMode.OwnerDrawFixed`に設定されている場合、すべての項目の高さは同じになります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-433">When the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is set to `DrawMode.OwnerDrawFixed`, all items have the same height.</span></span> <span data-ttu-id="1fbb4-434"><xref:System.Windows.Forms.ListBox.DrawMode%2A> プロパティが `DrawMode.OwnerDrawVariable`に設定されている場合、<xref:System.Windows.Forms.ListBox.ItemHeight%2A> プロパティは <xref:System.Windows.Forms.ListBox>に追加される各項目の高さを指定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-434">When the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is set to `DrawMode.OwnerDrawVariable`, the <xref:System.Windows.Forms.ListBox.ItemHeight%2A> property specifies the height of each item added to the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-435">オーナー描画リスト内の各項目は異なる高さを持つことができるので、<xref:System.Windows.Forms.ListBox.GetItemHeight%2A> メソッドを使用して、<xref:System.Windows.Forms.ListBox>内の特定の項目の高さを取得できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-435">Because each item in an owner-drawn list can have a different height, you can use the <xref:System.Windows.Forms.ListBox.GetItemHeight%2A> method to get the height of a specific item in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-436">高さが可変の項目を持つ <xref:System.Windows.Forms.ListBox> の <xref:System.Windows.Forms.ListBox.ItemHeight%2A> プロパティを使用する場合、このプロパティはコントロール内の最初の項目の高さを返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-436">If you use the <xref:System.Windows.Forms.ListBox.ItemHeight%2A> property on a <xref:System.Windows.Forms.ListBox> with items of variable height, this property returns the height of the first item in the control.</span></span>  
  
 <span data-ttu-id="1fbb4-437"><xref:System.Windows.Forms.ListBox> 項目の高さの最大値は255ピクセルです。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-437">The maximum height of a <xref:System.Windows.Forms.ListBox> item is 255 pixels.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1fbb4-438"><see cref="P:System.Windows.Forms.ListBox.ItemHeight" /> プロパティが 0 ピクセル未満または 255 ピクセルを超える値に設定されました。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-438">The <see cref="P:System.Windows.Forms.ListBox.ItemHeight" /> property was set to less than 0 or more than 255 pixels.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.ListBox.GetItemHeight(System.Int32)" />
        <altmember cref="P:System.Windows.Forms.ListBox.DrawMode" />
        <altmember cref="E:System.Windows.Forms.ListBox.MeasureItem" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListBox.ObjectCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListBox/ObjectCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ListBox.ObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListBox::ObjectCollection ^ Items { System::Windows::Forms::ListBox::ObjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Windows.Forms.ListBox.ObjectCollection" Usage="System.Windows.Forms.ListBox.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListBox+ObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-439"><see cref="T:System.Windows.Forms.ListBox" /> の項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-439">Gets the items of the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <value><span data-ttu-id="1fbb4-440"><see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> 内の項目を表す <see cref="T:System.Windows.Forms.ListBox" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-440">An <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> representing the items in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-441">このプロパティを使用すると、<xref:System.Windows.Forms.ListBox>に現在格納されている項目のリストへの参照を取得できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-441">This property enables you to obtain a reference to the list of items that are currently stored in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-442">この参照を使用すると、項目を追加したり、項目を削除したり、コレクション内の項目の数を取得したりできます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-442">With this reference, you can add items, remove items, and obtain a count of the items in the collection.</span></span> <span data-ttu-id="1fbb4-443">項目コレクションで実行できるタスクの詳細については、「<xref:System.Windows.Forms.ListBox.ObjectCollection> クラスの参照トピック」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-443">For more information about the tasks that can be performed with the item collection, see the <xref:System.Windows.Forms.ListBox.ObjectCollection> class reference topics.</span></span>  
  
 <span data-ttu-id="1fbb4-444">また、<xref:System.Windows.Forms.ListControl.DataSource%2A> プロパティを使用して、<xref:System.Windows.Forms.ListBox> の項目を操作することもできます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-444">You can also manipulate the items of a <xref:System.Windows.Forms.ListBox> by using the <xref:System.Windows.Forms.ListControl.DataSource%2A> property.</span></span> <span data-ttu-id="1fbb4-445"><xref:System.Windows.Forms.ListControl.DataSource%2A> プロパティを使用して <xref:System.Windows.Forms.ListBox>に項目を追加する場合は、<xref:System.Windows.Forms.ListBox.Items%2A> プロパティを使用して <xref:System.Windows.Forms.ListBox> 内の項目を表示できますが、<xref:System.Windows.Forms.ListBox.ObjectCollection>のメソッドを使用してリストの項目を追加または削除することはできません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-445">If you use the <xref:System.Windows.Forms.ListControl.DataSource%2A> property to add items to a <xref:System.Windows.Forms.ListBox>, you can view the items in the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.Items%2A> property but you cannot add or remove items from the list using the methods of the <xref:System.Windows.Forms.ListBox.ObjectCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-446">次のコード例では、複数の項目を1つの列に表示し、コントロールの一覧で複数の項目を選択できる <xref:System.Windows.Forms.ListBox> コントロールを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-446">The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list.</span></span> <span data-ttu-id="1fbb4-447">この例のコードでは、<xref:System.Windows.Forms.ListBox.ObjectCollection> クラスの <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> メソッドを使用して <xref:System.Windows.Forms.ListBox> に50項目を追加し、<xref:System.Windows.Forms.ListBox.SetSelected%2A> メソッドを使用してリストから3つの項目を選択します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-447">The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.</span></span> <span data-ttu-id="1fbb4-448">このコードでは、<xref:System.Windows.Forms.ListBox.SelectedObjectCollection> コレクション (<xref:System.Windows.Forms.ListBox.SelectedItems%2A> プロパティを通じて) と <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (<xref:System.Windows.Forms.ListBox.SelectedIndices%2A> プロパティを通じて) の値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-448">The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection (through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property) and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property).</span></span> <span data-ttu-id="1fbb4-449">この例では、コードがに配置され、<xref:System.Windows.Forms.Form>から呼び出される必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-449">This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic ListBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ListBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ListBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ListBox Example/CS/source.cs#1)]
 [!code-vb[Classic ListBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ListBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListBox.ObjectCollection" />
      </Docs>
    </Member>
    <Member MemberName="MeasureItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MeasureItemEventHandler MeasureItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListBox.MeasureItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MeasureItem As MeasureItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MeasureItemEventHandler ^ MeasureItem;" />
      <MemberSignature Language="F#" Value="member this.MeasureItem : System.Windows.Forms.MeasureItemEventHandler " Usage="member this.MeasureItem : System.Windows.Forms.MeasureItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MeasureItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-450">オーナー描画 <see cref="T:System.Windows.Forms.ListBox" /> が作成され、リスト項目のサイズが決定されると発生します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-450">Occurs when an owner-drawn <see cref="T:System.Windows.Forms.ListBox" /> is created and the sizes of the list items are determined.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-451">このイベントのイベントハンドラーを作成して、<xref:System.Windows.Forms.ListBox.DrawItem> イベントで描画される前に項目が作成されるサイズを指定できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-451">You can create an event handler for this event to specify the size an item will be made before it is drawn in the <xref:System.Windows.Forms.ListBox.DrawItem> event.</span></span> <span data-ttu-id="1fbb4-452">イベントは、<xref:System.Windows.Forms.ListBox.DrawMode%2A> プロパティが <xref:System.Windows.Forms.DrawMode.OwnerDrawVariable>に設定されている場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-452">The event is only raised when the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is set to <xref:System.Windows.Forms.DrawMode.OwnerDrawVariable>.</span></span>  
  
 <span data-ttu-id="1fbb4-453"><xref:System.Windows.Forms.ListBox> 項目の最大有効高さは255ピクセルです。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-453">The maximum valid height of a <xref:System.Windows.Forms.ListBox> item is 255 pixels.</span></span> <span data-ttu-id="1fbb4-454">このイベントを処理するときに、<xref:System.Windows.Forms.MeasureItemEventArgs> の <xref:System.Windows.Forms.MeasureItemEventArgs.ItemHeight%2A> プロパティを255より大きい値に設定すると、予期しない結果が生じる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-454">Setting the <xref:System.Windows.Forms.MeasureItemEventArgs.ItemHeight%2A> property of the <xref:System.Windows.Forms.MeasureItemEventArgs> to a value greater than 255 when handling this event may yield unexpected results.</span></span>  
  
 <span data-ttu-id="1fbb4-455">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-455">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-456">次のコード例では、<xref:System.Windows.Forms.ListBox.DrawMode%2A> プロパティを <xref:System.Windows.Forms.DrawMode.OwnerDrawVariable> に設定し、<xref:System.Windows.Forms.ListBox.DrawItem> イベントと <xref:System.Windows.Forms.ListBox.MeasureItem> イベントを処理することによって、オーナー描画の <xref:System.Windows.Forms.ListBox> を示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-456">The following code example demonstrates an owner-drawn <xref:System.Windows.Forms.ListBox> by setting the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to <xref:System.Windows.Forms.DrawMode.OwnerDrawVariable> and handling the <xref:System.Windows.Forms.ListBox.DrawItem> and <xref:System.Windows.Forms.ListBox.MeasureItem> events.</span></span> <span data-ttu-id="1fbb4-457">また、<xref:System.Windows.Forms.ListBox.BorderStyle%2A> と <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> のプロパティを設定し、<xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> メソッドを使用する方法も示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-457">It also demonstrates setting the <xref:System.Windows.Forms.ListBox.BorderStyle%2A> and <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> properties and using the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method.</span></span>  
  
 <span data-ttu-id="1fbb4-458">この例を実行するには、<xref:System.Drawing> 名前空間と <xref:System.Windows.Forms> 名前空間をインポートする空のフォームに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-458">To run this example, paste it in an empty form that imports the <xref:System.Drawing> namespace and the <xref:System.Windows.Forms> namespace.</span></span> <span data-ttu-id="1fbb4-459">フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベント処理メソッドから `InitializeOwnerDrawnListBox` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-459">Call `InitializeOwnerDrawnListBox` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListBox.ItemHeight" />
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListBox.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberSignature Language="F#" Value="member this.MouseClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-460">ユーザーがマウスで <see cref="T:System.Windows.Forms.ListBox" /> コントロールをクリックすると発生します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-460">Occurs when the user clicks the <see cref="T:System.Windows.Forms.ListBox" /> control with the mouse pointer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiColumn">
      <MemberSignature Language="C#" Value="public bool MultiColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiColumn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.MultiColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property MultiColumn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiColumn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MultiColumn : bool with get, set" Usage="System.Windows.Forms.ListBox.MultiColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-461"><see cref="T:System.Windows.Forms.ListBox" /> が複数列をサポートするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-461">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.ListBox" /> supports multiple columns.</span></span></summary>
        <value><span data-ttu-id="1fbb4-462"><see cref="T:System.Windows.Forms.ListBox" /> が複数列をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-462"><see langword="true" /> if the <see cref="T:System.Windows.Forms.ListBox" /> supports multiple columns; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1fbb4-463">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-463">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-464">複数列 <xref:System.Windows.Forms.ListBox> は、垂直スクロールを不要にするために必要な数の列に項目を配置します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-464">A multicolumn <xref:System.Windows.Forms.ListBox> places items into as many columns as are needed to make vertical scrolling unnecessary.</span></span> <span data-ttu-id="1fbb4-465">ユーザーはキーボードを使用して、現在表示されていない列に移動できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-465">The user can use the keyboard to navigate to columns that are not currently visible.</span></span> <span data-ttu-id="1fbb4-466"><xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> プロパティを `true` に設定すると、水平スクロールバーが表示され、ユーザーは <xref:System.Windows.Forms.ListBox>の表示領域に現在表示されていない列までスクロールできるようになります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-466">Set the <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> property to `true` to display a horizontal scroll bar that enables the user to scroll to columns that are not currently shown in the visible region of the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-467"><xref:System.Windows.Forms.ListBox.ColumnWidth%2A> プロパティの値によって、各列の幅が決まります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-467">The value of the <xref:System.Windows.Forms.ListBox.ColumnWidth%2A> property determines the width of each column.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-468">次のコード例は、単純な2列の <xref:System.Windows.Forms.ListBox>を示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-468">The following code example demonstrates a simple two-column <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ListBox.MultiColumn#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBox.MultiColumn/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBox.MultiColumn#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBox.MultiColumn/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fbb4-469">複数列の <see cref="T:System.Windows.Forms.ListBox" /> の高さは可変にできません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-469">A multicolumn <see cref="T:System.Windows.Forms.ListBox" /> cannot have a variable-sized height.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.ListBox.HorizontalScrollbar" />
        <altmember cref="P:System.Windows.Forms.ListBox.ColumnWidth" />
      </Docs>
    </Member>
    <Member MemberName="NoMatches">
      <MemberSignature Language="C#" Value="public const int NoMatches = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 NoMatches = (-1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ListBox.NoMatches" />
      <MemberSignature Language="VB.NET" Value="Public Const NoMatches As Integer  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: int NoMatches = -1;" />
      <MemberSignature Language="F#" Value="val mutable NoMatches : int" Usage="System.Windows.Forms.ListBox.NoMatches" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-470">検索中に一致する値が見つからなかったことを示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-470">Specifies that no matches are found during a search.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-471">検索で一致する値が見つからない場合、<xref:System.Windows.Forms.ListBox.FindString%2A>、<xref:System.Windows.Forms.ListBox.FindStringExact%2A>、および <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> の各メソッドによって、この定数が返されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-471">This constant is returned by the <xref:System.Windows.Forms.ListBox.FindString%2A>, <xref:System.Windows.Forms.ListBox.FindStringExact%2A>, and <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> methods when no matching values are found in a search.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChangeUICues">
      <MemberSignature Language="C#" Value="protected override void OnChangeUICues (System.Windows.Forms.UICuesEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnChangeUICues(class System.Windows.Forms.UICuesEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnChangeUICues (e As UICuesEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnChangeUICues(System::Windows::Forms::UICuesEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnChangeUICues : System.Windows.Forms.UICuesEventArgs -&gt; unit" Usage="listBox.OnChangeUICues e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.UICuesEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1fbb4-472">イベント データを格納している <see cref="T:System.Windows.Forms.UICuesEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-472">A <see cref="T:System.Windows.Forms.UICuesEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1fbb4-473"><see cref="E:System.Windows.Forms.Control.ChangeUICues" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-473">Raises the <see cref="E:System.Windows.Forms.Control.ChangeUICues" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDataSourceChanged : EventArgs -&gt; unit" Usage="listBox.OnDataSourceChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1fbb4-474">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-474">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1fbb4-475"><see cref="E:System.Windows.Forms.ListControl.DataSourceChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-475">Raises the <see cref="E:System.Windows.Forms.ListControl.DataSourceChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayMemberChanged">
      <MemberSignature Language="C#" Value="protected override void OnDisplayMemberChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDisplayMemberChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnDisplayMemberChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDisplayMemberChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDisplayMemberChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDisplayMemberChanged : EventArgs -&gt; unit" Usage="listBox.OnDisplayMemberChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1fbb4-476">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-476">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1fbb4-477"><see cref="E:System.Windows.Forms.ListControl.DisplayMemberChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-477">Raises the <see cref="E:System.Windows.Forms.ListControl.DisplayMemberChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawItem(class System.Windows.Forms.DrawItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawItem (e As DrawItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawItem(System::Windows::Forms::DrawItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawItem : System.Windows.Forms.DrawItemEventArgs -&gt; unit&#xA;override this.OnDrawItem : System.Windows.Forms.DrawItemEventArgs -&gt; unit" Usage="listBox.OnDrawItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1fbb4-478">処理するウィンドウ メッセージを表す、参照渡しされた <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-478">A <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1fbb4-479"><see cref="E:System.Windows.Forms.ListBox.DrawItem" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-479">Raises the <see cref="E:System.Windows.Forms.ListBox.DrawItem" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-480">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-480">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1fbb4-481">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-481">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1fbb4-482"><xref:System.Windows.Forms.ListBox.OnDrawItem%2A> メソッドを使用すると、デリゲートをアタッチせずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-482">The <xref:System.Windows.Forms.ListBox.OnDrawItem%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1fbb4-483">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-483">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-484">次のコード例は、オーナー描画の <xref:System.Windows.Forms.ListBox> 項目を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-484">The following code example demonstrates how to create owner-drawn <xref:System.Windows.Forms.ListBox> items.</span></span> <span data-ttu-id="1fbb4-485">このコードでは、<xref:System.Windows.Forms.ListBox.DrawMode%2A> プロパティを使用して、描画される項目が固定サイズであることを指定し、<xref:System.Windows.Forms.ListBox.DrawItem> イベントを使用して各項目の描画を <xref:System.Windows.Forms.ListBox>に実行します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-485">The code uses the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to specify that the items drawn are fixed sized and the <xref:System.Windows.Forms.ListBox.DrawItem> event to perform the drawing of each item into the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-486">このコード例では、イベントハンドラーにパラメーターとして渡された <xref:System.Windows.Forms.DrawItemEventArgs> クラスのプロパティとメソッドを使用して、項目を描画します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-486">The example code uses the properties and methods of the <xref:System.Windows.Forms.DrawItemEventArgs> class passed as a parameter to the event handler to draw the items.</span></span> <span data-ttu-id="1fbb4-487">この例では、`listBox1` と呼ばれる <xref:System.Windows.Forms.ListBox> コントロールがフォームに追加されており、<xref:System.Windows.Forms.ListBox.DrawItem> イベントがコード例で定義されているイベントハンドラーによって処理される必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-487">This example requires that a <xref:System.Windows.Forms.ListBox> control called `listBox1` has been added to a form and that the <xref:System.Windows.Forms.ListBox.DrawItem> event is handled by the event handler defined in the example code.</span></span> <span data-ttu-id="1fbb4-488">また、この例では、項目が "Apple"、"オレンジ"、および "Plum" という順序で <xref:System.Windows.Forms.ListBox> に追加されている必要もあります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-488">The example also requires that items have been added to the <xref:System.Windows.Forms.ListBox> with the text of "Apple", "Orange", and "Plum" in that order.</span></span>  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1fbb4-489">派生クラスで <see cref="M:System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-489">When overriding <see cref="M:System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.ListBox.DrawItem" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="listBox.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1fbb4-490">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-490">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1fbb4-491"><see cref="E:System.Windows.Forms.Control.FontChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-491">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : EventArgs -&gt; unit" Usage="listBox.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="listBox.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1fbb4-492">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-492">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1fbb4-493">ウィンドウ ハンドルが作成されたときにそのことを示して、列幅などの特性を設定できるようにします。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-493">Specifies when the window handle has been created so that column width and other characteristics can be set.</span></span> <span data-ttu-id="1fbb4-494">継承クラスでは、<see langword="base.OnHandleCreated" /> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-494">Inheriting classes should call <see langword="base.OnHandleCreated" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="listBox.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1fbb4-495">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-495">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1fbb4-496">項目が正しく設定および消去されるようオーバーライドされています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-496">Overridden to be sure that items are set up and cleared out correctly.</span></span> <span data-ttu-id="1fbb4-497">継承コントロールでは、<see langword="base.OnHandleDestroyed" /> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-497">Inheriting controls should call <see langword="base.OnHandleDestroyed" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMeasureItem">
      <MemberSignature Language="C#" Value="protected virtual void OnMeasureItem (System.Windows.Forms.MeasureItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMeasureItem(class System.Windows.Forms.MeasureItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMeasureItem (e As MeasureItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMeasureItem(System::Windows::Forms::MeasureItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMeasureItem : System.Windows.Forms.MeasureItemEventArgs -&gt; unit&#xA;override this.OnMeasureItem : System.Windows.Forms.MeasureItemEventArgs -&gt; unit" Usage="listBox.OnMeasureItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MeasureItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1fbb4-498">イベント データを格納している <see cref="T:System.Windows.Forms.MeasureItemEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-498">A <see cref="T:System.Windows.Forms.MeasureItemEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1fbb4-499"><see cref="E:System.Windows.Forms.ListBox.MeasureItem" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-499">Raises the <see cref="E:System.Windows.Forms.ListBox.MeasureItem" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-500">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-500">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1fbb4-501">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-501">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1fbb4-502"><xref:System.Windows.Forms.ListBox.OnMeasureItem%2A> メソッドを使用すると、デリゲートをアタッチせずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-502">The <xref:System.Windows.Forms.ListBox.OnMeasureItem%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1fbb4-503">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-503">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1fbb4-504">派生クラスで <see cref="M:System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-504">When overriding <see cref="M:System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.ListBox.MeasureItem" />
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected override void OnParentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnParentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnParentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnParentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnParentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnParentChanged : EventArgs -&gt; unit" Usage="listBox.OnParentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1fbb4-505">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-505">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1fbb4-506"><see cref="E:System.Windows.Forms.Control.ParentChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-506">Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="listBox.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1fbb4-507">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-507">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1fbb4-508"><see cref="E:System.Windows.Forms.Control.Resize" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-508">Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectedIndexChanged : EventArgs -&gt; unit" Usage="listBox.OnSelectedIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1fbb4-509">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-509">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1fbb4-510"><see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-510">Raises the <see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedValueChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedValueChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnSelectedValueChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedValueChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedValueChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectedValueChanged : EventArgs -&gt; unit" Usage="listBox.OnSelectedValueChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1fbb4-511">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-511">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1fbb4-512"><see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-512">Raises the <see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.ListBox.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-513">このクラスでは、このプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-513">This property is not relevant to this class.</span></span></summary>
        <value><span data-ttu-id="1fbb4-514"><see cref="T:System.Windows.Forms.Padding" /> 値。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-514">A <see cref="T:System.Windows.Forms.Padding" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-515">このクラスでは、このプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-515">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListBox.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-516"><see cref="P:System.Windows.Forms.ListBox.Padding" /> プロパティの値が変更された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-516">Occurs when the value of the <see cref="P:System.Windows.Forms.ListBox.Padding" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-517">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-517">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListBox.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-518"><see cref="T:System.Windows.Forms.ListBox" /> コントロールが描画されると発生します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-518">Occurs when the <see cref="T:System.Windows.Forms.ListBox" /> control is painted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-519">このクラスでは、このイベントは使用されません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-519">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredHeight">
      <MemberSignature Language="C#" Value="public int PreferredHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.PreferredHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreferredHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredHeight : int" Usage="System.Windows.Forms.ListBox.PreferredHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-520"><see cref="T:System.Windows.Forms.ListBox" /> 内のすべての項目を組み合わせた高さを取得します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-520">Gets the combined height of all items in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <value><span data-ttu-id="1fbb4-521">コントロール内のすべての項目を組み合わせた高さ (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-521">The combined height, in pixels, of all items in the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-522">このプロパティを使用すると、リスト内の使用可能なすべての項目を表示し、垂直スクロールバーを表示しないようにするために <xref:System.Windows.Forms.ListBox> のサイズを変更する必要がある高さを決定できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-522">This property enables you to determine the height that the <xref:System.Windows.Forms.ListBox> needs to be sized to, in order to display every available item in the list and to avoid displaying vertical scroll bars.</span></span> <span data-ttu-id="1fbb4-523"><xref:System.Windows.Forms.ListBox> 内の項目の量が大きい場合は、<xref:System.Windows.Forms.ListBox.PreferredHeight%2A> プロパティの値を使用してコントロールのサイズを変更すると、フォームまたは <xref:System.Windows.Forms.ListBox> コンテナーからクライアント領域の外側に <xref:System.Windows.Forms.ListBox> サイズが設定される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-523">If the amount of items in the <xref:System.Windows.Forms.ListBox> is large, sizing the control using the value of the <xref:System.Windows.Forms.ListBox.PreferredHeight%2A> property might cause the <xref:System.Windows.Forms.ListBox> to be sized outside of the client area of the form or the <xref:System.Windows.Forms.ListBox> container.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-524">次のコード例は、スクロールバーを使用せずに <xref:System.Windows.Forms.ListBox> 内のすべての項目を表示するために、<xref:System.Windows.Forms.ListBox.PreferredHeight%2A> プロパティの値に基づいて <xref:System.Windows.Forms.ListBox> の <xref:System.Windows.Forms.Control.Size%2A> プロパティを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-524">The following code example demonstrates how to set the <xref:System.Windows.Forms.Control.Size%2A> property of a <xref:System.Windows.Forms.ListBox> based on the value of the <xref:System.Windows.Forms.ListBox.PreferredHeight%2A> property in order to display all items in the <xref:System.Windows.Forms.ListBox> without use of scroll bars.</span></span> <span data-ttu-id="1fbb4-525">この例では、`listBox1`という名前の <xref:System.Windows.Forms.ListBox> コントロールがフォームに追加されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-525">This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.</span></span>  
  
 [!code-cpp[ListBox.PreferredHeight#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.PreferredHeight/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.PreferredHeight#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.PreferredHeight/CS/form1.cs#1)]
 [!code-vb[ListBox.PreferredHeight#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.PreferredHeight/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Height" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberSignature Language="F#" Value="override this.Refresh : unit -&gt; unit" Usage="listBox.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fbb4-526">強制的に、コントロールがクライアント領域を無効化し、直後にそのコントロール自体とその子コントロールを再描画するようにします。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-526">Forces the control to invalidate its client area and immediately redraw itself and any child controls.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshItem">
      <MemberSignature Language="C#" Value="protected override void RefreshItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RefreshItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.RefreshItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RefreshItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RefreshItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RefreshItem : int -&gt; unit" Usage="listBox.RefreshItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="1fbb4-527">更新する要素の、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-527">The zero-based index of the element to refresh.</span></span></param>
        <summary><span data-ttu-id="1fbb4-528">指定したインデックスにある項目を更新します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-528">Refreshes the item contained at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-529"><xref:System.Windows.Forms.ListControl.DisplayMember%2A> プロパティが設定されていて、<xref:System.Windows.Forms.ListControl.DisplayMember%2A> に割り当てられているデータソースのプロパティが変更された場合は、<xref:System.Windows.Forms.ListBox.RefreshItem%2A> メソッドを使用して <xref:System.Windows.Forms.ListBox> コントロールの値を更新します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-529">If the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property is set and the property in the data source that is assigned to <xref:System.Windows.Forms.ListControl.DisplayMember%2A> changes, use the <xref:System.Windows.Forms.ListBox.RefreshItem%2A> method to update the value in the <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshItems">
      <MemberSignature Language="C#" Value="protected override void RefreshItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RefreshItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.RefreshItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RefreshItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RefreshItems();" />
      <MemberSignature Language="F#" Value="override this.RefreshItems : unit -&gt; unit" Usage="listBox.RefreshItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fbb4-530"><see cref="T:System.Windows.Forms.ListBox" /> のすべての項目を更新し、それらの項目の新しい文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-530">Refreshes all <see cref="T:System.Windows.Forms.ListBox" /> items and retrieves new strings for them.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RescaleConstantsForDpi">
      <MemberSignature Language="C#" Value="protected override void RescaleConstantsForDpi (int deviceDpiOld, int deviceDpiNew);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RescaleConstantsForDpi(int32 deviceDpiOld, int32 deviceDpiNew) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.RescaleConstantsForDpi(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RescaleConstantsForDpi (deviceDpiOld As Integer, deviceDpiNew As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RescaleConstantsForDpi(int deviceDpiOld, int deviceDpiNew);" />
      <MemberSignature Language="F#" Value="override this.RescaleConstantsForDpi : int * int -&gt; unit" Usage="listBox.RescaleConstantsForDpi (deviceDpiOld, deviceDpiNew)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceDpiOld" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="deviceDpiNew" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="deviceDpiOld"><span data-ttu-id="1fbb4-531">変更前の DPI 値。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-531">The DPI value prior to the change.</span></span></param>
        <param name="deviceDpiNew"><span data-ttu-id="1fbb4-532">変更後の DPI 値。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-532">The DPI value after the change.</span></span></param>
        <summary><span data-ttu-id="1fbb4-533">DPI の変更が発生したときに、コントロールの再スケーリングの定数を提供します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-533">Provides constants for rescaling the control when a DPI change occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetBackColor">
      <MemberSignature Language="C#" Value="public override void ResetBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ResetBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetBackColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetBackColor();" />
      <MemberSignature Language="F#" Value="override this.ResetBackColor : unit -&gt; unit" Usage="listBox.ResetBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fbb4-534"><see cref="P:System.Windows.Forms.Control.BackColor" /> プロパティを既定値にリセットします。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-534">Resets the <see cref="P:System.Windows.Forms.Control.BackColor" /> property to its default value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetForeColor">
      <MemberSignature Language="C#" Value="public override void ResetForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ResetForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetForeColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetForeColor();" />
      <MemberSignature Language="F#" Value="override this.ResetForeColor : unit -&gt; unit" Usage="listBox.ResetForeColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fbb4-535"><see cref="P:System.Windows.Forms.Control.ForeColor" /> プロパティを既定値にリセットします。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-535">Resets the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property to its default value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property RightToLeft As RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::RightToLeft RightToLeft { System::Windows::Forms::RightToLeft get(); void set(System::Windows::Forms::RightToLeft value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeft : System.Windows.Forms.RightToLeft with get, set" Usage="System.Windows.Forms.ListBox.RightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-536">コントロールがテキストを右から左に表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-536">Gets or sets a value indicating whether text displayed by the control is displayed from right to left.</span></span></summary>
        <value><span data-ttu-id="1fbb4-537"><see cref="T:System.Windows.Forms.RightToLeft" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-537">One of the <see cref="T:System.Windows.Forms.RightToLeft" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-538">このプロパティを使用すると、右から左に記述された言語をメニューでサポートできます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-538">This property enables your menus to support languages that are written from right to left.</span></span> <span data-ttu-id="1fbb4-539">このプロパティが `true`に設定されている場合、既定の左から右へのメソッドの代わりに、項目のテキストが右から左に表示されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-539">When this property is set to `true`, item text is displayed from right to left instead of the default left to right method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleControl">
      <MemberSignature Language="C#" Value="protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleControl(valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleControl (factor As SizeF, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleControl(System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.ScaleControl : System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="listBox.ScaleControl (factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="factor"><span data-ttu-id="1fbb4-540">コントロールの高さと幅のスケールを設定する際のファクター。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-540">The factor by which the height and width of the control will be scaled.</span></span></param>
        <param name="specified"><span data-ttu-id="1fbb4-541">コントロールのサイズと位置を定義するときに使用するコントロールの境界を指定する <see cref="T:System.Windows.Forms.BoundsSpecified" /> 値。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-541">A <see cref="T:System.Windows.Forms.BoundsSpecified" /> value that specifies the bounds of the control to use when defining its size and position.</span></span></param>
        <summary><span data-ttu-id="1fbb4-542">コントロールの位置、サイズ、埋め込み、およびマージンのスケールを設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-542">Scales a control's location, size, padding and margin.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollAlwaysVisible">
      <MemberSignature Language="C#" Value="public bool ScrollAlwaysVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrollAlwaysVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ScrollAlwaysVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollAlwaysVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScrollAlwaysVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollAlwaysVisible : bool with get, set" Usage="System.Windows.Forms.ListBox.ScrollAlwaysVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-543">垂直スクロール バーを常に表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-543">Gets or sets a value indicating whether the vertical scroll bar is shown at all times.</span></span></summary>
        <value><span data-ttu-id="1fbb4-544">垂直スクロール バーを常に表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-544"><see langword="true" /> if the vertical scroll bar should always be displayed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1fbb4-545">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-545">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-546"><xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> プロパティは、<xref:System.Windows.Forms.ListBox> 内の項目の数が垂直スクロールバーを表示する必要がない場合でも、垂直スクロールバーを常に表示するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-546">The <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> property indicates whether a vertical scroll bar is always displayed, even if the number of items in the <xref:System.Windows.Forms.ListBox> does not require displaying the vertical scroll bar.</span></span> <span data-ttu-id="1fbb4-547">既定では、<xref:System.Windows.Forms.ListBox> に表示される項目が十分にある場合にのみ、垂直スクロールバーが表示されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-547">By default, a <xref:System.Windows.Forms.ListBox> only shows a vertical scroll bar when there are enough items to warrant displaying.</span></span> <span data-ttu-id="1fbb4-548">複数列 <xref:System.Windows.Forms.ListBox>の場合、<xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> プロパティは水平スクロールバーが表示されることを示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-548">For a multicolumn <xref:System.Windows.Forms.ListBox>, the <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> property indicates that a horizontal scroll bar is displayed.</span></span> <span data-ttu-id="1fbb4-549">複数列 <xref:System.Windows.Forms.ListBox>のこのプロパティの値に関係なく、垂直スクロールバーは表示されません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-549">A vertical scroll bar is never displayed regardless of the value of this property for a multicolumn <xref:System.Windows.Forms.ListBox>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-550">次のコード例では、<xref:System.Windows.Forms.ListBox.DrawMode%2A> プロパティを `OwnerDrawVariable` 値に設定し、<xref:System.Windows.Forms.ListBox.DrawItem> イベントと <xref:System.Windows.Forms.ListBox.MeasureItem> イベントを処理することによって、オーナー描画の <xref:System.Windows.Forms.ListBox> を示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-550">The following code example demonstrates an owner-drawn <xref:System.Windows.Forms.ListBox> by setting the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to the `OwnerDrawVariable` value and handling the <xref:System.Windows.Forms.ListBox.DrawItem> and <xref:System.Windows.Forms.ListBox.MeasureItem> events.</span></span> <span data-ttu-id="1fbb4-551">また、<xref:System.Windows.Forms.ListBox.BorderStyle%2A> と <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> のプロパティを設定し、<xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> メソッドを使用する方法も示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-551">It also demonstrates setting the <xref:System.Windows.Forms.ListBox.BorderStyle%2A> and <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> properties and using the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method.</span></span>  
  
 <span data-ttu-id="1fbb4-552">この例を実行するには、<xref:System.Drawing> 名前空間と <xref:System.Windows.Forms> 名前空間をインポートする空のフォームに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-552">To run this example, paste it in an empty form that imports the <xref:System.Drawing> namespace and the <xref:System.Windows.Forms> namespace.</span></span> <span data-ttu-id="1fbb4-553">フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベント処理メソッドから `InitializeOwnerDrawnListBox` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-553">Call `InitializeOwnerDrawnListBox` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListBox.HorizontalScrollbar" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public override int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndex : int with get, set" Usage="System.Windows.Forms.ListBox.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-554"><see cref="T:System.Windows.Forms.ListBox" /> 内で現在選択されている項目の 0 から始まるインデックス番号を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-554">Gets or sets the zero-based index of the currently selected item in a <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <value><span data-ttu-id="1fbb4-555">現在選択されている項目の 0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-555">A zero-based index of the currently selected item.</span></span> <span data-ttu-id="1fbb4-556">項目が選択されていない場合は、値 -1 が返されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-556">A value of negative one (-1) is returned if no item is selected.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-557">標準 <xref:System.Windows.Forms.ListBox>の場合は、このプロパティを使用して、<xref:System.Windows.Forms.ListBox>で選択されている項目のインデックスを確認できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-557">For a standard <xref:System.Windows.Forms.ListBox>, you can use this property to determine the index of the item that is selected in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-558"><xref:System.Windows.Forms.ListBox> の [<xref:System.Windows.Forms.ListBox.SelectionMode%2A>] プロパティが `SelectionMode.MultiSimple` または `SelectionMode.MultiExtended` (複数選択 <xref:System.Windows.Forms.ListBox>を示す) に設定されていて、一覧で複数の項目が選択されている場合、このプロパティは選択した任意の項目に対してインデックスを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-558">If the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property of the <xref:System.Windows.Forms.ListBox> is set to either `SelectionMode.MultiSimple` or `SelectionMode.MultiExtended` (which indicates a multiple-selection <xref:System.Windows.Forms.ListBox>) and multiple items are selected in the list, this property can return the index to any selected item.</span></span>  
  
 <span data-ttu-id="1fbb4-559">複数選択 <xref:System.Windows.Forms.ListBox>で選択されているすべての項目のインデックスを含むコレクションを取得するには、<xref:System.Windows.Forms.ListBox.SelectedIndices%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-559">To retrieve a collection containing the indexes of all selected items in a multiple-selection <xref:System.Windows.Forms.ListBox>, use the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property.</span></span> <span data-ttu-id="1fbb4-560"><xref:System.Windows.Forms.ListBox>で現在選択されている項目を取得する場合は、<xref:System.Windows.Forms.ListBox.SelectedItem%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-560">If you want to obtain the item that is currently selected in the <xref:System.Windows.Forms.ListBox>, use the <xref:System.Windows.Forms.ListBox.SelectedItem%2A> property.</span></span> <span data-ttu-id="1fbb4-561">また、<xref:System.Windows.Forms.ListBox.SelectedItems%2A> プロパティを使用して、複数選択 <xref:System.Windows.Forms.ListBox>で選択されているすべての項目を取得できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-561">In addition, you can use the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property to obtain all the selected items in a multiple-selection <xref:System.Windows.Forms.ListBox>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-562">次のコード例では、<xref:System.Windows.Forms.ListBox.SelectedIndex%2A> プロパティを <xref:System.Windows.Forms.ListBox.TopIndex%2A> プロパティと共に使用して、現在選択されている項目を <xref:System.Windows.Forms.ListBox>の表示領域内の項目リストの先頭に移動する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-562">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property with the <xref:System.Windows.Forms.ListBox.TopIndex%2A> property to move the currently selected item to the top of the list of items in the display area of the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-563">この例では、<xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=nameWithType> クラスの <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> メソッドを使用して項目を削除する方法と、<xref:System.Windows.Forms.ListBox.ClearSelected%2A> メソッドを使用してすべての項目選択をクリアする方法について詳しく説明します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-563">The example further demonstrates how to remove items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=nameWithType> class, and how to clear all item selection using the <xref:System.Windows.Forms.ListBox.ClearSelected%2A> method.</span></span> <span data-ttu-id="1fbb4-564">このコードは、まず、<xref:System.Windows.Forms.ListBox> 内の現在選択されている項目を一覧の先頭に移動します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-564">The code first moves the currently selected item in the <xref:System.Windows.Forms.ListBox> to the top of the list.</span></span> <span data-ttu-id="1fbb4-565">次に、現在選択されている項目の前にあるすべての項目を削除し、<xref:System.Windows.Forms.ListBox>のすべての選択を解除します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-565">The code then removes all items before the currently selected item and clears all selections in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-566">この例では、項目を含む <xref:System.Windows.Forms.ListBox> をフォームに追加し、項目が <xref:System.Windows.Forms.ListBox>で現在選択されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-566">This example requires that a <xref:System.Windows.Forms.ListBox> containing items is added to a form and that an item is currently selected in the <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 [!code-cpp[ListBox.SelectedIndex#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.SelectedIndex/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.SelectedIndex#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.SelectedIndex/CS/form1.cs#1)]
 [!code-vb[ListBox.SelectedIndex#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.SelectedIndex/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1fbb4-567">代入された値が -1 未満か、項目数以上です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-567">The assigned value is less than -1 or greater than or equal to the item count.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fbb4-568"><see cref="P:System.Windows.Forms.ListBox.SelectionMode" /> プロパティが <see langword="None" /> に設定されている。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-568">The <see cref="P:System.Windows.Forms.ListBox.SelectionMode" /> property is set to <see langword="None" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.ListBox.SelectedIndices" />
        <altmember cref="P:System.Windows.Forms.ListBox.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListBox.SelectedItem" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListBox.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedIndexChanged : EventHandler " Usage="member this.SelectedIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-569"><see cref="P:System.Windows.Forms.ListBox.SelectedIndex" /> プロパティまたは <see cref="P:System.Windows.Forms.ListBox.SelectedIndices" /> コレクションが変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-569">Occurs when the <see cref="P:System.Windows.Forms.ListBox.SelectedIndex" /> property or the <see cref="P:System.Windows.Forms.ListBox.SelectedIndices" /> collection has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-570">このイベントのイベントハンドラーを作成して、<xref:System.Windows.Forms.ListBox> 内で選択されているインデックスがいつ変更されたかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-570">You can create an event handler for this event to determine when the selected index in the <xref:System.Windows.Forms.ListBox> has been changed.</span></span> <span data-ttu-id="1fbb4-571">これは、<xref:System.Windows.Forms.ListBox>で現在選択されている内容に基づいて、他のコントロールに情報を表示する必要がある場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-571">This can be useful when you need to display information in other controls based on the current selection in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-572">このイベントのイベントハンドラーを使用して、他のコントロールに情報を読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-572">You can use the event handler for this event to load the information in the other controls.</span></span>  
  
 <span data-ttu-id="1fbb4-573"><xref:System.Windows.Forms.ListBox.SelectionMode%2A> プロパティが <xref:System.Windows.Forms.SelectionMode.MultiSimple?displayProperty=nameWithType> または <xref:System.Windows.Forms.SelectionMode.MultiExtended?displayProperty=nameWithType>に設定されている場合、選択項目から項目を削除するなど、<xref:System.Windows.Forms.ListBox.SelectedIndices%2A> コレクションを変更すると、このイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-573">If the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property is set to <xref:System.Windows.Forms.SelectionMode.MultiSimple?displayProperty=nameWithType> or <xref:System.Windows.Forms.SelectionMode.MultiExtended?displayProperty=nameWithType>, any change to the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> collection, including removing an item from the selection, will raise this event.</span></span>  
  
 <span data-ttu-id="1fbb4-574">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-574">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-575">次のコード例では、<xref:System.Windows.Forms.ListBox.SelectedIndexChanged> イベントを使用して、別の <xref:System.Windows.Forms.ListBox> コントロール内の項目を検索および選択する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-575">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event to search for and select an item in a different <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="1fbb4-576">この例では、<xref:System.Windows.Forms.ListBox.SelectedIndexChanged> イベントを使用して、<xref:System.Windows.Forms.ListBox> 内で選択された項目がいつ変更されたかを判断します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-576">The example uses the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event to determine when the selected item in the <xref:System.Windows.Forms.ListBox> is changed.</span></span> <span data-ttu-id="1fbb4-577">次のコード例では、<xref:System.Windows.Forms.ListBox.SelectedItem%2A> プロパティを使用して項目のテキストを読み取り、最初の <xref:System.Windows.Forms.ListBox>の <xref:System.Windows.Forms.ListBox.SelectedItem%2A> によって返されるテキストを使用して、別の <xref:System.Windows.Forms.ListBox> で <xref:System.Windows.Forms.ListBox.FindString%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-577">The example code then reads the text of the item using the <xref:System.Windows.Forms.ListBox.SelectedItem%2A> property and calls the <xref:System.Windows.Forms.ListBox.FindString%2A> method on a different <xref:System.Windows.Forms.ListBox> using the text returned by <xref:System.Windows.Forms.ListBox.SelectedItem%2A> in the first <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-578">他の <xref:System.Windows.Forms.ListBox>に項目が見つかった場合は、その項目が選択されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-578">If an item is found in the other <xref:System.Windows.Forms.ListBox>, the item is selected.</span></span> <span data-ttu-id="1fbb4-579">この例では、`listBox1` と `listBox2`という名前の2つの <xref:System.Windows.Forms.ListBox> コントロールがフォームに追加されており、両方の <xref:System.Windows.Forms.ListBox> コントロールに同一の項目が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-579">This example requires that two <xref:System.Windows.Forms.ListBox> controls, named `listBox1` and `listBox2`, have been added to a form and that both <xref:System.Windows.Forms.ListBox> controls contain items that are identical.</span></span> <span data-ttu-id="1fbb4-580">この例では、この例で定義されているイベント処理メソッドが `listBox1`の <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> イベントに接続されている必要もあります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-580">The example also requires that the event-handling method defined in the example is connected to the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event of `listBox1`.</span></span>  
  
 [!code-cpp[ListBox.SelectedIndexChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.SelectedIndexChanged/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.SelectedIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.SelectedIndexChanged/CS/form1.cs#1)]
 [!code-vb[ListBox.SelectedIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.SelectedIndexChanged/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListBox.SelectedIndex" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListBox.SelectedIndexCollection SelectedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListBox/SelectedIndexCollection SelectedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedIndices As ListBox.SelectedIndexCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListBox::SelectedIndexCollection ^ SelectedIndices { System::Windows::Forms::ListBox::SelectedIndexCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndices : System.Windows.Forms.ListBox.SelectedIndexCollection" Usage="System.Windows.Forms.ListBox.SelectedIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListBox+SelectedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-581"><see cref="T:System.Windows.Forms.ListBox" /> 内で現在選択されているすべての項目の 0 から始まるインデックス番号を格納するコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-581">Gets a collection that contains the zero-based indexes of all currently selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <value><span data-ttu-id="1fbb4-582">コントロール内で現在選択されている項目のインデックスを格納している <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-582">A <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" /> containing the indexes of the currently selected items in the control.</span></span> <span data-ttu-id="1fbb4-583">項目が現在選択されていない場合は、空の <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-583">If no items are currently selected, an empty <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-584">複数選択 <xref:System.Windows.Forms.ListBox>の場合、このプロパティは、<xref:System.Windows.Forms.ListBox>で選択されているすべての項目のインデックスを含むコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-584">For a multiple-selection <xref:System.Windows.Forms.ListBox>, this property returns a collection containing the indexes to all items that are selected in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-585">1つの選択 <xref:System.Windows.Forms.ListBox> の場合、このプロパティは、<xref:System.Windows.Forms.ListBox> で選択された唯一の項目のインデックスを含む単一の要素を含むコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-585">For a single-selection <xref:System.Windows.Forms.ListBox>, this property returns a collection containing a single element containing the index of the only selected item in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-586">コレクションの項目を操作する方法の詳細については、「<xref:System.Windows.Forms.ListBox.SelectedIndexCollection>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-586">For more information about how to manipulate the items of the collection, see <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>.</span></span>  
  
 <span data-ttu-id="1fbb4-587"><xref:System.Windows.Forms.ListBox> クラスには、選択した項目を参照するさまざまな方法が用意されています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-587">The <xref:System.Windows.Forms.ListBox> class provides a number of ways to reference selected items.</span></span> <span data-ttu-id="1fbb4-588"><xref:System.Windows.Forms.ListBox.SelectedIndices%2A> プロパティを使用して、単一選択 <xref:System.Windows.Forms.ListBox>で現在選択されている項目のインデックス位置を取得する代わりに、<xref:System.Windows.Forms.ListBox.SelectedIndex%2A> プロパティを使用できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-588">Instead of using the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property to obtain the index position of the currently selected item in a single-selection <xref:System.Windows.Forms.ListBox>, you can use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property.</span></span> <span data-ttu-id="1fbb4-589">項目のインデックス位置ではなく、<xref:System.Windows.Forms.ListBox>で現在選択されている項目を取得する場合は、<xref:System.Windows.Forms.ListBox.SelectedItem%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-589">If you want to obtain the item that is currently selected in the <xref:System.Windows.Forms.ListBox>, instead of the index position of the item, use the <xref:System.Windows.Forms.ListBox.SelectedItem%2A> property.</span></span> <span data-ttu-id="1fbb4-590">また、複数選択 <xref:System.Windows.Forms.ListBox>で選択されているすべての項目を取得する場合は、<xref:System.Windows.Forms.ListBox.SelectedItems%2A> プロパティを使用できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-590">In addition, you can use the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property if you want to obtain all the selected items in a multiple-selection <xref:System.Windows.Forms.ListBox>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-591">次のコード例は、<xref:System.Windows.Forms.ListBox.FindString%2A> メソッドを使用して、<xref:System.Windows.Forms.ListBox>の項目内の検索テキストのすべてのインスタンスを検索する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-591">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindString%2A> method to search for all instances of the search text in the items of the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-592">この例では、<xref:System.Windows.Forms.ListBox.FindString%2A> メソッドのバージョンを使用します。これを使用すると、<xref:System.Windows.Forms.ListBox> 内のすべての項目を連続して検索するための開始検索インデックスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-592">The example uses the version of the <xref:System.Windows.Forms.ListBox.FindString%2A> method that enables you to specify a starting search index from which to do a continual search of all items in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-593">また、この例では、<xref:System.Windows.Forms.ListBox.FindString%2A> のメソッドが項目リストの一番下に達した後にリストの先頭から検索を開始するタイミングを決定して、再帰的な検索を防止する方法も示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-593">The example also demonstrates how to determine when the <xref:System.Windows.Forms.ListBox.FindString%2A> method begins searching from the top of the list after it reaches the bottom of the list of items to prevent a recursive search.</span></span> <span data-ttu-id="1fbb4-594"><xref:System.Windows.Forms.ListBox>に項目が見つかると、<xref:System.Windows.Forms.ListBox.SetSelected%2A> メソッドを使用して項目が選択されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-594">Once items are found in the <xref:System.Windows.Forms.ListBox>, they are selected using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.</span></span>  
  
 [!code-cpp[ListBox.FindString#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.FindString/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.FindString#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.FindString/CS/form1.cs#1)]
 [!code-vb[ListBox.FindString#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.FindString/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListBox.SelectedIndex" />
        <altmember cref="P:System.Windows.Forms.ListBox.SelectedItem" />
        <altmember cref="P:System.Windows.Forms.ListBox.SelectedItems" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public object SelectedItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedItem { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItem : obj with get, set" Usage="System.Windows.Forms.ListBox.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-595"><see cref="T:System.Windows.Forms.ListBox" /> 内で現在選択されている項目を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-595">Gets or sets the currently selected item in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <value><span data-ttu-id="1fbb4-596">コントロール内で現在選択されている項目を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-596">An object that represents the current selection in the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-597">標準 <xref:System.Windows.Forms.ListBox>では、このプロパティを使用して、<xref:System.Windows.Forms.ListBox>で選択されている項目を特定できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-597">For a standard <xref:System.Windows.Forms.ListBox>, you can use this property to determine which item is selected in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-598"><xref:System.Windows.Forms.ListBox> の [<xref:System.Windows.Forms.ListBox.SelectionMode%2A>] プロパティが `SelectionMode.MultiSimple` または `SelectionMode.MultiExtended` (複数選択 <xref:System.Windows.Forms.ListBox>を示す) に設定されていて、一覧で複数の項目が選択されている場合、このプロパティは選択した項目を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-598">If the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property of the <xref:System.Windows.Forms.ListBox> is set to either `SelectionMode.MultiSimple` or `SelectionMode.MultiExtended` (which indicates a multiple-selection <xref:System.Windows.Forms.ListBox>) and multiple items are selected in the list, this property can return any selected item.</span></span>  
  
 <span data-ttu-id="1fbb4-599">複数選択 <xref:System.Windows.Forms.ListBox>で選択されているすべての項目を含むコレクションを取得するには、<xref:System.Windows.Forms.ListBox.SelectedItems%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-599">To retrieve a collection containing all selected items in a multiple-selection <xref:System.Windows.Forms.ListBox>, use the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property.</span></span> <span data-ttu-id="1fbb4-600"><xref:System.Windows.Forms.ListBox>で現在選択されている項目のインデックス位置を取得する場合は、<xref:System.Windows.Forms.ListBox.SelectedIndex%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-600">If you want to obtain the index position of the currently selected item in the <xref:System.Windows.Forms.ListBox>, use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property.</span></span> <span data-ttu-id="1fbb4-601">また、<xref:System.Windows.Forms.ListBox.SelectedIndices%2A> プロパティを使用して、複数選択 <xref:System.Windows.Forms.ListBox>で選択されているすべてのインデックスを取得できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-601">In addition, you can use the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property to obtain all the selected indexes in a multiple-selection <xref:System.Windows.Forms.ListBox>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-602">次のコード例では、<xref:System.Windows.Forms.ListBox.SelectedIndexChanged> イベントを使用して、別の <xref:System.Windows.Forms.ListBox> コントロール内の項目を検索および選択する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-602">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event to search for and select an item in a different <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="1fbb4-603">この例では、<xref:System.Windows.Forms.ListBox.SelectedIndexChanged> イベントを使用して、<xref:System.Windows.Forms.ListBox> 内で選択された項目がいつ変更されたかを判断します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-603">The example uses the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event to determine when the selected item in the <xref:System.Windows.Forms.ListBox> is changed.</span></span> <span data-ttu-id="1fbb4-604">次のコード例では、<xref:System.Windows.Forms.ListBox.SelectedItem%2A> プロパティを使用して項目のテキストを読み取り、最初の <xref:System.Windows.Forms.ListBox>の <xref:System.Windows.Forms.ListBox.SelectedItem%2A> によって返されるテキストを使用して、別の <xref:System.Windows.Forms.ListBox> で <xref:System.Windows.Forms.ListBox.FindString%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-604">The example code then reads the text of the item using the <xref:System.Windows.Forms.ListBox.SelectedItem%2A> property and calls the <xref:System.Windows.Forms.ListBox.FindString%2A> method on a different <xref:System.Windows.Forms.ListBox> using the text returned by <xref:System.Windows.Forms.ListBox.SelectedItem%2A> in the first <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-605">他の <xref:System.Windows.Forms.ListBox>に項目が見つかった場合は、その項目が選択されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-605">If an item is found in the other <xref:System.Windows.Forms.ListBox>, the item is selected.</span></span> <span data-ttu-id="1fbb4-606">この例では、`listBox1` と `listBox2`という名前の2つの <xref:System.Windows.Forms.ListBox> コントロールがフォームに追加されており、両方の <xref:System.Windows.Forms.ListBox> コントロールに同一の項目が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-606">This example requires that two <xref:System.Windows.Forms.ListBox> controls, named `listBox1` and `listBox2`, have been added to a form and that both <xref:System.Windows.Forms.ListBox> controls contain items that are identical.</span></span> <span data-ttu-id="1fbb4-607">この例では、この例で定義されているイベント処理メソッドが `listBox1`の <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> イベントに接続されている必要もあります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-607">The example also requires that the event-handling method defined in the example is connected to the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event of `listBox1`.</span></span>  
  
 [!code-cpp[ListBox.SelectedIndexChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.SelectedIndexChanged/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.SelectedIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.SelectedIndexChanged/CS/form1.cs#1)]
 [!code-vb[ListBox.SelectedIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.SelectedIndexChanged/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListBox.SelectedObjectCollection SelectedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListBox/SelectedObjectCollection SelectedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItems As ListBox.SelectedObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListBox::SelectedObjectCollection ^ SelectedItems { System::Windows::Forms::ListBox::SelectedObjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItems : System.Windows.Forms.ListBox.SelectedObjectCollection" Usage="System.Windows.Forms.ListBox.SelectedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListBox+SelectedObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-608"><see cref="T:System.Windows.Forms.ListBox" /> 内で現在選択されている項目を格納するコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-608">Gets a collection containing the currently selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <value><span data-ttu-id="1fbb4-609">コントロール内で現在選択されている項目を格納している <see cref="T:System.Windows.Forms.ListBox.SelectedObjectCollection" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-609">A <see cref="T:System.Windows.Forms.ListBox.SelectedObjectCollection" /> containing the currently selected items in the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-610">複数選択 <xref:System.Windows.Forms.ListBox>の場合、このプロパティは、<xref:System.Windows.Forms.ListBox>で選択されているすべての項目を含むコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-610">For a multiple-selection <xref:System.Windows.Forms.ListBox>, this property returns a collection containing all items that are selected in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-611">単一選択 <xref:System.Windows.Forms.ListBox>の場合、このプロパティは、<xref:System.Windows.Forms.ListBox>内で選択された唯一の項目を含む単一の要素を含むコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-611">For a single-selection <xref:System.Windows.Forms.ListBox>, this property returns a collection containing a single element containing the only selected item in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-612">コレクションの項目を操作する方法の詳細については、「<xref:System.Windows.Forms.ListBox.SelectedObjectCollection>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-612">For more information about how to manipulate the items of the collection, see <xref:System.Windows.Forms.ListBox.SelectedObjectCollection>.</span></span>  
  
 <span data-ttu-id="1fbb4-613"><xref:System.Windows.Forms.ListBox> クラスには、選択した項目を参照するさまざまな方法が用意されています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-613">The <xref:System.Windows.Forms.ListBox> class provides a number of ways to reference selected items.</span></span> <span data-ttu-id="1fbb4-614"><xref:System.Windows.Forms.ListBox.SelectedItems%2A> プロパティを使用して、単一選択 <xref:System.Windows.Forms.ListBox>で現在選択されている項目を取得する代わりに、<xref:System.Windows.Forms.ListBox.SelectedItem%2A> プロパティを使用できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-614">Instead of using the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property to obtain the currently selected item in a single-selection <xref:System.Windows.Forms.ListBox>, you can use the <xref:System.Windows.Forms.ListBox.SelectedItem%2A> property.</span></span> <span data-ttu-id="1fbb4-615">項目自体ではなく、<xref:System.Windows.Forms.ListBox>で現在選択されている項目のインデックス位置を取得する場合は、<xref:System.Windows.Forms.ListBox.SelectedIndex%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-615">If you want to obtain the index position of an item that is currently selected in the <xref:System.Windows.Forms.ListBox>, instead of the item itself, use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property.</span></span> <span data-ttu-id="1fbb4-616">また、複数選択 <xref:System.Windows.Forms.ListBox>で選択されているすべての項目のインデックス位置を取得する場合は、<xref:System.Windows.Forms.ListBox.SelectedIndices%2A> プロパティを使用できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-616">In addition, you can use the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property if you want to obtain the index positions of all selected items in a multiple-selection <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.SelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectionMode As SelectionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::SelectionMode SelectionMode { System::Windows::Forms::SelectionMode get(); void set(System::Windows::Forms::SelectionMode value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionMode : System.Windows.Forms.SelectionMode with get, set" Usage="System.Windows.Forms.ListBox.SelectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-617"><see cref="T:System.Windows.Forms.ListBox" /> で項目を選択する方法を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-617">Gets or sets the method in which items are selected in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <value><span data-ttu-id="1fbb4-618"><see cref="T:System.Windows.Forms.SelectionMode" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-618">One of the <see cref="T:System.Windows.Forms.SelectionMode" /> values.</span></span> <span data-ttu-id="1fbb4-619">既定値は、<see langword="SelectionMode.One" /> です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-619">The default is <see langword="SelectionMode.One" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-620"><xref:System.Windows.Forms.ListBox.SelectionMode%2A> プロパティを使用すると、ユーザーが一度に選択できる <xref:System.Windows.Forms.ListBox> 内の項目数と、ユーザーが複数選択を行う方法を決定できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-620">The <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property enables you to determine how many items in the <xref:System.Windows.Forms.ListBox> a user can select at one time and how the user can make multiple-selections.</span></span> <span data-ttu-id="1fbb4-621"><xref:System.Windows.Forms.ListBox.SelectionMode%2A> プロパティが `SelectionMode.MultiExtended`に設定されている場合は、SHIFT キーを押しながらマウスを押すか、SHIFT キーを押しながら方向キー (↑、↓、←、→) のいずれかをクリックすると、前に選択した項目から現在の項目までの選択範囲が拡張されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-621">When the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property is set to `SelectionMode.MultiExtended`, pressing SHIFT and clicking the mouse or pressing SHIFT and one of the arrow keys (UP ARROW, DOWN ARROW, LEFT ARROW, and RIGHT ARROW) extends the selection from the previously selected item to the current item.</span></span> <span data-ttu-id="1fbb4-622">CTRL キーを押しながらマウスをクリックすると、一覧の項目が選択または選択解除されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-622">Pressing CTRL and clicking the mouse selects or deselects an item in the list.</span></span> <span data-ttu-id="1fbb4-623">プロパティが `SelectionMode.MultiSimple`に設定されている場合は、マウスのクリックまたは SPACE キーを押して、一覧の項目を選択または選択解除します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-623">When the property is set to `SelectionMode.MultiSimple`, a mouse click or pressing the SPACEBAR selects or deselects an item in the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-624">次のコード例では、<xref:System.Windows.Forms.ListBox.GetSelected%2A> メソッドを使用して、選択されていない項目を選択し、選択されている項目の選択を解除するために <xref:System.Windows.Forms.ListBox> 内の項目を選択する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-624">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.GetSelected%2A> method to determine which items in a <xref:System.Windows.Forms.ListBox> are selected in order to select the items that are not selected and deselect the items that are selected.</span></span> <span data-ttu-id="1fbb4-625">また、この例では、<xref:System.Windows.Forms.ListBox.SelectionMode%2A> プロパティを使用して <xref:System.Windows.Forms.ListBox> に複数の項目を選択し、<xref:System.Windows.Forms.ListBox.Sorted%2A> プロパティを使用して <xref:System.Windows.Forms.ListBox> 内の項目を自動的に並べ替える方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-625">The example also demonstrates using the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property to enable a <xref:System.Windows.Forms.ListBox> to have more than one selected item and uses the <xref:System.Windows.Forms.ListBox.Sorted%2A> property to demonstrate how to sort items in a <xref:System.Windows.Forms.ListBox> automatically.</span></span> <span data-ttu-id="1fbb4-626">この例では、`listBox1`という名前の <xref:System.Windows.Forms.ListBox>がフォームに追加され、この例で定義されている `InitializeMyListBox` メソッドがフォームの <xref:System.Windows.Forms.Form.Load> イベントから呼び出されることが必要です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-626">This example requires that a <xref:System.Windows.Forms.ListBox>, named `listBox1`, has been added to a form and that the `InitializeMyListBox` method defined in the example is called from the <xref:System.Windows.Forms.Form.Load> event of the form.</span></span>  
  
 [!code-cpp[ListBox.GetSelected#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.GetSelected/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.GetSelected#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.GetSelected/CS/form1.cs#1)]
 [!code-vb[ListBox.GetSelected#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.GetSelected/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="1fbb4-627">代入された値が、<see cref="T:System.Windows.Forms.SelectionMode" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-627">The assigned value is not one of the <see cref="T:System.Windows.Forms.SelectionMode" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.SelectionMode" />
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="listBox.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1fbb4-628">コントロールの新しい <see cref="P:System.Windows.Forms.Control.Left" /> プロパティ値。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-628">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span></span></param>
        <param name="y"><span data-ttu-id="1fbb4-629">コントロールの新しい <see cref="P:System.Windows.Forms.Control.Top" /> プロパティ値。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-629">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span></span></param>
        <param name="width"><span data-ttu-id="1fbb4-630">コントロールの新しい <see cref="P:System.Windows.Forms.Control.Width" /> プロパティ値。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-630">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span></span></param>
        <param name="height"><span data-ttu-id="1fbb4-631">コントロールの新しい <see cref="P:System.Windows.Forms.Control.Height" /> プロパティ値。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-631">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span></span></param>
        <param name="specified"><span data-ttu-id="1fbb4-632"><see cref="T:System.Windows.Forms.BoundsSpecified" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-632">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span></span></param>
        <summary><span data-ttu-id="1fbb4-633"><see cref="T:System.Windows.Forms.ListBox" /> コントロールの指定した境界を設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-633">Sets the specified bounds of the <see cref="T:System.Windows.Forms.ListBox" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-634"><xref:System.Windows.Forms.ListBox> コントロールの高さは、<xref:System.Windows.Forms.ListBox.ItemHeight%2A> プロパティの倍数によって増減します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-634">The height of the <xref:System.Windows.Forms.ListBox> control increases and decreases by a multiple of the <xref:System.Windows.Forms.ListBox.ItemHeight%2A> property.</span></span> <span data-ttu-id="1fbb4-635">Height が <xref:System.Windows.Forms.ListBox.ItemHeight%2A>の倍数ではない数値の場合、<xref:System.Windows.Forms.ListBox> の高さは、height よりも小さくなる最大の倍数によって変化します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-635">If height is a number that is not a multiple of <xref:System.Windows.Forms.ListBox.ItemHeight%2A>, the height of the <xref:System.Windows.Forms.ListBox> will change by the largest multiple that is less than height.</span></span>  
  
 <span data-ttu-id="1fbb4-636">通常、指定されたパラメーターに含まれていない境界に対応するパラメーターは、現在の値と共に渡されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-636">Typically, the parameters that correspond to the bounds not included in the specified parameter are passed in with their current values.</span></span> <span data-ttu-id="1fbb4-637">たとえば、`height`、`width`、または <xref:System.Windows.Forms.Control.Location%2A> プロパティの `x` または `y` プロパティは、コントロールの現在のインスタンスへの参照を使用して渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-637">For example, the `height`, `width`, or the `x` or `y` properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control.</span></span> <span data-ttu-id="1fbb4-638">ただし、渡されたすべての値が受け入れられ、コントロールに適用されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-638">However, all values passed in are honored and applied to the control.</span></span>  
  
 <span data-ttu-id="1fbb4-639">`specified` パラメーターは、アプリケーションによって変更 <xref:System.Windows.Forms.Control.Bounds%2A> されるコントロールの要素を表します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-639">The `specified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application.</span></span> <span data-ttu-id="1fbb4-640">たとえば、コントロールの <xref:System.Windows.Forms.Control.Size%2A> を変更した場合、`specified` パラメーター値は <xref:System.Windows.Forms.BoundsSpecified.Size>になります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-640">For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `specified` parameter value is <xref:System.Windows.Forms.BoundsSpecified.Size>.</span></span> <span data-ttu-id="1fbb4-641">ただし、設定する <xref:System.Windows.Forms.Control.Dock%2A> プロパティに応じて <xref:System.Windows.Forms.Control.Size%2A> が調整されている場合、`specified` パラメーター値は <xref:System.Windows.Forms.BoundsSpecified.None>です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-641">However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `specified` parameter value is <xref:System.Windows.Forms.BoundsSpecified.None>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1fbb4-642">派生クラスで <see cref="M:System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> をオーバーライドする場合は、基本クラスの <see cref="M:System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> メソッドを呼び出して、コントロールの境界を強制的に変更するようにしてください。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-642">When overriding <see cref="M:System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method to force the bounds of the control to change.</span></span> <span data-ttu-id="1fbb4-643">派生クラスでは、<see cref="M:System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> メソッドにサイズ制限を追加できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-643">Derived classes can add size restrictions to the <see cref="M:System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SetItemCore">
      <MemberSignature Language="C#" Value="protected override void SetItemCore (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItemCore(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SetItemCore(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItemCore (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItemCore(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.SetItemCore : int * obj -&gt; unit" Usage="listBox.SetItemCore (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="1fbb4-644">オブジェクトの配列インデックス。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-644">The array index of the object.</span></span></param>
        <param name="value"><span data-ttu-id="1fbb4-645">オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-645">The object.</span></span></param>
        <summary><span data-ttu-id="1fbb4-646">派生クラスで、指定したインデックスを使用してオブジェクトを設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-646">Sets the object with the specified index in the derived class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemsCore">
      <MemberSignature Language="C#" Value="protected override void SetItemsCore (System.Collections.IList value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItemsCore(class System.Collections.IList value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SetItemsCore(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItemsCore (value As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItemsCore(System::Collections::IList ^ value);" />
      <MemberSignature Language="F#" Value="override this.SetItemsCore : System.Collections.IList -&gt; unit" Usage="listBox.SetItemsCore value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1fbb4-647">コントロールに挿入するオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-647">An array of objects to insert into the control.</span></span></param>
        <summary><span data-ttu-id="1fbb4-648"><see cref="T:System.Windows.Forms.ListBox" /> の内容を消去し、指定した項目をコントロールに追加します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-648">Clears the contents of the <see cref="T:System.Windows.Forms.ListBox" /> and adds the specified items to the control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelected">
      <MemberSignature Language="C#" Value="public void SetSelected (int index, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelected(int32 index, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SetSelected(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelected (index As Integer, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelected(int index, bool value);" />
      <MemberSignature Language="F#" Value="member this.SetSelected : int * bool -&gt; unit" Usage="listBox.SetSelected (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="1fbb4-649"><see cref="T:System.Windows.Forms.ListBox" /> 内で選択または選択解除する項目の 0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-649">The zero-based index of the item in a <see cref="T:System.Windows.Forms.ListBox" /> to select or clear the selection for.</span></span></param>
        <param name="value"><span data-ttu-id="1fbb4-650">指定された項目を選択する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-650"><see langword="true" /> to select the specified item; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1fbb4-651"><see cref="T:System.Windows.Forms.ListBox" /> 内の指定された項目を選択または選択解除します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-651">Selects or clears the selection for the specified item in a <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-652">このプロパティを使用して、複数選択 <xref:System.Windows.Forms.ListBox>内の項目の選択を設定できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-652">You can use this property to set the selection of items in a multiple-selection <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-653">1つの選択 <xref:System.Windows.Forms.ListBox>で項目を選択するには、<xref:System.Windows.Forms.ListBox.SelectedIndex%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-653">To select an item in a single-selection <xref:System.Windows.Forms.ListBox>, use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-654">次のコード例では、複数の項目を1つの列に表示し、コントロールの一覧で複数の項目を選択できる <xref:System.Windows.Forms.ListBox> コントロールを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-654">The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list.</span></span> <span data-ttu-id="1fbb4-655">この例のコードでは、<xref:System.Windows.Forms.ListBox.ObjectCollection> クラスの <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> メソッドを使用して <xref:System.Windows.Forms.ListBox> に50項目を追加し、<xref:System.Windows.Forms.ListBox.SetSelected%2A> メソッドを使用してリストから3つの項目を選択します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-655">The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.</span></span> <span data-ttu-id="1fbb4-656">このコードでは、<xref:System.Windows.Forms.ListBox.SelectedObjectCollection> コレクション (<xref:System.Windows.Forms.ListBox.SelectedItems%2A> プロパティを通じて) と <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (<xref:System.Windows.Forms.ListBox.SelectedIndices%2A> プロパティを通じて) の値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-656">The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection (through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property) and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property).</span></span> <span data-ttu-id="1fbb4-657">この例では、コードがに配置され、<xref:System.Windows.Forms.Form>から呼び出される必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-657">This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic ListBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ListBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ListBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ListBox Example/CS/source.cs#1)]
 [!code-vb[Classic ListBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ListBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1fbb4-658">指定したインデックスが有効値の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-658">The specified index was outside the range of valid values.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fbb4-659"><see cref="P:System.Windows.Forms.ListBox.SelectionMode" /> プロパティが <see langword="None" /> に設定されました。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-659">The <see cref="P:System.Windows.Forms.ListBox.SelectionMode" /> property was set to <see langword="None" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.ListBox.SelectedIndex" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="protected virtual void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.Sort" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Sort();" />
      <MemberSignature Language="F#" Value="abstract member Sort : unit -&gt; unit&#xA;override this.Sort : unit -&gt; unit" Usage="listBox.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fbb4-660"><see cref="T:System.Windows.Forms.ListBox" /> 内の項目を並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-660">Sorts the items in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-661"><xref:System.Windows.Forms.ListBox.Sorted%2A> プロパティが `true`場合、<xref:System.Windows.Forms.ListBox.Sort%2A> は、各項目をコレクションに強制的に追加します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-661"><xref:System.Windows.Forms.ListBox.Sort%2A> forces the collection to add each item back to itself if the <xref:System.Windows.Forms.ListBox.Sorted%2A> property is `true`.</span></span> <span data-ttu-id="1fbb4-662">各項目は正しい位置に挿入されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-662">Each item is then inserted into the correct position.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-663">次のコード例は、<xref:System.Windows.Forms.ListBox.Sort%2A> メソッドの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-663">The following code example demonstrates using the <xref:System.Windows.Forms.ListBox.Sort%2A> method.</span></span> <span data-ttu-id="1fbb4-664">この例では、<xref:System.Windows.Forms.ListBox> クラスから継承し、派生クラスの <xref:System.Windows.Forms.ListBox.Sort%2A> メソッドをオーバーライドして、ユーザー定義の並べ替えを実行する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-664">The example demonstrates inheriting from the <xref:System.Windows.Forms.ListBox> class and overriding the <xref:System.Windows.Forms.ListBox.Sort%2A> method in the derived class to perform a user-defined sort.</span></span> <span data-ttu-id="1fbb4-665">この例を実行するには、空のフォームに次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-665">To run this example paste the following code in an empty form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListBoxSort#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxSort/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListBoxSort#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxSort/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBoxSort#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBoxSort/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1fbb4-666">派生クラスでこのメソッドをオーバーライドして、独自の並べ替えルーチンを提供できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-666">You can override this method in your derived class to provide your own sorting routine.</span></span> <span data-ttu-id="1fbb4-667"><see cref="P:System.Windows.Forms.ListBox.Sorted" /> プロパティを <see langword="true" />に設定して、オーバーライドされた <see cref="M:System.Windows.Forms.ListBox.Sort" /> メソッドの結果にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-667">Access the results of the overridden <see cref="M:System.Windows.Forms.ListBox.Sort" /> method by setting the <see cref="P:System.Windows.Forms.ListBox.Sorted" /> property to <see langword="true" />.</span></span> <span data-ttu-id="1fbb4-668"><see cref="T:System.Windows.Forms.ListBox" />に項目を追加する場合は、まず項目を並べ替えてから、新しい項目を追加する方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-668">When adding items to a <see cref="T:System.Windows.Forms.ListBox" />, it is more efficient to sort the items first and then add new items.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.ListBox.Sorted" />
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public bool Sorted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Sorted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public Property Sorted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Sorted { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Sorted : bool with get, set" Usage="System.Windows.Forms.ListBox.Sorted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-669"><see cref="T:System.Windows.Forms.ListBox" /> 内の項目をアルファベット順に並べ替えるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-669">Gets or sets a value indicating whether the items in the <see cref="T:System.Windows.Forms.ListBox" /> are sorted alphabetically.</span></span></summary>
        <value><span data-ttu-id="1fbb4-670">コントロール内の項目を並べ替える場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-670"><see langword="true" /> if items in the control are sorted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1fbb4-671">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-671">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-672"><xref:System.Windows.Forms.ListBox>で文字列をアルファベット順に自動的に並べ替えるには、<xref:System.Windows.Forms.ListBox.Sorted%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-672">Use the <xref:System.Windows.Forms.ListBox.Sorted%2A> property to automatically sort strings alphabetically in a <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-673">並べ替えられた <xref:System.Windows.Forms.ListBox>に項目が追加されると、その項目は並べ替えられたリスト内の適切な場所に移動されます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-673">As items are added to a sorted <xref:System.Windows.Forms.ListBox>, the items are moved to the appropriate location in the sorted list.</span></span> <span data-ttu-id="1fbb4-674"><xref:System.Windows.Forms.ListBox>に項目を追加する場合は、まず項目を並べ替えてから、新しい項目を追加する方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-674">When adding items to a <xref:System.Windows.Forms.ListBox>, it is more efficient to sort the items first and then add new items.</span></span>  
  
 <span data-ttu-id="1fbb4-675"><xref:System.Windows.Forms.ListBox.Sorted%2A> が `true` に設定されている <xref:System.Windows.Forms.ListBox> は、<xref:System.Windows.Forms.ListControl.DataSource%2A> プロパティを使用してデータにバインドすることはできません。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-675">A <xref:System.Windows.Forms.ListBox> with its <xref:System.Windows.Forms.ListBox.Sorted%2A> set to `true` should not be bound to data using the <xref:System.Windows.Forms.ListControl.DataSource%2A> property.</span></span> <span data-ttu-id="1fbb4-676">バインドされた <xref:System.Windows.Forms.ListBox>に並べ替えられたデータを表示するには、並べ替えをサポートするデータソースにバインドし、データソースで並べ替えを行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-676">To display sorted data in a bound <xref:System.Windows.Forms.ListBox>, you should bind to a data source that supports sorting and have the data source provide the sorting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-677">次のコード例では、<xref:System.Windows.Forms.ListBox.GetSelected%2A> メソッドを使用して、選択されていない項目を選択し、選択されている項目の選択を解除するために <xref:System.Windows.Forms.ListBox> 内の項目を選択する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-677">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.GetSelected%2A> method to determine which items in a <xref:System.Windows.Forms.ListBox> are selected in order to select the items that are not selected and deselect the items that are selected.</span></span> <span data-ttu-id="1fbb4-678">また、この例では、<xref:System.Windows.Forms.ListBox.SelectionMode%2A> プロパティを使用して <xref:System.Windows.Forms.ListBox> に複数の項目を選択し、<xref:System.Windows.Forms.ListBox.Sorted%2A> プロパティを使用して <xref:System.Windows.Forms.ListBox> 内の項目を自動的に並べ替える方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-678">The example also demonstrates using the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property to enable a <xref:System.Windows.Forms.ListBox> to have more than one selected item and uses the <xref:System.Windows.Forms.ListBox.Sorted%2A> property to demonstrate how to sort items in a <xref:System.Windows.Forms.ListBox> automatically.</span></span> <span data-ttu-id="1fbb4-679">この例では、`listBox1`という名前の <xref:System.Windows.Forms.ListBox>がフォームに追加され、この例で定義されている `InitializeMyListBox` メソッドがフォームの <xref:System.Windows.Forms.Form.Load> イベントから呼び出されることが必要です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-679">This example requires that a <xref:System.Windows.Forms.ListBox>, named `listBox1`, has been added to a form and that the `InitializeMyListBox` method defined in the example is called from the <xref:System.Windows.Forms.Form.Load> event of the form.</span></span>  
  
 [!code-cpp[ListBox.GetSelected#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.GetSelected/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.GetSelected#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.GetSelected/CS/form1.cs#1)]
 [!code-vb[ListBox.GetSelected#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.GetSelected/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.ListBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-680"><see cref="T:System.Windows.Forms.ListBox" /> 内で現在選択されている項目のテキストを取得または検索します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-680">Gets or searches for the text of the currently selected item in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <value><span data-ttu-id="1fbb4-681">コントロール内で現在選択されている項目のテキスト。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-681">The text of the currently selected item in the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-682">このプロパティの値が文字列値に設定されている場合、<xref:System.Windows.Forms.ListBox> は、指定されたテキストに一致する <xref:System.Windows.Forms.ListBox> 内の項目を検索し、その項目を選択します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-682">When the value of this property is set to a string value, the <xref:System.Windows.Forms.ListBox> searches for the item within the <xref:System.Windows.Forms.ListBox> that matches the specified text and selects the item.</span></span> <span data-ttu-id="1fbb4-683">このプロパティを使用して、<xref:System.Windows.Forms.ListBox>で現在選択されている項目を確認することもできます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-683">You can also use this property to determine which items are currently selected in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-684"><xref:System.Windows.Forms.ListBox> の <xref:System.Windows.Forms.ListBox.SelectionMode%2A> プロパティが `SelectionMode.MultiExtended`に設定されている場合、このプロパティは最初に選択された項目のテキストを返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-684">If the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property of the <xref:System.Windows.Forms.ListBox> is set to `SelectionMode.MultiExtended`, this property returns the text of the first selected item.</span></span> <span data-ttu-id="1fbb4-685"><xref:System.Windows.Forms.ListBox> の <xref:System.Windows.Forms.ListBox.SelectionMode%2A> プロパティが `SelectionMode.None`に設定されていない場合、このプロパティは最初に選択された項目のテキストを返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-685">If the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property of the <xref:System.Windows.Forms.ListBox> is not set to `SelectionMode.None`, this property returns the text of the first selected item.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListBox.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-686"><see cref="P:System.Windows.Forms.ListBox.Text" /> プロパティが変更されると発生します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-686">Occurs when the <see cref="P:System.Windows.Forms.ListBox.Text" /> property is changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopIndex">
      <MemberSignature Language="C#" Value="public int TopIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TopIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.TopIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property TopIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TopIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TopIndex : int with get, set" Usage="System.Windows.Forms.ListBox.TopIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-687"><see cref="T:System.Windows.Forms.ListBox" /> に最初に表示される項目のインデックスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-687">Gets or sets the index of the first visible item in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <value><span data-ttu-id="1fbb4-688">コントロールに最初に表示される項目の 0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-688">The zero-based index of the first visible item in the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-689">初期状態では、インデックス位置がゼロ (0) の項目は <xref:System.Windows.Forms.ListBox>の可視領域の先頭にあります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-689">Initially, the item with the index position zero (0) is at the top of the visible region of the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-690"><xref:System.Windows.Forms.ListBox> の内容がスクロールされている場合は、コントロールの表示領域の上部に別の項目が表示されることがあります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-690">If the contents of the <xref:System.Windows.Forms.ListBox> have been scrolled, another item might be at the top of the control's display area.</span></span> <span data-ttu-id="1fbb4-691">このプロパティを使用すると、コントロールの可視領域の上部に現在配置されている項目の <xref:System.Windows.Forms.ListBox> の <xref:System.Windows.Forms.ListBox.ObjectCollection> 内のインデックスを取得できます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-691">You can use this property to obtain the index within the <xref:System.Windows.Forms.ListBox.ObjectCollection> for the <xref:System.Windows.Forms.ListBox> of the item that is currently positioned at the top of the visible region of the control.</span></span> <span data-ttu-id="1fbb4-692">このプロパティを使用して、コントロールの表示領域の上部にあるリストに項目を配置することもできます。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-692">You can also use this property to position an item in the list at the top of the visible region of the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fbb4-693">次のコード例では、<xref:System.Windows.Forms.ListBox.SelectedIndex%2A> プロパティを <xref:System.Windows.Forms.ListBox.TopIndex%2A> プロパティと共に使用して、現在選択されている項目を <xref:System.Windows.Forms.ListBox>の表示領域内の項目リストの先頭に移動する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-693">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property with the <xref:System.Windows.Forms.ListBox.TopIndex%2A> property to move the currently selected item to the top of the list of items in the display area of the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-694">この例では、<xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=nameWithType> クラスの <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> メソッドを使用して項目を削除する方法と、<xref:System.Windows.Forms.ListBox.ClearSelected%2A> メソッドを使用してすべての項目選択をクリアする方法について詳しく説明します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-694">The example further demonstrates how to remove items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=nameWithType> class, and how to clear all item selection using the <xref:System.Windows.Forms.ListBox.ClearSelected%2A> method.</span></span> <span data-ttu-id="1fbb4-695">このコードは、まず、<xref:System.Windows.Forms.ListBox> 内の現在選択されている項目を一覧の先頭に移動します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-695">The code first moves the currently selected item in the <xref:System.Windows.Forms.ListBox> to the top of the list.</span></span> <span data-ttu-id="1fbb4-696">次に、現在選択されている項目の前にあるすべての項目を削除し、<xref:System.Windows.Forms.ListBox>のすべての選択を解除します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-696">The code then removes all items before the currently selected item and clears all selections in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="1fbb4-697">この例では、項目を含む <xref:System.Windows.Forms.ListBox> をフォームに追加し、項目が <xref:System.Windows.Forms.ListBox>で現在選択されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-697">This example requires that a <xref:System.Windows.Forms.ListBox> containing items is added to a form and that an item is currently selected in the <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 [!code-cpp[ListBox.SelectedIndex#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.SelectedIndex/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.SelectedIndex#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.SelectedIndex/CS/form1.cs#1)]
 [!code-vb[ListBox.SelectedIndex#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.SelectedIndex/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="listBox.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fbb4-698"><see cref="T:System.Windows.Forms.ListBox" /> の文字列形式を返します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-698">Returns a string representation of the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <returns><span data-ttu-id="1fbb4-699">文字数が 0 でない場合は、コントロールの型、<see cref="T:System.Windows.Forms.ListBox" /> コントロール内の項目数、および <see cref="T:System.Windows.Forms.ListBox" /> 内の最初の項目の Text プロパティを記述した文字列。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-699">A string that states the control type, the count of items in the <see cref="T:System.Windows.Forms.ListBox" /> control, and the Text property of the first item in the <see cref="T:System.Windows.Forms.ListBox" />, if the count is not 0.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCustomTabOffsets">
      <MemberSignature Language="C#" Value="public bool UseCustomTabOffsets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCustomTabOffsets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.UseCustomTabOffsets" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCustomTabOffsets As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCustomTabOffsets { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCustomTabOffsets : bool with get, set" Usage="System.Windows.Forms.ListBox.UseCustomTabOffsets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-700"><see cref="T:System.Windows.Forms.ListBox" /> 整数配列を使用して <see cref="P:System.Windows.Forms.ListBox.CustomTabOffsets" /> が文字列を描画するときに、タブ文字を認識および展開するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-700">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.ListBox" /> recognizes and expands tab characters when it draws its strings by using the <see cref="P:System.Windows.Forms.ListBox.CustomTabOffsets" /> integer array.</span></span></summary>
        <value><span data-ttu-id="1fbb4-701"><see cref="T:System.Windows.Forms.ListBox" /> がタブ文字を認識および展開する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-701"><see langword="true" /> if the <see cref="T:System.Windows.Forms.ListBox" /> recognizes and expands tab characters; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1fbb4-702">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-702">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.ListBox.CustomTabOffsets" />
      </Docs>
    </Member>
    <Member MemberName="UseTabStops">
      <MemberSignature Language="C#" Value="public bool UseTabStops { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseTabStops" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.UseTabStops" />
      <MemberSignature Language="VB.NET" Value="Public Property UseTabStops As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseTabStops { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseTabStops : bool with get, set" Usage="System.Windows.Forms.ListBox.UseTabStops" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fbb4-703"><see cref="T:System.Windows.Forms.ListBox" /> で文字列を描画するときにタブ文字を認識して展開するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-703">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.ListBox" /> can recognize and expand tab characters when drawing its strings.</span></span></summary>
        <value><span data-ttu-id="1fbb4-704">コントロールでタブ文字を展開できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-704"><see langword="true" /> if the control can expand tab characters; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1fbb4-705">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-705">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1fbb4-706">次のコード例は、タブ文字を含む項目を表示する <xref:System.Windows.Forms.ListBox> を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-706">The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> that displays items with tab characters.</span></span>  
  
 [!code-cpp[ListBox.UseTabStops#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.UseTabStops/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.UseTabStops#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.UseTabStops/CS/form1.cs#1)]
 [!code-vb[ListBox.UseTabStops#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.UseTabStops/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1fbb4-707">アンマネージコードを操作するために使用します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-707">for operating with unmanaged code.</span></span> <span data-ttu-id="1fbb4-708">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="1fbb4-708">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="WmReflectCommand">
      <MemberSignature Language="C#" Value="protected virtual void WmReflectCommand (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WmReflectCommand(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.WmReflectCommand(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WmReflectCommand (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WmReflectCommand(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member WmReflectCommand : Message -&gt; unit&#xA;override this.WmReflectCommand : Message -&gt; unit" Usage="listBox.WmReflectCommand m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="1fbb4-709">トップレベル ウィンドウが <see cref="T:System.Windows.Forms.Message" /> コントロールに送信した <see cref="T:System.Windows.Forms.ListBox" />。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-709">The <see cref="T:System.Windows.Forms.Message" /> the top-level window sent to the <see cref="T:System.Windows.Forms.ListBox" /> control.</span></span></param>
        <summary><span data-ttu-id="1fbb4-710"><see cref="T:System.Windows.Forms.ListView" /> コントロールがトップレベル ウィンドウから受け取るコマンド メッセージを処理します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-710">Processes the command message the <see cref="T:System.Windows.Forms.ListView" /> control receives from the top-level window.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc : Message -&gt; unit" Usage="listBox.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="1fbb4-711">Windows メッセージ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-711">A Windows Message Object.</span></span></param>
        <summary><span data-ttu-id="1fbb4-712">リストのウィンドウ プロシージャ。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-712">The list's window procedure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fbb4-713">継承クラスはこれをオーバーライドして追加機能を追加できますが、リストが正常に機能し続けるようにするには、基本クラスの <xref:System.Windows.Forms.ListBox.WndProc%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-713">Inheriting classes can override this to add extra functionality, but should call the <xref:System.Windows.Forms.ListBox.WndProc%2A> method on the base class to ensure that the list continues to function properly.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1fbb4-714">アンマネージコードを操作するために使用します。</span><span class="sxs-lookup"><span data-stu-id="1fbb4-714">for operating with unmanaged code.</span></span> <span data-ttu-id="1fbb4-715">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="1fbb4-715">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>
