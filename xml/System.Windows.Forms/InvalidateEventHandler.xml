<Type Name="InvalidateEventHandler" FullName="System.Windows.Forms.InvalidateEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e1aa3de3d5b658252f60a6567452f6faadcdfca" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83977495" /></Metadata><TypeSignature Language="C#" Value="public delegate void InvalidateEventHandler(object sender, InvalidateEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed InvalidateEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.InvalidateEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub InvalidateEventHandler(sender As Object, e As InvalidateEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void InvalidateEventHandler(System::Object ^ sender, InvalidateEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type InvalidateEventHandler = delegate of obj * InvalidateEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Forms.InvalidateEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="a2445-101">イベントのソースです。</span><span class="sxs-lookup"><span data-stu-id="a2445-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="a2445-102">イベント データを格納している <see cref="T:System.Windows.Forms.InvalidateEventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="a2445-102">An <see cref="T:System.Windows.Forms.InvalidateEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="a2445-103"><see cref="T:System.Windows.Forms.Control" /> の <see cref="E:System.Windows.Forms.Control.Invalidated" /> イベントを処理するメソッドを表します。</span><span class="sxs-lookup"><span data-stu-id="a2445-103">Represents the method that will handle the <see cref="E:System.Windows.Forms.Control.Invalidated" /> event of a <see cref="T:System.Windows.Forms.Control" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2445-104"><xref:System.Windows.Forms.InvalidateEventHandler> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="a2445-104">When you create an <xref:System.Windows.Forms.InvalidateEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="a2445-105">イベント ハンドラーにイベントを関連付けるには、イベントにデリゲートのインスタンスを追加します。</span><span class="sxs-lookup"><span data-stu-id="a2445-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="a2445-106">イベント ハンドラーは、デリゲートを削除しない限り、イベントが発生するたびに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="a2445-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="a2445-107">デリゲートを使用したイベントの処理の詳細については、「[イベントの処理と発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a2445-107">For more information about handling events with delegates, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Windows.Forms.Control.Invalidated" />
    <altmember cref="T:System.Windows.Forms.InvalidateEventArgs" />
  </Docs>
</Type>
