<Type Name="MaskedTextBox" FullName="System.Windows.Forms.MaskedTextBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="15314b8fcc772fbd0572fe37eecaf7196d9233a6" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82378605" /></Metadata><TypeSignature Language="C#" Value="public class MaskedTextBox : System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MaskedTextBox extends System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MaskedTextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class MaskedTextBox&#xA;Inherits TextBoxBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class MaskedTextBox : System::Windows::Forms::TextBoxBase" />
  <TypeSignature Language="F#" Value="type MaskedTextBox = class&#xA;    inherit TextBoxBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("MaskInputRejected")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Mask")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.MaskedTextBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.MaskedTextBoxDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="aca1c-101">ユーザー入力が適切か不適切かを区別するマスクを使用します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-101">Uses a mask to distinguish between proper and improper user input.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-102"><xref:System.Windows.Forms.MaskedTextBox> クラスは、ユーザー入力を受け入れたり拒否したりするための宣言構文をサポートする、強化された <xref:System.Windows.Forms.TextBox> コントロールです。</span><span class="sxs-lookup"><span data-stu-id="aca1c-102">The <xref:System.Windows.Forms.MaskedTextBox> class is an enhanced <xref:System.Windows.Forms.TextBox> control that supports a declarative syntax for accepting or rejecting user input.</span></span> <span data-ttu-id="aca1c-103"><xref:System.Windows.Forms.MaskedTextBox.Mask%2A> プロパティを使用すると、アプリケーションにカスタム検証ロジックを記述しなくても、次の入力を指定できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-103">Using the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property, you can specify the following input without writing any custom validation logic in your application:</span></span>  
  
-   <span data-ttu-id="aca1c-104">入力文字が必要です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-104">Required input characters.</span></span>  
  
-   <span data-ttu-id="aca1c-105">省略可能な入力文字。</span><span class="sxs-lookup"><span data-stu-id="aca1c-105">Optional input characters.</span></span>  
  
-   <span data-ttu-id="aca1c-106">マスク内の特定の位置に必要な入力の種類。たとえば、数字、英字、英数字などです。</span><span class="sxs-lookup"><span data-stu-id="aca1c-106">The type of input expected at a given position in the mask; for example, a digit, or an alphabetic or alphanumeric character.</span></span>  
  
-   <span data-ttu-id="aca1c-107"><xref:System.Windows.Forms.MaskedTextBox>に直接表示する必要があるリテラルまたは文字をマスクします。たとえば、電話番号のハイフン (-) や価格の通貨記号などです。</span><span class="sxs-lookup"><span data-stu-id="aca1c-107">Mask literals, or characters that should appear directly in the <xref:System.Windows.Forms.MaskedTextBox>; for example, the hyphens (-) in a phone number, or the currency symbol in a price.</span></span>  
  
-   <span data-ttu-id="aca1c-108">入力文字の特別な処理たとえば、英字を大文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-108">Special processing for input characters; for example, to convert alphabetic characters to uppercase.</span></span>  
  
 <span data-ttu-id="aca1c-109">実行時に <xref:System.Windows.Forms.MaskedTextBox> コントロールを表示すると、一連のプロンプト文字とオプションのリテラル文字としてマスクを表します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-109">When a <xref:System.Windows.Forms.MaskedTextBox> control is displayed at run time, it represents the mask as a series of prompt characters and optional literal characters.</span></span> <span data-ttu-id="aca1c-110">必須または省略可能な入力を表す各編集可能なマスク位置が、1つのプロンプト文字と共に表示されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-110">Each editable mask position, representing a required or optional input, is shown with a single prompt character.</span></span> <span data-ttu-id="aca1c-111">たとえば、シャープ記号 (#) は、多くの場合、数値文字入力のプレースホルダーとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-111">For example, the number sign (#) is often used as a placeholder for a numeric character input.</span></span> <span data-ttu-id="aca1c-112"><xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> プロパティを使用して、カスタムプロンプト文字を指定できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-112">You can use the <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> property to specify a custom prompt character.</span></span> <span data-ttu-id="aca1c-113"><xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave%2A> プロパティは、コントロールが入力フォーカスを失ったときに、ユーザーにプロンプト文字が表示されるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-113">The <xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave%2A> property determines if the user sees the prompt characters when the control loses input focus.</span></span>  
  
 <span data-ttu-id="aca1c-114">ユーザーがマスクされたテキストボックスに入力を入力すると、有効な入力文字によって、それぞれのプロンプト文字が連続して置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-114">As the user types input into the masked text box, valid input characters replace their respective prompt characters in a sequential fashion.</span></span> <span data-ttu-id="aca1c-115">ユーザーが無効な入力文字を入力した場合、置換は行われませんが、<xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A> プロパティが `true`に設定されている場合はビープ音が発生し、<xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-115">If the user types an invalid input character, no replacement occurs, but instead a beep is issued if the <xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A> property is set to `true`, and the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event is raised.</span></span> <span data-ttu-id="aca1c-116">このイベントを渡すことによって、独自のカスタムエラーロジックを提供できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-116">You can provide your own custom error logic by handing this event.</span></span>  
  
 <span data-ttu-id="aca1c-117">現在の挿入ポイントがリテラル文字の場合、ユーザーにはいくつかのオプションがあります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-117">When the current insertion point is at a literal character, the user has a number of options:</span></span>  
  
-   <span data-ttu-id="aca1c-118">プロンプト文字以外の文字が入力されると、リテラルは自動的にスキップされ、次のプロンプト文字で表される次の編集可能な位置に入力文字が適用されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-118">If a character other than the prompt character is typed, the literal will automatically be skipped and the input character will be applied to the next editable position, represented by the next prompt character.</span></span>  
  
-   <span data-ttu-id="aca1c-119">プロンプト文字が入力され、<xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A> プロパティが true の場合、入力はプロンプト文字で上書きされ、挿入ポイントはマスク内の次の位置に移動されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-119">If the prompt character is typed and the <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A> property is true, the input will overtype the prompt character and insertion point will be moved to the next position in the mask.</span></span>  
  
-   <span data-ttu-id="aca1c-120">常にのように、方向キーを使用して、前または後の位置に移動できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-120">As is always the case, the arrow keys can be used to navigate to a previous or subsequent position.</span></span>  
  
 <span data-ttu-id="aca1c-121"><xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A> プロパティを使用して、ユーザーが必要な入力をすべて入力したかどうかを確認できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-121">You can use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A> property to verify whether or not the user has entered all of the required input.</span></span> <span data-ttu-id="aca1c-122"><xref:System.Windows.Forms.MaskedTextBox.Text%2A> プロパティは、マスクおよび <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> プロパティに従って、ユーザーの入力を常に取得します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-122">The <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property will always retrieve the user's input formatted according to the mask and the <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> property.</span></span>  
  
 <span data-ttu-id="aca1c-123"><xref:System.Windows.Forms.MaskedTextBox> コントロールは、すべてのマスク処理を、<xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> プロパティによって指定された <xref:System.ComponentModel.MaskedTextProvider?displayProperty=nameWithType> クラスに実際に延期します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-123">The <xref:System.Windows.Forms.MaskedTextBox> control actually defers all mask processing to the <xref:System.ComponentModel.MaskedTextProvider?displayProperty=nameWithType> class specified by the <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> property.</span></span> <span data-ttu-id="aca1c-124">この標準プロバイダーは、サロゲートと垂直方向の組み合わせ文字を除くすべての Unicode 文字をサポートしています。ただし、<xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> プロパティを使用して、a-z、a-z、および0-9 の文字セットへの入力を制限できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-124">This standard provider supports all Unicode characters except for surrogates and vertically combined characters; however, the <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> property can be used to restrict input to the characters sets a-z, A-Z, and 0-9.</span></span>  
  
 <span data-ttu-id="aca1c-125">マスクは、必ずしもユーザーの入力が特定の型の有効な値を表していることを保証するわけではありません。たとえば、-9 は、年数として入力できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-125">Masks do not necessarily guarantee that a user's input will represent a valid value for a given type; for example, -9 could be entered for an age in years.</span></span> <span data-ttu-id="aca1c-126">その値の型のインスタンスを <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> プロパティに割り当てることによって、ユーザーの入力が有効な値を表していることを確認できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-126">You can verify that a user's input represents a valid value by assigning an instance of that value's type to the <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> property.</span></span> <span data-ttu-id="aca1c-127"><xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> イベントの監視によって無効な値が含まれている場合、ユーザーが <xref:System.Windows.Forms.MaskedTextBox> からフォーカスを削除するかどうかを検出できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-127">You can detect whether the user removes focus from <xref:System.Windows.Forms.MaskedTextBox> when it contains an invalid value by monitoring for the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event.</span></span> <span data-ttu-id="aca1c-128">型の検証に成功した場合、値を表すオブジェクトは、<xref:System.Windows.Forms.TypeValidationEventArgs> パラメーターの <xref:System.Windows.Forms.TypeValidationEventArgs.ReturnValue%2A> プロパティを通じて取得できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-128">If type validation succeeds, the object representing the value will be available through the <xref:System.Windows.Forms.TypeValidationEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.TypeValidationEventArgs> parameter.</span></span>  
  
 <span data-ttu-id="aca1c-129"><xref:System.Windows.Forms.TextBox> コントロールと同様に、いくつかの一般的なキーボードショートカットは <xref:System.Windows.Forms.MaskedTextBox>では機能しません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-129">As with the <xref:System.Windows.Forms.TextBox> control, several common keyboard shortcuts do not work with <xref:System.Windows.Forms.MaskedTextBox>.</span></span> <span data-ttu-id="aca1c-130">特に、ctrl + R (右揃えのテキスト)、CTRL + L (左揃えのテキスト)、および CTRL + L (中央のテキスト) は効果がありません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-130">In particular, CTRL-R (right justify text), CTRL-L (left justify text), and CTRL-L (center text) have no effect.</span></span>  
  
## <a name="compatibility-with-visual-basic-60"></a><span data-ttu-id="aca1c-131">Visual Basic 6.0 との互換性</span><span class="sxs-lookup"><span data-stu-id="aca1c-131">Compatibility with Visual Basic 6.0</span></span>  
 <span data-ttu-id="aca1c-132"><xref:System.Windows.Forms.MaskedTextBox> は Visual Basic 6.0 でマスクエディットコントロールのほとんどの機能を保持するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="aca1c-132"><xref:System.Windows.Forms.MaskedTextBox> was designed to retain most of the functionality of the Masked Edit control in Visual Basic 6.0.</span></span> <span data-ttu-id="aca1c-133">次の表に、マスクエディットコントロールの共通プロパティの一覧を示し、それらのプロパティを <xref:System.Windows.Forms.MaskedTextBox>に示します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-133">The following table lists common properties on the Masked Edit control and gives their equivalents on <xref:System.Windows.Forms.MaskedTextBox>.</span></span>  
  
|<span data-ttu-id="aca1c-134">マスクエディットコントロール (Visual Basic 6.0) プロパティ</span><span class="sxs-lookup"><span data-stu-id="aca1c-134">Masked Edit control (Visual Basic 6.0) property</span></span>|<span data-ttu-id="aca1c-135">同等の MaskedTextBox ([!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]) プロパティ</span><span class="sxs-lookup"><span data-stu-id="aca1c-135">Equivalent MaskedTextBox ([!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]) property</span></span>|  
|-------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="aca1c-136">`AllowPrompt` プロパティ</span><span class="sxs-lookup"><span data-stu-id="aca1c-136">`AllowPrompt` property</span></span>|<xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>|  
|<span data-ttu-id="aca1c-137">`AutoTab` プロパティ</span><span class="sxs-lookup"><span data-stu-id="aca1c-137">`AutoTab` property</span></span>|<span data-ttu-id="aca1c-138">なし</span><span class="sxs-lookup"><span data-stu-id="aca1c-138">None</span></span>|  
|<span data-ttu-id="aca1c-139">`ClipMode` プロパティ</span><span class="sxs-lookup"><span data-stu-id="aca1c-139">`ClipMode` property</span></span>|<xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A>|  
|<span data-ttu-id="aca1c-140">`ClipText` プロパティ</span><span class="sxs-lookup"><span data-stu-id="aca1c-140">`ClipText` property</span></span>|<span data-ttu-id="aca1c-141"><xref:System.Windows.Forms.MaskedTextBox.Text%2A> (<xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> が <xref:System.Windows.Forms.MaskFormat.ExcludePromptAndLiterals>に設定されている場合)</span><span class="sxs-lookup"><span data-stu-id="aca1c-141"><xref:System.Windows.Forms.MaskedTextBox.Text%2A> (when <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> is set to <xref:System.Windows.Forms.MaskFormat.ExcludePromptAndLiterals>)</span></span>|  
|<span data-ttu-id="aca1c-142">`Format` プロパティ</span><span class="sxs-lookup"><span data-stu-id="aca1c-142">`Format` property</span></span>|<span data-ttu-id="aca1c-143">なし</span><span class="sxs-lookup"><span data-stu-id="aca1c-143">None</span></span>|  
|<span data-ttu-id="aca1c-144">`FormattedText` プロパティ</span><span class="sxs-lookup"><span data-stu-id="aca1c-144">`FormattedText` property</span></span>|<span data-ttu-id="aca1c-145"><xref:System.Windows.Forms.MaskedTextBox.Text%2A> (<xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> が <xref:System.Windows.Forms.MaskFormat.IncludePromptAndLiterals>に設定されている場合)</span><span class="sxs-lookup"><span data-stu-id="aca1c-145"><xref:System.Windows.Forms.MaskedTextBox.Text%2A> (when <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> is set to <xref:System.Windows.Forms.MaskFormat.IncludePromptAndLiterals>)</span></span>|  
|<span data-ttu-id="aca1c-146">`Mask` プロパティ</span><span class="sxs-lookup"><span data-stu-id="aca1c-146">`Mask` property</span></span>|<xref:System.Windows.Forms.MaskedTextBox.Mask%2A>|  
|<span data-ttu-id="aca1c-147">`PromptChar` プロパティ</span><span class="sxs-lookup"><span data-stu-id="aca1c-147">`PromptChar` property</span></span>|<xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A>|  
|<span data-ttu-id="aca1c-148">`PromptInclude` プロパティ</span><span class="sxs-lookup"><span data-stu-id="aca1c-148">`PromptInclude` property</span></span>|<xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>|  
|<span data-ttu-id="aca1c-149">`ValidationError` イベント</span><span class="sxs-lookup"><span data-stu-id="aca1c-149">`ValidationError` event</span></span>|<xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected>|  
  
> [!CAUTION]
>  <span data-ttu-id="aca1c-150"><xref:System.Windows.Forms.MaskedTextBox> コントロールは、複数行の構成または元に戻す機能をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-150">The <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration or undo functionality.</span></span> <span data-ttu-id="aca1c-151">ただし、これらの機能に関連付けられているメンバーは <xref:System.Windows.Forms.TextBoxBase> 基底クラスとの互換性のために保持されていますが、その実装ではアクションは実行されません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-151">However, while the members associated with these features have been retained for compatibility with the <xref:System.Windows.Forms.TextBoxBase> base class, their implementations perform no actions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aca1c-152">次のコード例では、日付を受け入れるように <xref:System.Windows.Forms.MaskedTextBox> を初期化し、<xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> と <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> の両方のイベントを使用して、無効な入力をユーザーに通知します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-152">The following code example initializes the <xref:System.Windows.Forms.MaskedTextBox> to accept a date, and uses both the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> and <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> events to alert the user to invalid input.</span></span>  
  
 [!code-csharp[MaskInputRejectedSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MaskInputRejectedSample/CS/form1.cs#1)]
 [!code-vb[MaskInputRejectedSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MaskInputRejectedSample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
    <altmember cref="T:System.ComponentModel.MaskedTextProvider" />
    <related type="Article" href="https://msdn.microsoft.com/library/235d6121-027d-481d-8d59-4f6794d15d0c"><span data-ttu-id="aca1c-153">MaskedTextBox コントロール (Windows フォーム)</span><span class="sxs-lookup"><span data-stu-id="aca1c-153">MaskedTextBox Control (Windows Forms)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aca1c-154"><see cref="T:System.Windows.Forms.MaskedTextBox" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-154">Initializes a new instance of the <see cref="T:System.Windows.Forms.MaskedTextBox" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aca1c-155">既定値を使用して <see cref="T:System.Windows.Forms.MaskedTextBox" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-155">Initializes a new instance of the <see cref="T:System.Windows.Forms.MaskedTextBox" /> class using defaults.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-156">既定の <xref:System.Windows.Forms.MaskedTextBox.%23ctor> コンストラクターは、<xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> プロパティを null マスクに設定します。これは、文字列 "< >" で表されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-156">The default <xref:System.Windows.Forms.MaskedTextBox.%23ctor> constructor sets the <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> property to a null mask, represented by the string "<>".</span></span> <span data-ttu-id="aca1c-157">Null マスクでは、入力として任意の文字の組み合わせを使用できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-157">A null mask will accept any combination of characters as input.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextBox (System.ComponentModel.MaskedTextProvider maskedTextProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MaskedTextProvider maskedTextProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.#ctor(System.ComponentModel.MaskedTextProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (maskedTextProvider As MaskedTextProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextBox(System::ComponentModel::MaskedTextProvider ^ maskedTextProvider);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MaskedTextBox : System.ComponentModel.MaskedTextProvider -&gt; System.Windows.Forms.MaskedTextBox" Usage="new System.Windows.Forms.MaskedTextBox maskedTextProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="maskedTextProvider" Type="System.ComponentModel.MaskedTextProvider" />
      </Parameters>
      <Docs>
        <param name="maskedTextProvider"><span data-ttu-id="aca1c-158"><see cref="T:System.ComponentModel.MaskedTextProvider" /> クラスから派生したカスタム マスク言語プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="aca1c-158">A custom mask language provider, derived from the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class.</span></span></param>
        <summary><span data-ttu-id="aca1c-159">指定されたカスタム マスク言語プロバイダーを使用して、<see cref="T:System.Windows.Forms.MaskedTextBox" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-159">Initializes a new instance of the <see cref="T:System.Windows.Forms.MaskedTextBox" /> class using the specified custom mask language provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-160">`maskedTextProvider` パラメーターは、<xref:System.Windows.Forms.MaskedTextBox>によって使用されるマスク言語を定義します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-160">The `maskedTextProvider` parameter defines the masking language used by <xref:System.Windows.Forms.MaskedTextBox>.</span></span> <span data-ttu-id="aca1c-161">マスクを解析し、ユーザー入力が現在のマスク位置に準拠しているかどうかを判断する役割を担います。</span><span class="sxs-lookup"><span data-stu-id="aca1c-161">It is responsible for parsing the mask and determining whether user input conforms to the current mask position.</span></span> <span data-ttu-id="aca1c-162"><xref:System.ComponentModel.MaskedTextProvider?displayProperty=nameWithType> から新しいクラスを派生させて独自のカスタムマスク言語を定義し、<xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.ComponentModel.MaskedTextProvider%29> コンストラクターを使用して標準の <xref:System.ComponentModel.MaskedTextProvider?displayProperty=nameWithType>を置き換えることができます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-162">You can derive a new class from <xref:System.ComponentModel.MaskedTextProvider?displayProperty=nameWithType> to define your own custom masking language, and use the <xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.ComponentModel.MaskedTextProvider%29> constructor to replace the standard <xref:System.ComponentModel.MaskedTextProvider?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="aca1c-163">既定のマスク言語を使用し、独自の入力マスクを指定する場合は、このコンストラクターを使用する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-163">If you want to use the default masking language and supply your own input mask, you do not need to use this constructor.</span></span> <span data-ttu-id="aca1c-164">代わりに、<xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.String%29> コンストラクターを使用するか、パラメーターなしのコンストラクターを使用して <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-164">Instead, you can either use the <xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.String%29> constructor, or use the parameterless constructor then set the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aca1c-165"><paramref name="maskedTextProvider" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-165"><paramref name="maskedTextProvider" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
        <altmember cref="T:System.ComponentModel.MaskedTextProvider" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextBox (string mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextBox(System::String ^ mask);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MaskedTextBox : string -&gt; System.Windows.Forms.MaskedTextBox" Usage="new System.Windows.Forms.MaskedTextBox mask" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="aca1c-166">入力マスクを表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-166">A <see cref="T:System.String" /> representing the input mask.</span></span> <span data-ttu-id="aca1c-167"><see cref="P:System.Windows.Forms.MaskedTextBox.Mask" /> プロパティの初期値。</span><span class="sxs-lookup"><span data-stu-id="aca1c-167">The initial value of the <see cref="P:System.Windows.Forms.MaskedTextBox.Mask" /> property.</span></span></param>
        <summary><span data-ttu-id="aca1c-168">入力マスクを指定して、<see cref="T:System.Windows.Forms.MaskedTextBox" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-168">Initializes a new instance of the <see cref="T:System.Windows.Forms.MaskedTextBox" /> class using the specified input mask.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-169"><xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.String%29> コンストラクターは、入力 `mask` に標準の <xref:System.ComponentModel.MaskedTextProvider?displayProperty=nameWithType> を使用して、ユーザー入力を <xref:System.Windows.Forms.MaskedTextBox>に解析します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-169">The <xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.String%29> constructor uses the standard <xref:System.ComponentModel.MaskedTextProvider?displayProperty=nameWithType> with the input `mask` to parse user input into the <xref:System.Windows.Forms.MaskedTextBox>.</span></span>  
  
 <span data-ttu-id="aca1c-170"><xref:System.Windows.Forms.MaskedTextBox.Mask%2A> プロパティに新しいマスクを割り当てると、このコンストラクターによって設定された値がオーバーライドされます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-170">If you assign a new mask to the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property, it will override the value set by this constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aca1c-171"><paramref name="mask" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-171"><paramref name="mask" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="T:System.ComponentModel.MaskedTextProvider" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsTab : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.AcceptsTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-172">複数行の構成に対して Tab キーがどのように処理されるかを決定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-172">Gets or sets a value determining how TAB keys are handled for multiline configurations.</span></span> <span data-ttu-id="aca1c-173">このプロパティは <see cref="T:System.Windows.Forms.MaskedTextBox" /> ではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-173">This property is not supported by <see cref="T:System.Windows.Forms.MaskedTextBox" />.</span></span></summary>
        <value><span data-ttu-id="aca1c-174">すべてのケースで <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-174"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-175"><xref:System.Windows.Forms.MaskedTextBox.AcceptsTab%2A> プロパティは、基本 <xref:System.Windows.Forms.TextBoxBase> クラスから継承されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-175">The <xref:System.Windows.Forms.MaskedTextBox.AcceptsTab%2A> property is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class.</span></span> <span data-ttu-id="aca1c-176">ただし、<xref:System.Windows.Forms.MaskedTextBox> コントロールでは複数行構成がサポートされていないため、このプロパティはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-176">However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this property is not supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.AcceptsTabChanged" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Lines" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AcceptsTabChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AcceptsTabChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.AcceptsTabChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AcceptsTabChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AcceptsTabChanged;" />
      <MemberSignature Language="F#" Value="member this.AcceptsTabChanged : EventHandler " Usage="member this.AcceptsTabChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-177"><see cref="P:System.Windows.Forms.MaskedTextBox.AcceptsTab" /> プロパティの値が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-177">Occurs when the value of the <see cref="P:System.Windows.Forms.MaskedTextBox.AcceptsTab" /> property has changed.</span></span> <span data-ttu-id="aca1c-178">このイベントは、<see cref="T:System.Windows.Forms.MaskedTextBox" /> では発生しません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-178">This event is not raised by <see cref="T:System.Windows.Forms.MaskedTextBox" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-179"><xref:System.Windows.Forms.MaskedTextBox.AcceptsTabChanged> イベントは、基本 <xref:System.Windows.Forms.TextBoxBase> クラスから継承されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-179">The <xref:System.Windows.Forms.MaskedTextBox.AcceptsTabChanged> event is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class.</span></span> <span data-ttu-id="aca1c-180">ただし、<xref:System.Windows.Forms.MaskedTextBox> コントロールでは複数行構成がサポートされていないため、このイベントはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-180">However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this event is not supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AcceptsTab" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Lines" />
      </Docs>
    </Member>
    <Member MemberName="AllowPromptAsInput">
      <MemberSignature Language="C#" Value="public bool AllowPromptAsInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPromptAsInput" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowPromptAsInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowPromptAsInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPromptAsInput : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-181">ユーザーが有効なデータとして <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> を入力できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-181">Gets or sets a value indicating whether <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> can be entered as valid data by the user.</span></span></summary>
        <value><span data-ttu-id="aca1c-182">ユーザーがプロンプト文字をコントロールに入力できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-182"><see langword="true" /> if the user can enter the prompt character into the control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="aca1c-183">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-183">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-184"><xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A> が `true`場合でも、受け入れられるようにするために、マスク内の現在の場所に対してプロンプト文字が有効である必要があります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-184">Even when <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A> is `true`, the prompt character must be valid for the current location in the mask in order to be accepted.</span></span> <span data-ttu-id="aca1c-185">たとえば、<xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> が "\*" で、マスク内の現在の場所がユーザーに数字を入力することを要求する場合、アスタリスク (\*) を入力すると失敗し、<xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-185">For example, if <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> is "\*", and the current location in the mask demands the user enter a digit, entering an asterisk (\*) will fail and cause the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event to occur.</span></span>  
  
 <span data-ttu-id="aca1c-186"><xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A> プロパティは <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>よりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-186">The <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A> property takes precedence over <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
      </Docs>
    </Member>
    <Member MemberName="AsciiOnly">
      <MemberSignature Language="C#" Value="public bool AsciiOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsciiOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.AsciiOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property AsciiOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AsciiOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AsciiOnly : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.AsciiOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-187"><see cref="T:System.Windows.Forms.MaskedTextBox" /> コントロールが ASCII 文字セット以外の文字を受け入れるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-187">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.MaskedTextBox" /> control accepts characters outside of the ASCII character set.</span></span></summary>
        <value><span data-ttu-id="aca1c-188">ASCII だけを受け入れる場合は <see langword="true" />。<see langword="false" /> コントロールが任意の Unicode 文字を受け入れる場合は <see cref="T:System.Windows.Forms.MaskedTextBox" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-188"><see langword="true" /> if only ASCII is accepted; <see langword="false" /> if the <see cref="T:System.Windows.Forms.MaskedTextBox" /> control can accept any arbitrary Unicode character.</span></span> <span data-ttu-id="aca1c-189">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-189">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-190">`true`した場合、<xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> ユーザーの入力を a ~ z と A ~ Z の文字に制限します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-190">If `true`, <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> restricts user input to the characters a-z and A-Z.</span></span> <span data-ttu-id="aca1c-191">ASCII 制御文字は使用できません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-191">ASCII control characters are not allowed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.SkipLiterals" />
      </Docs>
    </Member>
    <Member MemberName="BeepOnError">
      <MemberSignature Language="C#" Value="public bool BeepOnError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BeepOnError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.BeepOnError" />
      <MemberSignature Language="VB.NET" Value="Public Property BeepOnError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BeepOnError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BeepOnError : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.BeepOnError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-192">マスクされたテキスト ボックス コントロールが、拒否したユーザー キー ストロークごとにビープ音を出すかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-192">Gets or sets a value indicating whether the masked text box control raises the system beep for each user key stroke that it rejects.</span></span></summary>
        <value><span data-ttu-id="aca1c-193"><see langword="true" /> コントロールが、無効な入力でビープ音を出す必要がある場合は <see cref="T:System.Windows.Forms.MaskedTextBox" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-193"><see langword="true" /> if the <see cref="T:System.Windows.Forms.MaskedTextBox" /> control should beep on invalid input; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="aca1c-194">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-194">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-195"><xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A> プロパティが `true`に設定されている場合でも、<xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-195">The <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event will still occur if the <xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A> property is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ValidateText" />
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanUndo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanUndo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUndo : bool" Usage="System.Windows.Forms.MaskedTextBox.CanUndo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-196">ユーザーが前の操作を元に戻すことができるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-196">Gets a value indicating whether the user can undo the previous operation.</span></span> <span data-ttu-id="aca1c-197">このプロパティは <see cref="T:System.Windows.Forms.MaskedTextBox" /> ではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-197">This property is not supported by <see cref="T:System.Windows.Forms.MaskedTextBox" />.</span></span></summary>
        <value><span data-ttu-id="aca1c-198">すべてのケースで <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-198"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-199"><xref:System.Windows.Forms.MaskedTextBox.CanUndo%2A> プロパティは、基本 <xref:System.Windows.Forms.TextBoxBase> クラスから継承されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-199">The <xref:System.Windows.Forms.MaskedTextBox.CanUndo%2A> property is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class.</span></span> <span data-ttu-id="aca1c-200">ただし、<xref:System.Windows.Forms.MaskedTextBox> では元に戻す機能がサポートされていないため、このプロパティの値は常に `false`になります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-200">However, because <xref:System.Windows.Forms.MaskedTextBox> does not support undo functionality, this property always has a value of `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ClearUndo" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.Undo" />
      </Docs>
    </Member>
    <Member MemberName="ClearUndo">
      <MemberSignature Language="C#" Value="public void ClearUndo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearUndo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.ClearUndo" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearUndo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearUndo();" />
      <MemberSignature Language="F#" Value="override this.ClearUndo : unit -&gt; unit" Usage="maskedTextBox.ClearUndo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aca1c-201">テキスト ボックスのアンドゥ バッファーから直前に実行された操作に関する情報を削除します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-201">Clears information about the most recent operation from the undo buffer of the text box.</span></span> <span data-ttu-id="aca1c-202"><see cref="T:System.Windows.Forms.MaskedTextBox" /> は、このメソッドをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-202">This method is not supported by <see cref="T:System.Windows.Forms.MaskedTextBox" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-203"><xref:System.Windows.Forms.MaskedTextBox.ClearUndo%2A> メソッドは、基本 <xref:System.Windows.Forms.TextBoxBase> クラスから継承されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-203">The <xref:System.Windows.Forms.MaskedTextBox.ClearUndo%2A> method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class.</span></span> <span data-ttu-id="aca1c-204">ただし、<xref:System.Windows.Forms.MaskedTextBox> では、元に戻す機能がサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-204">However, <xref:System.Windows.Forms.MaskedTextBox> does not support undo functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.CanUndo" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.Undo" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="maskedTextBox.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aca1c-205">コントロールのハンドルを作成します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-205">Creates a handle for the control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.MaskedTextBox.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-206">コントロール ハンドルが作成されるときに必要な作成パラメーターを取得します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-206">Gets the required creation parameters when the control handle is created.</span></span></summary>
        <value><span data-ttu-id="aca1c-207">コントロールの作成時に必要な情報を表す <see cref="T:System.Windows.Forms.CreateParams" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-207">A <see cref="T:System.Windows.Forms.CreateParams" /> representing the information needed when creating a control.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="System.Windows.Forms.MaskedTextBox.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-208">マスクされたテキスト ボックスに関連するカルチャ情報を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-208">Gets or sets the culture information associated with the masked text box.</span></span></summary>
        <value><span data-ttu-id="aca1c-209"><see cref="T:System.Globalization.CultureInfo" /> でサポートされているカルチャを表す <see cref="T:System.Windows.Forms.MaskedTextBox" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-209">A <see cref="T:System.Globalization.CultureInfo" /> representing the culture supported by the <see cref="T:System.Windows.Forms.MaskedTextBox" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aca1c-210"><see cref="P:System.Windows.Forms.MaskedTextBox.Culture" /> が <see langword="null" /> に設定されました。</span><span class="sxs-lookup"><span data-stu-id="aca1c-210"><see cref="P:System.Windows.Forms.MaskedTextBox.Culture" /> was set to <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.FormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="CutCopyMaskFormat">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MaskFormat CutCopyMaskFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MaskFormat CutCopyMaskFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property CutCopyMaskFormat As MaskFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MaskFormat CutCopyMaskFormat { System::Windows::Forms::MaskFormat get(); void set(System::Windows::Forms::MaskFormat value); };" />
      <MemberSignature Language="F#" Value="member this.CutCopyMaskFormat : System.Windows.Forms.MaskFormat with get, set" Usage="System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MaskFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-211">リテラルおよびプロンプト文字がクリップボードにコピーされるかどうかを決定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-211">Gets or sets a value that determines whether literals and prompt characters are copied to the clipboard.</span></span></summary>
        <value><span data-ttu-id="aca1c-212"><see cref="T:System.Windows.Forms.MaskFormat" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="aca1c-212">One of the <see cref="T:System.Windows.Forms.MaskFormat" /> values.</span></span> <span data-ttu-id="aca1c-213">既定では、 <see cref="F:System.Windows.Forms.MaskFormat.IncludeLiterals" />です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-213">The default is <see cref="F:System.Windows.Forms.MaskFormat.IncludeLiterals" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-214"><xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A> プロパティは、<xref:System.Windows.Forms.MaskedTextBox> コントロール内で選択されたテキストがクリップボードにコピーされるとき、または <xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A> プロパティを通じて取得されるときに、どのように解釈されるかを決定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-214">The <xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A> property determines how text, selected within the <xref:System.Windows.Forms.MaskedTextBox> control, is interpreted when it is copied to the clipboard or retrieved through the <xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A> property.</span></span> <span data-ttu-id="aca1c-215">具体的には、選択したテキストにアクセスするときに、リテラル文字、プロンプト文字、またはその両方が含まれるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-215">Specifically, it determines whether literal characters, prompt characters, or both are included when selected text is accessed.</span></span> <span data-ttu-id="aca1c-216">プロンプト文字を除外すると、コピーされた文字列内のスペースに変換されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-216">When prompt characters are excluded, they are transformed into spaces in the copied string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aca1c-217"><xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> プロパティは、<xref:System.Windows.Forms.MaskedTextBox.Text%2A> プロパティがどのように解釈されるかに関して同様の目的を果たします。</span><span class="sxs-lookup"><span data-stu-id="aca1c-217">The <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> property serves a similar purpose with respect to how the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property is interpreted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="aca1c-218">無効な <see cref="T:System.Windows.Forms.MaskFormat" /> 値を使用して設定されたプロパティ。</span><span class="sxs-lookup"><span data-stu-id="aca1c-218">Property set with a <see cref="T:System.Windows.Forms.MaskFormat" /> value that is not valid.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ToString" />
      </Docs>
    </Member>
    <Member MemberName="FormatProvider">
      <MemberSignature Language="C#" Value="public IFormatProvider FormatProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IFormatProvider FormatProvider" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.FormatProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatProvider As IFormatProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IFormatProvider ^ FormatProvider { IFormatProvider ^ get(); void set(IFormatProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormatProvider : IFormatProvider with get, set" Usage="System.Windows.Forms.MaskedTextBox.FormatProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IFormatProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-219">型の検証時に使用する <see cref="T:System.IFormatProvider" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-219">Gets or sets the <see cref="T:System.IFormatProvider" /> to use when performing type validation.</span></span></summary>
        <value><span data-ttu-id="aca1c-220"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="aca1c-220">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-221">型の検証が行われ、コントロールに null 以外の <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> プロパティがある場合、<xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> は、通貨、日付、およびその他のカルチャ固有のマスクプレースホルダーに使用される記号を決定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-221"><xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> determines which symbols are used for the currency, date, and other culture-specific mask placeholders when type validation occurs and the control has a non-null <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Culture" />
      </Docs>
    </Member>
    <Member MemberName="GetCharFromPosition">
      <MemberSignature Language="C#" Value="public override char GetCharFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetCharFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.GetCharFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharFromPosition (pt As Point) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetCharFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="override this.GetCharFromPosition : System.Drawing.Point -&gt; char" Usage="maskedTextBox.GetCharFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="aca1c-222">一番近くにある文字をシークする位置。</span><span class="sxs-lookup"><span data-stu-id="aca1c-222">The location from which to seek the nearest character.</span></span></param>
        <summary><span data-ttu-id="aca1c-223">コントロール内の指定した位置の一番近くにある文字を取得します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-223">Retrieves the character that is closest to the specified location within the control.</span></span></summary>
        <returns><span data-ttu-id="aca1c-224">指定した位置にある文字。</span><span class="sxs-lookup"><span data-stu-id="aca1c-224">The character at the specified location.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetCharIndexFromPosition">
      <MemberSignature Language="C#" Value="public override int GetCharIndexFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharIndexFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharIndexFromPosition (pt As Point) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharIndexFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="override this.GetCharIndexFromPosition : System.Drawing.Point -&gt; int" Usage="maskedTextBox.GetCharIndexFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="aca1c-225">検索する位置。</span><span class="sxs-lookup"><span data-stu-id="aca1c-225">The location to search.</span></span></param>
        <summary><span data-ttu-id="aca1c-226">指定位置に最も近い文字のインデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-226">Retrieves the index of the character nearest to the specified location.</span></span></summary>
        <returns><span data-ttu-id="aca1c-227">指定した位置の 0 から始まる文字インデックス。</span><span class="sxs-lookup"><span data-stu-id="aca1c-227">The zero-based character index at the specified location.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexFromLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexFromLine (int lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexFromLine(int32 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexFromLine (lineNumber As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexFromLine(int lineNumber);" />
      <MemberSignature Language="F#" Value="override this.GetFirstCharIndexFromLine : int -&gt; int" Usage="maskedTextBox.GetFirstCharIndexFromLine lineNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber"><span data-ttu-id="aca1c-228">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-228">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="aca1c-229">指定された行の先頭文字のインデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-229">Retrieves the index of the first character of a given line.</span></span> <span data-ttu-id="aca1c-230"><see cref="T:System.Windows.Forms.MaskedTextBox" /> は、このメソッドをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-230">This method is not supported by <see cref="T:System.Windows.Forms.MaskedTextBox" />.</span></span></summary>
        <returns><span data-ttu-id="aca1c-231">このメソッドは、常に 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-231">This method will always return 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-232"><xref:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine%2A> メソッドは、基本 <xref:System.Windows.Forms.TextBoxBase> クラスから継承されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-232">The <xref:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine%2A> method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class.</span></span> <span data-ttu-id="aca1c-233">ただし、<xref:System.Windows.Forms.MaskedTextBox> コントロールでは複数行構成がサポートされていないため、このメソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-233">However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is not supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexOfCurrentLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexOfCurrentLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexOfCurrentLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexOfCurrentLine () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexOfCurrentLine();" />
      <MemberSignature Language="F#" Value="override this.GetFirstCharIndexOfCurrentLine : unit -&gt; int" Usage="maskedTextBox.GetFirstCharIndexOfCurrentLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aca1c-234">現在の行の先頭文字のインデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-234">Retrieves the index of the first character of the current line.</span></span> <span data-ttu-id="aca1c-235"><see cref="T:System.Windows.Forms.MaskedTextBox" /> は、このメソッドをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-235">This method is not supported by <see cref="T:System.Windows.Forms.MaskedTextBox" />.</span></span></summary>
        <returns><span data-ttu-id="aca1c-236">このメソッドは、常に 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-236">This method will always return 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-237"><xref:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine%2A> メソッドは、基本 <xref:System.Windows.Forms.TextBoxBase> クラスから継承されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-237">The <xref:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine%2A> method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class.</span></span> <span data-ttu-id="aca1c-238">ただし、<xref:System.Windows.Forms.MaskedTextBox> コントロールでは複数行構成がサポートされていないため、このメソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-238">However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is not supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetLineFromCharIndex">
      <MemberSignature Language="C#" Value="public override int GetLineFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLineFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLineFromCharIndex (index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLineFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="override this.GetLineFromCharIndex : int -&gt; int" Usage="maskedTextBox.GetLineFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="aca1c-239">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-239">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="aca1c-240">コントロールのテキスト内で、指定の文字位置からの行数を取得します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-240">Retrieves the line number from the specified character position within the text of the control.</span></span> <span data-ttu-id="aca1c-241"><see cref="T:System.Windows.Forms.MaskedTextBox" /> は、このメソッドをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-241">This method is not supported by <see cref="T:System.Windows.Forms.MaskedTextBox" />.</span></span></summary>
        <returns><span data-ttu-id="aca1c-242">このメソッドは、常に 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-242">This method will always return 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-243"><xref:System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex%2A> メソッドは、基本 <xref:System.Windows.Forms.TextBoxBase> クラスから継承されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-243">The <xref:System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex%2A> method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class.</span></span> <span data-ttu-id="aca1c-244">ただし、<xref:System.Windows.Forms.MaskedTextBox> コントロールでは複数行構成がサポートされていないため、このメソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-244">However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is not supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromCharIndex">
      <MemberSignature Language="C#" Value="public override System.Drawing.Point GetPositionFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Point GetPositionFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.GetPositionFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPositionFromCharIndex (index As Integer) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Drawing::Point GetPositionFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="override this.GetPositionFromCharIndex : int -&gt; System.Drawing.Point" Usage="maskedTextBox.GetPositionFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="aca1c-245">位置の取得対象とする文字のインデックス。</span><span class="sxs-lookup"><span data-stu-id="aca1c-245">The index of the character for which to retrieve the location.</span></span></param>
        <summary><span data-ttu-id="aca1c-246">指定の文字インデックスにおけるコントロール内の位置を取得します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-246">Retrieves the location within the control at the specified character index.</span></span></summary>
        <returns><span data-ttu-id="aca1c-247">コントロールのクライアントの四角形領域内における、指定した文字の位置。</span><span class="sxs-lookup"><span data-stu-id="aca1c-247">The location of the specified character within the client rectangle of the control.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HidePromptOnLeave">
      <MemberSignature Language="C#" Value="public bool HidePromptOnLeave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidePromptOnLeave" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave" />
      <MemberSignature Language="VB.NET" Value="Public Property HidePromptOnLeave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HidePromptOnLeave { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HidePromptOnLeave : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.HidePromptOnLeave" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-248">マスクされたテキスト ボックスがフォーカスを失ったときに、入力マスクのプロンプト文字を非表示にするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-248">Gets or sets a value indicating whether the prompt characters in the input mask are hidden when the masked text box loses focus.</span></span></summary>
        <value><span data-ttu-id="aca1c-249"><see langword="true" /> にフォーカスがないときに <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> を非表示にする場合は <see cref="T:System.Windows.Forms.MaskedTextBox" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-249"><see langword="true" /> if <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> is hidden when <see cref="T:System.Windows.Forms.MaskedTextBox" /> does not have focus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="aca1c-250">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-250">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat" />
      </Docs>
    </Member>
    <Member MemberName="InsertKeyMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.InsertKeyMode InsertKeyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.InsertKeyMode InsertKeyMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.InsertKeyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertKeyMode As InsertKeyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::InsertKeyMode InsertKeyMode { System::Windows::Forms::InsertKeyMode get(); void set(System::Windows::Forms::InsertKeyMode value); };" />
      <MemberSignature Language="F#" Value="member this.InsertKeyMode : System.Windows.Forms.InsertKeyMode with get, set" Usage="System.Windows.Forms.MaskedTextBox.InsertKeyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InsertKeyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-251">マスクされたテキスト ボックス コントロールのテキスト挿入モードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-251">Gets or sets the text insertion mode of the masked text box control.</span></span></summary>
        <value><span data-ttu-id="aca1c-252">現在の挿入モードを示す <see cref="T:System.Windows.Forms.InsertKeyMode" /> 値。</span><span class="sxs-lookup"><span data-stu-id="aca1c-252">An <see cref="T:System.Windows.Forms.InsertKeyMode" /> value that indicates the current insertion mode.</span></span> <span data-ttu-id="aca1c-253">既定では、 <see cref="F:System.Windows.Forms.InsertKeyMode.Default" />です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-253">The default is <see cref="F:System.Windows.Forms.InsertKeyMode.Default" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-254"><xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> プロパティは、<xref:System.Windows.Forms.MaskedTextBox> コントロールの文字挿入動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-254">The <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> property controls the character insertion behavior of the <xref:System.Windows.Forms.MaskedTextBox> control.</span></span> <span data-ttu-id="aca1c-255">このプロパティの状態は、<xref:System.Windows.Forms.InsertKeyMode> 列挙型によって定義されます。この列挙体は、常にオンにすることも、ユーザーのキーボードの設定を尊重するように設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-255">The state of this property is defined by the <xref:System.Windows.Forms.InsertKeyMode> enumeration, which can be always on, always off or set to respect the setting of the user's keyboard.</span></span> <span data-ttu-id="aca1c-256">このプロパティは、キーボードの挿入モードよりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-256">This property supersedes the insertion mode of the keyboard.</span></span> <span data-ttu-id="aca1c-257">たとえば、キーボードが overwrite に設定されていても、<xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> が `Insert`に設定されている場合、<xref:System.Windows.Forms.MaskedTextBox> は挿入モードで動作します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-257">For example, if the keyboard is set to overwrite, but <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> is set to `Insert`, the <xref:System.Windows.Forms.MaskedTextBox> will operate in insert mode.</span></span> <span data-ttu-id="aca1c-258"><xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> プロパティは、<xref:System.Windows.Forms.MaskedTextBox>の true 挿入モードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="aca1c-258">The <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> property will access the true insertion mode of the <xref:System.Windows.Forms.MaskedTextBox>.</span></span>  
  
 <span data-ttu-id="aca1c-259"><xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> を変更すると <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A>の値が変更された場合、<xref:System.Windows.Forms.MaskedTextBox> によって <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-259">If changing <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> changes the value of <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A>, <xref:System.Windows.Forms.MaskedTextBox> will raise the <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged> event.</span></span>  
  
 <span data-ttu-id="aca1c-260">マスクが設定されていない場合、このプロパティは無効です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-260">This property has no effect if no mask has been set.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="aca1c-261">このプロパティの設定時に無効な <see cref="T:System.Windows.Forms.InsertKeyMode" /> 値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="aca1c-261">An invalid <see cref="T:System.Windows.Forms.InsertKeyMode" /> value was supplied when setting this property.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.IsOverwriteMode" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="maskedTextBox.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="aca1c-262"><see cref="T:System.Windows.Forms.Keys" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="aca1c-262">One of the <see cref="T:System.Windows.Forms.Keys" /> values.</span></span></param>
        <summary><span data-ttu-id="aca1c-263">指定されているキーが、入力キーであるか、またはプリプロセスを必要とする特殊なキーであるかを確認します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-263">Determines whether the specified key is an input key or a special key that requires preprocessing.</span></span></summary>
        <returns><span data-ttu-id="aca1c-264">指定されているキーが入力キーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-264"><see langword="true" /> if the specified key is an input key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOverwriteMode">
      <MemberSignature Language="C#" Value="public bool IsOverwriteMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOverwriteMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.IsOverwriteMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOverwriteMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOverwriteMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOverwriteMode : bool" Usage="System.Windows.Forms.MaskedTextBox.IsOverwriteMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-265">新しいユーザー入力が既存の入力を上書きするかどうかを指定する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-265">Gets a value that specifies whether new user input overwrites existing input.</span></span></summary>
        <value><span data-ttu-id="aca1c-266">ユーザーが新しい文字を入力するときに、<see langword="true" /> が既存の文字を上書きする場合は <see cref="T:System.Windows.Forms.MaskedTextBox" />。<see langword="false" /> が既存の文字を前方にシフトする場合は <see cref="T:System.Windows.Forms.MaskedTextBox" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-266"><see langword="true" /> if <see cref="T:System.Windows.Forms.MaskedTextBox" /> will overwrite existing characters as the user enters new ones; <see langword="false" /> if <see cref="T:System.Windows.Forms.MaskedTextBox" /> will shift existing characters forward.</span></span> <span data-ttu-id="aca1c-267">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-267">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-268"><xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> は、<xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> プロパティの値とユーザーのキーボードの状態の両方を考慮します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-268"><xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> takes into account both the value of the <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> property and the state of the user's keyboard.</span></span> <span data-ttu-id="aca1c-269"><xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> が <xref:System.Windows.Forms.InsertKeyMode.Insert> または <xref:System.Windows.Forms.InsertKeyMode.Overwrite>のいずれかに設定されている場合、<xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> はそれぞれ `false` または `true`を返します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-269">If <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> is set to either <xref:System.Windows.Forms.InsertKeyMode.Insert> or <xref:System.Windows.Forms.InsertKeyMode.Overwrite>, <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> will return `false` or `true`, respectively.</span></span> <span data-ttu-id="aca1c-270"><xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> が <xref:System.Windows.Forms.InsertKeyMode.Default>に設定されている場合、INSERT キーの状態が返されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-270">If <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> is set to <xref:System.Windows.Forms.InsertKeyMode.Default>, it will return the state of the INSERT key.</span></span>  
  
 <span data-ttu-id="aca1c-271"><xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> が `false`されている場合、<xref:System.Windows.Forms.MaskedTextBox> は、マスク内のすべての場所で違反になる可能性がある文字のエントリとして、無効として拒否されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-271">When <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> is `false`, <xref:System.Windows.Forms.MaskedTextBox> will reject as invalid any character entry that would result in a violation anywhere in the mask.</span></span> <span data-ttu-id="aca1c-272">説明では、文字を挿入すると、文字が有効でないマスク位置に移される場合、文字の挿入は拒否されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-272">In explanation, if inserting a character would cause a character to be shifted over into a mask position where it would not be valid, the character insertion will be rejected.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.InsertKeyMode" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName="IsOverwriteModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler IsOverwriteModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler IsOverwriteModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsOverwriteModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ IsOverwriteModeChanged;" />
      <MemberSignature Language="F#" Value="member this.IsOverwriteModeChanged : EventHandler " Usage="member this.IsOverwriteModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-273">挿入モードが変更された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-273">Occurs after the insert mode has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-274"><xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> プロパティの値が変更された後に、<xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-274">The <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged> event is raised after value of the <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> property is changed.</span></span>  
  
 <span data-ttu-id="aca1c-275">このイベントは、<xref:System.Windows.Forms.MaskedTextBox> コントロールにデータを適切にバインドするために必要です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-275">This event is required to properly bind data to a <xref:System.Windows.Forms.MaskedTextBox> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aca1c-276">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-276">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="aca1c-277">この例では、イベントハンドラーは、<xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-277">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged> event.</span></span> <span data-ttu-id="aca1c-278">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-278">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="aca1c-279">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="aca1c-279">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="aca1c-280">コード例を実行するには、`MaskedTextBox1`という <xref:System.Windows.Forms.MaskedTextBox> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-280">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MaskedTextBox> named `MaskedTextBox1`.</span></span> <span data-ttu-id="aca1c-281">次に、イベントハンドラーが <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-281">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#484](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#484)]
 [!code-vb[System.Windows.Forms.EventExamples#484](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#484)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.IsOverwriteMode" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public string[] Lines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Lines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.Lines" />
      <MemberSignature Language="VB.NET" Value="Public Property Lines As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Lines { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Lines : string[] with get, set" Usage="System.Windows.Forms.MaskedTextBox.Lines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-282">複数行の構成のテキスト行を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-282">Gets or sets the lines of text in multiline configurations.</span></span> <span data-ttu-id="aca1c-283">このプロパティは <see cref="T:System.Windows.Forms.MaskedTextBox" /> ではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-283">This property is not supported by <see cref="T:System.Windows.Forms.MaskedTextBox" />.</span></span></summary>
        <value><span data-ttu-id="aca1c-284">単一行を格納している <see cref="T:System.String" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="aca1c-284">An array of type <see cref="T:System.String" /> that contains a single line.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-285"><xref:System.Windows.Forms.MaskedTextBox.Lines%2A> プロパティは、基本 <xref:System.Windows.Forms.TextBoxBase> クラスから継承されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-285">The <xref:System.Windows.Forms.MaskedTextBox.Lines%2A> property is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class.</span></span> <span data-ttu-id="aca1c-286">ただし、<xref:System.Windows.Forms.MaskedTextBox> コントロールでは複数行構成がサポートされていないため、このプロパティはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-286">However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this property is not supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AcceptsTab" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.AcceptsTabChanged" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="Mask">
      <MemberSignature Language="C#" Value="public string Mask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Mask" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.Mask" />
      <MemberSignature Language="VB.NET" Value="Public Property Mask As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Mask { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Mask : string with get, set" Usage="System.Windows.Forms.MaskedTextBox.Mask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.MaskPropertyEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.MaskPropertyEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-287">実行時に使用する入力マスクを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-287">Gets or sets the input mask to use at run time.</span></span></summary>
        <value><span data-ttu-id="aca1c-288">現在のマスクを表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-288">A <see cref="T:System.String" /> representing the current mask.</span></span> <span data-ttu-id="aca1c-289">既定値は、任意の入力を許可する空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-289">The default value is the empty string which allows any input.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-290"><xref:System.Windows.Forms.MaskedTextBox.Mask%2A> は、<xref:System.Windows.Forms.MaskedTextBox> クラスの既定のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="aca1c-290"><xref:System.Windows.Forms.MaskedTextBox.Mask%2A> is the default property for the <xref:System.Windows.Forms.MaskedTextBox> class.</span></span>  
  
 <span data-ttu-id="aca1c-291"><xref:System.Windows.Forms.MaskedTextBox.Mask%2A> は、次の表に示すように、1つまたは複数のマスク要素で構成される文字列である必要があります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-291"><xref:System.Windows.Forms.MaskedTextBox.Mask%2A> must be a string composed of one or more of the masking elements, as shown in the following table.</span></span> <span data-ttu-id="aca1c-292"><xref:System.Windows.Forms.MaskedTextBox> によって使用されるマスク言語は、関連付けられた <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A>によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-292">The masking language used by <xref:System.Windows.Forms.MaskedTextBox> is defined by its associated <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A>.</span></span> <span data-ttu-id="aca1c-293">標準プロバイダーでは、Visual Basic 6.0 のマスクエディットコントロールによって使用される言語に基づいたマスク言語を指定します。また、そのプラットフォームから移行するユーザーには非常になじみがある必要があります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-293">The standard provider specifies a masking language based upon the one used by the Masked Edit control in Visual Basic 6.0, and should be very familiar to users migrating from that platform.</span></span>  
  
|<span data-ttu-id="aca1c-294">マスク要素</span><span class="sxs-lookup"><span data-stu-id="aca1c-294">Masking element</span></span>|<span data-ttu-id="aca1c-295">説明</span><span class="sxs-lookup"><span data-stu-id="aca1c-295">Description</span></span>|  
|---------------------|-----------------|  
|<span data-ttu-id="aca1c-296">0</span><span class="sxs-lookup"><span data-stu-id="aca1c-296">0</span></span>|<span data-ttu-id="aca1c-297">数字、必須。</span><span class="sxs-lookup"><span data-stu-id="aca1c-297">Digit, required.</span></span> <span data-ttu-id="aca1c-298">この要素は、0から9までの任意の1桁を受け入れます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-298">This element will accept any single digit between 0 and 9.</span></span>|  
|<span data-ttu-id="aca1c-299">9</span><span class="sxs-lookup"><span data-stu-id="aca1c-299">9</span></span>|<span data-ttu-id="aca1c-300">数字またはスペース、省略可能。</span><span class="sxs-lookup"><span data-stu-id="aca1c-300">Digit or space, optional.</span></span>|  
|#|<span data-ttu-id="aca1c-301">数字またはスペース、省略可能。</span><span class="sxs-lookup"><span data-stu-id="aca1c-301">Digit or space, optional.</span></span> <span data-ttu-id="aca1c-302">マスクでこの位置が空白の場合は、<xref:System.Windows.Forms.MaskedTextBox.Text%2A> プロパティにスペースとして表示されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-302">If this position is blank in the mask, it will be rendered as a space in the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property.</span></span> <span data-ttu-id="aca1c-303">正符号 (+) とマイナス記号 (-) は使用できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-303">Plus (+) and minus (-) signs are allowed.</span></span>|  
|<span data-ttu-id="aca1c-304">L</span><span class="sxs-lookup"><span data-stu-id="aca1c-304">L</span></span>|<span data-ttu-id="aca1c-305">文字、必須。</span><span class="sxs-lookup"><span data-stu-id="aca1c-305">Letter, required.</span></span> <span data-ttu-id="aca1c-306">入力を ASCII 文字 a ~ z と A ~ Z に制限します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-306">Restricts input to the ASCII letters a-z and A-Z.</span></span> <span data-ttu-id="aca1c-307">この mask 要素は、正規表現では [zA-Z] に相当します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-307">This mask element is equivalent to [a-zA-Z] in regular expressions.</span></span>|  
|<span data-ttu-id="aca1c-308">?</span><span class="sxs-lookup"><span data-stu-id="aca1c-308">?</span></span>|<span data-ttu-id="aca1c-309">Letter、省略可能。</span><span class="sxs-lookup"><span data-stu-id="aca1c-309">Letter, optional.</span></span> <span data-ttu-id="aca1c-310">入力を ASCII 文字 a ~ z と A ~ Z に制限します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-310">Restricts input to the ASCII letters a-z and A-Z.</span></span> <span data-ttu-id="aca1c-311">この mask 要素は [zA-Z] と同じですか?</span><span class="sxs-lookup"><span data-stu-id="aca1c-311">This mask element is equivalent to [a-zA-Z]?</span></span> <span data-ttu-id="aca1c-312">正規表現で。</span><span class="sxs-lookup"><span data-stu-id="aca1c-312">in regular expressions.</span></span>|  
|&|<span data-ttu-id="aca1c-313">文字、必須。</span><span class="sxs-lookup"><span data-stu-id="aca1c-313">Character, required.</span></span> <span data-ttu-id="aca1c-314"><xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> プロパティが true に設定されている場合、この要素は "L" 要素のように動作します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-314">If the <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> property is set to true, this element behaves like the "L" element.</span></span>|  
|<span data-ttu-id="aca1c-315">C</span><span class="sxs-lookup"><span data-stu-id="aca1c-315">C</span></span>|<span data-ttu-id="aca1c-316">Character、optional。</span><span class="sxs-lookup"><span data-stu-id="aca1c-316">Character, optional.</span></span> <span data-ttu-id="aca1c-317">制御文字以外の任意の文字。</span><span class="sxs-lookup"><span data-stu-id="aca1c-317">Any non-control character.</span></span> <span data-ttu-id="aca1c-318"><xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> プロパティが `true`に設定されている場合、この要素は "?" 要素のように動作します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-318">If the <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> property is set to `true`, this element behaves like the "?" element.</span></span>|  
|<span data-ttu-id="aca1c-319">A</span><span class="sxs-lookup"><span data-stu-id="aca1c-319">A</span></span>|<span data-ttu-id="aca1c-320">英数字、必須。</span><span class="sxs-lookup"><span data-stu-id="aca1c-320">Alphanumeric, required.</span></span> <span data-ttu-id="aca1c-321"><xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> プロパティが `true`に設定されている場合、使用できる文字は、a ~ z と A ~ Z の ASCII 文字だけです。</span><span class="sxs-lookup"><span data-stu-id="aca1c-321">If the <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> property is set to `true`, the only characters it will accept are the ASCII letters a-z and A-Z.</span></span> <span data-ttu-id="aca1c-322">この mask 要素は、"a" 要素のように動作します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-322">This mask element behaves like the "a" element.</span></span>|  
|<span data-ttu-id="aca1c-323">a</span><span class="sxs-lookup"><span data-stu-id="aca1c-323">a</span></span>|<span data-ttu-id="aca1c-324">英数字、省略可能。</span><span class="sxs-lookup"><span data-stu-id="aca1c-324">Alphanumeric, optional.</span></span> <span data-ttu-id="aca1c-325"><xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> プロパティが `true`に設定されている場合、使用できる文字は、a ~ z と A ~ Z の ASCII 文字だけです。</span><span class="sxs-lookup"><span data-stu-id="aca1c-325">If the <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> property is set to `true`, the only characters it will accept are the ASCII letters a-z and A-Z.</span></span> <span data-ttu-id="aca1c-326">この mask 要素は、"A" 要素のように動作します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-326">This mask element behaves like the "A" element.</span></span>|  
|<span data-ttu-id="aca1c-327">。</span><span class="sxs-lookup"><span data-stu-id="aca1c-327">.</span></span>|<span data-ttu-id="aca1c-328">小数点のプレースホルダー。</span><span class="sxs-lookup"><span data-stu-id="aca1c-328">Decimal placeholder.</span></span> <span data-ttu-id="aca1c-329">実際に使用される表示文字は、書式プロバイダーに適した小数点の記号になります。これは、コントロールの <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> プロパティによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-329">The actual display character used will be the decimal symbol appropriate to the format provider, as determined by the control's <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> property.</span></span>|  
|<span data-ttu-id="aca1c-330">,</span><span class="sxs-lookup"><span data-stu-id="aca1c-330">,</span></span>|<span data-ttu-id="aca1c-331">桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="aca1c-331">Thousands placeholder.</span></span> <span data-ttu-id="aca1c-332">使用される実際の表示文字は、コントロールの <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> プロパティによって決定される書式プロバイダーに適した千単位のプレースホルダーになります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-332">The actual display character used will be the thousands placeholder appropriate to the format provider, as determined by the control's <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> property.</span></span>|  
|<span data-ttu-id="aca1c-333">:</span><span class="sxs-lookup"><span data-stu-id="aca1c-333">:</span></span>|<span data-ttu-id="aca1c-334">時刻の区切り記号。</span><span class="sxs-lookup"><span data-stu-id="aca1c-334">Time separator.</span></span> <span data-ttu-id="aca1c-335">実際に使用される表示文字は、書式プロバイダーに適した時間記号です。これは、コントロールの <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> プロパティによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-335">The actual display character used will be the time symbol appropriate to the format provider, as determined by the control's <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> property.</span></span>|  
|/|<span data-ttu-id="aca1c-336">日付の区切り記号。</span><span class="sxs-lookup"><span data-stu-id="aca1c-336">Date separator.</span></span> <span data-ttu-id="aca1c-337">実際に使用される表示文字は、書式プロバイダーに適した日付記号になります。これは、コントロールの <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> プロパティによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-337">The actual display character used will be the date symbol appropriate to the format provider, as determined by the control's <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> property.</span></span>|  
|$|<span data-ttu-id="aca1c-338">通貨記号。</span><span class="sxs-lookup"><span data-stu-id="aca1c-338">Currency symbol.</span></span> <span data-ttu-id="aca1c-339">実際に表示される文字は、書式プロバイダーに適した通貨記号で、コントロールの <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> プロパティによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-339">The actual character displayed will be the currency symbol appropriate to the format provider, as determined by the control's <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> property.</span></span>|  
|\<|<span data-ttu-id="aca1c-340">Shift キーを押します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-340">Shift down.</span></span> <span data-ttu-id="aca1c-341">後続のすべての文字を小文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-341">Converts all characters that follow to lowercase.</span></span>|  
|>|<span data-ttu-id="aca1c-342">Shift キーを押します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-342">Shift up.</span></span> <span data-ttu-id="aca1c-343">に続くすべての文字を大文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-343">Converts all characters that follow to uppercase.</span></span>|  
|<span data-ttu-id="aca1c-344">&#124;</span><span class="sxs-lookup"><span data-stu-id="aca1c-344">&#124;</span></span>|<span data-ttu-id="aca1c-345">前の shift キーまたは shift キーを押した状態を無効にします。</span><span class="sxs-lookup"><span data-stu-id="aca1c-345">Disable a previous shift up or shift down.</span></span>|  
|<span data-ttu-id="aca1c-346">&#92;</span><span class="sxs-lookup"><span data-stu-id="aca1c-346">&#92;</span></span>|<span data-ttu-id="aca1c-347">付ける.</span><span class="sxs-lookup"><span data-stu-id="aca1c-347">Escape.</span></span> <span data-ttu-id="aca1c-348">マスク文字をエスケープし、その文字をリテラルに変換します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-348">Escapes a mask character, turning it into a literal.</span></span> <span data-ttu-id="aca1c-349">"\\\\" は、円記号のエスケープシーケンスです。</span><span class="sxs-lookup"><span data-stu-id="aca1c-349">"\\\\" is the escape sequence for a backslash.</span></span>|  
|<span data-ttu-id="aca1c-350">上記以外のすべての文字</span><span class="sxs-lookup"><span data-stu-id="aca1c-350">All other characters</span></span>|<span data-ttu-id="aca1c-351">リテラル。</span><span class="sxs-lookup"><span data-stu-id="aca1c-351">Literals.</span></span> <span data-ttu-id="aca1c-352">マスクされていないすべての要素は、<xref:System.Windows.Forms.MaskedTextBox>内に自身として表示されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-352">All non-mask elements will appear as themselves within <xref:System.Windows.Forms.MaskedTextBox>.</span></span> <span data-ttu-id="aca1c-353">リテラルは、常に実行時にマスク内の静的な位置を占め、ユーザーが移動または削除することはできません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-353">Literals always occupy a static position in the mask at run time, and cannot be moved or deleted by the user.</span></span>|  
  
 <span data-ttu-id="aca1c-354">前のマスクによってフィルター処理されたユーザー入力が <xref:System.Windows.Forms.MaskedTextBox> 既に含まれている場合にマスクを変更すると、<xref:System.Windows.Forms.MaskedTextBox> はその入力を新しいマスク定義に移行しようとします。</span><span class="sxs-lookup"><span data-stu-id="aca1c-354">If you change a mask when <xref:System.Windows.Forms.MaskedTextBox> already contains user input filtered by a previous mask, <xref:System.Windows.Forms.MaskedTextBox> will attempt to migrate that input into the new mask definition.</span></span> <span data-ttu-id="aca1c-355">失敗した場合は、既存の入力がクリアされます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-355">If it fails, it will clear the existing input.</span></span> <span data-ttu-id="aca1c-356">長さ0の文字列をマスクとして割り当てると、コントロール内の既存のデータが保持されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-356">Assigning a zero-length string as the mask will preserve any existing data in the control.</span></span> <span data-ttu-id="aca1c-357">長さがゼロのマスクで使用する場合、<xref:System.Windows.Forms.MaskedTextBox> は単一行の <xref:System.Windows.Forms.TextBox> コントロールのように動作します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-357">When used with a zero-length mask, <xref:System.Windows.Forms.MaskedTextBox> behaves like a single-line <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 <span data-ttu-id="aca1c-358">10進数 (.)、桁区切り記号 (,)、時刻 (:)、日付 (/)、および通貨 ($) のシンボルは、既定では、アプリケーションのカルチャによって定義されている記号を表示します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-358">The decimal (.), thousandths (,), time (:), date (/), and currency ($) symbols default to displaying those symbols as defined by the application's culture.</span></span> <span data-ttu-id="aca1c-359"><xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> プロパティを使用して、別のカルチャのシンボルを表示するように強制できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-359">You can force them to display symbols for another culture by using the <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> property.</span></span>  
  
 <span data-ttu-id="aca1c-360">実行時のマスクへの文字の挿入は、<xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> プロパティによって制御されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-360">Character insertion into the mask at run time is controlled by the <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> property.</span></span> <span data-ttu-id="aca1c-361">ユーザーは、左矢印キーまたは右方向キーまたはマウスカーソルを使用してマスク内を移動できます。また、スペースを入力すると、マスク内のオプションの位置をスキップできます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-361">Users can navigate through the mask by using the left and right arrow keys or the mouse cursor, and can skip optional positions in the mask by entering a space.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="aca1c-362"><xref:System.Windows.Forms.MaskedTextBox> は、サロゲートと垂直結合文字を除くすべての Unicode 文字をサポートします。</span><span class="sxs-lookup"><span data-stu-id="aca1c-362"><xref:System.Windows.Forms.MaskedTextBox> supports all Unicode characters except for surrogates and vertically combined characters.</span></span>  
  
 <span data-ttu-id="aca1c-363">マスクの例を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-363">The following table shows example masks.</span></span>  
  
|<span data-ttu-id="aca1c-364">マスク</span><span class="sxs-lookup"><span data-stu-id="aca1c-364">Mask</span></span>|<span data-ttu-id="aca1c-365">動作</span><span class="sxs-lookup"><span data-stu-id="aca1c-365">Behavior</span></span>|  
|----------|--------------|  
|`00/00/0000`|<span data-ttu-id="aca1c-366">国際日付形式の日付 (日、数値、月、年)。</span><span class="sxs-lookup"><span data-stu-id="aca1c-366">A date (day, numeric month, year) in international date format.</span></span> <span data-ttu-id="aca1c-367">"/" 文字は論理日付の区切り記号であり、アプリケーションの現在のカルチャに適した日付の区切り記号としてユーザーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-367">The "/" character is a logical date separator, and will appear to the user as the date separator appropriate to the application's current culture.</span></span>|  
|`00->L<LL-0000`|<span data-ttu-id="aca1c-368">米国形式の日付 (日、月の省略形、および年)。3文字の月の省略形は、最初の大文字と2つの小文字で表示されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-368">A date (day, month abbreviation, and year) in United States format in which the three-letter month abbreviation is displayed with an initial uppercase letter followed by two lowercase letters.</span></span>|  
|`(999)-000-0000`|<span data-ttu-id="aca1c-369">米国電話番号、市外局番は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-369">United States phone number, area code optional.</span></span> <span data-ttu-id="aca1c-370">ユーザーがオプションの文字を入力したくない場合は、スペースを入力するか、最初の0によって表されるマスク内の位置にマウスポインターを直接配置できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-370">If users do not want to enter the optional characters, they can either enter spaces or place the mouse pointer directly at the position in the mask represented by the first 0.</span></span>|  
|`$999,999.00`|<span data-ttu-id="aca1c-371">0 ~ 999999 の範囲の通貨値。</span><span class="sxs-lookup"><span data-stu-id="aca1c-371">A currency value in the range of 0 to 999999.</span></span> <span data-ttu-id="aca1c-372">通貨、分、および10進文字は、実行時にカルチャ固有の同等のものに置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-372">The currency, thousandth, and decimal characters will be replaced at run time with their culture-specific equivalents.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="aca1c-373"><see cref="P:System.Windows.Forms.MaskedTextBox.Mask" /> プロパティに指定された文字列が有効なマスクではありません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-373">The string supplied to the <see cref="P:System.Windows.Forms.MaskedTextBox.Mask" /> property is not a valid mask.</span></span> <span data-ttu-id="aca1c-374">無効なマスクには、印字不可能な文字を格納しているマスクが含まれます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-374">Invalid masks include masks containing non-printable characters.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskFull" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskCompleted" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskChanged" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
      </Docs>
    </Member>
    <Member MemberName="MaskChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MaskChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MaskChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.MaskChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MaskChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MaskChanged;" />
      <MemberSignature Language="F#" Value="member this.MaskChanged : EventHandler " Usage="member this.MaskChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-375">入力マスクが変更された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-375">Occurs after the input mask is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-376"><xref:System.Windows.Forms.MaskedTextBox.Mask%2A> プロパティの値が変更された後に、<xref:System.Windows.Forms.MaskedTextBox.MaskChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-376">The <xref:System.Windows.Forms.MaskedTextBox.MaskChanged> event is raised after the value of the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property is changed.</span></span> <span data-ttu-id="aca1c-377">このイベントは、<xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> が <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>、<xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>、<xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A>、<xref:System.Windows.Forms.MaskedTextBox.Culture%2A>などのメンバーによって間接的に変更された場合にも発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-377">This event is also raised if the <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> is indirectly altered by a member such as <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>, <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>, <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A>, and <xref:System.Windows.Forms.MaskedTextBox.Culture%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aca1c-378">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-378">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="aca1c-379">この例では、イベントハンドラーは、<xref:System.Windows.Forms.MaskedTextBox.MaskChanged> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-379">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.MaskedTextBox.MaskChanged> event.</span></span> <span data-ttu-id="aca1c-380">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-380">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="aca1c-381">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="aca1c-381">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="aca1c-382">コード例を実行するには、`MaskedTextBox1`という <xref:System.Windows.Forms.MaskedTextBox> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-382">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MaskedTextBox> named `MaskedTextBox1`.</span></span> <span data-ttu-id="aca1c-383">次に、イベントハンドラーが <xref:System.Windows.Forms.MaskedTextBox.MaskChanged> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-383">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.MaskedTextBox.MaskChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#485](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#485)]
 [!code-vb[System.Windows.Forms.EventExamples#485](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#485)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.OnMaskChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
      </Docs>
    </Member>
    <Member MemberName="MaskCompleted">
      <MemberSignature Language="C#" Value="public bool MaskCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.MaskCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaskCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MaskCompleted : bool" Usage="System.Windows.Forms.MaskedTextBox.MaskCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-384">必須の入力がすべて入力マスクに入力されたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-384">Gets a value indicating whether all required inputs have been entered into the input mask.</span></span></summary>
        <value><span data-ttu-id="aca1c-385">必須の入力がすべてマスクに入力された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-385"><see langword="true" /> if all required input has been entered into the mask; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-386"><xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A> では、必須の入力要素だけがチェックされます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-386"><xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A> checks only required input elements.</span></span> <span data-ttu-id="aca1c-387">必須および省略可能な入力要素がすべて入力されているかどうかを確認するには、代わりに <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-387">To determine whether all required and optional input elements have been filled in, use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A> property instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskFull" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskChanged" />
      </Docs>
    </Member>
    <Member MemberName="MaskedTextProvider">
      <MemberSignature Language="C#" Value="public System.ComponentModel.MaskedTextProvider MaskedTextProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.MaskedTextProvider MaskedTextProvider" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskedTextProvider As MaskedTextProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::MaskedTextProvider ^ MaskedTextProvider { System::ComponentModel::MaskedTextProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MaskedTextProvider : System.ComponentModel.MaskedTextProvider" Usage="System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.MaskedTextProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-388">マスクされたテキスト ボックス コントロールのインスタンスに関連付けられたマスク プロバイダーの複製を取得します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-388">Gets a clone of the mask provider associated with this instance of the masked text box control.</span></span></summary>
        <value><span data-ttu-id="aca1c-389"><see cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" /> 型のマスク言語プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="aca1c-389">A masking language provider of type <see cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-390"><xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> プロパティは、マスク解析エンジンと、<xref:System.Windows.Forms.MaskedTextBox> コントロールによって使用されるマスク言語を定義します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-390">The <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> property defines the mask-parsing engine and the masking language used by the <xref:System.Windows.Forms.MaskedTextBox> control.</span></span> <span data-ttu-id="aca1c-391">既定のプロバイダーは <xref:System.ComponentModel.MaskedTextProvider?displayProperty=nameWithType> クラスです。ただし、カスタムプロバイダーは <xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.ComponentModel.MaskedTextProvider%29> コンストラクターを使用して指定できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-391">The default provider is the <xref:System.ComponentModel.MaskedTextProvider?displayProperty=nameWithType> class; however, a custom provider can be specified using the <xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.ComponentModel.MaskedTextProvider%29> constructor.</span></span>  
  
 <span data-ttu-id="aca1c-392"><xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> を直接設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-392"><xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> cannot be set directly.</span></span> <span data-ttu-id="aca1c-393">ただし、<xref:System.Windows.Forms.MaskedTextBox> の一部のプロパティ (<xref:System.Windows.Forms.MaskedTextBox.Mask%2A>、<xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>、<xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A>、<xref:System.Windows.Forms.MaskedTextBox.Culture%2A> など) を設定すると、内部的に新しい <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A>が作成される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-393">However, setting some of the properties of <xref:System.Windows.Forms.MaskedTextBox> - such as <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>, <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>, <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A>, and <xref:System.Windows.Forms.MaskedTextBox.Culture%2A> - may internally cause the creation of a new <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.MaskedTextProvider" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
      </Docs>
    </Member>
    <Member MemberName="MaskFull">
      <MemberSignature Language="C#" Value="public bool MaskFull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskFull" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.MaskFull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskFull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaskFull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MaskFull : bool" Usage="System.Windows.Forms.MaskedTextBox.MaskFull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-394">必須およびオプションの入力がすべて入力マスクに入力されたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-394">Gets a value indicating whether all required and optional inputs have been entered into the input mask.</span></span></summary>
        <value><span data-ttu-id="aca1c-395">必須およびオプションの入力がすべて入力された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-395"><see langword="true" /> if all required and optional inputs have been entered; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-396"><xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントハンドラー内で <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A> プロパティを使用して、マスクに残りの入力がないためにユーザーの入力が拒否されたかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-396">You can use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A> property within the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event handler to determine if the user's input was rejected because there are no remaining inputs in the mask.</span></span> <span data-ttu-id="aca1c-397">必須の入力要素だけが入力されているかどうかを判断するには、<xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-397">To determine whether only required input elements have been entered, use the <xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aca1c-398">次のコード例では、<xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントを処理し、マスク内のすべての位置が使用された後にデータを入力しようとした場合に、<xref:System.Windows.Forms.ToolTip> を使用してユーザーに警告します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-398">The following code example handles the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event, and uses a <xref:System.Windows.Forms.ToolTip> to alert the user if an attempt is made to enter data after all positions in the mask have been used.</span></span>  
  
 [!code-csharp[MaskInputRejectedSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MaskInputRejectedSample/CS/form1.cs#1)]
 [!code-vb[MaskInputRejectedSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MaskInputRejectedSample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskCompleted" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskChanged" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" />
      </Docs>
    </Member>
    <Member MemberName="MaskInputRejected">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MaskInputRejectedEventHandler MaskInputRejected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MaskInputRejectedEventHandler MaskInputRejected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MaskInputRejected As MaskInputRejectedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MaskInputRejectedEventHandler ^ MaskInputRejected;" />
      <MemberSignature Language="F#" Value="member this.MaskInputRejected : System.Windows.Forms.MaskInputRejectedEventHandler " Usage="member this.MaskInputRejected : System.Windows.Forms.MaskInputRejectedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MaskInputRejectedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-399">ユーザーの入力または割り当てられた文字が、入力マスクの対応する書式要素と一致しない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-399">Occurs when the user's input or assigned character does not match the corresponding format element of the input mask.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-400"><xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> は、<xref:System.Windows.Forms.MaskedTextBox> クラスの既定のイベントです。</span><span class="sxs-lookup"><span data-stu-id="aca1c-400"><xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> is the default event for the <xref:System.Windows.Forms.MaskedTextBox> class.</span></span>  
  
 <span data-ttu-id="aca1c-401"><xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントは、入力マスクによって文字が拒否された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-401">The <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event occurs when a character is rejected by the input mask.</span></span> <span data-ttu-id="aca1c-402"><xref:System.Windows.Forms.MaskedTextBox.Mask%2A> プロパティによって表される入力マスクは、<xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> プロパティによってコントロールに関連付けられたマスクされたテキストプロバイダーによって解釈されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-402">The input mask, represented by the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property, is interpreted by the masked text provider associated with the control through the <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> property.</span></span> <span data-ttu-id="aca1c-403"><xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> は、次の状況で発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-403"><xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> is raised in the following situations:</span></span>  
  
-   <span data-ttu-id="aca1c-404">入力文字が対応する書式要素と一致しません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-404">An input character does not match the corresponding format element.</span></span> <span data-ttu-id="aca1c-405">たとえば、数字が必要な場合、ユーザーはアルファベット文字を入力します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-405">For example, the user enters an alphabetic character when a digit is required.</span></span> <span data-ttu-id="aca1c-406">このイベントが発生する最も一般的な理由と考えられます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-406">This is probably the most common reason why this event is raised.</span></span>  
  
-   <span data-ttu-id="aca1c-407">マスクが既に入力されているか、現在のキャレットの位置が表示されている入力マスク文字列の最後に移動されたため、マスクの末尾を越えて余分な文字を入力しようとしています。</span><span class="sxs-lookup"><span data-stu-id="aca1c-407">The user is trying to input extraneous characters beyond the end of the mask either because the mask has already been filled or the current caret position has been moved to the very end of the displayed input mask string.</span></span>  
  
-   <span data-ttu-id="aca1c-408">貼り付け操作では、関連付けられた書式指定要素に一致しない文字が挿入されるか、または <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> プロパティが `false`場合、既存の文字がその書式要素と一致しない新しい位置にシフトされます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-408">A paste operation either inserts a character that does not match its associated format element, or if the <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> property is `false`, it shifts existing characters into new positions where they do not match their format elements.</span></span>  
  
-   <span data-ttu-id="aca1c-409">切り取り操作では既存の文字が左にシフトされ、1つ以上の文字が新しく関連付けられた書式指定要素と一致しません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-409">A cut operation shifts existing characters to the left, and one or more characters do not match their newly associated format elements.</span></span>  
  
-   <span data-ttu-id="aca1c-410"><xref:System.Windows.Forms.MaskedTextBox.Text%2A> プロパティが割り当てられましたが、割り当てられた文字列によって1つ以上のマスク違反が発生しました。</span><span class="sxs-lookup"><span data-stu-id="aca1c-410">An assignment was made to the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property and the assigned string caused one or more mask violations.</span></span>  
  
 <span data-ttu-id="aca1c-411"><xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> を発生させるコントロールに文字列が割り当てられている場合は、文字列の一部が <xref:System.Windows.Forms.MaskedTextBox>に表示されません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-411">If a string was assigned to the control that causes <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> to occur, no part of the string will appear in <xref:System.Windows.Forms.MaskedTextBox>.</span></span>  
  
 <span data-ttu-id="aca1c-412"><xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A> プロパティが `true`に設定されている場合、<xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> の既定の処理でビープ音が鳴ります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-412">The default handling for <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> will play a beep sound if the <xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A> property is set to `true`.</span></span> <span data-ttu-id="aca1c-413">このイベントは、多くの場合、カスタムエラー処理を実装するために処理されます。たとえば、マスクがいっぱいの場合に次のユーザー入力コントロールに移動したり、入力文字が無効である場合にカスタムエラーダイアログボックスやツールヒントを表示したりします。</span><span class="sxs-lookup"><span data-stu-id="aca1c-413">This event is often handled to implement custom error handling, for example, to move to the next user input control if the mask is full, or to display a custom error dialog box or ToolTip if the input character is invalid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aca1c-414">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-414">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="aca1c-415">この例では、イベントハンドラーは、<xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-415">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event.</span></span> <span data-ttu-id="aca1c-416">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-416">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="aca1c-417">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="aca1c-417">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="aca1c-418">コード例を実行するには、`MaskedTextBox1`という <xref:System.Windows.Forms.MaskedTextBox> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-418">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MaskedTextBox> named `MaskedTextBox1`.</span></span> <span data-ttu-id="aca1c-419">次に、イベントハンドラーが <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-419">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#486](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#486)]
 [!code-vb[System.Windows.Forms.EventExamples#486](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#486)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
        <altmember cref="T:System.Windows.Forms.MaskInputRejectedEventArgs" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.IsOverwriteMode" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.BeepOnError" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public override int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Windows.Forms.MaskedTextBox.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-420">ユーザーがテキスト ボックス コントロールに入力または貼り付けできる最大文字数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-420">Gets or sets the maximum number of characters the user can type or paste into the text box control.</span></span> <span data-ttu-id="aca1c-421">このプロパティは <see cref="T:System.Windows.Forms.MaskedTextBox" /> ではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-421">This property is not supported by <see cref="T:System.Windows.Forms.MaskedTextBox" />.</span></span></summary>
        <value><span data-ttu-id="aca1c-422">このプロパティは常に 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-422">This property always returns 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-423"><xref:System.Windows.Forms.MaskedTextBox>内の文字列の最大長を確認する方法の詳細については、<xref:System.Windows.Forms.MaskedTextBox.Mask%2A> プロパティと <xref:System.Windows.Forms.MaskInputRejectedEventArgs> クラスの <xref:System.Windows.Forms.MaskInputRejectedEventArgs.Position%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="aca1c-423">See the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property and the <xref:System.Windows.Forms.MaskInputRejectedEventArgs.Position%2A> property in the <xref:System.Windows.Forms.MaskInputRejectedEventArgs> class for information about how to determine the maximum length of a string in a <xref:System.Windows.Forms.MaskedTextBox>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskInputRejectedEventArgs.Position" />
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public override bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.Multiline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Multiline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Multiline { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiline : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.Multiline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-424">このコントロールが複数行テキスト ボックス コントロールかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-424">Gets or sets a value indicating whether this is a multiline text box control.</span></span> <span data-ttu-id="aca1c-425">このプロパティは <see cref="T:System.Windows.Forms.MaskedTextBox" /> では完全にはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-425">This property is not fully supported by <see cref="T:System.Windows.Forms.MaskedTextBox" />.</span></span></summary>
        <value><span data-ttu-id="aca1c-426">このプロパティは、常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-426">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-427"><xref:System.Windows.Forms.MaskedTextBox.AcceptsTab%2A> プロパティは、基本 <xref:System.Windows.Forms.TextBoxBase> クラスから継承されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-427">The <xref:System.Windows.Forms.MaskedTextBox.AcceptsTab%2A> property is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class.</span></span> <span data-ttu-id="aca1c-428">ただし、<xref:System.Windows.Forms.MaskedTextBox> コントロールでは複数行構成がサポートされていないため、このプロパティは完全にはサポートされていません。設定することはできず、常に `false`に解決されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-428">However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this property is not fully supported; it cannot be set and it always resolves to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AcceptsTab" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.AcceptsTabChanged" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Lines" />
      </Docs>
    </Member>
    <Member MemberName="MultilineChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MultilineChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MultilineChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.MultilineChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MultilineChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MultilineChanged;" />
      <MemberSignature Language="F#" Value="member this.MultilineChanged : EventHandler " Usage="member this.MultilineChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-429">通常、<see cref="P:System.Windows.Forms.MaskedTextBox.Multiline" /> プロパティの値が変化したときに発生します。ただし、<see cref="T:System.Windows.Forms.MaskedTextBox" /> では、このイベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-429">Typically occurs when the value of the <see cref="P:System.Windows.Forms.MaskedTextBox.Multiline" /> property has changed; however, this event is not raised by <see cref="T:System.Windows.Forms.MaskedTextBox" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-430"><xref:System.Windows.Forms.MaskedTextBox.MultilineChanged> イベントは、基本 <xref:System.Windows.Forms.TextBoxBase> クラスから継承されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-430">The <xref:System.Windows.Forms.MaskedTextBox.MultilineChanged> event is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class.</span></span> <span data-ttu-id="aca1c-431">ただし、<xref:System.Windows.Forms.MaskedTextBox> コントロールでは複数行構成がサポートされていないため、このイベントは <xref:System.Windows.Forms.MaskedTextBox>では実装されません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-431">However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this event is not implemented in <xref:System.Windows.Forms.MaskedTextBox>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.OnMultilineChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackColorChanged : EventArgs -&gt; unit" Usage="maskedTextBox.OnBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="aca1c-432">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-432">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="aca1c-433"><see cref="P:System.Windows.Forms.Control.BackColor" /> プロパティの値が変化したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-433">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="maskedTextBox.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="aca1c-434">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-434">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="aca1c-435"><see cref="E:System.Windows.Forms.Control.HandleCreated" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-435">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsOverwriteModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsOverwriteModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsOverwriteModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsOverwriteModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsOverwriteModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsOverwriteModeChanged : EventArgs -&gt; unit&#xA;override this.OnIsOverwriteModeChanged : EventArgs -&gt; unit" Usage="maskedTextBox.OnIsOverwriteModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="aca1c-436">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-436">An <see cref="T:System.EventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="aca1c-437"><see cref="E:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-437">Raises the <see cref="E:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-438">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-438">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="aca1c-439">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="aca1c-439">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="aca1c-440"><xref:System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-440">The <xref:System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="aca1c-441">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="aca1c-441">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="aca1c-442">派生クラスで <see cref="M:System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="aca1c-442">When overriding <see cref="M:System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.IsOverwriteMode" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="maskedTextBox.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="aca1c-443">イベント データを含んでいる <see cref="T:System.Windows.Forms.KeyEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-443">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="aca1c-444"><see cref="E:System.Windows.Forms.Control.KeyDown" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-444">Raises the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyPress : System.Windows.Forms.KeyPressEventArgs -&gt; unit" Usage="maskedTextBox.OnKeyPress e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="aca1c-445">イベント データを含んでいる <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-445">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="aca1c-446"><see cref="E:System.Windows.Forms.Control.KeyPress" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-446">Raises the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="maskedTextBox.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="aca1c-447">イベント データを含んでいる <see cref="T:System.Windows.Forms.KeyEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-447">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="aca1c-448"><see cref="E:System.Windows.Forms.Control.KeyUp" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-448">Raises the <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMaskChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMaskChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMaskChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnMaskChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMaskChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMaskChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMaskChanged : EventArgs -&gt; unit&#xA;override this.OnMaskChanged : EventArgs -&gt; unit" Usage="maskedTextBox.OnMaskChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="aca1c-449">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-449">An <see cref="T:System.EventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="aca1c-450"><see cref="E:System.Windows.Forms.MaskedTextBox.MaskChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-450">Raises the <see cref="E:System.Windows.Forms.MaskedTextBox.MaskChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-451">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-451">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="aca1c-452">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="aca1c-452">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="aca1c-453"><xref:System.Windows.Forms.MaskedTextBox.OnMaskChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-453">The <xref:System.Windows.Forms.MaskedTextBox.OnMaskChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="aca1c-454">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="aca1c-454">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="aca1c-455">派生クラスで <see cref="M:System.Windows.Forms.MaskedTextBox.OnMaskChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.MaskedTextBox.OnMaskChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="aca1c-455">When overriding <see cref="M:System.Windows.Forms.MaskedTextBox.OnMaskChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MaskedTextBox.OnMaskChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnMultilineChanged">
      <MemberSignature Language="C#" Value="protected override void OnMultilineChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMultilineChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnMultilineChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMultilineChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMultilineChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMultilineChanged : EventArgs -&gt; unit" Usage="maskedTextBox.OnMultilineChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="aca1c-456">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-456">An <see cref="T:System.EventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="aca1c-457">通常は <see cref="E:System.Windows.Forms.MaskedTextBox.MultilineChanged" /> イベントを発生させますが、<see cref="T:System.Windows.Forms.MaskedTextBox" /> では無効になっています。</span><span class="sxs-lookup"><span data-stu-id="aca1c-457">Typically raises the <see cref="E:System.Windows.Forms.MaskedTextBox.MultilineChanged" /> event, but disabled for <see cref="T:System.Windows.Forms.MaskedTextBox" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-458"><xref:System.Windows.Forms.MaskedTextBox.OnMultilineChanged%2A> メソッドは、基本 <xref:System.Windows.Forms.TextBoxBase> クラスから継承されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-458">The <xref:System.Windows.Forms.MaskedTextBox.OnMultilineChanged%2A> method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class.</span></span> <span data-ttu-id="aca1c-459">ただし、<xref:System.Windows.Forms.MaskedTextBox> コントロールでは複数行構成がサポートされていないため、このメソッドは、アクションを実行しないようにオーバーライドされます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-459">However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is overridden to perform no actions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MultilineChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextAlignChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextAlignChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextAlignChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnTextAlignChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextAlignChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextAlignChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextAlignChanged : EventArgs -&gt; unit&#xA;override this.OnTextAlignChanged : EventArgs -&gt; unit" Usage="maskedTextBox.OnTextAlignChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="aca1c-460">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-460">An <see cref="T:System.EventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="aca1c-461"><see cref="E:System.Windows.Forms.MaskedTextBox.TextAlignChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-461">Raises the <see cref="E:System.Windows.Forms.MaskedTextBox.TextAlignChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-462">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-462">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="aca1c-463">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="aca1c-463">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="aca1c-464"><xref:System.Windows.Forms.MaskedTextBox.OnTextAlignChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-464">The <xref:System.Windows.Forms.MaskedTextBox.OnTextAlignChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="aca1c-465">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="aca1c-465">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="aca1c-466">派生クラスで <see cref="M:System.Windows.Forms.MaskedTextBox.OnTextAlignChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.MaskedTextBox.OnTextAlignChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="aca1c-466">When overriding <see cref="M:System.Windows.Forms.MaskedTextBox.OnTextAlignChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MaskedTextBox.OnTextAlignChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextAlign" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TextAlignChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="maskedTextBox.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="aca1c-467">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-467">An <see cref="T:System.EventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="aca1c-468"><see cref="E:System.Windows.Forms.Control.TextChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-468">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-469">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-469">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="aca1c-470">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="aca1c-470">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="aca1c-471"><xref:System.Windows.Forms.MaskedTextBox.OnTextChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-471">The <xref:System.Windows.Forms.MaskedTextBox.OnTextChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="aca1c-472">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="aca1c-472">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="aca1c-473">派生クラスで <see cref="M:System.Windows.Forms.MaskedTextBox.OnTextChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.MaskedTextBox.OnTextChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="aca1c-473">When overriding <see cref="M:System.Windows.Forms.MaskedTextBox.OnTextChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MaskedTextBox.OnTextChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="E:System.Windows.Forms.Control.TextChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnValidating">
      <MemberSignature Language="C#" Value="protected override void OnValidating (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidating(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnValidating(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValidating (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValidating(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnValidating : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="maskedTextBox.OnValidating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="aca1c-474">イベント データを格納している <see cref="T:System.ComponentModel.CancelEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-474">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="aca1c-475"><see cref="E:System.Windows.Forms.Control.Validating" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-475">Raises the <see cref="E:System.Windows.Forms.Control.Validating" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-476">このプロパティに <xref:System.Type> が指定されている場合、<xref:System.Windows.Forms.MaskedTextBox.OnValidating%2A> メソッドによって、<xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> プロパティに対して入力文字列が検証されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-476">The <xref:System.Windows.Forms.MaskedTextBox.OnValidating%2A> method causes the input string to be validated against the <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> property, if a <xref:System.Type> has been specified for this property.</span></span> <span data-ttu-id="aca1c-477">次に、<xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> イベントも発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-477">It will then also raise the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aca1c-478">テキストベースのコントロールとの一貫性を確保するために、<xref:System.Windows.Forms.MaskedTextBox> が読み取り専用である (<xref:System.Windows.Forms.MaskedTextBox.ReadOnly%2A> プロパティが `true`に設定されている) 場合でも検証が行われます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-478">To ensure consistency with text-based controls, validation will occur even if the <xref:System.Windows.Forms.MaskedTextBox> is read-only (its <xref:System.Windows.Forms.MaskedTextBox.ReadOnly%2A> property is set to `true`).</span></span>  
  
 <span data-ttu-id="aca1c-479">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-479">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="aca1c-480">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="aca1c-480">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="aca1c-481"><xref:System.Windows.Forms.MaskedTextBox.OnValidating%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-481">The <xref:System.Windows.Forms.MaskedTextBox.OnValidating%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="aca1c-482">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="aca1c-482">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="aca1c-483">入力文字列の解析中に、重大な例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="aca1c-483">A critical exception occurred during the parsing of the input string.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="aca1c-484">派生クラスで <see cref="M:System.Windows.Forms.MaskedTextBox.OnValidating(System.ComponentModel.CancelEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.MaskedTextBox.OnValidating(System.ComponentModel.CancelEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="aca1c-484">When overriding <see cref="M:System.Windows.Forms.MaskedTextBox.OnValidating(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MaskedTextBox.OnValidating(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" />
      </Docs>
    </Member>
    <Member MemberName="PasswordChar">
      <MemberSignature Language="C#" Value="public char PasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PasswordChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordChar : char with get, set" Usage="System.Windows.Forms.MaskedTextBox.PasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('\0')</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-485">ユーザー入力の代わりに表示される文字を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-485">Gets or sets the character to be displayed in substitute for user input.</span></span></summary>
        <value><span data-ttu-id="aca1c-486">パスワード文字として使用される <see cref="T:System.Char" /> 値。</span><span class="sxs-lookup"><span data-stu-id="aca1c-486">The <see cref="T:System.Char" /> value used as the password character.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-487">ユーザーが機密情報を入力する場合は、ユーザーによって入力された実際の情報を隠すのが一般的です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-487">For sensitive user input, it is common practice to conceal the actual information entered by the user.</span></span> <span data-ttu-id="aca1c-488"><xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> プロパティが null 以外の文字に設定されている場合、<xref:System.Windows.Forms.MaskedTextBox> はコントロールへのすべての入力に対してこの文字を表示します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-488">If the <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> property is set to a non-null character, <xref:System.Windows.Forms.MaskedTextBox> will display this character for all input into the control.</span></span> <span data-ttu-id="aca1c-489">このプロパティを `null` に設定すると、この機能が無効になります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-489">Setting this property to `null` will disable this functionality.</span></span>  
  
 <span data-ttu-id="aca1c-490">COMCTL32.DLL で定義されているオペレーティングシステムが提供するパスワード文字を使用する場合は、代わりに <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-490">If you want to use the operating system supplied password character, which is defined in COMCTL32.dll, use the <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> property instead.</span></span> <span data-ttu-id="aca1c-491"><xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> と <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> の両方のプロパティがアクティブになっている場合は、後者が優先されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-491">If both the <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> and <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> properties are activated, the latter takes precedence.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="aca1c-492">セキュリティ上の考慮事項として、<xref:System.Windows.Forms.MaskedTextBox> コントロールは、パスワードで保護された文字列に対する切り取りおよびコピー操作を無効にします。</span><span class="sxs-lookup"><span data-stu-id="aca1c-492">As a security consideration, the <xref:System.Windows.Forms.MaskedTextBox> control disables cut and copy operations on password-protected strings.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="aca1c-493">このプロパティの設定時に指定された文字が、<see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> クラスの <see cref="T:System.ComponentModel.MaskedTextProvider" /> メソッドで決定された有効なパスワード文字ではありません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-493">The character specified when setting this property is not a valid password character, as determined by the <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> method of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="aca1c-494">指定されたパスワード文字が、現在のプロンプト文字 <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> と同じです。</span><span class="sxs-lookup"><span data-stu-id="aca1c-494">The password character specified is the same as the current prompt character, <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />.</span></span> <span data-ttu-id="aca1c-495">この 2 つは異なる必要があります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-495">The two are required to be different.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey : Message * System.Windows.Forms.Keys -&gt; bool" Usage="maskedTextBox.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="aca1c-496">処理するウィンドウ メッセージを表す、参照渡しの <see cref="T:System.Windows.Forms.Message" /> です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-496">A <see cref="T:System.Windows.Forms.Message" />, passed by reference that represents the window message to process.</span></span></param>
        <param name="keyData"><span data-ttu-id="aca1c-497">処理するショートカット キーを表す <see cref="T:System.Windows.Forms.Keys" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="aca1c-497">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the shortcut key to process.</span></span></param>
        <summary><span data-ttu-id="aca1c-498">コマンド キーを処理します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-498">Processes a command key.</span></span></summary>
        <returns><span data-ttu-id="aca1c-499">コマンド キーがコントロールによって処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-499"><see langword="true" /> if the command key was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyMessage">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessKeyMessage (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessKeyMessage(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.ProcessKeyMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessKeyMessage (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessKeyMessage(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.ProcessKeyMessage : Message -&gt; bool" Usage="maskedTextBox.ProcessKeyMessage m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="aca1c-500">処理するウィンドウ メッセージを表す、参照渡しの <see cref="T:System.Windows.Forms.Message" /> です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-500">A <see cref="T:System.Windows.Forms.Message" />, passed by reference that represents the window message to process.</span></span></param>
        <summary><span data-ttu-id="aca1c-501">このメソッドの基本実装をオーバーライドして、入力言語の変更を処理します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-501">Overrides the base implementation of this method to handle input language changes.</span></span></summary>
        <returns><span data-ttu-id="aca1c-502">メッセージがコントロールによって処理された場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-502"><see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-503"><xref:System.Windows.Forms.MaskedTextBox> は、ユーザーが入力方式エディター (IME) を使用して文字を入力するときに文字イベントを正しく処理するために、基本コントロールの <xref:System.Windows.Forms.MaskedTextBox.ProcessKeyMessage%2A> の実装をオーバーライドします。たとえば、日本語、中国語、およびその他の複雑な非ラテン語のスクリプトを入力するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-503"><xref:System.Windows.Forms.MaskedTextBox> overrides its base control's implementation of <xref:System.Windows.Forms.MaskedTextBox.ProcessKeyMessage%2A> to properly handle character events when the user is entering characters using an Input Method Editor (IME), such as is used for entering Japanese, Chinese, and other complex non-Latin scripts.</span></span> <span data-ttu-id="aca1c-504"><xref:System.Windows.Forms.MaskedTextBox.ProcessKeyMessage%2A> は、WM_IME_CHAR メッセージを受信した後に発生する WM_CHAR メッセージを検出し、これらの文字がコントロールに表示されないようにするために、メッセージを抑制します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-504"><xref:System.Windows.Forms.MaskedTextBox.ProcessKeyMessage%2A> detects any WM_CHAR messages that occur after it receives a WM_IME_CHAR message and suppresses them in order to prevent these characters from showing up in the control.</span></span> <span data-ttu-id="aca1c-505">このコントロールから派生し、このメッセージをオーバーライドする場合は、新しいコントロールで Ime を使用する場合は、この動作を複製する必要があります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-505">If you derive from this control and override this message, you should duplicate this behavior if you wish your new control to work with IMEs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PromptChar">
      <MemberSignature Language="C#" Value="public char PromptChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PromptChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PromptChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PromptChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PromptChar : char with get, set" Usage="System.Windows.Forms.MaskedTextBox.PromptChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('_')</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-506"><see cref="T:System.Windows.Forms.MaskedTextBox" /> にユーザー入力がないことを表すために使用される文字を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-506">Gets or sets the character used to represent the absence of user input in <see cref="T:System.Windows.Forms.MaskedTextBox" />.</span></span></summary>
        <value><span data-ttu-id="aca1c-507">ユーザーに入力を要求するために使用される文字。</span><span class="sxs-lookup"><span data-stu-id="aca1c-507">The character used to prompt the user for input.</span></span> <span data-ttu-id="aca1c-508">既定値はアンダースコア (_) です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-508">The default is an underscore (_).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-509"><xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> は、ユーザーがまだ入力していないマスク位置の <xref:System.Windows.Forms.MaskedTextBox> に表示されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-509"><xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> will be displayed in <xref:System.Windows.Forms.MaskedTextBox> for any mask position that the user has not yet filled in.</span></span>  
  
 <span data-ttu-id="aca1c-510"><xref:System.Windows.Forms.MaskedTextBox> にフォーカスがないときにプロンプトを表示するかどうかを指定するには、<xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-510">Use the <xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave%2A> property to specify whether the prompt is displayed when <xref:System.Windows.Forms.MaskedTextBox> does not have focus.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="aca1c-511">このプロパティの設定時に指定された文字が、<see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> クラスの <see cref="T:System.ComponentModel.MaskedTextProvider" /> メソッドで決定された有効なプロンプト文字ではありません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-511">The character specified when setting this property is not a valid prompt character, as determined by the <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> method of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="aca1c-512">指定されたプロンプト文字が、現在のパスワード文字 <see cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" /> と同じです。</span><span class="sxs-lookup"><span data-stu-id="aca1c-512">The prompt character specified is the same as the current password character, <see cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />.</span></span> <span data-ttu-id="aca1c-513">この 2 つは異なる必要があります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-513">The two are required to be different.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-514">テキスト ボックスのテキストが読み取り専用かどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-514">Gets or sets a value indicating whether text in the text box is read-only.</span></span></summary>
        <value><span data-ttu-id="aca1c-515">テキストが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-515"><see langword="true" /> to indicate the text is read only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RejectInputOnFirstFailure">
      <MemberSignature Language="C#" Value="public bool RejectInputOnFirstFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RejectInputOnFirstFailure" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.RejectInputOnFirstFailure" />
      <MemberSignature Language="VB.NET" Value="Public Property RejectInputOnFirstFailure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RejectInputOnFirstFailure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RejectInputOnFirstFailure : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.RejectInputOnFirstFailure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-516">最初の無効な文字に到達した後、ユーザー入力の解析を停止するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-516">Gets or sets a value indicating whether the parsing of user input should stop after the first invalid character is reached.</span></span></summary>
        <value><span data-ttu-id="aca1c-517">入力文字列の処理が最初の解析エラーで終了する場合は <see langword="true" />。それ以外の場合で、処理がすべてのエラーを無視するときは <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-517"><see langword="true" /> if processing of the input string should be terminated at the first parsing error; otherwise, <see langword="false" /> if processing should ignore all errors.</span></span> <span data-ttu-id="aca1c-518">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-518">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-519">場合によっては、1回の入力操作で <xref:System.Windows.Forms.MaskedTextBox> に複数の文字を入力することがあります。通常は、文字列をコピーして貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-519">Sometimes the user will enter several characters into a <xref:System.Windows.Forms.MaskedTextBox> in a single input operation, typically by copying and pasting a string.</span></span> <span data-ttu-id="aca1c-520">入力マスクの貼り付け位置に従って、文字列全体に有効な文字のみが含まれている場合は、操作全体が成功します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-520">If the entire string only contains valid characters, according to their paste position in the input mask, then the entire operation will succeed.</span></span> <span data-ttu-id="aca1c-521">ただし、解析エラーが発生した場合、<xref:System.Windows.Forms.MaskedTextBox> の動作は、次のように <xref:System.Windows.Forms.MaskedTextBox.RejectInputOnFirstFailure%2A>の値によって異なります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-521">However, when a parsing error occurs, the behavior of <xref:System.Windows.Forms.MaskedTextBox> depends on the value of <xref:System.Windows.Forms.MaskedTextBox.RejectInputOnFirstFailure%2A>, as follows:</span></span>  
  
-   <span data-ttu-id="aca1c-522">このプロパティが `true`場合、入力文字列の処理は無効な文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-522">If this property is `true`, then processing of the input string stops at the invalid character.</span></span> <span data-ttu-id="aca1c-523">後続のすべての文字は無視されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-523">All subsequent characters are ignored.</span></span> <span data-ttu-id="aca1c-524">1つの <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-524">A single <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event is raised.</span></span>  
  
-   <span data-ttu-id="aca1c-525">このプロパティが `false`場合、無効な文字は拒否されますが、解析は入力文字列内の次の文字から続行されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-525">If this property is `false`, then the invalid character is rejected, but parsing continues with the next character in the input string.</span></span> <span data-ttu-id="aca1c-526">入力文字列内のすべての無効な文字に対して、<xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-526">A <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event is raised for every invalid character in the input string.</span></span>  
  
 <span data-ttu-id="aca1c-527"><xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>、<xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A>、および <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> の各プロパティは、ユーザー入力の解釈にも影響を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-527">The <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>, <xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A> and <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> properties can also influence the interpretation of the user input.</span></span>  
  
 <span data-ttu-id="aca1c-528"><xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> プロパティが `false`の場合、挿入ポイントの右側にある入力マスクに既に含まれている文字は、許容される文字数だけ置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-528">If the <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> property is `false`, then any characters already in the input mask to the right of the insertion point will be displaced by the accepted number of characters.</span></span> <span data-ttu-id="aca1c-529">このシフトによって、追加の解析エラーが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-529">This shifting may cause additional parsing errors.</span></span>  
  
 <span data-ttu-id="aca1c-530">貼り付け操作は、<xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A> プロパティを設定することによってプログラムで模倣できできます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-530">A pasting operation can be mimicked programmatically by setting the <xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnSpace" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.IsOverwriteMode" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnPrompt">
      <MemberSignature Language="C#" Value="public bool ResetOnPrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnPrompt" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetOnPrompt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetOnPrompt { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResetOnPrompt : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-531">プロンプト文字と一致する入力文字を処理する方法を決定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-531">Gets or sets a value that determines how an input character that matches the prompt character should be handled.</span></span></summary>
        <value><span data-ttu-id="aca1c-532">入力されたプロンプト文字によって、マスク内の現在の編集可能な位置がリセットされる場合は <see langword="true" />。それ以外の場合、プロンプト文字が通常の入力文字として処理されることを示すには <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-532"><see langword="true" /> if the prompt character entered as input causes the current editable position in the mask to be reset; otherwise, <see langword="false" /> to indicate that the prompt character is to be processed as a normal input character.</span></span> <span data-ttu-id="aca1c-533">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-533">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-534"><xref:System.Windows.Forms.MaskedTextBox> では、2つのカテゴリの文字スペースとプロンプト文字を特別に扱うことができます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-534">The <xref:System.Windows.Forms.MaskedTextBox> can treat two categories of characters - spaces and prompt characters - specially.</span></span> <span data-ttu-id="aca1c-535">通常、各入力文字はマスクに対してテストされ、受け入れられるか拒否されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-535">Typically, each input character will be tested against the mask and either accepted or rejected.</span></span> <span data-ttu-id="aca1c-536"><xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> プロパティが非`null`に設定されていると仮定すると、<xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A> プロパティを `true` に設定すると、プロンプト文字が特別に処理されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-536">Assuming that the <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> property is set to non-`null`, then setting the <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A> property to `true` will result in special processing for the prompt character.</span></span> <span data-ttu-id="aca1c-537">ユーザーがプロンプト文字をマスクに入力すると、現在のマスクの文字位置がクリアされ、現在位置が次の編集可能な文字に向かって進められます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-537">When the user enters the prompt character into the mask, it causes the current mask character position to be cleared and the current position to be advanced to the next editable character.</span></span>  
  
 <span data-ttu-id="aca1c-538">次の表に示すように、<xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A> は <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A> プロパティよりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-538"><xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A> takes precedence over the <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A> property, as shown in the following table.</span></span>  
  
|<span data-ttu-id="aca1c-539">ResetOnPrompt 値</span><span class="sxs-lookup"><span data-stu-id="aca1c-539">ResetOnPrompt value</span></span>|<span data-ttu-id="aca1c-540">AllowPromptAsInput 値</span><span class="sxs-lookup"><span data-stu-id="aca1c-540">AllowPromptAsInput value</span></span>|<span data-ttu-id="aca1c-541">行われる動作</span><span class="sxs-lookup"><span data-stu-id="aca1c-541">Resulting behavior</span></span>|  
|-------------------------|------------------------------|------------------------|  
|`true`|`true`|<span data-ttu-id="aca1c-542">プロンプト文字を入力すると、現在のマスク位置がリセットされます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-542">The prompt character can be entered and it causes the current mask position to be reset.</span></span> <span data-ttu-id="aca1c-543">これは既定値です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-543">This is the default.</span></span>|  
|`true`|`false`|<span data-ttu-id="aca1c-544">プロンプト文字を入力すると、現在のマスク位置がリセットされます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-544">The prompt character can be entered and it causes the current mask position to be reset.</span></span>|  
|`false`|`true`|<span data-ttu-id="aca1c-545">プロンプト文字は標準入力文字として処理されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-545">The prompt character is processed as a standard input character.</span></span>|  
|`false`|`false`|<span data-ttu-id="aca1c-546">プロンプト文字が有効ではないため、<xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-546">The prompt character is not valid and raises a <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnSpace" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnSpace">
      <MemberSignature Language="C#" Value="public bool ResetOnSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnSpace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.ResetOnSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetOnSpace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetOnSpace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResetOnSpace : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.ResetOnSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-547">空白の入力文字の処理方法を決定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-547">Gets or sets a value that determines how a space input character should be handled.</span></span></summary>
        <value><span data-ttu-id="aca1c-548">空白の入力文字によって、マスク内の現在の編集可能な位置がリセットされる場合は <see langword="true" />。それ以外の場合、通常の入力文字として処理されることを示すには <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-548"><see langword="true" /> if the space input character causes the current editable position in the mask to be reset; otherwise, <see langword="false" /> to indicate that it is to be processed as a normal input character.</span></span> <span data-ttu-id="aca1c-549">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-549">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-550"><xref:System.Windows.Forms.MaskedTextBox> では、2つのカテゴリの文字スペースとプロンプト文字を特別に扱うことができます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-550">The <xref:System.Windows.Forms.MaskedTextBox> can treat two categories of characters - spaces and prompt characters - specially.</span></span> <span data-ttu-id="aca1c-551">通常、各入力文字はマスクに対してテストされ、受け入れられるか拒否されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-551">Typically, each input character will be tested against the mask and either accepted or rejected.</span></span> <span data-ttu-id="aca1c-552"><xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A> プロパティを `true` に設定すると、現在のマスクの文字位置がクリアされ、現在位置が次の編集可能な文字になるようになります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-552">Setting the <xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A> property to `true` will result in the current mask character position to be cleared and the current position to be advanced to the next editable character.</span></span>  
  
 <span data-ttu-id="aca1c-553">文字入力の種類によって、マスクエンジンがマスク内の次の文字に前方に移動するか、現在の位置にとどまり、一致する文字を待機するかが決まります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-553">The type of character input will determine whether the masking engine moves forward to the next character in the mask, or stays at the current position and waits for a matching character.</span></span> <span data-ttu-id="aca1c-554">入力文字がスペースで、マスク内の現在の編集不可能な文字と一致しない場合、マスクエンジンはマスクの次の文字に進みます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-554">If the input character is a space, and does not match the current non-editable character in the mask, the masking engine will skip ahead to the next character in the mask.</span></span> <span data-ttu-id="aca1c-555">入力文字がスペースではなく、マスク内の現在の編集不可能な文字と一致しない場合、マスクエンジンは現在のマスク位置にとどまり、次の入力文字と照合を試みます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-555">If the input character is not a space, and does not match the current non-editable character in the mask, the masking engine will remain at the current mask position, and attempt to match the next input character against it.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToCaret">
      <MemberSignature Language="C#" Value="public void ScrollToCaret ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToCaret() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.ScrollToCaret" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToCaret ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToCaret();" />
      <MemberSignature Language="F#" Value="override this.ScrollToCaret : unit -&gt; unit" Usage="maskedTextBox.ScrollToCaret " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aca1c-556">コントロールの内容を現在のキャレット位置までスクロールします。</span><span class="sxs-lookup"><span data-stu-id="aca1c-556">Scrolls the contents of the control to the current caret position.</span></span> <span data-ttu-id="aca1c-557"><see cref="T:System.Windows.Forms.MaskedTextBox" /> は、このメソッドをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-557">This method is not supported by <see cref="T:System.Windows.Forms.MaskedTextBox" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-558"><xref:System.Windows.Forms.MaskedTextBox.ScrollToCaret%2A> メソッドは、基本 <xref:System.Windows.Forms.TextBoxBase> クラスから継承されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-558">The <xref:System.Windows.Forms.MaskedTextBox.ScrollToCaret%2A> method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class.</span></span> <span data-ttu-id="aca1c-559">ただし、<xref:System.Windows.Forms.MaskedTextBox> コントロールでは複数行構成がサポートされていないため、このメソッドは、アクションを実行しないようにオーバーライドされます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-559">However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is overridden to perform no actions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public override string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedText : string with get, set" Usage="System.Windows.Forms.MaskedTextBox.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-560"><see cref="T:System.Windows.Forms.MaskedTextBox" /> コントロール内の現在の選択項目を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-560">Gets or sets the current selection in the <see cref="T:System.Windows.Forms.MaskedTextBox" /> control.</span></span></summary>
        <value><span data-ttu-id="aca1c-561"><see cref="T:System.String" /> として現在選択されているテキスト。</span><span class="sxs-lookup"><span data-stu-id="aca1c-561">The currently selected text as a <see cref="T:System.String" />.</span></span> <span data-ttu-id="aca1c-562">現在テキストが選択されていない場合、このプロパティは空の文字列に解決されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-562">If no text is currently selected, this property resolves to an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-563">このプロパティを使用して取得した選択は、コントロールの書式設定プロパティ (<xref:System.Windows.Forms.MaskedTextBox.Mask%2A>、<xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A>、<xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A>、<xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A>など) に従って書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-563">Selections retrieved using this property are formatted according to the control's formatting properties, such as <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>, <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A>, <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> and <xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A>.</span></span> <span data-ttu-id="aca1c-564">このプロパティを使用して設定した選択内容は貼り付け操作のように動作します。各文字がマスクと照合され、無効な文字に対して <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-564">Selections set using this property behave like a Paste operation: each character is matched against the mask, and the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event is raised for invalid characters.</span></span> <span data-ttu-id="aca1c-565"><xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A> が `true`場合、<xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A>を設定するときにリテラルとプロンプト文字が許可され、マスクに違反しない限り、自動的に削除されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-565">If <xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A> is `true`, literals and prompt characters are allowed when setting <xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A>, and will be removed silently unless they violate the mask.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.RejectInputOnFirstFailure" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetPositionFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SkipLiterals">
      <MemberSignature Language="C#" Value="public bool SkipLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipLiterals" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.SkipLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLiterals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipLiterals { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLiterals : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.SkipLiterals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-566">ユーザーがリテラル値の再入力を許可されているかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-566">Gets or sets a value indicating whether the user is allowed to reenter literal values.</span></span></summary>
        <value><span data-ttu-id="aca1c-567">リテラルの再入力が許可されている場合は <see langword="true" />。それ以外の場合、ユーザーがリテラル文字を上書きできないときは <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-567"><see langword="true" /> to allow literals to be reentered; otherwise, <see langword="false" /> to prevent the user from overwriting literal characters.</span></span> <span data-ttu-id="aca1c-568">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-568">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-569">通常、入力マスクにはリテラルが含まれます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-569">Input masks commonly contain literals.</span></span> <span data-ttu-id="aca1c-570">ユーザーが実行時に <xref:System.Windows.Forms.MaskedTextBox> に文字を入力すると、現在の文字位置がリテラルに含まれることがあります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-570">When the user enters characters into the <xref:System.Windows.Forms.MaskedTextBox> at runtime, the current character position will sometimes fall on a literal.</span></span> <span data-ttu-id="aca1c-571"><xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> プロパティは、次のように次の文字のユーザー入力を処理する方法を記述します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-571">The <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> property describes how user input for the next character is to be handled, as follows:</span></span>  
  
-   <span data-ttu-id="aca1c-572">このプロパティが `true`場合、ユーザーは、現在の位置にあるリテラルと同じ文字を冗長に入力するか、次の編集可能な文字を入力して、現在の位置をその位置にジャンプできます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-572">If this property is `true`, the user can either redundantly enter the same character as the literal at the current position, or can enter the next editable character, thereby jumping the current position to that position.</span></span>  
  
-   <span data-ttu-id="aca1c-573">このプロパティが `false`場合、ユーザーは次の編集可能な文字だけを入力できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-573">If this property is `false`, the user can only enter the next editable character.</span></span> <span data-ttu-id="aca1c-574">マスク内の次の位置がリテラル文字を受け入れない場合 (たとえば、ユーザーが "/" を入力し、次の位置が数字のみを受け入れる場合)、コントロールは <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-574">If the next position in the mask will not accept the literal character (for example, the user types "/" and the next position only accepts digits), the control will raise the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event.</span></span>  
  
 <span data-ttu-id="aca1c-575">たとえば、"90/90/0000" 日付入力マスクでは、スラッシュ文字はリテラルです。</span><span class="sxs-lookup"><span data-stu-id="aca1c-575">As an example, in the "90/90/0000" date entry mask, the forward slash characters are literals.</span></span> <span data-ttu-id="aca1c-576">ユーザーが2つの先頭の数字 "11" を入力したため、マスク内の現在の位置が最初のスラッシュ (/) リテラルになっているとします。</span><span class="sxs-lookup"><span data-stu-id="aca1c-576">Assume that the user has entered two initial digits, "11", so the current position in the mask is at the first forward slash (/) literal.</span></span> <span data-ttu-id="aca1c-577"><xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> が `true`場合、ユーザーには次の有効な選択肢があります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-577">If <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> is `true`, then the user has the following valid choices:</span></span>  
  
-   <span data-ttu-id="aca1c-578">ユーザーは "/" という文字を入力できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-578">The user can enter a "/" character.</span></span> <span data-ttu-id="aca1c-579">これにより、位置が次の文字に移動します。この例では、4番目の位置 (9 つのマスク要素) です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-579">This results in the position being moved to the next character, which in this example is the fourth position, a 9 masking element.</span></span>  
  
-   <span data-ttu-id="aca1c-580">ユーザーは、次の編集可能な文字を入力できます。この例では、数字が使用されています。</span><span class="sxs-lookup"><span data-stu-id="aca1c-580">The user can enter the next editable character, which in this example is a digit.</span></span> <span data-ttu-id="aca1c-581">この数字は検証され、現在の位置は5番目の位置に自動的に移動されます。これは0マスク要素です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-581">The digit would be validated and the current position would automatically be moved to the fifth position, which is a 0 masking element.</span></span>  
  
 <span data-ttu-id="aca1c-582"><xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> が `false`場合は、有効なデータ入力のみが許可されます。この例では、数字が使用されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-582">If <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> is `false`, then only a valid data input is allowed, which in this example would be a digit.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.MaskedTextBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.MaskedTextBoxTextEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.MaskedTextBoxTextEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-583">現在ユーザーに表示されているテキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-583">Gets or sets the text as it is currently displayed to the user.</span></span></summary>
        <value><span data-ttu-id="aca1c-584">現在コントロールによって表示されているテキストを格納する <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-584">A <see cref="T:System.String" /> containing the text currently displayed by the control.</span></span> <span data-ttu-id="aca1c-585">既定値は空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-585">The default is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-586"><xref:System.Windows.Forms.MaskedTextBox.Text%2A> は、<xref:System.Windows.Forms.MaskedTextBox> クラスの既定のバインディングプロパティです。</span><span class="sxs-lookup"><span data-stu-id="aca1c-586"><xref:System.Windows.Forms.MaskedTextBox.Text%2A> is the default binding property for the <xref:System.Windows.Forms.MaskedTextBox> class.</span></span>  
  
 <span data-ttu-id="aca1c-587">このプロパティを使用して取得した文字列は、<xref:System.Windows.Forms.MaskedTextBox.Mask%2A> や <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A>など、コントロールの書式設定プロパティに従って書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-587">Strings retrieved using this property are formatted according to the control's formatting properties, such as <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> and <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A>.</span></span>  
  
 <span data-ttu-id="aca1c-588"><xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>、<xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A>、および <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A>の値に応じて、リテラル文字の有無に関係なく文字列を <xref:System.Windows.Forms.MaskedTextBox.Text%2A> に割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-588">You can assign a string with or without literal characters to <xref:System.Windows.Forms.MaskedTextBox.Text%2A> depending on the values of <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>, <xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A>, and <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A>.</span></span>  
  
 <span data-ttu-id="aca1c-589"><xref:System.Windows.Forms.MaskedTextBox.Text%2A> は <xref:System.Windows.Forms.MaskedTextBox>の既定のバインディングプロパティです。</span><span class="sxs-lookup"><span data-stu-id="aca1c-589"><xref:System.Windows.Forms.MaskedTextBox.Text%2A> is the default binding property for <xref:System.Windows.Forms.MaskedTextBox>.</span></span>  
  
 <span data-ttu-id="aca1c-590">書式設定されたテキスト値が変更されるたびに、<xref:System.Windows.Forms.MaskedTextBox> によって <xref:System.Windows.Forms.Control.TextChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-590"><xref:System.Windows.Forms.MaskedTextBox> will raise the <xref:System.Windows.Forms.Control.TextChanged> event whenever the formatted text value changes.</span></span> <span data-ttu-id="aca1c-591">プロパティが異なると、この値が変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-591">Different properties may or may not cause this value to change.</span></span> <span data-ttu-id="aca1c-592">たとえば、<xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> プロパティを変更しても <xref:System.Windows.Forms.Control.TextChanged> イベントは発生しませんが、<xref:System.Windows.Forms.MaskedTextBox.Mask%2A> プロパティを変更すると、が発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-592">For example, changing the <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> property will not raise the <xref:System.Windows.Forms.Control.TextChanged> event, but changing the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property will.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aca1c-593">次のコード例は、<xref:System.Windows.Forms.MaskedTextBox.Text%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="aca1c-593">The following code example demonstrates the use of the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property.</span></span>  
  
 [!code-vb[TestMaskedTextBox#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TestMaskedTextBox/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultBindingPropertyAttribute" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.SelectedText" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.FormatProvider" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Culture" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave" />
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HorizontalAlignment TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.HorizontalAlignment TextAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.TextAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlign As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HorizontalAlignment TextAlign { System::Windows::Forms::HorizontalAlignment get(); void set(System::Windows::Forms::HorizontalAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlign : System.Windows.Forms.HorizontalAlignment with get, set" Usage="System.Windows.Forms.MaskedTextBox.TextAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-594">マスクされたテキスト ボックス コントロールでテキストを配置する方法を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-594">Gets or sets how text is aligned in a masked text box control.</span></span></summary>
        <value><span data-ttu-id="aca1c-595">コントロールを基準として相対的にテキストをどのように配置するかを指定する <see cref="T:System.Windows.Forms.HorizontalAlignment" /> 列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="aca1c-595">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> enumeration values that specifies how text is aligned relative to the control.</span></span> <span data-ttu-id="aca1c-596">既定では、 <see cref="F:System.Windows.Forms.HorizontalAlignment.Left" />です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-596">The default is <see cref="F:System.Windows.Forms.HorizontalAlignment.Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-597"><xref:System.Windows.Forms.MaskedTextBox.TextAlign%2A> プロパティを使用して、フォーム上のビジュアル要素のレイアウトに合わせて、表示されるテキストを <xref:System.Windows.Forms.MaskedTextBox> 内に配置できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-597">You can use the <xref:System.Windows.Forms.MaskedTextBox.TextAlign%2A> property to align the displayed text within a <xref:System.Windows.Forms.MaskedTextBox> to match the layout of visual elements on your form.</span></span> <span data-ttu-id="aca1c-598">たとえば、コントロールがすべてフォームの右側に配置されている場合は、[<xref:System.Windows.Forms.MaskedTextBox.TextAlign%2A>] プロパティを [<xref:System.Windows.Forms.HorizontalAlignment.Right>] に設定すると、テキストは既定の左揃えではなく、コントロールの右側に配置されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-598">For example, if your controls are all located on the right side of the form, you can set the <xref:System.Windows.Forms.MaskedTextBox.TextAlign%2A> property to <xref:System.Windows.Forms.HorizontalAlignment.Right>, and the text will be aligned with the right side of the control instead of the default left alignment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="aca1c-599">このプロパティに割り当てられた値が <see cref="T:System.Windows.Forms.HorizontalAlignment" /> 型ではありません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-599">The value assigned to this property is not of type <see cref="T:System.Windows.Forms.HorizontalAlignment" />.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.TextLength" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AutoSize" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TextAlignChanged" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextAlignChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextAlignChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.TextAlignChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextAlignChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextAlignChanged;" />
      <MemberSignature Language="F#" Value="member this.TextAlignChanged : EventHandler " Usage="member this.TextAlignChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-600">テキストの配置が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-600">Occurs when the text alignment is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-601"><xref:System.Windows.Forms.MaskedTextBox.TextAlign%2A> プロパティが変更された後に、<xref:System.Windows.Forms.MaskedTextBox.TextAlignChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-601">The <xref:System.Windows.Forms.MaskedTextBox.TextAlignChanged> event is raised after the <xref:System.Windows.Forms.MaskedTextBox.TextAlign%2A> property is changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aca1c-602">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-602">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="aca1c-603">この例では、イベントハンドラーは、<xref:System.Windows.Forms.MaskedTextBox.TextAlignChanged> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-603">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.MaskedTextBox.TextAlignChanged> event.</span></span> <span data-ttu-id="aca1c-604">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-604">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="aca1c-605">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="aca1c-605">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="aca1c-606">コード例を実行するには、`MaskedTextBox1`という <xref:System.Windows.Forms.MaskedTextBox> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-606">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MaskedTextBox> named `MaskedTextBox1`.</span></span> <span data-ttu-id="aca1c-607">次に、イベントハンドラーが <xref:System.Windows.Forms.MaskedTextBox.TextAlignChanged> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-607">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.MaskedTextBox.TextAlignChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#487](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#487)]
 [!code-vb[System.Windows.Forms.EventExamples#487](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#487)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextAlign" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.OnTextAlignChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TextLength">
      <MemberSignature Language="C#" Value="public override int TextLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.TextLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TextLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TextLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TextLength : int" Usage="System.Windows.Forms.MaskedTextBox.TextLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-608">表示テキストの長さを取得します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-608">Gets the length of the displayed text.</span></span></summary>
        <value><span data-ttu-id="aca1c-609"><see cref="P:System.Windows.Forms.MaskedTextBox.Text" /> プロパティの文字数を表す Int32。</span><span class="sxs-lookup"><span data-stu-id="aca1c-609">An Int32 representing the number of characters in the <see cref="P:System.Windows.Forms.MaskedTextBox.Text" /> property.</span></span> <span data-ttu-id="aca1c-610"><see cref="P:System.Windows.Forms.MaskedTextBox.TextLength" /> では、<see cref="P:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave" /> などのプロパティが考慮されるため、返される結果は、コントロールにフォーカスがあるかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-610"><see cref="P:System.Windows.Forms.MaskedTextBox.TextLength" /> respects properties such as <see cref="P:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave" />, which means that the return results may be different depending on whether the control has focus.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextMaskFormat">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MaskFormat TextMaskFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MaskFormat TextMaskFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TextMaskFormat As MaskFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MaskFormat TextMaskFormat { System::Windows::Forms::MaskFormat get(); void set(System::Windows::Forms::MaskFormat value); };" />
      <MemberSignature Language="F#" Value="member this.TextMaskFormat : System.Windows.Forms.MaskFormat with get, set" Usage="System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MaskFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-611">リテラルおよびプロンプト文字が、書式設定された文字列に含まれるかどうかを決定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-611">Gets or sets a value that determines whether literals and prompt characters are included in the formatted string.</span></span></summary>
        <value><span data-ttu-id="aca1c-612"><see cref="T:System.Windows.Forms.MaskFormat" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="aca1c-612">One of the <see cref="T:System.Windows.Forms.MaskFormat" /> values.</span></span> <span data-ttu-id="aca1c-613">既定では、 <see cref="F:System.Windows.Forms.MaskFormat.IncludeLiterals" />です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-613">The default is <see cref="F:System.Windows.Forms.MaskFormat.IncludeLiterals" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-614"><xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> プロパティは、書式設定された文字列を生成するときにマスク内のリテラル文字とプロンプト文字をどのように処理するかを決定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-614">The <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> property determines how the literal and prompt characters in the mask are processed when the generating the formatted string.</span></span> <span data-ttu-id="aca1c-615">具体的には、リテラル文字、プロンプト文字、またはその両方が <xref:System.Windows.Forms.MaskedTextBox.Text%2A> プロパティに含まれるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-615">More specifically, it determines whether literal characters, prompt characters, or both are included in the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property.</span></span> <span data-ttu-id="aca1c-616">プロンプト文字を除外すると、書式設定された文字列内のスペースに変換されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-616">When prompt characters are excluded, they are transformed into spaces in the formatted string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aca1c-617"><xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A> プロパティは、<xref:System.Windows.Forms.MaskedTextBox.Text%2A> プロパティがどのように解釈されるかに関して同様の目的を果たします。</span><span class="sxs-lookup"><span data-stu-id="aca1c-617">The <xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A> property serves a similar purpose with respect to how the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property is interpreted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="aca1c-618">無効な <see cref="T:System.Windows.Forms.MaskFormat" /> 値を使用して設定されたプロパティ。</span><span class="sxs-lookup"><span data-stu-id="aca1c-618">Property set with a <see cref="T:System.Windows.Forms.MaskFormat" /> value that is not valid.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ToString" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="maskedTextBox.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aca1c-619">現在のマスクされたテキスト ボックスを表す文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-619">Returns a string that represents the current masked text box.</span></span> <span data-ttu-id="aca1c-620">このメソッドは、<see cref="M:System.Windows.Forms.TextBoxBase.ToString" /> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="aca1c-620">This method overrides <see cref="M:System.Windows.Forms.TextBoxBase.ToString" />.</span></span></summary>
        <returns><span data-ttu-id="aca1c-621">現在の <see cref="T:System.String" /> に関する情報を格納している <see cref="T:System.Windows.Forms.MaskedTextBox" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-621">A <see cref="T:System.String" /> that contains information about the current <see cref="T:System.Windows.Forms.MaskedTextBox" />.</span></span> <span data-ttu-id="aca1c-622">文字列には、型、入力文字列の簡素化されたビュー、および書式設定された入力文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-622">The string includes the type, a simplified view of the input string, and the formatted input string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-623">このバージョンの <xref:System.Windows.Forms.MaskedTextBox.ToString%2A> メソッドは、このメソッドの基本クラスの実装を呼び出し、<xref:System.Windows.Forms.TextBoxBase.ToString%2A?displayProperty=nameWithType>してから、マスクによって処理された後に入力文字列を追加します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-623">This version of the <xref:System.Windows.Forms.MaskedTextBox.ToString%2A> method calls the base class implementation of this method, <xref:System.Windows.Forms.TextBoxBase.ToString%2A?displayProperty=nameWithType>, then appends the input string after processing by the mask.</span></span> <span data-ttu-id="aca1c-624">このメソッドは、書式設定された文字列の外観を変更するプロパティを受け入れます。ただし、次の例外があります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-624">This method honors properties that alter the appearance of the formatted string, with the following exceptions:</span></span>  
  
-   <span data-ttu-id="aca1c-625">返される文字列には、<xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> プロパティの値に関係なく、常にプロンプトとリテラル文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-625">The returned string always includes prompt and literal characters, regardless of the values of the <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> property.</span></span>  
  
-   <span data-ttu-id="aca1c-626">実際のユーザーが入力した文字が返されるように、パスワード文字は無視されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-626">Password characters are ignored, so that the actual user-typed characters are returned.</span></span> <span data-ttu-id="aca1c-627">つまり、<xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> プロパティと <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> プロパティの値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-627">In other words, the values of the <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> and <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> properties are ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="TypeValidationCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TypeValidationEventHandler TypeValidationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TypeValidationEventHandler TypeValidationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TypeValidationCompleted As TypeValidationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TypeValidationEventHandler ^ TypeValidationCompleted;" />
      <MemberSignature Language="F#" Value="member this.TypeValidationCompleted : System.Windows.Forms.TypeValidationEventHandler " Usage="member this.TypeValidationCompleted : System.Windows.Forms.TypeValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TypeValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-628"><see cref="T:System.Windows.Forms.MaskedTextBox" /> が <see cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" /> プロパティを使用して現在の値の解析を完了した場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-628">Occurs when <see cref="T:System.Windows.Forms.MaskedTextBox" /> has finished parsing the current value using the <see cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-629"><xref:System.Windows.Forms.MaskedTextBox> コントロールは、必要に応じて、<xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A?displayProperty=nameWithType> プロパティによって定義された型に対してユーザー入力を検証します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-629">The <xref:System.Windows.Forms.MaskedTextBox> control will optionally validate user input against the type defined by its <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="aca1c-630">このプロパティが `null`されていない場合は、次の一連のイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-630">When this property is not `null`, the following series of events occurs:</span></span>  
  
1.  <span data-ttu-id="aca1c-631">検証シーケンスは、次のいずれかの状況で開始されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-631">The validation sequence begins when one of the following occurs:</span></span>  
  
    -   <span data-ttu-id="aca1c-632"><xref:System.Windows.Forms.MaskedTextBox> コントロールがフォーカスを失っています。</span><span class="sxs-lookup"><span data-stu-id="aca1c-632"><xref:System.Windows.Forms.MaskedTextBox> control looses focus.</span></span>  
  
    -   <span data-ttu-id="aca1c-633"><xref:System.Windows.Forms.MaskedTextBox.Text%2A> プロパティが取得されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-633">The <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property is retrieved.</span></span>  
  
    -   <span data-ttu-id="aca1c-634"><xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-634">The <xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A> method is called.</span></span>  
  
2.  <span data-ttu-id="aca1c-635">これらのイベントのいずれかによって、<xref:System.Windows.Forms.TypeValidationEventArgs.ValidatingType%2A> プロパティで指定された型の `Parse` メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-635">Any of these events result in a call to the `Parse` method of the type specified with the <xref:System.Windows.Forms.TypeValidationEventArgs.ValidatingType%2A> property.</span></span> <span data-ttu-id="aca1c-636">`Parse` は、書式設定された入力文字列を対象の型に変換する役割を担います。</span><span class="sxs-lookup"><span data-stu-id="aca1c-636">`Parse` is responsible for the conversion of the formatted input string to the target type.</span></span> <span data-ttu-id="aca1c-637">正常に変換された場合は、検証に成功したものと見なされます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-637">A successful conversion equates to a successful validation.</span></span>  
  
3.  <span data-ttu-id="aca1c-638">`Parse` が返されると、<xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-638">After `Parse` returns, the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event is raised.</span></span> <span data-ttu-id="aca1c-639">このイベントのイベントハンドラーは、型またはマスクの検証処理を実行するために最も一般的に実装されています。</span><span class="sxs-lookup"><span data-stu-id="aca1c-639">The event handler for this event is most commonly implemented to perform type or mask validation processing.</span></span> <span data-ttu-id="aca1c-640">変換に関する情報を含む <xref:System.Windows.Forms.TypeValidationEventArgs> パラメーターを受け取ります。たとえば、<xref:System.Windows.Forms.TypeValidationEventArgs.IsValidInput%2A> メンバーは、変換が成功したかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-640">It receives a <xref:System.Windows.Forms.TypeValidationEventArgs> parameter containing information about the conversion; for example, the <xref:System.Windows.Forms.TypeValidationEventArgs.IsValidInput%2A> member indicates whether the conversion was successful.</span></span>  
  
4.  <span data-ttu-id="aca1c-641"><xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> イベントのイベントハンドラーがを返すと、標準の検証イベントである <xref:System.Windows.Forms.Control.Validating>が発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-641">After the event handler for the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event returns, the standard validation event, <xref:System.Windows.Forms.Control.Validating>, is raised.</span></span> <span data-ttu-id="aca1c-642">ハンドラーは、イベントのキャンセルなど、標準的な検証を実行するために実装できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-642">A handler can be implemented to perform standard validation, perhaps including canceling the event.</span></span>  
  
5.  <span data-ttu-id="aca1c-643">手順 3. でイベントがキャンセルされていない場合は、標準のコントロール検証イベント <xref:System.Windows.Forms.Control.Validated> が発生します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-643">If the event is not canceled in step 3, the standard control validation event <xref:System.Windows.Forms.Control.Validated> is raised.</span></span>  
  
 <span data-ttu-id="aca1c-644"><xref:System.Windows.Forms.TypeValidationEventArgs.Cancel%2A> プロパティが <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> イベントハンドラーで `true` に設定されている場合、イベントはキャンセルされ、<xref:System.Windows.Forms.MaskedTextBox> コントロールはフォーカスを保持します。ただし、後続の <xref:System.Windows.Forms.Control.Validating> イベントによって <xref:System.ComponentModel.CancelEventArgs.Cancel%2A?displayProperty=nameWithType> プロパティのバージョンが `false`に戻される場合を除きます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-644">If the <xref:System.Windows.Forms.TypeValidationEventArgs.Cancel%2A> property is set to `true` in the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event handler, the event will be canceled and the <xref:System.Windows.Forms.MaskedTextBox> control retains focus, unless the subsequent <xref:System.Windows.Forms.Control.Validating> event sets its version of the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A?displayProperty=nameWithType> property back to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aca1c-645">次のコード例では、ユーザーの入力を有効な <xref:System.DateTime> オブジェクトとして解析しようとしています。</span><span class="sxs-lookup"><span data-stu-id="aca1c-645">The following code example attempts to parse the user's input as a valid <xref:System.DateTime> object.</span></span> <span data-ttu-id="aca1c-646">失敗した場合、<xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> イベントハンドラーはユーザーにエラーメッセージを表示します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-646">If it fails, the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event handler displays an error message to the user.</span></span> <span data-ttu-id="aca1c-647">値が有効な <xref:System.DateTime>の場合、コードは、指定された日付が今日の日付より前でないことを確認します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-647">If the value is a valid <xref:System.DateTime>, the code verifies that the date supplied is not prior to today's date.</span></span> <span data-ttu-id="aca1c-648">このコード例では、Windows フォームプロジェクトに `MaskedTextBox1` という名前の <xref:System.Windows.Forms.MaskedTextBox> コントロールと、`ToolTip1`という名前の <xref:System.Windows.Forms.ToolTip> コントロールが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-648">This code example requires  that your Windows Forms project contains a <xref:System.Windows.Forms.MaskedTextBox> control named `MaskedTextBox1` and a <xref:System.Windows.Forms.ToolTip> control named `ToolTip1`.</span></span>  
  
 [!code-csharp[ValidatingTypeSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ValidatingTypeSample/CS/form1.cs#1)]
 [!code-vb[ValidatingTypeSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ValidatingTypeSample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ValidateText" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
        <altmember cref="T:System.Windows.Forms.TypeValidationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberSignature Language="F#" Value="override this.Undo : unit -&gt; unit" Usage="maskedTextBox.Undo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aca1c-649">テキスト ボックスで直前に実行された編集操作を元に戻します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-649">Undoes the last edit operation in the text box.</span></span> <span data-ttu-id="aca1c-650"><see cref="T:System.Windows.Forms.MaskedTextBox" /> は、このメソッドをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-650">This method is not supported by <see cref="T:System.Windows.Forms.MaskedTextBox" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-651"><xref:System.Windows.Forms.MaskedTextBox.Undo%2A> メソッドは、基本 <xref:System.Windows.Forms.TextBoxBase> クラスから継承されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-651">The <xref:System.Windows.Forms.MaskedTextBox.Undo%2A> method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class.</span></span> <span data-ttu-id="aca1c-652">ただし、<xref:System.Windows.Forms.MaskedTextBox> では、元に戻す機能がサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-652">However, <xref:System.Windows.Forms.MaskedTextBox> does not support undo functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.CanUndo" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ClearUndo" />
      </Docs>
    </Member>
    <Member MemberName="UseSystemPasswordChar">
      <MemberSignature Language="C#" Value="public bool UseSystemPasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSystemPasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSystemPasswordChar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSystemPasswordChar { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSystemPasswordChar : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-653">オペレーティング システムが提供するパスワード文字を使用する必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-653">Gets or sets a value indicating whether the operating system-supplied password character should be used.</span></span></summary>
        <value><span data-ttu-id="aca1c-654">プロンプト文字としてシステム パスワードを使用する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-654"><see langword="true" /> if the system password should be used as the prompt character; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="aca1c-655">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-655">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-656"><xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> プロパティは、オペレーティングシステムで定義されているパスワード文字が複数回発生したときに、ユーザーが入力した入力を <xref:System.Windows.Forms.MaskedTextBox> に表示するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-656">The <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> property determines whether user-supplied input should be displayed in the <xref:System.Windows.Forms.MaskedTextBox> as multiple occurrences of a password character defined by the operating system.</span></span> <span data-ttu-id="aca1c-657"><xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> 関数は <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> プロパティと同様に機能しますが、プロンプトにプログラマが指定した文字を使用するのではなく <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A>、オペレーティングシステムで定義されているプロンプトを使用します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-657"><xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> functions similarly to the <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> property, but instead of using a programmer-supplied character for the prompt, <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> uses a prompt defined by the operating system.</span></span> <span data-ttu-id="aca1c-658">このプロパティは <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A>よりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-658">This property has precedence over <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="aca1c-659">セキュリティ上の考慮事項として、<xref:System.Windows.Forms.MaskedTextBox> コントロールは、パスワードで保護された文字列に対する切り取りおよびコピー操作を無効にします。</span><span class="sxs-lookup"><span data-stu-id="aca1c-659">As a security consideration, the <xref:System.Windows.Forms.MaskedTextBox> control disables cut and copy operations on password-protected strings.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="aca1c-660">指定されたパスワード文字が、現在のプロンプト文字 <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> と同じです。</span><span class="sxs-lookup"><span data-stu-id="aca1c-660">The password character specified is the same as the current prompt character, <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />.</span></span> <span data-ttu-id="aca1c-661">この 2 つは異なる必要があります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-661">The two are required to be different.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
      </Docs>
    </Member>
    <Member MemberName="ValidateText">
      <MemberSignature Language="C#" Value="public object ValidateText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.ValidateText" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateText () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateText();" />
      <MemberSignature Language="F#" Value="member this.ValidateText : unit -&gt; obj" Usage="maskedTextBox.ValidateText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aca1c-662">ユーザー入力文字列を、検証する型のインスタンスに変換します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-662">Converts the user input string to an instance of the validating type.</span></span></summary>
        <returns><span data-ttu-id="aca1c-663">成功した場合は、<see cref="T:System.Object" /> プロパティで指定された型の <see cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />。それ以外の場合は、変換が失敗したことを示す <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-663">If successful, an <see cref="T:System.Object" /> of the type specified by the <see cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" /> property; otherwise, <see langword="null" /> to indicate conversion failure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-664"><xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A> メソッドは、<xref:System.Windows.Forms.MaskedTextBox.Text%2A> プロパティに含まれている書式設定された文字列を、<xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> プロパティによって指定された型のインスタンスに変換しようとします。</span><span class="sxs-lookup"><span data-stu-id="aca1c-664">The <xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A> method attempts to convert the formatted string contained in the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property to an instance of the type that is specified by the <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> property.</span></span> <span data-ttu-id="aca1c-665">書式設定された文字列では、プロンプト文字は無視されますが、リテラルは <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> プロパティの現在の値に従って処理されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-665">Prompt characters are ignored in the formatted string, but literals are handled in accordance with the current value of the <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> property.</span></span>  
  
 <span data-ttu-id="aca1c-666"><xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A> は、変換が試行された後、成功に関係なく <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-666"><xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A> raises the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event after the conversion is attempted, regardless of its success.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="aca1c-667">入力文字列の解析中に、重大な例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="aca1c-667">A critical exception occurred during the parsing of the input string.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
      </Docs>
    </Member>
    <Member MemberName="ValidatingType">
      <MemberSignature Language="C#" Value="public Type ValidatingType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValidatingType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatingType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ValidatingType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatingType : Type with get, set" Usage="System.Windows.Forms.MaskedTextBox.ValidatingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-668">ユーザーによるデータ入力を検証するために使用するデータ型を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-668">Gets or sets the data type used to verify the data input by the user.</span></span></summary>
        <value><span data-ttu-id="aca1c-669">検証で使用されるデータ型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="aca1c-669">A <see cref="T:System.Type" /> representing the data type used in validation.</span></span> <span data-ttu-id="aca1c-670">既定では、 <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-670">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-671">マスクは自身ではなく、ユーザーの入力が特定の型の有効な値を表すことを保証します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-671">Masks do not in themselves guarantee that a user's input will represent a valid value for a given type.</span></span> <span data-ttu-id="aca1c-672">次C#のコードはマスクを示しています。</span><span class="sxs-lookup"><span data-stu-id="aca1c-672">The following C# code shows a mask:</span></span>  
  
```  
maskedTextBox1.Mask = "99/99/9999";  
```  
  
 <span data-ttu-id="aca1c-673">次の Visual Basic コードはマスクを示しています。</span><span class="sxs-lookup"><span data-stu-id="aca1c-673">The following Visual Basic code shows a mask:</span></span>  
  
 `MaskedTextBox1.Mask = "99/99/9999"`  
  
 <span data-ttu-id="aca1c-674">このマスクは、ユーザーが8桁を入力することを要求できますが、ユーザーが正しい範囲の月、日付、年の値を入力することを確認することはできません。"12/20/2003" と "70/90/0000" は、マスクに関係がある限り、同じように有効です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-674">This mask can demand that the user enter eight digits, but cannot verify that the user enters month, date, and year values in the correct range; "12/20/2003" and "70/90/0000" are equally valid as far as the mask is concerned.</span></span>  
  
 <span data-ttu-id="aca1c-675"><xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> を使用すると、ユーザーが入力したデータが正しい範囲内にあるかどうかを確認できます。前述の例では、<xref:System.DateTime> 型のインスタンスを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-675">You can use <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> to verify whether the data entered by the user falls within the correct range - in the previously mentioned case, by assigning it an instance of the <xref:System.DateTime> type.</span></span> <span data-ttu-id="aca1c-676">コントロール内の現在のテキストは、ユーザーがコントロールを離れると検証されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-676">The current text in the control will be validated either when the user leaves the control.</span></span> <span data-ttu-id="aca1c-677"><xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> イベントの監視によって、データの検証に失敗したかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-677">You can determine whether or not the data fails validation by monitoring for the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event.</span></span> <span data-ttu-id="aca1c-678"><xref:System.Windows.Forms.MaskedTextBox> は、<xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A> が `true`場合にのみ、<xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> のチェックを実行します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-678"><xref:System.Windows.Forms.MaskedTextBox> will only perform the check against <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> if <xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A> is `true`.</span></span>  
  
 <span data-ttu-id="aca1c-679"><xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A>で独自のカスタムデータ型を使用する場合は、パラメーターとして文字列を受け取る静的 `Parse` メソッドを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-679">If you want to use your own custom data types with <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A>, you must implement a static `Parse` method that takes a string as a parameter.</span></span> <span data-ttu-id="aca1c-680">このメソッドは、次のいずれかまたは両方のシグネチャを使用して実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-680">This method must be implemented with one or both of the following signatures:</span></span>  
  
 `public static Object Parse(string)`  
  
 `public static Object Parse(string, IFormatProvider)`  
  
   
  
## Examples  
 <span data-ttu-id="aca1c-681">次のコード例では、ユーザーの入力を有効な <xref:System.DateTime>として解析しようとしています。</span><span class="sxs-lookup"><span data-stu-id="aca1c-681">The following code example attempts to parse the user's input as a valid <xref:System.DateTime>.</span></span> <span data-ttu-id="aca1c-682">失敗した場合、<xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> イベントハンドラーはユーザーにエラーメッセージを表示します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-682">If it fails, the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event handler displays an error message to the user.</span></span> <span data-ttu-id="aca1c-683">値が有効な <xref:System.DateTime>の場合、指定された日付が今日の日付より前でないことを確認するために、追加のチェックが実行されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-683">If the value is a valid <xref:System.DateTime>, the code performs an additional check to ensure that the date supplied is not prior to today's date.</span></span> <span data-ttu-id="aca1c-684">このコード例では、Windows フォームプロジェクトに `MaskedTextBox1` という名前の <xref:System.Windows.Forms.MaskedTextBox> コントロールと、`ToolTip1`という名前の <xref:System.Windows.Forms.ToolTip> コントロールが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="aca1c-684">This code example requires that your Windows Forms project contains a <xref:System.Windows.Forms.MaskedTextBox> control named `MaskedTextBox1` and a <xref:System.Windows.Forms.ToolTip> control named `ToolTip1`.</span></span>  
  
 [!code-csharp[ValidatingTypeSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ValidatingTypeSample/CS/form1.cs#1)]
 [!code-vb[ValidatingTypeSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ValidatingTypeSample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc : Message -&gt; unit" Usage="maskedTextBox.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="aca1c-685">処理する Windows <see cref="T:System.Windows.Forms.Message" /> です。</span><span class="sxs-lookup"><span data-stu-id="aca1c-685">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="aca1c-686">Windows メッセージを処理します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-686">Processes Windows messages.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="WordWrap">
      <MemberSignature Language="C#" Value="public bool WordWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WordWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.WordWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property WordWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WordWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WordWrap : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.WordWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aca1c-687">複数行テキスト ボックス コントロールで必要に応じて自動的に次の行に折り返すかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-687">Gets or sets a value indicating whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.</span></span> <span data-ttu-id="aca1c-688">このプロパティは <see cref="T:System.Windows.Forms.MaskedTextBox" /> ではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="aca1c-688">This property is not supported by <see cref="T:System.Windows.Forms.MaskedTextBox" />.</span></span></summary>
        <value><span data-ttu-id="aca1c-689"><see cref="P:System.Windows.Forms.MaskedTextBox.WordWrap" /> プロパティは、常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="aca1c-689">The <see cref="P:System.Windows.Forms.MaskedTextBox.WordWrap" /> property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca1c-690"><xref:System.Windows.Forms.MaskedTextBox> では複数行の入力がサポートされないため、<xref:System.Windows.Forms.MaskedTextBox.WordWrap%2A> プロパティは無視されます。</span><span class="sxs-lookup"><span data-stu-id="aca1c-690">Because <xref:System.Windows.Forms.MaskedTextBox> does not support multiple lines of input, the <xref:System.Windows.Forms.MaskedTextBox.WordWrap%2A> property is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
      </Docs>
    </Member>
  </Members>
</Type>
