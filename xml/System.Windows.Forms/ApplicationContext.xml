<Type Name="ApplicationContext" FullName="System.Windows.Forms.ApplicationContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="421aadf2c11939ff56c74e9174b09cd73fb11139" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75129684" /></Metadata><TypeSignature Language="C#" Value="public class ApplicationContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ApplicationContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ApplicationContext" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationContext : IDisposable" />
  <TypeSignature Language="F#" Value="type ApplicationContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="bfc2c-101">アプリケーション スレッドに関するコンテキスト情報を指定します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-101">Specifies the contextual information about an application thread.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc2c-102"><xref:System.Windows.Forms.ApplicationContext> クラスを使用すると、メッセージループが終了する状況を再定義できます。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-102">You can use the <xref:System.Windows.Forms.ApplicationContext> class to redefine the circumstances that cause a message loop to exit.</span></span> <span data-ttu-id="bfc2c-103">既定では、<xref:System.Windows.Forms.ApplicationContext> はアプリケーションのメイン <xref:System.Windows.Forms.Form>の <xref:System.Windows.Forms.Form.Closed> イベントをリッスンし、スレッドのメッセージループを終了します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-103">By default, the <xref:System.Windows.Forms.ApplicationContext> listens to the <xref:System.Windows.Forms.Form.Closed> event on the application's main <xref:System.Windows.Forms.Form>, then exits the thread's message loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc2c-104">次のコード例では、2つのフォームを表示し、両方のフォームが閉じられたときにアプリケーションを終了します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-104">The following code example displays two forms and exits the application when both forms are closed.</span></span> <span data-ttu-id="bfc2c-105">アプリケーションの開始時と終了時には、各フォームの位置が記憶されます。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-105">When the application starts and exits, the position of each form is remembered.</span></span> <span data-ttu-id="bfc2c-106">この例では、<xref:System.Windows.Forms.ApplicationContext>を `Application.Run(context)` メソッドと共に使用して、アプリケーションの起動時に複数のフォームを表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-106">This example demonstrates how to use an <xref:System.Windows.Forms.ApplicationContext>, along with the `Application.Run(context)` method, to display multiple forms when the application starts.</span></span>  
  
 <span data-ttu-id="bfc2c-107">クラス `MyApplicationContext` は <xref:System.Windows.Forms.ApplicationContext> から継承され、各フォームが閉じられたことを追跡し、両方がである場合は現在のスレッドを終了します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-107">The class `MyApplicationContext` inherits from <xref:System.Windows.Forms.ApplicationContext> and keeps track when each form is closed, and exits the current thread when they both are.</span></span> <span data-ttu-id="bfc2c-108">クラスは、ユーザーの各フォームの位置を格納します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-108">The class stores the positions of each form for the user.</span></span> <span data-ttu-id="bfc2c-109">フォーム位置データは、<xref:System.Windows.Forms.Application.UserAppDataPath%2A>によって決定された場所に作成される `Appdata.txt` という名前のファイルに格納されます。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-109">The form position data is stored in a file titled `Appdata.txt` that is created in the location determined by <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.</span></span>  
  
 <span data-ttu-id="bfc2c-110">`Main` メソッドは、<xref:System.Windows.Forms.ApplicationContext>を指定して、`Application.Run(context)` を呼び出してアプリケーションを起動します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-110">The `Main` method calls `Application.Run(context)` to start the application, given the <xref:System.Windows.Forms.ApplicationContext>.</span></span>  
  
 [!code-cpp[Application#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#1)]
 [!code-csharp[Application#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#1)]
 [!code-vb[Application#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bfc2c-111"><see cref="T:System.Windows.Forms.ApplicationContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-111">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bfc2c-112">コンテキストを指定せずに <see cref="T:System.Windows.Forms.ApplicationContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class with no context.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationContext (System.Windows.Forms.Form mainForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Form mainForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.#ctor(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mainForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationContext(System::Windows::Forms::Form ^ mainForm);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ApplicationContext : System.Windows.Forms.Form -&gt; System.Windows.Forms.ApplicationContext" Usage="new System.Windows.Forms.ApplicationContext mainForm" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mainForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="mainForm"><span data-ttu-id="bfc2c-113">コンテキストとして使用する、アプリケーションのメイン <see cref="T:System.Windows.Forms.Form" />。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-113">The main <see cref="T:System.Windows.Forms.Form" /> of the application to use for context.</span></span></param>
        <summary><span data-ttu-id="bfc2c-114"><see cref="T:System.Windows.Forms.ApplicationContext" /> を指定して、<see cref="T:System.Windows.Forms.Form" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class with the specified <see cref="T:System.Windows.Forms.Form" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc2c-115"><xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> がオーバーライドされていない場合、<xref:System.Windows.Forms.ApplicationContext.MainForm%2A> が閉じられると、スレッドのメッセージループが終了します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-115">If <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> is not overridden, the message loop of the thread terminates when <xref:System.Windows.Forms.ApplicationContext.MainForm%2A> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bfc2c-116"><see cref="T:System.Windows.Forms.ApplicationContext" /> で使用したリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-116">Releases the resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="applicationContext.Dispose " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Dispose() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dispose();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Dispose : unit -&gt; unit" Usage="applicationContext.Dispose " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bfc2c-117"><see cref="T:System.Windows.Forms.ApplicationContext" /> によって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-117">Releases all resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc2c-118"><xref:System.Windows.Forms.ApplicationContext.Dispose> を使い終わったら、<xref:System.Windows.Forms.ApplicationContext>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-118">Call <xref:System.Windows.Forms.ApplicationContext.Dispose> when you are finished using the <xref:System.Windows.Forms.ApplicationContext>.</span></span> <span data-ttu-id="bfc2c-119"><xref:System.Windows.Forms.ApplicationContext.Dispose>メソッドによって、<xref:System.Windows.Forms.ApplicationContext> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-119">The <xref:System.Windows.Forms.ApplicationContext.Dispose> method leaves the <xref:System.Windows.Forms.ApplicationContext> in an unusable state.</span></span> <span data-ttu-id="bfc2c-120"><xref:System.Windows.Forms.ApplicationContext.Dispose>呼び出し後は、<xref:System.Windows.Forms.ApplicationContext>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.Windows.Forms.ApplicationContext> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-120">After calling <xref:System.Windows.Forms.ApplicationContext.Dispose>, you must release all references to the <xref:System.Windows.Forms.ApplicationContext> so the garbage collector can reclaim the memory that the <xref:System.Windows.Forms.ApplicationContext> was occupying.</span></span> <span data-ttu-id="bfc2c-121">詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-121">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc2c-122"><xref:System.Windows.Forms.ApplicationContext.Dispose>への最後の参照を解放する前に、必ず<xref:System.Windows.Forms.ApplicationContext>を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-122">Always call <xref:System.Windows.Forms.ApplicationContext.Dispose> before you release your last reference to the <xref:System.Windows.Forms.ApplicationContext>.</span></span> <span data-ttu-id="bfc2c-123">そうしないと、ガベージ コレクターが <xref:System.Windows.Forms.ApplicationContext> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-123">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Windows.Forms.ApplicationContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="applicationContext.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="bfc2c-124">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-124"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="bfc2c-125"><see cref="T:System.Windows.Forms.ApplicationContext" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-125">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc2c-126">このメソッドは、パブリック `Dispose()` メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-126">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="bfc2c-127">`Dispose()` は、`disposing` パラメーターを `true`に設定して、protected <xref:System.Windows.Forms.ApplicationContext.Dispose%28System.Boolean%29> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-127">`Dispose()` invokes the protected <xref:System.Windows.Forms.ApplicationContext.Dispose%28System.Boolean%29> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="bfc2c-128"><xref:System.Object.Finalize%2A> は `disposing` を `false`に設定して `Dispose` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-128"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="bfc2c-129">`disposing` パラメーターが true の場合、このメソッドは、この <xref:System.Windows.Forms.ApplicationContext> が参照するすべてのマネージオブジェクトによって保持されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-129">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.ApplicationContext> references.</span></span> <span data-ttu-id="bfc2c-130">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-130">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="bfc2c-131">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-131">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="bfc2c-132"><see langword="Dispose(Boolean)" /> をオーバーライドする場合は、以前に <see langword="Dispose" /> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-132">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="bfc2c-133"><see langword="Dispose(Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-133">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="bfc2c-134"><see langword="Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」と「 [Finalize メソッドのオーバーライド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-134">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ExitThread">
      <MemberSignature Language="C#" Value="public void ExitThread ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExitThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.ExitThread" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitThread ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExitThread();" />
      <MemberSignature Language="F#" Value="member this.ExitThread : unit -&gt; unit" Usage="applicationContext.ExitThread " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bfc2c-135">スレッドのメッセージ ループを終了します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-135">Terminates the message loop of the thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc2c-136">このメソッドは <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-136">This method calls <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc2c-137"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> と <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> では、実際にはスレッドの終了が発生しません。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-137"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> and <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> do not actually cause the thread to terminate.</span></span> <span data-ttu-id="bfc2c-138">これらのメソッドは、<xref:System.Windows.Forms.Application> オブジェクトがリッスンする <xref:System.Windows.Forms.Application.ThreadExit> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-138">These methods raise the <xref:System.Windows.Forms.Application.ThreadExit> event to which the <xref:System.Windows.Forms.Application> object listens.</span></span> <span data-ttu-id="bfc2c-139">次に、<xref:System.Windows.Forms.Application> オブジェクトがスレッドを終了します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-139">The <xref:System.Windows.Forms.Application> object then terminates the thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc2c-140">次のコード例は、<xref:System.Windows.Forms.ApplicationContext> クラスの概要の例の抜粋です。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-140">The following code example is an excerpt from the example in the <xref:System.Windows.Forms.ApplicationContext> class overview.</span></span> <span data-ttu-id="bfc2c-141">この例では、開いているフォームを追跡し、すべてのフォームが閉じられたときに現在のスレッドを終了します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-141">This example keeps track of open forms and exits the current thread when all forms are closed.</span></span> <span data-ttu-id="bfc2c-142">`OnFormClosed` メソッドは、<xref:System.Windows.Forms.Form.Closed> イベントのイベントハンドラーです。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-142">The `OnFormClosed` method is an event handler for the <xref:System.Windows.Forms.Form.Closed> event.</span></span> <span data-ttu-id="bfc2c-143">開いているフォームの数が0の場合、現在のスレッドは <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> メソッドを呼び出すことによって終了します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-143">When the number of open forms is equal to 0, then current thread is exited by calling the <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> method.</span></span> <span data-ttu-id="bfc2c-144">フォームが表示されたときに `formCount` 変数をインクリメントし、フォームが閉じられたときにそれをデクリメントすることで、フォームの数を追跡します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-144">The number of forms is tracked by incrementing the `formCount` variable when a form is shown, and decrementing it when a form is closed.</span></span>  
  
 <span data-ttu-id="bfc2c-145">簡潔にするために、一部のコードは表示されません。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-145">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="bfc2c-146">コードリスト全体については、「<xref:System.Windows.Forms.ApplicationContext>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-146">See <xref:System.Windows.Forms.ApplicationContext> for the whole code listing.</span></span>  
  
 [!code-cpp[Application#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#3)]
 [!code-csharp[Application#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#3)]
 [!code-vb[Application#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitThreadCore">
      <MemberSignature Language="C#" Value="protected virtual void ExitThreadCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExitThreadCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExitThreadCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExitThreadCore();" />
      <MemberSignature Language="F#" Value="abstract member ExitThreadCore : unit -&gt; unit&#xA;override this.ExitThreadCore : unit -&gt; unit" Usage="applicationContext.ExitThreadCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bfc2c-147">スレッドのメッセージ ループを終了します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-147">Terminates the message loop of the thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc2c-148">このメソッドは <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>から呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-148">This method is called from <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc2c-149"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> と <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> では、実際にはスレッドの終了が発生しません。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-149"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> and <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> do not actually cause the thread to terminate.</span></span> <span data-ttu-id="bfc2c-150">これらのメソッドは、<xref:System.Windows.Forms.Application> オブジェクトがリッスンする <xref:System.Windows.Forms.Application.ThreadExit> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-150">These methods raise the <xref:System.Windows.Forms.Application.ThreadExit> event to which the <xref:System.Windows.Forms.Application> object listens.</span></span> <span data-ttu-id="bfc2c-151">次に、<xref:System.Windows.Forms.Application> オブジェクトがスレッドを終了します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-151">The <xref:System.Windows.Forms.Application> object then terminates the thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ApplicationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ApplicationContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="applicationContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bfc2c-152">アプリケーション コンテキストがガベージ コレクションにより収集される前に、リソースの解放などのクリーンアップ操作を実行しようとします。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-152">Attempts to free resources and perform other cleanup operations before the application context is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc2c-153">このメソッドは、`Dispose(false)`を呼び出すことによって、<xref:System.Object.Finalize%2A?displayProperty=nameWithType> をオーバーライドし、リソースをクリーンアップします。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-153">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType> and cleans up resources by calling `Dispose(false)`.</span></span> <span data-ttu-id="bfc2c-154">`Dispose(Boolean)` をオーバーライドしてクリーンアップをカスタマイズします。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-154">Override `Dispose(Boolean)` to customize the cleanup.</span></span>  
  
 <span data-ttu-id="bfc2c-155">アプリケーションコードはこのメソッドを呼び出すことはできません。ガベージコレクターによる終了処理が、<xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> メソッドの呼び出しによって無効にされている場合を除き、オブジェクトの `Finalize` メソッドは、ガベージコレクション中に自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-155">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="bfc2c-156">詳細については、「 [Finalize メソッドとデストラクター](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100))」、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」、および「 [finalize メソッドのオーバーライド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-156">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MainForm">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form MainForm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form MainForm" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ApplicationContext.MainForm" />
      <MemberSignature Language="VB.NET" Value="Public Property MainForm As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ MainForm { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MainForm : System.Windows.Forms.Form with get, set" Usage="System.Windows.Forms.ApplicationContext.MainForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfc2c-157">コンテキストとして使用する <see cref="T:System.Windows.Forms.Form" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-157">Gets or sets the <see cref="T:System.Windows.Forms.Form" /> to use as context.</span></span></summary>
        <value><span data-ttu-id="bfc2c-158">コンテキストとして使用する <see cref="T:System.Windows.Forms.Form" />。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-158">The <see cref="T:System.Windows.Forms.Form" /> to use as context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc2c-159">このプロパティは、このコンテキストのメイン <xref:System.Windows.Forms.Form> を決定します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-159">This property determines the main <xref:System.Windows.Forms.Form> for this context.</span></span> <span data-ttu-id="bfc2c-160">このプロパティは、いつでも変更できます。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-160">This property can change at any time.</span></span> <span data-ttu-id="bfc2c-161"><xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> がオーバーライドされていない場合、`mainForm` パラメーターを閉じるとスレッドのメッセージループが終了します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-161">If <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> is not overridden, the message loop of the thread terminates when the `mainForm` parameter closes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMainFormClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnMainFormClosed (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMainFormClosed(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMainFormClosed (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMainFormClosed(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMainFormClosed : obj * EventArgs -&gt; unit&#xA;override this.OnMainFormClosed : obj * EventArgs -&gt; unit" Usage="applicationContext.OnMainFormClosed (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="bfc2c-162">イベントを発生させたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-162">The object that raised the event.</span></span></param>
        <param name="e"><span data-ttu-id="bfc2c-163">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-163">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="bfc2c-164"><see cref="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" /> イベントを発生させる <see cref="E:System.Windows.Forms.ApplicationContext.ThreadExit" /> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-164">Calls <see cref="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" />, which raises the <see cref="E:System.Windows.Forms.ApplicationContext.ThreadExit" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc2c-165">このメソッドの既定の実装では、<xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-165">The default implementation of this method calls <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ApplicationContext.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.ApplicationContext.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfc2c-166">コントロールに関するデータを格納するオブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-166">Gets or sets an object that contains data about the control.</span></span></summary>
        <value><span data-ttu-id="bfc2c-167">コントロールに関するデータを格納している <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-167">An <see cref="T:System.Object" /> that contains data about the control.</span></span> <span data-ttu-id="bfc2c-168">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-168">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc2c-169"><xref:System.Object> クラスから派生した型は、このプロパティに割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-169">Any type derived from the <xref:System.Object> class can be assigned to this property.</span></span> <span data-ttu-id="bfc2c-170"><xref:System.Windows.Forms.ApplicationContext.Tag%2A> プロパティが Windows フォームデザイナーで設定されている場合は、テキストのみを割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-170">If the <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property is set through the Windows Forms designer, only text can be assigned.</span></span>  
  
 <span data-ttu-id="bfc2c-171"><xref:System.Windows.Forms.ApplicationContext.Tag%2A> プロパティの一般的な用途は、コントロールに密接に関連付けられたデータを格納することです。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-171">A common use for the <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property is to store data that is closely associated with the control.</span></span> <span data-ttu-id="bfc2c-172">たとえば、顧客に関する情報を表示するコントロールがある場合、そのコントロールの <xref:System.Windows.Forms.ApplicationContext.Tag%2A> プロパティに顧客の注文履歴を含む <xref:System.Data.DataSet> を格納して、データにすばやくアクセスできるようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-172">For example, if you have a control that displays information about a customer, you might store a <xref:System.Data.DataSet> that contains the customer's order history in that control's <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property so the data can be accessed quickly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadExit">
      <MemberSignature Language="C#" Value="public event EventHandler ThreadExit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ThreadExit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ApplicationContext.ThreadExit" />
      <MemberSignature Language="VB.NET" Value="Public Event ThreadExit As EventHandler " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ThreadExit;" />
      <MemberSignature Language="F#" Value="member this.ThreadExit : EventHandler " Usage="member this.ThreadExit : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ThreadExit As EventHandler " FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfc2c-173"><see cref="M:System.Windows.Forms.ApplicationContext.ExitThread" /> を呼び出したことにより、スレッドのメッセージ ループが終了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-173">Occurs when the message loop of the thread should be terminated, by calling <see cref="M:System.Windows.Forms.ApplicationContext.ExitThread" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bfc2c-174">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-174">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="bfc2c-175">この例では、イベントハンドラーは、<xref:System.Windows.Forms.ApplicationContext.ThreadExit> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-175">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ApplicationContext.ThreadExit> event.</span></span> <span data-ttu-id="bfc2c-176">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-176">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="bfc2c-177">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-177">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="bfc2c-178">コード例を実行するには、`ApplicationContext1`という <xref:System.Windows.Forms.ApplicationContext> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-178">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ApplicationContext> named `ApplicationContext1`.</span></span> <span data-ttu-id="bfc2c-179">次に、イベントハンドラーが <xref:System.Windows.Forms.ApplicationContext.ThreadExit> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="bfc2c-179">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ApplicationContext.ThreadExit> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#75](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#75)]
 [!code-vb[System.Windows.Forms.EventExamples#75](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#75)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
