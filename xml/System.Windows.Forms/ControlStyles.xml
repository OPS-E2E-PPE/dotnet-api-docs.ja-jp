<Type Name="ControlStyles" FullName="System.Windows.Forms.ControlStyles">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2064df8c3520af9873735812830b1c4b947f6a45" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75175938" /></Metadata><TypeSignature Language="C#" Value="public enum ControlStyles" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ControlStyles extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ControlStyles" />
  <TypeSignature Language="VB.NET" Value="Public Enum ControlStyles" />
  <TypeSignature Language="C++ CLI" Value="public enum class ControlStyles" />
  <TypeSignature Language="F#" Value="type ControlStyles = " />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="570e1-101">コントロールのスタイルと動作を指定します。</span><span class="sxs-lookup"><span data-stu-id="570e1-101">Specifies the style and behavior of a control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="570e1-102">コントロールは、さまざまなプロパティやメソッドでこの列挙を使用して機能を指定します。</span><span class="sxs-lookup"><span data-stu-id="570e1-102">Controls use this enumeration in various properties and methods to specify functionality.</span></span> <span data-ttu-id="570e1-103">コントロールでは、<xref:System.Windows.Forms.Control.SetStyle%2A> メソッドを呼び出し、適切な <xref:System.Windows.Forms.ControlStyles> ビット (またはビット) とブール値を渡して、ビットをに設定することによってスタイルを有効にできます。</span><span class="sxs-lookup"><span data-stu-id="570e1-103">A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit (or bits) and the Boolean value to set the bit(s) to.</span></span> <span data-ttu-id="570e1-104">たとえば、次の Visual Basic コード行では、ダブルバッファリングが有効になります。</span><span class="sxs-lookup"><span data-stu-id="570e1-104">For example, the following line of Visual Basic code would enable double-buffering.</span></span>  
  
```vb
myControl.SetStyle(UserPaint Or AllPaintingInWmPaint Or DoubleBuffer, True)  
```  
  
 <span data-ttu-id="570e1-105">AllPaintingInWmPaint ビットが `true`に設定されている場合、ウィンドウメッセージ WM_ERASEBKGND は無視され、<xref:System.Windows.Forms.Control.OnPaintBackground%2A> と <xref:System.Windows.Forms.Control.OnPaint%2A> の両方のメソッドが、ウィンドウメッセージ WM_PAINT から直接呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="570e1-105">If the AllPaintingInWmPaint bit is set to `true`, the window message WM_ERASEBKGND is ignored, and both <xref:System.Windows.Forms.Control.OnPaintBackground%2A> and <xref:System.Windows.Forms.Control.OnPaint%2A> methods are called directly from the window message WM_PAINT.</span></span> <span data-ttu-id="570e1-106">これにより、他のコントロールがウィンドウメッセージ WM_ERASEBKGND をコントロールに送信しない限り、通常はちらつきが軽減されます。</span><span class="sxs-lookup"><span data-stu-id="570e1-106">This generally reduces flicker unless other controls send the window message WM_ERASEBKGND to the control.</span></span> <span data-ttu-id="570e1-107">SupportsTransparentBackColor に似た擬似的な効果を実現するために、ウィンドウメッセージ WM_ERASEBKGRND を送信する場合があります。たとえば、フラットな外観の <xref:System.Windows.Forms.ToolBar> はこれを行います。</span><span class="sxs-lookup"><span data-stu-id="570e1-107">You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a <xref:System.Windows.Forms.ToolBar> with flat appearance does this.</span></span>  
  
 <span data-ttu-id="570e1-108">ダブルバッファリングを完全に有効にするには、OptimizedDoubleBuffer および AllPaintingInWmPaint ビットを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="570e1-108">To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to `true`.</span></span> <span data-ttu-id="570e1-109">ただし、ダブルバッファリングを有効にするための推奨される方法は、同じ結果を得られるように、コントロールの <xref:System.Windows.Forms.Control.DoubleBuffered%2A> プロパティを `true`に設定することです。</span><span class="sxs-lookup"><span data-stu-id="570e1-109">However the preferred method for enabling double buffering, which yields the same result, is to set the <xref:System.Windows.Forms.Control.DoubleBuffered%2A> property for the control to `true`.</span></span>  
  
 <span data-ttu-id="570e1-110">SupportsTransparentBackColor ビットが `true`に設定され、<xref:System.Windows.Forms.Control.BackColor%2A> がアルファコンポーネントが255未満の色に設定されている場合、<xref:System.Windows.Forms.Control.OnPaintBackground%2A> は、親コントロールに背景を描画するように要求して透明度をシミュレートします。</span><span class="sxs-lookup"><span data-stu-id="570e1-110">If the SupportsTransparentBackColor bit is set to `true`, and the <xref:System.Windows.Forms.Control.BackColor%2A> is set to a color whose alpha component is less than 255, <xref:System.Windows.Forms.Control.OnPaintBackground%2A> will simulate transparency by asking its parent control to paint the background.</span></span> <span data-ttu-id="570e1-111">これは、実際の透明度ではありません。</span><span class="sxs-lookup"><span data-stu-id="570e1-111">This is not true transparency.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="570e1-112">コントロールとその親との間に別のコントロールがある場合、現在のコントロールは、コントロールを中央に表示しません。</span><span class="sxs-lookup"><span data-stu-id="570e1-112">If there is another control between the control and its parent, the current control will not show the control in the middle.</span></span>  
  
 <span data-ttu-id="570e1-113">UserMouse ビットが `true`に設定されている場合、<xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType>、<xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType>、<xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType>、<xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType>、<xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType>、<xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType>、<xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType>の各メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="570e1-113">When the UserMouse bit is set to `true`, the following methods are still called: <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType>, and <xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="570e1-114">コントロールがクリックされると、StandardClick ビットが `true` に設定されている場合、<xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType> メソッドが呼び出され、<xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="570e1-114">When the control is clicked, if the StandardClick bit is set to `true` the <xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType> method is called and it raises the <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="570e1-115">コントロールがダブルクリックされ、StandardClick と StandardDoubleClick の両方のビットが `true`に設定されている場合、クリックは <xref:System.Windows.Forms.Control.DoubleClick> イベントに渡されます。</span><span class="sxs-lookup"><span data-stu-id="570e1-115">When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to `true`, the click is passed on to the <xref:System.Windows.Forms.Control.DoubleClick> event.</span></span> <span data-ttu-id="570e1-116">その後、<xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType> メソッドが呼び出され、<xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="570e1-116">Then the <xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType> method is called and it raises the <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="570e1-117">ただし、StandardClick と StandardDoubleClick のビット値に関係なく、コントロールは <xref:System.Windows.Forms.Control.OnClick%2A> または <xref:System.Windows.Forms.Control.OnDoubleClick%2A> を直接呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="570e1-117">However, the control can call <xref:System.Windows.Forms.Control.OnClick%2A> or <xref:System.Windows.Forms.Control.OnDoubleClick%2A> directly regardless of the StandardClick and StandardDoubleClick bit values.</span></span> <span data-ttu-id="570e1-118">コントロールのクリックとダブルクリックの動作の詳細については、<xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> と <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="570e1-118">For more information on control click and double click behaviors, see the <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> topics.</span></span>  
  
 <span data-ttu-id="570e1-119">UseTextForAccessibility ビットが設定されていて、コントロールの `Text` プロパティに値がある場合、そのコントロールの `Text` プロパティの値によって、コントロールの既定の Active Accessibility 名とショートカットキーが決定されます。</span><span class="sxs-lookup"><span data-stu-id="570e1-119">When the UseTextForAccessibility bit is set and there is a value in the control's `Text` property, the value of that control's `Text` property determines the control's default Active Accessibility name and shortcut key.</span></span> <span data-ttu-id="570e1-120">それ以外の場合は、前の <xref:System.Windows.Forms.Label> コントロールのテキストが代わりに使用されます。</span><span class="sxs-lookup"><span data-stu-id="570e1-120">Otherwise, the text of the preceding <xref:System.Windows.Forms.Label> control will be used instead.</span></span> <span data-ttu-id="570e1-121">このスタイルは、既定で設定されます。</span><span class="sxs-lookup"><span data-stu-id="570e1-121">This style is set by default.</span></span> <span data-ttu-id="570e1-122"><xref:System.Windows.Forms.TextBox> や <xref:System.Windows.Forms.ComboBox>などの特定の組み込みコントロール型は、これらのコントロールの `Text` プロパティが Active Accessibility によって使用されないように、このスタイルをリセットします。</span><span class="sxs-lookup"><span data-stu-id="570e1-122">Certain built-in control types, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ComboBox>, reset this style so that the `Text` property of those controls will not be used by Active Accessibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="570e1-123">次の例は、<xref:System.Windows.Forms.Control.StyleChanged> イベントでの <xref:System.Windows.Forms.ControlStyles> の使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="570e1-123">The following example demonstrates a use of <xref:System.Windows.Forms.ControlStyles> with the <xref:System.Windows.Forms.Control.StyleChanged> event.</span></span>  
  
 [!code-cpp[Control_StyleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_StyleChanged/CPP/control_stylechanged.cpp#1)]
 [!code-csharp[Control_StyleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_StyleChanged/CS/control_stylechanged.cs#1)]
 [!code-vb[Control_StyleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_StyleChanged/VB/control_stylechanged.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="570e1-124">標準 Windows フォーム制御から継承し、<see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> または <see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /> ビット値を <see langword="true" /> に変更すると、予期しない動作が発生することがあります。また、コントロールが <see cref="E:System.Windows.Forms.Control.Click" /> イベントまたは <see cref="E:System.Windows.Forms.Control.DoubleClick" /> イベントをサポートしていない場合は、まったく効果が得られません。</span><span class="sxs-lookup"><span data-stu-id="570e1-124">Inheriting from a standard Windows Forms control and changing the <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> or <see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /> bit values to <see langword="true" /> can cause unexpected behavior or can have no effect at all if the control does not support the <see cref="E:System.Windows.Forms.Control.Click" /> or <see cref="E:System.Windows.Forms.Control.DoubleClick" /> events.</span></span></para></block>
    <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
    <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
  </Docs>
  <Members>
    <Member MemberName="AllPaintingInWmPaint">
      <MemberSignature Language="C#" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles AllPaintingInWmPaint = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" />
      <MemberSignature Language="VB.NET" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="C++ CLI" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="F#" Value="AllPaintingInWmPaint = 8192" Usage="System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary><span data-ttu-id="570e1-125"><see langword="true" /> の場合、コントロールはウィンドウ メッセージ WM_ERASEBKGND を無視することによって、ちらつきを抑えます。</span><span class="sxs-lookup"><span data-stu-id="570e1-125">If <see langword="true" />, the control ignores the window message WM_ERASEBKGND to reduce flicker.</span></span> <span data-ttu-id="570e1-126">このスタイルは、<see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> ビットが <see langword="true" /> に設定されている場合だけ適用されます。</span><span class="sxs-lookup"><span data-stu-id="570e1-126">This style should only be applied if the <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> bit is set to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CacheText">
      <MemberSignature Language="C#" Value="CacheText" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles CacheText = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.CacheText" />
      <MemberSignature Language="VB.NET" Value="CacheText" />
      <MemberSignature Language="C++ CLI" Value="CacheText" />
      <MemberSignature Language="F#" Value="CacheText = 16384" Usage="System.Windows.Forms.ControlStyles.CacheText" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary><span data-ttu-id="570e1-127"><see langword="true" /> の場合、コントロールは、必要に応じて毎回 <see cref="P:System.Windows.Forms.Control.Handle" /> からテキストのコピーを取得するのではなく、テキストのコピーを保持します。</span><span class="sxs-lookup"><span data-stu-id="570e1-127">If <see langword="true" />, the control keeps a copy of the text rather than getting it from the <see cref="P:System.Windows.Forms.Control.Handle" /> each time it is needed.</span></span> <span data-ttu-id="570e1-128">このスタイルは、既定では <see langword="false" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="570e1-128">This style defaults to <see langword="false" />.</span></span> <span data-ttu-id="570e1-129">この動作によってパフォーマンスは向上しますが、テキストを同期させておくことが難しくなります。</span><span class="sxs-lookup"><span data-stu-id="570e1-129">This behavior improves performance, but makes it difficult to keep the text synchronized.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ContainerControl">
      <MemberSignature Language="C#" Value="ContainerControl" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles ContainerControl = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.ContainerControl" />
      <MemberSignature Language="VB.NET" Value="ContainerControl" />
      <MemberSignature Language="C++ CLI" Value="ContainerControl" />
      <MemberSignature Language="F#" Value="ContainerControl = 1" Usage="System.Windows.Forms.ControlStyles.ContainerControl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="570e1-130"><see langword="true" /> の場合、コントロールはコンテナーのような機能を果たします。</span><span class="sxs-lookup"><span data-stu-id="570e1-130">If <see langword="true" />, the control is a container-like control.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffer">
      <MemberSignature Language="C#" Value="DoubleBuffer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles DoubleBuffer = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.DoubleBuffer" />
      <MemberSignature Language="VB.NET" Value="DoubleBuffer" />
      <MemberSignature Language="C++ CLI" Value="DoubleBuffer" />
      <MemberSignature Language="F#" Value="DoubleBuffer = 65536" Usage="System.Windows.Forms.ControlStyles.DoubleBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary><span data-ttu-id="570e1-131"><see langword="true" /> の場合、描画はバッファーで実行され、完了後に、結果が画面に出力されます。</span><span class="sxs-lookup"><span data-stu-id="570e1-131">If <see langword="true" />, drawing is performed in a buffer, and after it completes, the result is output to the screen.</span></span> <span data-ttu-id="570e1-132">ダブル バッファリングは、コントロールの描画によるちらつきを防ぎます。</span><span class="sxs-lookup"><span data-stu-id="570e1-132">Double-buffering prevents flicker caused by the redrawing of the control.</span></span> <span data-ttu-id="570e1-133"><see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /> を <see langword="true" /> に設定した場合は、<see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> および <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> も <see langword="true" /> に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="570e1-133">If you set <see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /> to <see langword="true" />, you should also set <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> and <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="EnableNotifyMessage">
      <MemberSignature Language="C#" Value="EnableNotifyMessage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles EnableNotifyMessage = int32(32768)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" />
      <MemberSignature Language="VB.NET" Value="EnableNotifyMessage" />
      <MemberSignature Language="C++ CLI" Value="EnableNotifyMessage" />
      <MemberSignature Language="F#" Value="EnableNotifyMessage = 32768" Usage="System.Windows.Forms.ControlStyles.EnableNotifyMessage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>32768</MemberValue>
      <Docs>
        <summary><span data-ttu-id="570e1-134"><see langword="true" /> の場合、コントロールの <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> に送信されたすべてのメッセージに対して <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="570e1-134">If <see langword="true" />, the <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> method is called for every message sent to the control's <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.</span></span> <span data-ttu-id="570e1-135">このスタイルは、既定では <see langword="false" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="570e1-135">This style defaults to <see langword="false" />.</span></span> <span data-ttu-id="570e1-136">部分信頼では、<see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /> は正常に機能しません。</span><span class="sxs-lookup"><span data-stu-id="570e1-136"><see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /> does not work in partial trust.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FixedHeight">
      <MemberSignature Language="C#" Value="FixedHeight" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles FixedHeight = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.FixedHeight" />
      <MemberSignature Language="VB.NET" Value="FixedHeight" />
      <MemberSignature Language="C++ CLI" Value="FixedHeight" />
      <MemberSignature Language="F#" Value="FixedHeight = 64" Usage="System.Windows.Forms.ControlStyles.FixedHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary><span data-ttu-id="570e1-137"><see langword="true" /> の場合、自動スケールされるときにコントロールの高さが固定されます。</span><span class="sxs-lookup"><span data-stu-id="570e1-137">If <see langword="true" />, the control has a fixed height when auto-scaled.</span></span> <span data-ttu-id="570e1-138">たとえば、新しい <see cref="T:System.Drawing.Font" /> を挿入できるようにレイアウト操作でコントロールを再スケールしようとしても、コントロールの <see cref="P:System.Windows.Forms.Control.Height" /> は変更されません。</span><span class="sxs-lookup"><span data-stu-id="570e1-138">For example, if a layout operation attempts to rescale the control to accommodate a new <see cref="T:System.Drawing.Font" />, the control's <see cref="P:System.Windows.Forms.Control.Height" /> remains unchanged.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FixedWidth">
      <MemberSignature Language="C#" Value="FixedWidth" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles FixedWidth = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.FixedWidth" />
      <MemberSignature Language="VB.NET" Value="FixedWidth" />
      <MemberSignature Language="C++ CLI" Value="FixedWidth" />
      <MemberSignature Language="F#" Value="FixedWidth = 32" Usage="System.Windows.Forms.ControlStyles.FixedWidth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="570e1-139"><see langword="true" /> の場合、自動スケールされるときにコントロールの幅が固定されます。</span><span class="sxs-lookup"><span data-stu-id="570e1-139">If <see langword="true" />, the control has a fixed width when auto-scaled.</span></span> <span data-ttu-id="570e1-140">たとえば、新しい <see cref="T:System.Drawing.Font" /> を挿入できるようにレイアウト操作でコントロールを再スケールしようとしても、コントロールの <see cref="P:System.Windows.Forms.Control.Width" /> は変更されません。</span><span class="sxs-lookup"><span data-stu-id="570e1-140">For example, if a layout operation attempts to rescale the control to accommodate a new <see cref="T:System.Drawing.Font" />, the control's <see cref="P:System.Windows.Forms.Control.Width" /> remains unchanged.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Opaque">
      <MemberSignature Language="C#" Value="Opaque" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles Opaque = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.Opaque" />
      <MemberSignature Language="VB.NET" Value="Opaque" />
      <MemberSignature Language="C++ CLI" Value="Opaque" />
      <MemberSignature Language="F#" Value="Opaque = 4" Usage="System.Windows.Forms.ControlStyles.Opaque" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="570e1-141"><see langword="true" /> の場合、コントロールは不透明に描画され、背景は描画されません。</span><span class="sxs-lookup"><span data-stu-id="570e1-141">If <see langword="true" />, the control is drawn opaque and the background is not painted.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OptimizedDoubleBuffer">
      <MemberSignature Language="C#" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles OptimizedDoubleBuffer = int32(131072)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
      <MemberSignature Language="VB.NET" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="C++ CLI" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="F#" Value="OptimizedDoubleBuffer = 131072" Usage="System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary><span data-ttu-id="570e1-142"><see langword="true" /> の場合、コントロールは、画面に直接ではなく、まずバッファーに描画されます。これにより、ちらつきを抑えることができます。</span><span class="sxs-lookup"><span data-stu-id="570e1-142">If <see langword="true" />, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker.</span></span> <span data-ttu-id="570e1-143">このプロパティを <see langword="true" /> に設定した場合は、<see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> も <see langword="true" /> に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="570e1-143">If you set this property to <see langword="true" />, you should also set the <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ResizeRedraw">
      <MemberSignature Language="C#" Value="ResizeRedraw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles ResizeRedraw = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.ResizeRedraw" />
      <MemberSignature Language="VB.NET" Value="ResizeRedraw" />
      <MemberSignature Language="C++ CLI" Value="ResizeRedraw" />
      <MemberSignature Language="F#" Value="ResizeRedraw = 16" Usage="System.Windows.Forms.ControlStyles.ResizeRedraw" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="570e1-144"><see langword="true" /> の場合、コントロールのサイズが変更されると、そのコントロールが再描画されます。</span><span class="sxs-lookup"><span data-stu-id="570e1-144">If <see langword="true" />, the control is redrawn when it is resized.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="Selectable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles Selectable = int32(512)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.Selectable" />
      <MemberSignature Language="VB.NET" Value="Selectable" />
      <MemberSignature Language="C++ CLI" Value="Selectable" />
      <MemberSignature Language="F#" Value="Selectable = 512" Usage="System.Windows.Forms.ControlStyles.Selectable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary><span data-ttu-id="570e1-145"><see langword="true" /> の場合、コントロールはフォーカスを受け取ることができます。</span><span class="sxs-lookup"><span data-stu-id="570e1-145">If <see langword="true" />, the control can receive focus.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StandardClick">
      <MemberSignature Language="C#" Value="StandardClick" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles StandardClick = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.StandardClick" />
      <MemberSignature Language="VB.NET" Value="StandardClick" />
      <MemberSignature Language="C++ CLI" Value="StandardClick" />
      <MemberSignature Language="F#" Value="StandardClick = 256" Usage="System.Windows.Forms.ControlStyles.StandardClick" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="570e1-146"><see langword="true" /> の場合、コントロールは標準の <see cref="E:System.Windows.Forms.Control.Click" /> 動作を実装します。</span><span class="sxs-lookup"><span data-stu-id="570e1-146">If <see langword="true" />, the control implements the standard <see cref="E:System.Windows.Forms.Control.Click" /> behavior.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StandardDoubleClick">
      <MemberSignature Language="C#" Value="StandardDoubleClick" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles StandardDoubleClick = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" />
      <MemberSignature Language="VB.NET" Value="StandardDoubleClick" />
      <MemberSignature Language="C++ CLI" Value="StandardDoubleClick" />
      <MemberSignature Language="F#" Value="StandardDoubleClick = 4096" Usage="System.Windows.Forms.ControlStyles.StandardDoubleClick" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary><span data-ttu-id="570e1-147"><see langword="true" /> の場合、コントロールは標準の <see cref="E:System.Windows.Forms.Control.DoubleClick" /> 動作を実装します。</span><span class="sxs-lookup"><span data-stu-id="570e1-147">If <see langword="true" />, the control implements the standard <see cref="E:System.Windows.Forms.Control.DoubleClick" /> behavior.</span></span> <span data-ttu-id="570e1-148"><see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> ビットが <see langword="true" /> に設定されていない場合、このスタイルは無視されます。</span><span class="sxs-lookup"><span data-stu-id="570e1-148">This style is ignored if the <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> bit is not set to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SupportsTransparentBackColor">
      <MemberSignature Language="C#" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles SupportsTransparentBackColor = int32(2048)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.SupportsTransparentBackColor" />
      <MemberSignature Language="VB.NET" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="C++ CLI" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="F#" Value="SupportsTransparentBackColor = 2048" Usage="System.Windows.Forms.ControlStyles.SupportsTransparentBackColor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary><span data-ttu-id="570e1-149"><see langword="true" /> の場合、コントロールはアルファ値が 255 未満の <see cref="P:System.Windows.Forms.Control.BackColor" /> を受け入れ、透明度をシミュレートします。</span><span class="sxs-lookup"><span data-stu-id="570e1-149">If <see langword="true" />, the control accepts a <see cref="P:System.Windows.Forms.Control.BackColor" /> with an alpha component of less than 255 to simulate transparency.</span></span> <span data-ttu-id="570e1-150">この透明度は、<see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> ビットが <see langword="true" /> に設定され、親コントロールが <see cref="T:System.Windows.Forms.Control" /> から派生している場合だけシミュレートされます。</span><span class="sxs-lookup"><span data-stu-id="570e1-150">Transparency will be simulated only if the <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> bit is set to <see langword="true" /> and the parent control is derived from <see cref="T:System.Windows.Forms.Control" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UserMouse">
      <MemberSignature Language="C#" Value="UserMouse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UserMouse = int32(1024)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UserMouse" />
      <MemberSignature Language="VB.NET" Value="UserMouse" />
      <MemberSignature Language="C++ CLI" Value="UserMouse" />
      <MemberSignature Language="F#" Value="UserMouse = 1024" Usage="System.Windows.Forms.ControlStyles.UserMouse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary><span data-ttu-id="570e1-151"><see langword="true" /> の場合は、コントロールがマウスの操作を独自に処理し、オペレーティング システムではマウス イベントが処理されません。</span><span class="sxs-lookup"><span data-stu-id="570e1-151">If <see langword="true" />, the control does its own mouse processing, and mouse events are not handled by the operating system.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UserPaint">
      <MemberSignature Language="C#" Value="UserPaint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UserPaint = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UserPaint" />
      <MemberSignature Language="VB.NET" Value="UserPaint" />
      <MemberSignature Language="C++ CLI" Value="UserPaint" />
      <MemberSignature Language="F#" Value="UserPaint = 2" Usage="System.Windows.Forms.ControlStyles.UserPaint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="570e1-152"><see langword="true" /> の場合、コントロールはオペレーティング システムによってではなく、独自に描画されます。</span><span class="sxs-lookup"><span data-stu-id="570e1-152">If <see langword="true" />, the control paints itself rather than the operating system doing so.</span></span> <span data-ttu-id="570e1-153"><see langword="false" /> の場合、<see cref="E:System.Windows.Forms.Control.Paint" /> イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="570e1-153">If <see langword="false" />, the <see cref="E:System.Windows.Forms.Control.Paint" /> event is not raised.</span></span> <span data-ttu-id="570e1-154">このスタイルは、<see cref="T:System.Windows.Forms.Control" /> から派生したクラスだけに適用されます。</span><span class="sxs-lookup"><span data-stu-id="570e1-154">This style only applies to classes derived from <see cref="T:System.Windows.Forms.Control" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UseTextForAccessibility">
      <MemberSignature Language="C#" Value="UseTextForAccessibility" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UseTextForAccessibility = int32(262144)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UseTextForAccessibility" />
      <MemberSignature Language="VB.NET" Value="UseTextForAccessibility" />
      <MemberSignature Language="C++ CLI" Value="UseTextForAccessibility" />
      <MemberSignature Language="F#" Value="UseTextForAccessibility = 262144" Usage="System.Windows.Forms.ControlStyles.UseTextForAccessibility" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>262144</MemberValue>
      <Docs>
        <summary><span data-ttu-id="570e1-155">コントロールの <c>Text</c> プロパティの値を指定します。設定した場合、コントロールの既定の Active Accessibility 名とショートカット キーが決定されます。</span><span class="sxs-lookup"><span data-stu-id="570e1-155">Specifies that the value of the control's <c>Text</c> property, if set, determines the control's default Active Accessibility name and shortcut key.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
