<Type Name="Form" FullName="System.Windows.Forms.Form">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67f5782cb6cc29dda344a410692181fd7e3d5c93" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83977544" /></Metadata><TypeSignature Language="C#" Value="public class Form : System.Windows.Forms.ContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Form extends System.Windows.Forms.ContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Form" />
  <TypeSignature Language="VB.NET" Value="Public Class Form&#xA;Inherits ContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Form : System::Windows::Forms::ContainerControl" />
  <TypeSignature Language="F#" Value="type Form = class&#xA;    inherit ContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Load")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.FormDocumentDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("Form")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.ComponentModel.InitializationEvent("Load")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms.Control.TopLevel")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.FormDocumentDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.FormDocumentDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="174bb-101">アプリケーションのユーザー インターフェイスを構成するウィンドウまたはダイアログ ボックスを表します。</span><span class="sxs-lookup"><span data-stu-id="174bb-101">Represents a window or dialog box that makes up an application's user interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-102"><xref:System.Windows.Forms.Form> は、アプリケーションに表示される任意のウィンドウの表現です。</span><span class="sxs-lookup"><span data-stu-id="174bb-102">A <xref:System.Windows.Forms.Form> is a representation of any window displayed in your application.</span></span> <span data-ttu-id="174bb-103"><xref:System.Windows.Forms.Form> クラスを使用して、標準、ツール、境界線、およびフローティングウィンドウを作成できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-103">The <xref:System.Windows.Forms.Form> class can be used to create standard, tool, borderless, and floating windows.</span></span> <span data-ttu-id="174bb-104"><xref:System.Windows.Forms.Form> クラスを使用して、ダイアログボックスなどのモーダルウィンドウを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-104">You can also use the <xref:System.Windows.Forms.Form> class to create modal windows such as a dialog box.</span></span> <span data-ttu-id="174bb-105">特殊な形式であるマルチドキュメントインターフェイス (MDI) フォームには、MDI 子フォームと呼ばれる他の形式を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-105">A special kind of form, the multiple-document interface (MDI) form, can contain other forms called MDI child forms.</span></span> <span data-ttu-id="174bb-106">MDI フォームを作成するには、<xref:System.Windows.Forms.Form.IsMdiContainer%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-106">An MDI form is created by setting the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to `true`.</span></span> <span data-ttu-id="174bb-107">MDI 子フォームを作成するには、子フォームを含む MDI 親フォームに <xref:System.Windows.Forms.Form.MdiParent%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-107">MDI child forms are created by setting the <xref:System.Windows.Forms.Form.MdiParent%2A> property to the MDI parent form that will contain the child form.</span></span>  
  
 <span data-ttu-id="174bb-108"><xref:System.Windows.Forms.Form> クラスで使用できるプロパティを使用して、作成するウィンドウまたはダイアログボックスの外観、サイズ、色、およびウィンドウの管理機能を確認できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-108">Using the properties available in the <xref:System.Windows.Forms.Form> class, you can determine the appearance, size, color, and window management features of the window or dialog box you are creating.</span></span> <span data-ttu-id="174bb-109"><xref:System.Windows.Forms.Control.Text%2A> プロパティを使用すると、タイトルバーにウィンドウのキャプションを指定できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-109">The <xref:System.Windows.Forms.Control.Text%2A> property allows you to specify the caption of the window in the title bar.</span></span> <span data-ttu-id="174bb-110"><xref:System.Windows.Forms.Form.Size%2A> プロパティと <xref:System.Windows.Forms.Form.DesktopLocation%2A> プロパティを使用すると、ウィンドウが表示されるときのウィンドウのサイズと位置を定義できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-110">The <xref:System.Windows.Forms.Form.Size%2A> and <xref:System.Windows.Forms.Form.DesktopLocation%2A> properties allow you to define the size and position of the window when it is displayed.</span></span> <span data-ttu-id="174bb-111"><xref:System.Windows.Forms.Control.ForeColor%2A> color プロパティを使用して、フォームに配置されているすべてのコントロールの既定の前景色を変更できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-111">You can use the <xref:System.Windows.Forms.Control.ForeColor%2A> color property to change the default foreground color of all controls placed on the form.</span></span> <span data-ttu-id="174bb-112"><xref:System.Windows.Forms.Form.FormBorderStyle%2A>、<xref:System.Windows.Forms.Form.MinimizeBox%2A>、および <xref:System.Windows.Forms.Form.MaximizeBox%2A> の各プロパティを使用すると、実行時にフォームを最小化、最大化、またはサイズ変更できるかどうかを制御できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-112">The <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties allow you to control whether the form can be minimized, maximized, or resized at run time.</span></span>  
  
 <span data-ttu-id="174bb-113">プロパティに加えて、クラスのメソッドを使用してフォームを操作できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-113">In addition to properties, you can use the methods of the class to manipulate a form.</span></span> <span data-ttu-id="174bb-114">たとえば、<xref:System.Windows.Forms.Form.ShowDialog%2A> メソッドを使用して、フォームをモーダルダイアログボックスとして表示できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-114">For example, you can use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to show a form as a modal dialog box.</span></span> <span data-ttu-id="174bb-115"><xref:System.Windows.Forms.Form.SetDesktopLocation%2A> メソッドを使用して、フォームをデスクトップに配置できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-115">You can use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method to position the form on the desktop.</span></span>  
  
 <span data-ttu-id="174bb-116"><xref:System.Windows.Forms.Form> クラスのイベントを使用すると、フォームで実行されるアクションに応答できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-116">The events of the <xref:System.Windows.Forms.Form> class allow you to respond to actions performed on the form.</span></span> <span data-ttu-id="174bb-117">フォームがアクティブになったときに、フォームのコントロールに表示されるデータの更新などの操作を実行するには、<xref:System.Windows.Forms.Form.Activated> イベントを使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-117">You can use the <xref:System.Windows.Forms.Form.Activated> event to perform operations such as updating the data displayed in the controls of the form when the form is activated.</span></span>  
  
 <span data-ttu-id="174bb-118">クラスに `Main` というメソッドを配置すると、アプリケーションの開始クラスとしてフォームを使用できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-118">You can use a form as the starting class in your application by placing a method called `Main` in the class.</span></span> <span data-ttu-id="174bb-119">`Main` メソッドで、フォームを作成して表示するコードを追加します。</span><span class="sxs-lookup"><span data-stu-id="174bb-119">In the `Main` method add code to create and show the form.</span></span> <span data-ttu-id="174bb-120">また、フォームを実行するには、`STAThread` 属性を `Main` メソッドに追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-120">You will also need to add the `STAThread` attribute to the `Main` method in order for the form to run.</span></span> <span data-ttu-id="174bb-121">開始フォームが閉じられると、アプリケーションも閉じられます。</span><span class="sxs-lookup"><span data-stu-id="174bb-121">When the starting form is closed, the application is also closed.</span></span>  
  
 <span data-ttu-id="174bb-122"><xref:System.Windows.Forms.Form> を表示する前に <xref:System.Windows.Forms.Control.Enabled%2A> プロパティを `false` に設定した場合 (たとえば、[!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)] デザイナーで <xref:System.Windows.Forms.Control.Enabled%2A> を false に設定した場合)、[最小化]、[最大化]、[閉じる]、および [システム] の各ボタンは有効のままになります。</span><span class="sxs-lookup"><span data-stu-id="174bb-122">If you set the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false` before the <xref:System.Windows.Forms.Form> is visible (for example, setting <xref:System.Windows.Forms.Control.Enabled%2A> to false in the [!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)] designer), the minimize, maximize, close, and system buttons remain enabled.</span></span> <span data-ttu-id="174bb-123"><xref:System.Windows.Forms.Form> を表示した後に <xref:System.Windows.Forms.Control.Enabled%2A> を `false` に設定した場合 (たとえば、読み込みイベントが発生した場合)、ボタンは無効になります。</span><span class="sxs-lookup"><span data-stu-id="174bb-123">If you set <xref:System.Windows.Forms.Control.Enabled%2A> to `false` after the <xref:System.Windows.Forms.Form> is visible (for example, when the Load event occurs), the buttons are disabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-124">次の例では、<xref:System.Windows.Forms.Form> の新しいインスタンスを作成し、<xref:System.Windows.Forms.Form.ShowDialog%2A> メソッドを呼び出して、フォームをダイアログボックスとして表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-124">The following example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="174bb-125">この例では、<xref:System.Windows.Forms.Form.FormBorderStyle%2A>、<xref:System.Windows.Forms.Form.AcceptButton%2A>、<xref:System.Windows.Forms.Form.CancelButton%2A>、<xref:System.Windows.Forms.Form.MinimizeBox%2A>、<xref:System.Windows.Forms.Form.MaximizeBox%2A>、および <xref:System.Windows.Forms.Form.StartPosition%2A> の各プロパティを設定して、フォームの外観と機能をダイアログボックスに変更します。</span><span class="sxs-lookup"><span data-stu-id="174bb-125">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="174bb-126">また、この例では、フォームの <xref:System.Windows.Forms.Control.Controls%2A> コレクションの <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> メソッドを使用して、2つの <xref:System.Windows.Forms.Button> コントロールを追加しています。</span><span class="sxs-lookup"><span data-stu-id="174bb-126">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="174bb-127">この例では、<xref:System.Windows.Forms.Form.HelpButton%2A> プロパティを使用して、ダイアログボックスのキャプションバーに [ヘルプ] ボタンを表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-127">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/599faf75-13cf-49cc-ad3c-255545e5cb97"><span data-ttu-id="174bb-128">マルチ ドキュメント インターフェイス (MDI) アプリケーション</span><span class="sxs-lookup"><span data-stu-id="174bb-128">Multiple-Document Interface (MDI) Applications</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Form ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Form();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="174bb-129"><see cref="T:System.Windows.Forms.Form" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="174bb-129">Initializes a new instance of the <see cref="T:System.Windows.Forms.Form" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-130">フォームの既定のサイズは、高さが300ピクセル、幅が300ピクセルです。</span><span class="sxs-lookup"><span data-stu-id="174bb-130">The default size of a form is 300 pixels in height and 300 pixels in width.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-131">次の例では、<xref:System.Windows.Forms.Form> の新しいインスタンスを作成し、<xref:System.Windows.Forms.Form.ShowDialog%2A> メソッドを呼び出して、フォームをダイアログボックスとして表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-131">The following example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="174bb-132">この例では、<xref:System.Windows.Forms.Form.FormBorderStyle%2A>、<xref:System.Windows.Forms.Form.AcceptButton%2A>、<xref:System.Windows.Forms.Form.CancelButton%2A>、<xref:System.Windows.Forms.Form.MinimizeBox%2A>、<xref:System.Windows.Forms.Form.MaximizeBox%2A>、および <xref:System.Windows.Forms.Form.StartPosition%2A> の各プロパティを設定して、フォームの外観と機能をダイアログボックスに変更します。</span><span class="sxs-lookup"><span data-stu-id="174bb-132">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="174bb-133">また、この例では、フォームの <xref:System.Windows.Forms.Control.Controls%2A> コレクションの <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> メソッドを使用して、2つの <xref:System.Windows.Forms.Button> コントロールを追加しています。</span><span class="sxs-lookup"><span data-stu-id="174bb-133">The example also sets uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="174bb-134">この例では、<xref:System.Windows.Forms.Form.HelpButton%2A> プロパティを使用して、ダイアログボックスのキャプションバーに [ヘルプ] ボタンを表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-134">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptButton">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IButtonControl AcceptButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IButtonControl AcceptButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AcceptButton" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptButton As IButtonControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IButtonControl ^ AcceptButton { System::Windows::Forms::IButtonControl ^ get(); void set(System::Windows::Forms::IButtonControl ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptButton : System.Windows.Forms.IButtonControl with get, set" Usage="System.Windows.Forms.Form.AcceptButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IButtonControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-135">ユーザーが Enter キーを押したときにクリックされる、フォーム上のボタンを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-135">Gets or sets the button on the form that is clicked when the user presses the ENTER key.</span></span></summary>
        <value><span data-ttu-id="174bb-136">フォームの [確定] ボタンとして使用するボタンを表す <see cref="T:System.Windows.Forms.IButtonControl" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-136">An <see cref="T:System.Windows.Forms.IButtonControl" /> that represents the button to use as the accept button for the form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-137">このプロパティを使用すると、ユーザーがアプリケーションで ENTER キーを押したときに実行される既定のアクションを指定できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-137">This property enables you to designate a default action to occur when the user presses the ENTER key in your application.</span></span> <span data-ttu-id="174bb-138">このプロパティに割り当てられたボタンは、現在のフォームにあるか、現在のフォームのコンテナー内にある <xref:System.Windows.Forms.IButtonControl> である必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-138">The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form.</span></span>  
  
 <span data-ttu-id="174bb-139">このプロパティを使用すると、ユーザーがマウスで [同意] ボタンを手動でクリックするのではなく、入力が終わったときに ENTER キーを押すだけで、単純なフォームをすばやく移動できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-139">You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ENTER key when they are finished instead of manually clicking the accept button with their mouse.</span></span>  
  
 <span data-ttu-id="174bb-140">フォームで現在選択されているコントロールが ENTER キーをインターセプトして処理する場合、[accept] ボタンがアクティブにならないことがあります。</span><span class="sxs-lookup"><span data-stu-id="174bb-140">The accept button might not be activated if the currently selected control on the form intercepts the ENTER key and processes it.</span></span> <span data-ttu-id="174bb-141">たとえば、複数行テキストボックスコントロールを使用すると、コントロールに改行文字を挿入するように選択したときに ENTER キーを押すことができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-141">For example, a multiline text box control allows the ENTER key to be pressed when it is selected to insert a new line character in the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-142">次の例では、<xref:System.Windows.Forms.Form> の新しいインスタンスを作成し、<xref:System.Windows.Forms.Form.ShowDialog%2A> メソッドを呼び出して、フォームをダイアログボックスとして表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-142">The following example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="174bb-143">この例では、<xref:System.Windows.Forms.Form.FormBorderStyle%2A>、<xref:System.Windows.Forms.Form.AcceptButton%2A>、<xref:System.Windows.Forms.Form.CancelButton%2A>、<xref:System.Windows.Forms.Form.MinimizeBox%2A>、<xref:System.Windows.Forms.Form.MaximizeBox%2A>、および <xref:System.Windows.Forms.Form.StartPosition%2A> の各プロパティを設定して、フォームの外観と機能をダイアログボックスに変更します。</span><span class="sxs-lookup"><span data-stu-id="174bb-143">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="174bb-144">また、この例では、フォームの <xref:System.Windows.Forms.Control.Controls%2A> コレクションの <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> メソッドを使用して、2つの <xref:System.Windows.Forms.Button> コントロールを追加しています。</span><span class="sxs-lookup"><span data-stu-id="174bb-144">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="174bb-145">この例では、<xref:System.Windows.Forms.Form.HelpButton%2A> プロパティを使用して、ダイアログボックスのキャプションバーに [ヘルプ] ボタンを表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-145">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.CancelButton" />
        <altmember cref="T:System.Windows.Forms.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; unit" Usage="form.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="174bb-146">フォームをアクティブにし、そのフォームにフォーカスを移します。</span><span class="sxs-lookup"><span data-stu-id="174bb-146">Activates the form and gives it focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-147">フォームをアクティブ化すると、アクティブなアプリケーションの場合はフロントになり、アクティブなアプリケーションでない場合はウィンドウのキャプションが点滅します。</span><span class="sxs-lookup"><span data-stu-id="174bb-147">Activating a form brings it to the front if this is the active application, or it flashes the window caption if this is not the active application.</span></span> <span data-ttu-id="174bb-148">このメソッドが効果を持つようにするには、フォームが表示されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-148">The form must be visible for this method to have any effect.</span></span> <span data-ttu-id="174bb-149">アプリケーションでアクティブなフォームを特定するには、フォームがマルチドキュメントインターフェイス (MDI) アプリケーションに含まれている場合は、<xref:System.Windows.Forms.Form.ActiveForm%2A> プロパティまたは <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-149">To determine the active form in an application, use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property or the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property if your forms are in a Multiple-document interface (MDI) application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-150">次の例では、<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>、<xref:System.Windows.Forms.Form.Load>、および <xref:System.Windows.Forms.Form.Activate%2A> メンバーを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-150">The following example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="174bb-151">この例を実行するには、`Button1` と呼ばれるボタンと、`Label1` と `Label2`と呼ばれる2つの `Label` コントロールを含む `Form1` という名前のフォームに次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-151">To run the example, paste the following code in a form called `Form1` containing a button called `Button1` and two `Label` controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.ActiveForm" />
        <altmember cref="P:System.Windows.Forms.Form.ActiveMdiChild" />
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberSignature Language="F#" Value="member this.Activated : EventHandler " Usage="member this.Activated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-152">フォームがコード内またはユーザーの操作によってアクティブになると発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-152">Occurs when the form is activated in code or by the user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="174bb-153">アプリケーションがアクティブで、複数のフォームがある場合、アクティブなフォームは入力フォーカスのあるフォームです。</span><span class="sxs-lookup"><span data-stu-id="174bb-153">When the application is active and has multiple forms, the active form is the form with the input focus.</span></span> <span data-ttu-id="174bb-154">表示されていないフォームをアクティブフォームにすることはできません。</span><span class="sxs-lookup"><span data-stu-id="174bb-154">A form that is not visible cannot be the active form.</span></span> <span data-ttu-id="174bb-155">表示フォームをアクティブにする最も簡単な方法は、クリックするか、適切なキーボードの組み合わせを使用することです。</span><span class="sxs-lookup"><span data-stu-id="174bb-155">The simplest way to activate a visible form is to click it or use an appropriate keyboard combination.</span></span>  
  
 <span data-ttu-id="174bb-156">コードを使用して実行時にフォームをアクティブ化するには、<xref:System.Windows.Forms.Form.Activate%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="174bb-156">To activate a form at run time using code, call the <xref:System.Windows.Forms.Form.Activate%2A> method.</span></span> <span data-ttu-id="174bb-157">フォームがアクティブになっていないときにフォームのデータに加えられた変更に基づいてフォームの内容を更新するなどのタスクには、このイベントを使用できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-157">You can use this event for tasks such as updating the contents of the form based on changes made to the form's data when the form was not activated.</span></span>  
  
 <span data-ttu-id="174bb-158">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-158">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-159">次の例では、<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>、<xref:System.Windows.Forms.Form.Closed>、<xref:System.Windows.Forms.Form.Load>、<xref:System.Windows.Forms.Form.Activated>、および <xref:System.Windows.Forms.Form.Activate%2A> の各メンバーを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-159">The following example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Closed>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="174bb-160">例を実行するには、Form1 という名前のフォームに次のコードを貼り付けます。これには、`Button1` と呼ばれる <xref:System.Windows.Forms.Button> と `Label1` と `Label2`と呼ばれる2つの <xref:System.Windows.Forms.Label> コントロールが含まれます。</span><span class="sxs-lookup"><span data-stu-id="174bb-160">To run the example, paste the following code in a form called Form1 containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ActivateMdiChild">
      <MemberSignature Language="C#" Value="protected void ActivateMdiChild (System.Windows.Forms.Form form);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ActivateMdiChild(class System.Windows.Forms.Form form) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ActivateMdiChild (form As Form)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ActivateMdiChild(System::Windows::Forms::Form ^ form);" />
      <MemberSignature Language="F#" Value="member this.ActivateMdiChild : System.Windows.Forms.Form -&gt; unit" Usage="form.ActivateMdiChild form" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="form" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="form"><span data-ttu-id="174bb-161">アクティブにする子フォーム。</span><span class="sxs-lookup"><span data-stu-id="174bb-161">The child form to activate.</span></span></param>
        <summary><span data-ttu-id="174bb-162">フォームの MDI 子フォームをアクティブにします。</span><span class="sxs-lookup"><span data-stu-id="174bb-162">Activates the MDI child of a form.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-163">`form` パラメーターが既にアクティブな MDI 子フォームである場合、<xref:System.Windows.Forms.Form.ActivateMdiChild%2A> メソッドは単にを返します。</span><span class="sxs-lookup"><span data-stu-id="174bb-163">If the `form` parameter is already the active MDI child form, then the <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> method simply returns.</span></span> <span data-ttu-id="174bb-164">`form` が `null`されていない場合は、アクティブな MDI 子フォームとして設定されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-164">If `form` is not `null`, then it is set to be the active MDI child form.</span></span>  
  
 <span data-ttu-id="174bb-165">`form` パラメーターが `null` かどうかにかかわらず、<xref:System.Windows.Forms.Form.ActivateMdiChild%2A> によって <xref:System.Windows.Forms.Form.MdiChildActivate> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-165">Whether the `form` parameter is `null` or not, <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> raises the <xref:System.Windows.Forms.Form.MdiChildActivate> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.ActiveMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.ActiveForm" />
        <altmember cref="E:System.Windows.Forms.Form.MdiChildActivate" />
      </Docs>
    </Member>
    <Member MemberName="ActiveForm">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Form ActiveForm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.Form ActiveForm" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ActiveForm" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ActiveForm As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::Form ^ ActiveForm { System::Windows::Forms::Form ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveForm : System.Windows.Forms.Form" Usage="System.Windows.Forms.Form.ActiveForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-166">アプリケーションで現在アクティブなフォームを取得します。</span><span class="sxs-lookup"><span data-stu-id="174bb-166">Gets the currently active form for this application.</span></span></summary>
        <value><span data-ttu-id="174bb-167">現在アクティブなフォームを表す <see cref="T:System.Windows.Forms.Form" />。アクティブなフォームがない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-167">A <see cref="T:System.Windows.Forms.Form" /> that represents the currently active form, or <see langword="null" /> if there is no active form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-168">このメソッドを使用して、フォームまたはそのコントロールに対してアクションを実行するために、現在アクティブなフォームへの参照を取得できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-168">You can use this method to obtain a reference to the currently active form to perform actions on the form or its controls.</span></span>  
  
 <span data-ttu-id="174bb-169">アプリケーションがマルチドキュメントインターフェイス (MDI) アプリケーションの場合は、<xref:System.Windows.Forms.Form.ActiveMdiChild%2A> プロパティを使用して、現在アクティブな MDI 子フォームを取得します。</span><span class="sxs-lookup"><span data-stu-id="174bb-169">If your application is a multiple-document interface (MDI) application, use the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property to obtain the currently active MDI child form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-170">次の例では、アクティブなフォームを取得し、フォーム上のすべてのコントロールを無効にします。</span><span class="sxs-lookup"><span data-stu-id="174bb-170">The following example gets the active form and disables all the controls on the form.</span></span> <span data-ttu-id="174bb-171">この例では、フォームの <xref:System.Windows.Forms.Control.Controls%2A> コレクションを使用して、フォーム上の各コントロールを反復処理し、コントロールを無効にします。</span><span class="sxs-lookup"><span data-stu-id="174bb-171">The example uses the <xref:System.Windows.Forms.Control.Controls%2A> collection of the form to iterate through each control on the form and disable the controls.</span></span>  
  
 [!code-cpp[Classic Form.ActiveForm Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ActiveForm Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ActiveForm Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ActiveForm Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ActiveForm Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ActiveForm Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.ActiveMdiChild" />
      </Docs>
    </Member>
    <Member MemberName="ActiveMdiChild">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form ActiveMdiChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form ActiveMdiChild" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ActiveMdiChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveMdiChild As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ ActiveMdiChild { System::Windows::Forms::Form ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveMdiChild : System.Windows.Forms.Form" Usage="System.Windows.Forms.Form.ActiveMdiChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-172">現在アクティブなマルチ ドキュメント インターフェイス (MDI) 子ウィンドウを取得します。</span><span class="sxs-lookup"><span data-stu-id="174bb-172">Gets the currently active multiple-document interface (MDI) child window.</span></span></summary>
        <value><span data-ttu-id="174bb-173">現在アクティブな MDI 子ウィンドウを表す <see cref="T:System.Windows.Forms.Form" /> を返します。現在子ウィンドウが存在しない場合は <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="174bb-173">Returns a <see cref="T:System.Windows.Forms.Form" /> that represents the currently active MDI child window, or <see langword="null" /> if there are currently no child windows present.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-174">このメソッドを使用すると、mdi 子フォームが MDI アプリケーションで開かれているかどうかを確認できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-174">You can use this method to determine whether there are any MDI child forms open in your MDI application.</span></span> <span data-ttu-id="174bb-175">また、このメソッドを使用して、mdi 親フォームから、またはアプリケーションに表示される別のフォームから、MDI 子ウィンドウに対して操作を実行することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-175">You can also use this method to perform operations on an MDI child window from its MDI parent form or from another form that is displayed in your application.</span></span>  
  
 <span data-ttu-id="174bb-176">現在アクティブなフォームが MDI 子フォームでない場合は、<xref:System.Windows.Forms.Form.ActiveForm%2A> プロパティを使用して参照を取得できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-176">If the currently active form is not an MDI child form, you can use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property to obtain a reference to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-177">次の例では、アクティブな MDI 子フォームへの参照を取得し、フォーム上のすべての <xref:System.Windows.Forms.TextBox> コントロールをループして、<xref:System.Windows.Forms.TextBoxBase.Text%2A> プロパティをリセットします。</span><span class="sxs-lookup"><span data-stu-id="174bb-177">The following example obtains a reference to the active MDI child form and loops through all <xref:System.Windows.Forms.TextBox> controls on the form, resetting their <xref:System.Windows.Forms.TextBoxBase.Text%2A> properties.</span></span> <span data-ttu-id="174bb-178">この例では、MDI 親フォームが作成されており、このメソッド呼び出しが MDI 親フォームから実行されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-178">This example requires that an MDI parent form has been created and that this method call is being made from the MDI parent form.</span></span>  
  
 [!code-cpp[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.ActiveForm" />
      </Docs>
    </Member>
    <Member MemberName="AddOwnedForm">
      <MemberSignature Language="C#" Value="public void AddOwnedForm (System.Windows.Forms.Form ownedForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOwnedForm(class System.Windows.Forms.Form ownedForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOwnedForm (ownedForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOwnedForm(System::Windows::Forms::Form ^ ownedForm);" />
      <MemberSignature Language="F#" Value="member this.AddOwnedForm : System.Windows.Forms.Form -&gt; unit" Usage="form.AddOwnedForm ownedForm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownedForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="ownedForm"><span data-ttu-id="174bb-179">対象となるフォームがこれから所有する <see cref="T:System.Windows.Forms.Form" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-179">The <see cref="T:System.Windows.Forms.Form" /> that this form will own.</span></span></param>
        <summary><span data-ttu-id="174bb-180">対象となるフォームに、所有される側のフォームを追加します。</span><span class="sxs-lookup"><span data-stu-id="174bb-180">Adds an owned form to this form.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-181">所有者フォームに割り当てられたフォームは、<xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> メソッドが呼び出されるまで所有されたままになります。</span><span class="sxs-lookup"><span data-stu-id="174bb-181">The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called.</span></span> <span data-ttu-id="174bb-182">また、<xref:System.Windows.Forms.Form.Owner%2A> プロパティに所有者フォームへの参照を設定することによって、他のユーザーが所有するフォームを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-182">You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form.</span></span>  
  
 <span data-ttu-id="174bb-183">フォームが別のフォームに所有されている場合は、所有者フォームで閉じられるか、非表示になります。</span><span class="sxs-lookup"><span data-stu-id="174bb-183">When a form is owned by another form, it is closed or hidden with the owner form.</span></span> <span data-ttu-id="174bb-184">たとえば、`Form1`という名前のフォームが所有する `Form2` という名前のフォームを考えてみます。</span><span class="sxs-lookup"><span data-stu-id="174bb-184">For example, consider a form named `Form2` that is owned by a form named `Form1`.</span></span> <span data-ttu-id="174bb-185">`Form1` が閉じているか最小化されている場合は、`Form2` も閉じられるか、非表示になります。</span><span class="sxs-lookup"><span data-stu-id="174bb-185">If `Form1` is closed or minimized, `Form2` is also closed or hidden.</span></span> <span data-ttu-id="174bb-186">所有フォームは、所有者フォームの背後にも表示されません。</span><span class="sxs-lookup"><span data-stu-id="174bb-186">Owned forms are also never displayed behind their owner form.</span></span> <span data-ttu-id="174bb-187">所有しているフォーム ([検索と置換] ウィンドウなど) は、所有者フォームを選択したときに所有者フォームの背後に表示されないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-187">You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-188">フォームがマルチドキュメントインターフェイス (MDI) 親フォームの場合、このプロパティは、現在開いている MDI 子フォームを除き、表示されるすべてのフォームを返します。</span><span class="sxs-lookup"><span data-stu-id="174bb-188">If the form is a multiple-document interface (MDI) parent form, this property returns all forms that are displayed with the exception of any MDI child forms that are currently open.</span></span> <span data-ttu-id="174bb-189">MDI 親フォームで開かれている MDI 子フォームを取得するには、<xref:System.Windows.Forms.Form.MdiChildren%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-189">To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-190">次の例では、<xref:System.Windows.Forms.Form.AddOwnedForm%2A> メソッドを使用して、フォームを別の形式の所有フォームとして表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-190">The following example demonstrates how to use the <xref:System.Windows.Forms.Form.AddOwnedForm%2A> method to display a form as an owned form of another form.</span></span> <span data-ttu-id="174bb-191">所有するフォームが表示されると、所有者フォームが最小化され、所有しているフォームによってそのフォームが最小化されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-191">Once the owned form is shown, you can minimize its owner form and the owned form will minimize with it.</span></span> <span data-ttu-id="174bb-192">この例では、例のコードを別のイベントまたはフォームのメソッドから呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-192">The example requires that the code in the example is called from another event or method of a form.</span></span>  
  
 [!code-cpp[Form.AddOwnedForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.AddOwnedForm/CPP/form1.cpp#1)]
 [!code-csharp[Form.AddOwnedForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AddOwnedForm/CS/form1.cs#1)]
 [!code-vb[Form.AddOwnedForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AddOwnedForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.OwnedForms" />
        <altmember cref="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
      </Docs>
    </Member>
    <Member MemberName="AdjustFormScrollbars">
      <MemberSignature Language="C#" Value="protected override void AdjustFormScrollbars (bool displayScrollbars);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AdjustFormScrollbars(bool displayScrollbars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AdjustFormScrollbars (displayScrollbars As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AdjustFormScrollbars(bool displayScrollbars);" />
      <MemberSignature Language="F#" Value="override this.AdjustFormScrollbars : bool -&gt; unit" Usage="form.AdjustFormScrollbars displayScrollbars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayScrollbars" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="displayScrollbars"><span data-ttu-id="174bb-193">スクロール バーを表示する場合は<see langword="true" /> 。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-193"><see langword="true" /> to show the scroll bars; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="174bb-194">現在のコントロールの位置、および現在選択されているコントロールを基準として、コンテナー上のスクロール バーを調整します。</span><span class="sxs-lookup"><span data-stu-id="174bb-194">Adjusts the scroll bars on the container based on the current control positions and the control currently selected.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowTransparency">
      <MemberSignature Language="C#" Value="public bool AllowTransparency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowTransparency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AllowTransparency" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowTransparency As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowTransparency { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowTransparency : bool with get, set" Usage="System.Windows.Forms.Form.AllowTransparency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-195">フォームの不透明度を調整できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-195">Gets or sets a value indicating whether the opacity of the form can be adjusted.</span></span></summary>
        <value><span data-ttu-id="174bb-196">フォームの不透明度を変更できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-196"><see langword="true" /> if the opacity of the form can be changed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-197">このプロパティは、`Opacity` が変更された場合に、自動的に `true` に設定されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-197">This property is automatically set to `true` if the `Opacity` is changed.</span></span> <span data-ttu-id="174bb-198">`Opacity` プロパティを使用してフォームの不透明度を設定すると、フォームにオブジェクトがレイヤー化されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-198">When the opacity of a form is set using the `Opacity` property, the form will layer objects on the form.</span></span> <span data-ttu-id="174bb-199"><xref:System.Windows.Forms.Form.AllowTransparency%2A> プロパティ `false` をに設定すると、フォームはレイヤーモードではなくなり、フォームの表示パフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="174bb-199">If you set the <xref:System.Windows.Forms.Form.AllowTransparency%2A> property to `false` the form will not be in layered mode which will improve the display performance of the form.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAutoScaling">
      <MemberSignature Language="C#" Value="protected void ApplyAutoScaling ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ApplyAutoScaling() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ApplyAutoScaling" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ApplyAutoScaling ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ApplyAutoScaling();" />
      <MemberSignature Language="F#" Value="member this.ApplyAutoScaling : unit -&gt; unit" Usage="form.ApplyAutoScaling " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.Obsolete("This method has been deprecated. Use the ApplyAutoScaling method instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="174bb-200"><see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" /> プロパティの現在の値、および現在のフォントのサイズに応じて、フォームのサイズを変更します。</span><span class="sxs-lookup"><span data-stu-id="174bb-200">Resizes the form according to the current value of the <see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" /> property and the size of the current font.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-201">このメソッドは、<xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> プロパティの値と <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> メソッドによって返される <xref:System.Windows.Forms.Form.Size%2A> 値を使用して、フォームのサイズを決定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-201">This method determines the form size using the value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property and the <xref:System.Windows.Forms.Form.Size%2A> value returned by the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScale">
      <MemberSignature Language="C#" Value="public bool AutoScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScale" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoScale" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScale As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoScale { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScale : bool with get, set" Usage="System.Windows.Forms.Form.AutoScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.Obsolete("This property has been deprecated. Use the AutoScaleMode property instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-202">フォームで使用されるフォントの高さに合わせてフォームのサイズを調整し、そのコントロールをスケールするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-202">Gets or sets a value indicating whether the form adjusts its size to fit the height of the font used on the form and scales its controls.</span></span></summary>
        <value><span data-ttu-id="174bb-203">現在フォームに割り当てられているフォントに合わせて、フォームとそのコントロールを自動的にスケールする場合は<see langword="true" /> 。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-203"><see langword="true" /> if the form will automatically scale itself and its controls based on the current font assigned to the form; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="174bb-204">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="174bb-204">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="174bb-205"><xref:System.Windows.Forms.Form.AutoScale%2A> は互換性のために残されていますが、旧バージョンとの互換性のために残されています。</span><span class="sxs-lookup"><span data-stu-id="174bb-205">The <xref:System.Windows.Forms.Form.AutoScale%2A> is obsolete and has been retained for backward compatibility.</span></span> <span data-ttu-id="174bb-206">旧式でない代替手段は、<xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="174bb-206">The non-obsolete alternative is <xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="174bb-207">自動スケーリングの詳細については、「 [Windows フォームでの自動スケーリング](/dotnet/framework/winforms/automatic-scaling-in-windows-forms)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-207">For more information about automatic scaling, see [Automatic Scaling in Windows Forms](/dotnet/framework/winforms/automatic-scaling-in-windows-forms).</span></span>  
  
 <span data-ttu-id="174bb-208">このプロパティを使用すると、フォームとそのコントロールが、フォントの変更に基づいて自動的に調整されるようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-208">You can use this property to allow your form and its controls to automatically adjust based on changes in the font.</span></span> <span data-ttu-id="174bb-209">これは、Windows で使用するように指定された言語に基づいてフォントが増減する可能性があるアプリケーションで役に立ちます。</span><span class="sxs-lookup"><span data-stu-id="174bb-209">This can be useful in applications where the font might increase or decrease based on the language specified for use by Windows.</span></span>  
  
 <span data-ttu-id="174bb-210">フォームのサイズを自動調整するには、<xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-210">To obtain the size the form will auto scale to, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property.</span></span> <span data-ttu-id="174bb-211">特定のフォントに基づいてフォームのサイズを自動調整する場合は、<xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-211">If you want to determine the size the form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScaleBaseSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size AutoScaleBaseSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size AutoScaleBaseSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoScaleBaseSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoScaleBaseSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size AutoScaleBaseSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScaleBaseSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Form.AutoScaleBaseSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-212">フォームを自動スケールするときに使用する基本サイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-212">Gets or sets the base size used for autoscaling of the form.</span></span></summary>
        <value><span data-ttu-id="174bb-213">対象となるフォームを自動スケールするときに使用する基本サイズを表す <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-213">A <see cref="T:System.Drawing.Size" /> that represents the base size that this form uses for autoscaling.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="174bb-214">このメンバーは旧バージョンとの互換性のために残されています。</span><span class="sxs-lookup"><span data-stu-id="174bb-214">This member has been retained for backward compatibility.</span></span> <span data-ttu-id="174bb-215">自動スケーリングの詳細については、「 [Windows フォームでの自動スケーリング](/dotnet/framework/winforms/automatic-scaling-in-windows-forms)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-215">For more information about automatic scaling, see [Automatic Scaling in Windows Forms](/dotnet/framework/winforms/automatic-scaling-in-windows-forms).</span></span>  
  
 <span data-ttu-id="174bb-216"><xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> プロパティの値は、フォームのスケールファクターを計算するためにフォーム表示時に使用されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-216">The value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property is used at form-display time to compute the scaling factor for the form.</span></span> <span data-ttu-id="174bb-217">自動スケールの基本サイズは、自動スケールが使用されている場合のフォームのスケールを決定するために、システムのフォントサイズを比較するためのベースラインとしてフォームによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-217">The autoscaling base size is used by the form as a baseline for comparison to the system's font size to determine how much to scale the form when autoscaling is used.</span></span> <span data-ttu-id="174bb-218">特定のフォントに基づいてフォームのサイズが自動的に調整されるようにするには、<xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-218">If you want to determine the size a form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-219">このプロパティの値は、フォームが最初に作成されるときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-219">The value of this property is used when the form is initially created.</span></span> <span data-ttu-id="174bb-220">プロパティが設定されると、変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="174bb-220">Once the property is set, it cannot be changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AutoScale" />
        <altmember cref="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)" />
      </Docs>
    </Member>
    <Member MemberName="AutoScroll">
      <MemberSignature Language="C#" Value="public override bool AutoScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoScroll" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoScroll { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScroll : bool with get, set" Usage="System.Windows.Forms.Form.AutoScroll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-221">フォームで自動スクロールを有効にするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-221">Gets or sets a value indicating whether the form enables autoscrolling.</span></span></summary>
        <value><span data-ttu-id="174bb-222">フォームで自動スクロールを有効にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-222"><see langword="true" /> to enable autoscrolling on the form; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="174bb-223">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="174bb-223">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-224">このプロパティが `true`に設定されている場合、フォームのクライアント領域の外側にコントロールが配置されていると、フォームにスクロールバーが表示されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-224">If this property is set to `true`, scroll bars are displayed on the form if any controls are located outside the form's client region.</span></span> <span data-ttu-id="174bb-225">また、自動スクロールがオンになっている場合は、フォームのクライアント領域が自動的にスクロールされて、入力フォーカスのあるコントロールが表示されるようになります。</span><span class="sxs-lookup"><span data-stu-id="174bb-225">Additionally, when autoscrolling is on, the client area of the form automatically scrolls to make the control with input focus visible.</span></span>  
  
 <span data-ttu-id="174bb-226">このプロパティを使用すると、ビデオの解像度設定が低解像度に設定されている場合に、ユーザーがコントロールを表示できなくなるのを防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-226">You can use this property to prevent users from losing the ability to view controls when their video resolution settings are set to a low resolution.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-227">次の例では、<xref:System.Windows.Forms.Form.AutoScroll%2A> プロパティを使用して、フォームのクライアント領域のサイズを大きくするコントロールの表示を有効にする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-227">The following example demonstrates how to use the <xref:System.Windows.Forms.Form.AutoScroll%2A> property to enable the display of controls that are outsize the client area of a form.</span></span> <span data-ttu-id="174bb-228">この例では、新しいフォームを作成し、フォームに <xref:System.Windows.Forms.Button> コントロールを追加します。</span><span class="sxs-lookup"><span data-stu-id="174bb-228">The example creates a new form and adds a <xref:System.Windows.Forms.Button> control to the form.</span></span> <span data-ttu-id="174bb-229"><xref:System.Windows.Forms.Button> コントロールが、新しいフォームのクライアント領域の外側に配置されています。</span><span class="sxs-lookup"><span data-stu-id="174bb-229">The <xref:System.Windows.Forms.Button> control is positioned outsize the client area of the new form.</span></span> <span data-ttu-id="174bb-230"><xref:System.Windows.Forms.Form.AutoScroll%2A> プロパティは true に設定され、ユーザーがコントロールにスクロールできるように、フォームにスクロールバーが表示されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-230">The <xref:System.Windows.Forms.Form.AutoScroll%2A> property is set to true to display scroll bars on the form to enable the user to scroll to the control.</span></span> <span data-ttu-id="174bb-231">この例では、イベントハンドラーまたは他のメソッドで、この例で定義されているメソッドを別の形式から呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-231">This example requires that the method defined in this example is called from another form in an event handler or other method.</span></span>  
  
 [!code-cpp[Form.AutoScroll#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.AutoScroll/CPP/form1.cpp#1)]
 [!code-csharp[Form.AutoScroll#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoScroll/CS/form1.cs#1)]
 [!code-vb[Form.AutoScroll#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoScroll/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.Form.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-232"><see cref="P:System.Windows.Forms.Form.AutoSizeMode" /> の設定に従って、フォームのサイズを変更します。</span><span class="sxs-lookup"><span data-stu-id="174bb-232">Resize the form according to the setting of <see cref="P:System.Windows.Forms.Form.AutoSizeMode" />.</span></span></summary>
        <value><span data-ttu-id="174bb-233">フォームのサイズが自動的に変更される場合は<see langword="true" /> 。手動でサイズを変更する必要がある場合は <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-233"><see langword="true" /> if the form will automatically resize; <see langword="false" /> if it must be manually resized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-234">コンテンツに合わせてフォームのサイズを強制的に変更するには、<xref:System.Windows.Forms.Form.AutoSize%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-234">Use <xref:System.Windows.Forms.Form.AutoSize%2A> to force a form to resize to fit its contents.</span></span>  
  
 <span data-ttu-id="174bb-235"><xref:System.Windows.Forms.Form.AutoSize%2A> と <xref:System.Windows.Forms.Form.AutoSizeMode%2A> のプロパティの値に関係なく、Visual Studio フォームデザイナーでフォームのサイズが自動的に変更されることはありません。</span><span class="sxs-lookup"><span data-stu-id="174bb-235">A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties.</span></span> <span data-ttu-id="174bb-236">フォームは、この2つのプロパティの値に従って、実行時に自動的にサイズが変更されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-236">The form correctly resizes itself at run time according to the values of these two properties.</span></span> <span data-ttu-id="174bb-237">これに対して、カスタム <xref:System.Windows.Forms.UserControl> は、デザイン時と実行時の両方で自動的にサイズが変更されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-237">By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time.</span></span>  
  
 <span data-ttu-id="174bb-238"><xref:System.Windows.Forms.Form.AutoSize%2A>を使用する場合、<xref:System.Windows.Forms.Control.MinimumSize%2A> プロパティと <xref:System.Windows.Forms.Control.MaximumSize%2A> プロパティは尊重されますが、<xref:System.Windows.Forms.Control.Size%2A> プロパティの現在の値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-238">When using <xref:System.Windows.Forms.Form.AutoSize%2A>, the <xref:System.Windows.Forms.Control.MinimumSize%2A> and <xref:System.Windows.Forms.Control.MaximumSize%2A> properties are respected, but the current value of the <xref:System.Windows.Forms.Control.Size%2A> property is ignored.</span></span> <span data-ttu-id="174bb-239"><xref:System.Windows.Forms.Form.AutoSize%2A> と <xref:System.Windows.Forms.Form.AutoSizeMode%2A> を使用すると、<xref:System.Windows.Forms.Form.AutoScroll%2A> プロパティも余分にレンダリングされます。そのため、フォームを縮小して、含まれるコントロールをビューから隠すことはできません。</span><span class="sxs-lookup"><span data-stu-id="174bb-239">Using <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> also renders the <xref:System.Windows.Forms.Form.AutoScroll%2A> property superfluous, as there is no way to shrink the form to hide its contained controls from view.</span></span>  
  
 <span data-ttu-id="174bb-240"><xref:System.Windows.Forms.Form.AutoSize%2A> が `true`場合のフォームの動作については、<xref:System.Windows.Forms.AutoSizeMode> 列挙体を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-240">See the <xref:System.Windows.Forms.AutoSizeMode> enumeration for information on how a form behaves when <xref:System.Windows.Forms.Form.AutoSize%2A> is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-241">次の例では、内容に合わせて自動的にサイズを変更するコードを使用して作成されたフォームを示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-241">The following example shows a form created using code that automatically resizes to fit its contents.</span></span> <span data-ttu-id="174bb-242">このフォームを実行すると、<xref:System.Windows.Forms.Label>、URL を入力するための <xref:System.Windows.Forms.TextBox>、およびその URL をユーザーの既定の Web ブラウザーの内部に表示するための <xref:System.Windows.Forms.Button> が表示されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-242">When run, the form displays a <xref:System.Windows.Forms.Label>, a <xref:System.Windows.Forms.TextBox> for entering a URL, and a <xref:System.Windows.Forms.Button> for displaying that URL inside of the user's default Web browser.</span></span> <span data-ttu-id="174bb-243">この例では、<xref:System.Windows.Forms.FlowLayoutPanel> を使用して、含まれるコントロールをもう一方のコントロールの後に配置します。</span><span class="sxs-lookup"><span data-stu-id="174bb-243">The example uses a <xref:System.Windows.Forms.FlowLayoutPanel> to lay out the contained controls one after the other.</span></span> <span data-ttu-id="174bb-244">また、フォームの内容に合わせて拡大および縮小するように <xref:System.Windows.Forms.Control.AutoSize%2A> と <xref:System.Windows.Forms.AutoSizeMode> を設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-244">It also sets the <xref:System.Windows.Forms.Control.AutoSize%2A> and <xref:System.Windows.Forms.AutoSizeMode> to grow and shrink to fit the contents of its form.</span></span>  
  
 [!code-csharp[Form.AutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoSize/CS/Form1.cs#1)]
 [!code-vb[Form.AutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeChanged : EventHandler " Usage="member this.AutoSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-245"><see cref="P:System.Windows.Forms.Form.AutoSize" /> プロパティが変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-245">Occurs when the <see cref="P:System.Windows.Forms.Form.AutoSize" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoSizeMode AutoSizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoSizeMode AutoSizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoSizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSizeMode As AutoSizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoSizeMode AutoSizeMode { System::Windows::Forms::AutoSizeMode get(); void set(System::Windows::Forms::AutoSizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSizeMode : System.Windows.Forms.AutoSizeMode with get, set" Usage="System.Windows.Forms.Form.AutoSizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoSizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-246">フォームを自動的にサイズ変更するときに使用するモードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-246">Gets or sets the mode by which the form automatically resizes itself.</span></span></summary>
        <value><span data-ttu-id="174bb-247"><see cref="T:System.Windows.Forms.AutoSizeMode" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="174bb-247">An <see cref="T:System.Windows.Forms.AutoSizeMode" /> enumerated value.</span></span> <span data-ttu-id="174bb-248">既定では、 <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />です。</span><span class="sxs-lookup"><span data-stu-id="174bb-248">The default is <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-249"><xref:System.Windows.Forms.Form.AutoSizeMode%2A> プロパティを新しい値に設定すると、フォームが再度レイアウトされます。</span><span class="sxs-lookup"><span data-stu-id="174bb-249">Setting the <xref:System.Windows.Forms.Form.AutoSizeMode%2A> property to a new value causes the form to be laid out again.</span></span>  
  
 <span data-ttu-id="174bb-250"><xref:System.Windows.Forms.Form.AutoSize%2A> と <xref:System.Windows.Forms.Form.AutoSizeMode%2A> のプロパティの値に関係なく、Visual Studio フォームデザイナーでフォームのサイズが自動的に変更されることはありません。</span><span class="sxs-lookup"><span data-stu-id="174bb-250">A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties.</span></span> <span data-ttu-id="174bb-251">フォームは、この2つのプロパティの値に従って、実行時に自動的にサイズが変更されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-251">The form correctly resizes itself at run time according to the values of these two properties.</span></span> <span data-ttu-id="174bb-252">これに対して、カスタム <xref:System.Windows.Forms.UserControl> は、デザイン時と実行時の両方で自動的にサイズが変更されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-252">By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-253">次の例では、内容に合わせて自動的にサイズを変更するコードを使用して作成されたフォームを示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-253">The following example shows a form created using code that automatically resizes to fit its contents.</span></span> <span data-ttu-id="174bb-254">このフォームを実行すると、<xref:System.Windows.Forms.Label>、URL を入力するための <xref:System.Windows.Forms.TextBox>、およびその URL をユーザーの既定の Web ブラウザーの内部に表示するための <xref:System.Windows.Forms.Button> が表示されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-254">When run, the form displays a <xref:System.Windows.Forms.Label>, a <xref:System.Windows.Forms.TextBox> for entering a URL, and a <xref:System.Windows.Forms.Button> for displaying that URL inside of the user's default Web browser.</span></span> <span data-ttu-id="174bb-255">この例では、<xref:System.Windows.Forms.FlowLayoutPanel> を使用して、含まれるコントロールをもう一方のコントロールの後に配置します。</span><span class="sxs-lookup"><span data-stu-id="174bb-255">The example uses a <xref:System.Windows.Forms.FlowLayoutPanel> to lay out the contained controls one after the other.</span></span> <span data-ttu-id="174bb-256">また、フォームの内容に合わせて拡大および縮小するように <xref:System.Windows.Forms.Control.AutoSize%2A> と <xref:System.Windows.Forms.AutoSizeMode> を設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-256">It also sets the <xref:System.Windows.Forms.Control.AutoSize%2A> and <xref:System.Windows.Forms.AutoSizeMode> to grow and shrink to fit the contents of its form.</span></span>  
  
 [!code-csharp[Form.AutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoSize/CS/Form1.cs#1)]
 [!code-vb[Form.AutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="174bb-257">値が有効な <see cref="T:System.Windows.Forms.AutoSizeMode" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="174bb-257">The value is not a valid <see cref="T:System.Windows.Forms.AutoSizeMode" /> value.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.AutoSizeMode" />
        <altmember cref="P:System.Windows.Forms.Form.AutoSize" />
        <altmember cref="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AutoValidate">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.AutoValidate AutoValidate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoValidate AutoValidate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoValidate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoValidate As AutoValidate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AutoValidate AutoValidate { System::Windows::Forms::AutoValidate get(); void set(System::Windows::Forms::AutoValidate value); };" />
      <MemberSignature Language="F#" Value="member this.AutoValidate : System.Windows.Forms.AutoValidate with get, set" Usage="System.Windows.Forms.Form.AutoValidate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoValidate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-258">フォーカスが変更されたときに、このコンテナーのコントロールを自動的に検証するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-258">Gets or sets a value that indicates whether controls in this container will be automatically validated when the focus changes.</span></span></summary>
        <value><span data-ttu-id="174bb-259">フォーカスが変更されたときに、格納されたコントロールを暗黙的に検証するかどうかを示す <see cref="T:System.Windows.Forms.AutoValidate" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="174bb-259">An <see cref="T:System.Windows.Forms.AutoValidate" /> enumerated value that indicates whether contained controls are implicitly validated on focus change.</span></span> <span data-ttu-id="174bb-260">既定値は Inherit です。</span><span class="sxs-lookup"><span data-stu-id="174bb-260">The default is Inherit.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.ContainerControl.AutoValidate" />
      </Docs>
    </Member>
    <Member MemberName="AutoValidateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoValidateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoValidateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.AutoValidateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoValidateChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoValidateChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoValidateChanged : EventHandler " Usage="member this.AutoValidateChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-261"><see cref="P:System.Windows.Forms.Form.AutoValidate" /> プロパティが変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-261">Occurs when the <see cref="P:System.Windows.Forms.Form.AutoValidate" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.Form.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-262">コントロールの背景色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-262">Gets or sets the background color for the control.</span></span></summary>
        <value><span data-ttu-id="174bb-263">コントロールの背景色を表す <see cref="T:System.Drawing.Color" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-263">A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</span></span> <span data-ttu-id="174bb-264">既定値は <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> プロパティの値です。</span><span class="sxs-lookup"><span data-stu-id="174bb-264">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="CancelButton">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IButtonControl CancelButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IButtonControl CancelButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.CancelButton" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelButton As IButtonControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IButtonControl ^ CancelButton { System::Windows::Forms::IButtonControl ^ get(); void set(System::Windows::Forms::IButtonControl ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CancelButton : System.Windows.Forms.IButtonControl with get, set" Usage="System.Windows.Forms.Form.CancelButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IButtonControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-265">ユーザーが Esc キーを押したときにクリックされるボタン コントロールを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-265">Gets or sets the button control that is clicked when the user presses the ESC key.</span></span></summary>
        <value><span data-ttu-id="174bb-266">フォームの [キャンセル] ボタンを表す <see cref="T:System.Windows.Forms.IButtonControl" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-266">An <see cref="T:System.Windows.Forms.IButtonControl" /> that represents the cancel button for the form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-267">フォームの [キャンセル] ボタンは、ユーザーが ESC キーを押したときにクリックされるボタンコントロールです。</span><span class="sxs-lookup"><span data-stu-id="174bb-267">The cancel button for a form is the button control that is clicked whenever the user presses the ESC key.</span></span> <span data-ttu-id="174bb-268">このプロパティに割り当てられたボタンは、現在のフォームにあるか、現在のフォームのコンテナー内にある <xref:System.Windows.Forms.IButtonControl> である必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-268">The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form.</span></span>  
  
 <span data-ttu-id="174bb-269">このプロパティを使用すると、ユーザーがアプリケーションで ESC キーを押したときに実行される既定のアクションを指定できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-269">This property allows you to designate a default action to occur when the user presses the ESC key in your application.</span></span> <span data-ttu-id="174bb-270">このプロパティを使用すると、ユーザーが簡単なフォームをすばやく移動できるようにすることができます。そのためには、マウスで [キャンセル] ボタンを手動でクリックする代わりに、ESC キーを押すだけで、変更をコミットせずにウィンドウを閉じることができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-270">You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ESC key to close a window without committing changes instead of manually clicking the cancel button with their mouse.</span></span>  
  
 <span data-ttu-id="174bb-271">フォーム上の別のコントロールで ESC キーがインターセプトされると <xref:System.Windows.Forms.Form.CancelButton%2A> が機能しないことがあります。</span><span class="sxs-lookup"><span data-stu-id="174bb-271"><xref:System.Windows.Forms.Form.CancelButton%2A> may not work if another control on the form intercepts the ESC key.</span></span> <span data-ttu-id="174bb-272">たとえば、フォームで <xref:System.Windows.Forms.ComboBox> を開いている場合は、フォームを閉じる代わりに ESC キーを押して <xref:System.Windows.Forms.ComboBox> を閉じます。</span><span class="sxs-lookup"><span data-stu-id="174bb-272">For example, if you have a <xref:System.Windows.Forms.ComboBox> open on your form, ESC will close the <xref:System.Windows.Forms.ComboBox> instead of closing the Form.</span></span>  
  
 <span data-ttu-id="174bb-273"><xref:System.Windows.Forms.Form.CancelButton%2A> に割り当てられている <xref:System.Windows.Forms.IButtonControl> オブジェクトはフォームに表示されている必要があります。そうしないと、ESC キーを押しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="174bb-273">The <xref:System.Windows.Forms.IButtonControl> object assigned to <xref:System.Windows.Forms.Form.CancelButton%2A> must be visible on the form, or else pressing the ESC key will have no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-274">次の例では、<xref:System.Windows.Forms.Form> の新しいインスタンスを作成し、<xref:System.Windows.Forms.Form.ShowDialog%2A> メソッドを呼び出して、フォームをダイアログボックスとして表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-274">The following example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="174bb-275">この例では、<xref:System.Windows.Forms.Form.FormBorderStyle%2A>、<xref:System.Windows.Forms.Form.AcceptButton%2A>、<xref:System.Windows.Forms.Form.CancelButton%2A>、<xref:System.Windows.Forms.Form.MinimizeBox%2A>、<xref:System.Windows.Forms.Form.MaximizeBox%2A>、および <xref:System.Windows.Forms.Form.StartPosition%2A> の各プロパティを設定して、フォームの外観と機能をダイアログボックスに変更します。</span><span class="sxs-lookup"><span data-stu-id="174bb-275">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="174bb-276">また、この例では、フォームの <xref:System.Windows.Forms.Control.Controls%2A> コレクションの <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> メソッドを使用して、2つの <xref:System.Windows.Forms.Button> コントロールを追加しています。</span><span class="sxs-lookup"><span data-stu-id="174bb-276">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="174bb-277">この例では、<xref:System.Windows.Forms.Form.HelpButton%2A> プロパティを使用して、ダイアログボックスのキャプションバーに [ヘルプ] ボタンを表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-277">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AcceptButton" />
        <altmember cref="T:System.Windows.Forms.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="CenterToParent">
      <MemberSignature Language="C#" Value="protected void CenterToParent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CenterToParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CenterToParent" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CenterToParent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CenterToParent();" />
      <MemberSignature Language="F#" Value="member this.CenterToParent : unit -&gt; unit" Usage="form.CenterToParent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="174bb-278">フォームを親フォームの境界内の中央に配置します。</span><span class="sxs-lookup"><span data-stu-id="174bb-278">Centers the position of the form within the bounds of the parent form.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-279"><xref:System.Windows.Forms.Form.CenterToParent%2A> メソッドをコードから直接呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="174bb-279">Do not call the <xref:System.Windows.Forms.Form.CenterToParent%2A> method directly from your code.</span></span> <span data-ttu-id="174bb-280">代わりに、<xref:System.Windows.Forms.Form.StartPosition%2A> プロパティを <xref:System.Windows.Forms.FormStartPosition.CenterParent>に設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-280">Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterParent>.</span></span>  
  
 <span data-ttu-id="174bb-281">フォームまたはダイアログが最上位レベルの場合、<xref:System.Windows.Forms.Form.CenterToParent%2A> は画面またはデスクトップに対してフォームを中央揃えます。</span><span class="sxs-lookup"><span data-stu-id="174bb-281">If the form or dialog is top-level, then <xref:System.Windows.Forms.Form.CenterToParent%2A> centers the form with respect to the screen or desktop.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.FormStartPosition.CenterParent" />
        <altmember cref="M:System.Windows.Forms.Form.CenterToScreen" />
      </Docs>
    </Member>
    <Member MemberName="CenterToScreen">
      <MemberSignature Language="C#" Value="protected void CenterToScreen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CenterToScreen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CenterToScreen" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CenterToScreen ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CenterToScreen();" />
      <MemberSignature Language="F#" Value="member this.CenterToScreen : unit -&gt; unit" Usage="form.CenterToScreen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="174bb-282">フォームを現在の画面の中央に配置します。</span><span class="sxs-lookup"><span data-stu-id="174bb-282">Centers the form on the current screen.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-283">これは、コードから直接呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="174bb-283">Do not call this directly from your code.</span></span> <span data-ttu-id="174bb-284">代わりに、<xref:System.Windows.Forms.Form.StartPosition%2A> プロパティを <xref:System.Windows.Forms.FormStartPosition.CenterScreen>に設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-284">Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterScreen>.</span></span>  
  
 <span data-ttu-id="174bb-285"><xref:System.Windows.Forms.Form.CenterToScreen%2A> メソッドでは、次の優先順位一覧を使用して、フォームの中央揃えに使用される画面を決定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-285">The <xref:System.Windows.Forms.Form.CenterToScreen%2A> method uses the following priority list to determine the screen used to center the form:</span></span>  
  
1.  <span data-ttu-id="174bb-286">フォームの <xref:System.Windows.Forms.Form.Owner%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="174bb-286">The <xref:System.Windows.Forms.Form.Owner%2A> property of the form.</span></span>  
  
2.  <span data-ttu-id="174bb-287">フォームの HWND 所有者。</span><span class="sxs-lookup"><span data-stu-id="174bb-287">The HWND owner of the form.</span></span>  
  
3.  <span data-ttu-id="174bb-288">現在マウスカーソルがある画面。</span><span class="sxs-lookup"><span data-stu-id="174bb-288">The screen that currently has the mouse cursor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.FormStartPosition.CenterScreen" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
      </Docs>
    </Member>
    <Member MemberName="ClientSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size ClientSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size ClientSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ClientSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size ClientSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.ClientSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Form.ClientSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-289">フォームのクライアント領域のサイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-289">Gets or sets the size of the client area of the form.</span></span></summary>
        <value><span data-ttu-id="174bb-290">フォームのクライアント領域のサイズを表す <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-290">A <see cref="T:System.Drawing.Size" /> that represents the size of the form's client area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-291">フォームのクライアント領域のサイズは、境界とタイトルバーを除くフォームのサイズです。</span><span class="sxs-lookup"><span data-stu-id="174bb-291">The size of the client area of the form is the size of the form excluding the borders and the title bar.</span></span> <span data-ttu-id="174bb-292">フォームのクライアント領域は、フォーム内のコントロールを配置できる領域です。</span><span class="sxs-lookup"><span data-stu-id="174bb-292">The client area of a form is the area within a form where controls can be placed.</span></span> <span data-ttu-id="174bb-293">このプロパティを使用すると、グラフィックス操作の実行時、またはフォーム上のコントロールのサイズ変更や配置を行うときに、適切なディメンションを取得できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-293">You can use this property to get the proper dimensions when performing graphics operations or when sizing and positioning controls on the form.</span></span> <span data-ttu-id="174bb-294">フォーム全体のサイズを取得するには、<xref:System.Windows.Forms.Form.Size%2A> プロパティを使用するか、個々のプロパティ <xref:System.Windows.Forms.Control.Height%2A> と <xref:System.Windows.Forms.Control.Width%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-294">To get the size of the entire form, use the <xref:System.Windows.Forms.Form.Size%2A> property or use the individual properties <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-295">現在、アプリケーション設定を使用してこのプロパティにバインドすることはできません。</span><span class="sxs-lookup"><span data-stu-id="174bb-295">You cannot currently bind to this property using application settings.</span></span> <span data-ttu-id="174bb-296">アプリケーション設定の詳細については、「[アプリケーション設定の概要](/dotnet/framework/winforms/advanced/application-settings-overview)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-296">For more information on application settings, see [Application Settings Overview](/dotnet/framework/winforms/advanced/application-settings-overview).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-297">次の例では、フォームの <xref:System.Windows.Forms.Control.Resize> イベントのイベントハンドラーを作成します。</span><span class="sxs-lookup"><span data-stu-id="174bb-297">The following example creates an event handler for the <xref:System.Windows.Forms.Control.Resize> event of a form.</span></span> <span data-ttu-id="174bb-298">イベントハンドラーは、フォームの <xref:System.Windows.Forms.Form.ClientSize%2A> プロパティを使用して、フォームのクライアント領域全体に `button1` という名前の <xref:System.Windows.Forms.Button> コントロールを作成します。</span><span class="sxs-lookup"><span data-stu-id="174bb-298">The event handler uses the <xref:System.Windows.Forms.Form.ClientSize%2A> property of the form to make a <xref:System.Windows.Forms.Button> control named `button1` fill the entire client area of the form.</span></span>  
  
 [!code-cpp[Classic Form.ClientSize Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ClientSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ClientSize Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ClientSize Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ClientSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ClientSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.Size" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
        <altmember cref="P:System.Windows.Forms.Control.Width" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="form.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="174bb-299">フォームを閉じます。</span><span class="sxs-lookup"><span data-stu-id="174bb-299">Closes the form.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-300">フォームが閉じられると、オブジェクト内で作成されたすべてのリソースが閉じられ、フォームが破棄されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-300">When a form is closed, all resources created within the object are closed and the form is disposed.</span></span> <span data-ttu-id="174bb-301"><xref:System.Windows.Forms.Form.Closing> イベントを処理し、パラメーターとしてイベントハンドラーに渡される <xref:System.ComponentModel.CancelEventArgs> の <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを設定することによって、実行時にフォームを閉じることを防止できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-301">You can prevent the closing of a form at run time by handling the <xref:System.Windows.Forms.Form.Closing> event and setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed as a parameter to your event handler.</span></span> <span data-ttu-id="174bb-302">閉じるフォームがアプリケーションのスタートアップフォームである場合は、アプリケーションが終了します。</span><span class="sxs-lookup"><span data-stu-id="174bb-302">If the form you are closing is the startup form of your application, your application ends.</span></span>  
  
 <span data-ttu-id="174bb-303">フォームが `Close` で破棄されない場合の2つの条件は、(1) がマルチドキュメントインターフェイス (MDI) アプリケーションの一部であり、フォームが表示されない場合です。および (2) <xref:System.Windows.Forms.Form.ShowDialog%2A>を使用してフォームを表示しました。</span><span class="sxs-lookup"><span data-stu-id="174bb-303">The two conditions when a form is not disposed on `Close` is when (1) it is part of a multiple-document interface (MDI) application, and the form is not visible; and (2) you have displayed the form using <xref:System.Windows.Forms.Form.ShowDialog%2A>.</span></span> <span data-ttu-id="174bb-304">このような場合は、<xref:System.Windows.Forms.Form.Dispose%2A> 手動で呼び出して、すべてのフォームのコントロールにガベージコレクションのマークを付ける必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-304">In these cases, you will need to call <xref:System.Windows.Forms.Form.Dispose%2A> manually to mark all of the form's controls for garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-305">モードレスウィンドウとして表示される <xref:System.Windows.Forms.Form> で <xref:System.Windows.Forms.Form.Close%2A> メソッドを呼び出すと、フォームのリソースが既に解放されているため、<xref:System.Windows.Forms.Control.Show%2A> メソッドを呼び出してフォームを表示することはできません。</span><span class="sxs-lookup"><span data-stu-id="174bb-305">When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released.</span></span> <span data-ttu-id="174bb-306">フォームを非表示にしてから表示できるようにするには、<xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-306">To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="174bb-307">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0 より前では、<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> メソッドを呼び出してアプリケーションを終了しても、<xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> イベントと <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="174bb-307">Prior to the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0, the <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> and <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="174bb-308">これらのイベントのいずれかで検証コードを実行する必要がある場合は、<xref:System.Windows.Forms.Application.Exit%2A> メソッドを呼び出す前に、開いているフォームごとに <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-308">If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="174bb-309">ハンドルが作成されている間にフォームが閉じました。</span><span class="sxs-lookup"><span data-stu-id="174bb-309">The form was closed while a handle was being created.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="174bb-310"><see cref="E:System.Windows.Forms.Form.Activated" /> が <see cref="P:System.Windows.Forms.Form.WindowState" /> に設定されている場合、このメソッドを <see cref="F:System.Windows.Forms.FormWindowState.Maximized" /> イベントから呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="174bb-310">You cannot call this method from the <see cref="E:System.Windows.Forms.Form.Activated" /> event when <see cref="P:System.Windows.Forms.Form.WindowState" /> is set to <see cref="F:System.Windows.Forms.FormWindowState.Maximized" />.</span></span></exception>
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="E:System.Windows.Forms.Form.Closing" />
        <altmember cref="T:System.Windows.Forms.CloseReason" />
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler " Usage="member this.Closed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-311">フォームが閉じたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-311">Occurs when the form is closed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="174bb-312"><xref:System.Windows.Forms.Form.Closed> イベントは、.NET Framework バージョン2.0 では廃止されています。代わりに、<xref:System.Windows.Forms.Form.FormClosed> イベントを使用してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-312">The <xref:System.Windows.Forms.Form.Closed> event is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.FormClosed> event instead.</span></span>  
  
 <span data-ttu-id="174bb-313">このイベントは、フォームがユーザーによって、またはフォームの <xref:System.Windows.Forms.Form.Close%2A> メソッドによって閉じられた後に発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-313">This event occurs after the form has been closed by the user or by the <xref:System.Windows.Forms.Form.Close%2A> method of the form.</span></span> <span data-ttu-id="174bb-314">フォームが終了しないようにするには、<xref:System.Windows.Forms.Form.Closing> イベントを処理し、イベントハンドラーに渡される <xref:System.ComponentModel.CancelEventArgs> の <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-314">To prevent a form from closing, handle the <xref:System.Windows.Forms.Form.Closing> event and set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="174bb-315">このイベントを使用して、フォームによって使用されるリソースの解放、フォームに入力された情報の保存、または親フォームの更新などのタスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-315">You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="174bb-316"><xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> メソッドを呼び出してアプリケーションを終了した場合、<xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> イベントと <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="174bb-316">The <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> and <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="174bb-317">これらのイベントのいずれかで検証コードを実行する必要がある場合は、<xref:System.Windows.Forms.Application.Exit%2A> メソッドを呼び出す前に、開いているフォームごとに <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-317">If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
 <span data-ttu-id="174bb-318">フォームが MDI 親フォームの場合、mdi 親フォームの <xref:System.Windows.Forms.Form.Closing> イベントが発生する前に、すべての MDI 子フォームの <xref:System.Windows.Forms.Form.Closing> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-318">If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised.</span></span> <span data-ttu-id="174bb-319">また、MDI 親フォームの <xref:System.Windows.Forms.Form.Closed> イベントが発生する前に、すべての MDI 子フォームの <xref:System.Windows.Forms.Form.Closed> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-319">In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.</span></span>  
  
 <span data-ttu-id="174bb-320">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-320">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-321">次の例では、<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>、<xref:System.Windows.Forms.Form.Closed>、<xref:System.Windows.Forms.Form.Load>、<xref:System.Windows.Forms.Form.Activated>、および <xref:System.Windows.Forms.Form.Activate%2A> の各メンバーを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-321">The following example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Closed>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="174bb-322">この例を実行するには、`Button1` と呼ばれる <xref:System.Windows.Forms.Button> を含む `Form1` という名前のフォームに次のコードを貼り付け `Label1` と `Label2`と呼ばれる2つの <xref:System.Windows.Forms.Label> コントロールを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-322">To run the example, paste the following code in a form called `Form1` containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Closing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closing As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Closing;" />
      <MemberSignature Language="F#" Value="member this.Closing : System.ComponentModel.CancelEventHandler " Usage="member this.Closing : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-323">フォームが閉じている間に発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-323">Occurs when the form is closing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="174bb-324"><xref:System.Windows.Forms.Form.Closing> イベントは .NET Framework 2.0; 以降では廃止されています。代わりに、<xref:System.Windows.Forms.Form.FormClosing> イベントを使用してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-324">The <xref:System.Windows.Forms.Form.Closing> event is obsolete starting with the .NET Framework 2.0; use the <xref:System.Windows.Forms.Form.FormClosing> event instead.</span></span>  
  
 <span data-ttu-id="174bb-325"><xref:System.Windows.Forms.Form.Closing> イベントは、フォームが閉じられているときに発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-325">The <xref:System.Windows.Forms.Form.Closing> event occurs as the form is being closed.</span></span> <span data-ttu-id="174bb-326">フォームが閉じられると、そのオブジェクト内で作成されたすべてのリソースが解放され、フォームが破棄されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-326">When a form is closed, all resources created within the object are released and the form is disposed.</span></span> <span data-ttu-id="174bb-327">このイベントを取り消すと、フォームは開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="174bb-327">If you cancel this event, the form remains opened.</span></span> <span data-ttu-id="174bb-328">フォームのクロージャを取り消すには、イベントハンドラーに渡された <xref:System.ComponentModel.CancelEventArgs> の <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-328">To cancel the closure of a form, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="174bb-329">フォームがモーダルダイアログボックスとして表示されている場合、**閉じる** ボタン (フォームの右上隅にある X) をクリックすると、フォームが非表示になり、<xref:System.Windows.Forms.Form.DialogResult%2A> プロパティが `DialogResult.Cancel`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-329">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="174bb-330">フォームの <xref:System.Windows.Forms.Form.Closing> イベントのイベントハンドラーで <xref:System.Windows.Forms.Form.DialogResult%2A> プロパティを設定して、ユーザーが **[閉じる]** ボタンをクリックしたときに、<xref:System.Windows.Forms.Form.DialogResult%2A> プロパティに割り当てられた値をオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-330">You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.Closing> event of the form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-331">モードレスウィンドウとして表示される <xref:System.Windows.Forms.Form> で <xref:System.Windows.Forms.Form.Close%2A> メソッドを呼び出すと、フォームのリソースが既に解放されているため、<xref:System.Windows.Forms.Control.Show%2A> メソッドを呼び出してフォームを表示することはできません。</span><span class="sxs-lookup"><span data-stu-id="174bb-331">When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released.</span></span> <span data-ttu-id="174bb-332">フォームを非表示にしてから表示できるようにするには、<xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-332">To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="174bb-333"><xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> メソッドを呼び出してアプリケーションを終了した場合、<xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> イベントと <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="174bb-333">The <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> and <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="174bb-334">これらのイベントのいずれかで検証コードを実行する必要がある場合は、<xref:System.Windows.Forms.Application.Exit%2A> メソッドを呼び出す前に、開いているフォームごとに <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-334">If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
 <span data-ttu-id="174bb-335">フォームが MDI 親フォームの場合、mdi 親フォームの <xref:System.Windows.Forms.Form.Closing> イベントが発生する前に、すべての MDI 子フォームの <xref:System.Windows.Forms.Form.Closing> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-335">If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised.</span></span> <span data-ttu-id="174bb-336">また、MDI 親フォームの <xref:System.Windows.Forms.Form.Closed> イベントが発生する前に、すべての MDI 子フォームの <xref:System.Windows.Forms.Form.Closed> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-336">In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.</span></span> <span data-ttu-id="174bb-337">MDI 子フォームの <xref:System.Windows.Forms.Form.Closing> イベントをキャンセルしても、MDI 親フォームの <xref:System.Windows.Forms.Form.Closing> イベントが発生するのを防ぐことはできません。</span><span class="sxs-lookup"><span data-stu-id="174bb-337">Canceling the <xref:System.Windows.Forms.Form.Closing> event of an MDI child form does not prevent the <xref:System.Windows.Forms.Form.Closing> event of the MDI parent form from being raised.</span></span> <span data-ttu-id="174bb-338">ただし、イベントをキャンセルすると、親フォームにパラメーターとして渡される <xref:System.ComponentModel.CancelEventArgs> の <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティ `true` に設定されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-338">However, canceling the event will set to `true` the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> that is passed as a parameter to the parent form.</span></span> <span data-ttu-id="174bb-339">すべての MDI 親フォームと子フォームを強制的に閉じられるようにするには、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを MDI 親フォームの `false` に設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-339">To force all MDI parent and child forms to close, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `false` in the MDI parent form.</span></span>  
  
 <span data-ttu-id="174bb-340">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-340">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-341">次の例では、<xref:System.Windows.Forms.Form.Closing> を使用して、<xref:System.Windows.Forms.TextBox> 内のテキストが変更されたかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="174bb-341">The following example uses <xref:System.Windows.Forms.Form.Closing> to test if the text in a <xref:System.Windows.Forms.TextBox> has changed.</span></span> <span data-ttu-id="174bb-342">存在する場合は、変更をファイルに保存するかどうかを確認するメッセージがユーザーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-342">If it has, the user is asked whether to save the changes to a file.</span></span>  
  
 [!code-cpp[Form.Closing#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Closing/CPP/form1.cpp#1)]
 [!code-csharp[Form.Closing#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Closing/CS/form1.cs#1)]
 [!code-vb[Form.Closing#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Closing/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ControlBox">
      <MemberSignature Language="C#" Value="public bool ControlBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ControlBox" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlBox { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ControlBox : bool with get, set" Usage="System.Windows.Forms.Form.ControlBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-343">フォームのキャプション バーにコントロール ボックスを表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-343">Gets or sets a value indicating whether a control box is displayed in the caption bar of the form.</span></span></summary>
        <value><span data-ttu-id="174bb-344">フォームの右上隅にコントロールボックスを表示するかどうかを <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="174bb-344"><see langword="true" /> if the form displays a control box in the upper-right corner of the form; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="174bb-345">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="174bb-345">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-346"><xref:System.Windows.Forms.Form.ControlBox%2A> プロパティが `true`に設定されている場合は、キャプションバーの右上隅にコントロールボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-346">If the <xref:System.Windows.Forms.Form.ControlBox%2A> property is set to `true`, the control box is displayed in the upper-right corner of the caption bar.</span></span> <span data-ttu-id="174bb-347">コントロールボックスには、[閉じる] ボタンに加えて、[最小化]、[最大化]、[ヘルプ] の各ボタンを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-347">The control box can include minimize, maximize, and help buttons in addition to a close button.</span></span> <span data-ttu-id="174bb-348">`ControlBox` プロパティが効果を与えるようにするには、フォームの <xref:System.Windows.Forms.Form.FormBorderStyle%2A> プロパティを <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>、<xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>、<xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>、または <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>に設定する必要もあります。</span><span class="sxs-lookup"><span data-stu-id="174bb-348">For the `ControlBox` property to have any effect, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="174bb-349"><xref:System.Windows.Forms.Form.ControlBox%2A> を `false` に設定し、さらに <xref:System.Windows.Forms.Form.Location%2A> プロパティも設定した場合、フォームの <xref:System.Windows.Forms.Form.Size%2A> プロパティは、フォームの非クライアント領域が非表示になっていることを反映して更新されません。</span><span class="sxs-lookup"><span data-stu-id="174bb-349">If you set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false` and also set the <xref:System.Windows.Forms.Form.Location%2A> property, the <xref:System.Windows.Forms.Form.Size%2A> property of the form is not updated to reflect that the non-client area of the form has been hidden.</span></span> <span data-ttu-id="174bb-350">この問題を解決するには、<xref:System.Windows.Forms.Control.HandleCreated> イベントハンドラーの <xref:System.Windows.Forms.Form.Location%2A> プロパティを変更するコードを記述します。</span><span class="sxs-lookup"><span data-stu-id="174bb-350">To fix this problem, put the code that alters the <xref:System.Windows.Forms.Form.Location%2A> property in the <xref:System.Windows.Forms.Control.HandleCreated> event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-351">`false`に設定した場合、<xref:System.Windows.Forms.Form.ControlBox%2A> プロパティは、作成時に最大化されるマルチドキュメントインターフェイス (MDI) 子フォームには影響しません。</span><span class="sxs-lookup"><span data-stu-id="174bb-351">When set to `false`, the <xref:System.Windows.Forms.Form.ControlBox%2A> property has no effect on a Multiple-document interface (MDI) child form that is displayed maximized at time of creation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-352">次の例では、<xref:System.Windows.Forms.Form.ControlBox%2A>、<xref:System.Windows.Forms.Form.FormBorderStyle%2A>、<xref:System.Windows.Forms.Form.MaximizeBox%2A>、<xref:System.Windows.Forms.Form.MinimizeBox%2A>、および <xref:System.Windows.Forms.Form.StartPosition%2A> の各プロパティを使用して、罫線またはキャプションボックスのないフォームを作成します。</span><span class="sxs-lookup"><span data-stu-id="174bb-352">The following example uses the <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to create a form that does not have any border or caption box.</span></span> <span data-ttu-id="174bb-353">この例で作成したフォームは、アプリケーションのスプラッシュスクリーンを作成するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-353">The form created in this example could be used to create a splash screen for an application.</span></span> <span data-ttu-id="174bb-354">この例では、この例のメソッドがフォームクラスで定義され、フォームが初期化されるときに呼び出される必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-354">The example requires that the example's method is defined in a form class and called when the form is being initialized.</span></span>  
  
 [!code-cpp[Classic Form.ControlBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ControlBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ControlBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ControlBox Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ControlBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ControlBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.MinimizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ShowIcon" />
        <altmember cref="P:System.Windows.Forms.Form.FormBorderStyle" />
        <altmember cref="P:System.Windows.Forms.Form.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="form.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="174bb-355"><see cref="T:System.Windows.Forms.Form" /> コントロールの新しいユーザー補助オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="174bb-355">Creates a new accessibility object for the <see cref="T:System.Windows.Forms.Form" /> control.</span></span></summary>
        <returns><span data-ttu-id="174bb-356">コントロールの新しいユーザー補助オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="174bb-356">A new accessible object for the control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlsInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.Control/ControlCollection CreateControlsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CreateControlsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlsInstance () As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::Control::ControlCollection ^ CreateControlsInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateControlsInstance : unit -&gt; System.Windows.Forms.Control.ControlCollection" Usage="form.CreateControlsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="174bb-357">コントロールのコントロール コレクションの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="174bb-357">Creates a new instance of the control collection for the control.</span></span></summary>
        <returns><span data-ttu-id="174bb-358">コントロールに割り当てられた <see cref="T:System.Windows.Forms.Control.ControlCollection" /> の新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="174bb-358">A new instance of <see cref="T:System.Windows.Forms.Control.ControlCollection" /> assigned to the control.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControlsInstance" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="form.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="174bb-359">フォームのハンドルを作成します。</span><span class="sxs-lookup"><span data-stu-id="174bb-359">Creates the handle for the form.</span></span> <span data-ttu-id="174bb-360">派生クラスでこの機能をオーバーライドする場合は、基本の実装を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-360">If a derived class overrides this function, it must call the base implementation.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="174bb-361">この <see cref="T:System.Windows.Forms.Form" /> のハンドルが既に作成されています。</span><span class="sxs-lookup"><span data-stu-id="174bb-361">A handle for this <see cref="T:System.Windows.Forms.Form" /> has already been created.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.Form.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-362">コントロール ハンドルが作成されるときに必要な作成パラメーターを取得します。</span><span class="sxs-lookup"><span data-stu-id="174bb-362">Gets the required creation parameters when the control handle is created.</span></span></summary>
        <value><span data-ttu-id="174bb-363">コントロールを識別するハンドルを作成するときに必要な作成パラメーターを格納している <see cref="T:System.Windows.Forms.CreateParams" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-363">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.ContainerControl.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Deactivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deactivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivate;" />
      <MemberSignature Language="F#" Value="member this.Deactivate : EventHandler " Usage="member this.Deactivate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-364">フォームがフォーカスを失い、アクティブでなくなると発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-364">Occurs when the form loses focus and is no longer the active form.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-365">このイベントを使用すると、非アクティブ化されたフォームのデータを使用して、アプリケーション内の別のウィンドウを更新するなどのタスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-365">You can use this event to perform tasks such as updating another window in your application with data from the deactivated form.</span></span>  
  
 <span data-ttu-id="174bb-366">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-366">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-367">このメンバーの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-367">The following example demonstrates the use of this member.</span></span> <span data-ttu-id="174bb-368">この例では、イベントハンドラーは、<xref:System.Windows.Forms.Form.Deactivate> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="174bb-368">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.Deactivate> event.</span></span> <span data-ttu-id="174bb-369">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="174bb-369">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="174bb-370">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-370">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="174bb-371">コード例を実行するには、`Form1`という <xref:System.Windows.Forms.Form> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-371">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="174bb-372">次に、イベントハンドラーが <xref:System.Windows.Forms.Form.Deactivate> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="174bb-372">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.Deactivate> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#393](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#393)]
 [!code-vb[System.Windows.Forms.EventExamples#393](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#393)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="M:System.Windows.Forms.Form.Activate" />
        <altmember cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultImeMode">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode DefaultImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode DefaultImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DefaultImeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode DefaultImeMode { System::Windows::Forms::ImeMode get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultImeMode : System.Windows.Forms.ImeMode" Usage="System.Windows.Forms.Form.DefaultImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-373">コントロールがサポートしている既定の IME (Input Method Editor) モードを取得します。</span><span class="sxs-lookup"><span data-stu-id="174bb-373">Gets the default Input Method Editor (IME) mode supported by the control.</span></span></summary>
        <value><span data-ttu-id="174bb-374"><see cref="T:System.Windows.Forms.ImeMode" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="174bb-374">One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-375">Input Method Editor (IME) は、標準のキーボードを使用して、ユーザーが日本語の漢字などの複雑な文字や記号を入力できるようにするプログラムです。</span><span class="sxs-lookup"><span data-stu-id="174bb-375">An input method editor (IME) is a program that allows users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.</span></span>  
  
 <span data-ttu-id="174bb-376"><xref:System.Windows.Forms.Form> クラスに実装されている場合、このプロパティは常に <xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType> 値を返します。</span><span class="sxs-lookup"><span data-stu-id="174bb-376">As implemented in the <xref:System.Windows.Forms.Form> class, this property always returns the <xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="174bb-377">このプロパティの値は、<xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=nameWithType> プロパティに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="174bb-377">The value of this property is assigned to the <xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.Form.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-378">コントロールの既定のサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="174bb-378">Gets the default size of the control.</span></span></summary>
        <value><span data-ttu-id="174bb-379">コントロールの既定の <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-379">The default <see cref="T:System.Drawing.Size" /> of the control.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="DefWndProc">
      <MemberSignature Language="C#" Value="protected override void DefWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DefWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DefWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DefWndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.DefWndProc : Message -&gt; unit" Usage="form.DefWndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="174bb-380">処理する Windows <see cref="T:System.Windows.Forms.Message" /> です。</span><span class="sxs-lookup"><span data-stu-id="174bb-380">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="174bb-381">指定したメッセージを既定のウィンドウ プロシージャに送信します。</span><span class="sxs-lookup"><span data-stu-id="174bb-381">Sends the specified message to the default window procedure.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="DesktopBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle DesktopBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle DesktopBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DesktopBounds" />
      <MemberSignature Language="VB.NET" Value="Public Property DesktopBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle DesktopBounds { System::Drawing::Rectangle get(); void set(System::Drawing::Rectangle value); };" />
      <MemberSignature Language="F#" Value="member this.DesktopBounds : System.Drawing.Rectangle with get, set" Usage="System.Windows.Forms.Form.DesktopBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-382">Windows デスクトップ上のフォームのサイズと位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-382">Gets or sets the size and location of the form on the Windows desktop.</span></span></summary>
        <value><span data-ttu-id="174bb-383">デスクトップ座標を使用して、Windows デスクトップ上のフォームの範囲を表す <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-383">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the form on the Windows desktop using desktop coordinates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-384">デスクトップ座標は、タスクバーを除外する画面の作業領域に基づいています。</span><span class="sxs-lookup"><span data-stu-id="174bb-384">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="174bb-385">デスクトップの座標系はピクセルベースです。</span><span class="sxs-lookup"><span data-stu-id="174bb-385">The coordinate system of the desktop is pixel-based.</span></span> <span data-ttu-id="174bb-386">アプリケーションが複数のモニターシステムで実行されている場合、フォームの座標は、組み合わせたデスクトップの座標になります。</span><span class="sxs-lookup"><span data-stu-id="174bb-386">If your application is running on a multiple monitor system, the coordinates of the form are the coordinates for the combined desktop.</span></span>  
  
 <span data-ttu-id="174bb-387">このプロパティを使用すると、Windows デスクトップ上の他のフォームまたはアプリケーションを基準として、フォームのサイズと位置を変更できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-387">You can use this property to size and position a form relative to other forms or applications on the Windows desktop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-388">次の例では、フォームのサイズと位置を設定します。これにより、デスクトップの左の境界線から50ピクセル、およびデスクトップの上部から50ピクセルが配置されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-388">The following example sets the size and position of a form so that the form is positioned 50 pixels from the left border of the desktop and 50 pixels from the top of the desktop.</span></span> <span data-ttu-id="174bb-389">この例では、フォームクラス内でメソッドが定義されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-389">This example requires that the method is defined within a form class.</span></span>  
  
 [!code-cpp[Classic Form.DesktopBounds Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.DesktopBounds Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/CS/source.cs#1)]
 [!code-vb[Classic Form.DesktopBounds Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.DesktopLocation" />
      </Docs>
    </Member>
    <Member MemberName="DesktopLocation">
      <MemberSignature Language="C#" Value="public System.Drawing.Point DesktopLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point DesktopLocation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DesktopLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property DesktopLocation As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point DesktopLocation { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.DesktopLocation : System.Drawing.Point with get, set" Usage="System.Windows.Forms.Form.DesktopLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-390">Windows デスクトップ上のフォームの位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-390">Gets or sets the location of the form on the Windows desktop.</span></span></summary>
        <value><span data-ttu-id="174bb-391">デスクトップ上のフォームの位置を表す <see cref="T:System.Drawing.Point" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-391">A <see cref="T:System.Drawing.Point" /> that represents the location of the form on the desktop.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-392">デスクトップ座標は、タスクバーを除外する画面の作業領域に基づいています。</span><span class="sxs-lookup"><span data-stu-id="174bb-392">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="174bb-393">デスクトップの座標系はピクセルベースです。</span><span class="sxs-lookup"><span data-stu-id="174bb-393">The coordinate system of the desktop is pixel based.</span></span> <span data-ttu-id="174bb-394">アプリケーションが multimonitor システム上で実行されている場合、フォームの座標は、組み合わせたデスクトップの座標になります。</span><span class="sxs-lookup"><span data-stu-id="174bb-394">If your application is running on a multimonitor system, the coordinates of the form are the coordinates for the combined desktop.</span></span>  
  
 <span data-ttu-id="174bb-395">このプロパティを使用して、Windows デスクトップ上の他のフォームやアプリケーションとの相対位置にフォームを配置できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-395">You can use this property to position your form relative to other forms and applications on the Windows desktop.</span></span>  
  
 <span data-ttu-id="174bb-396"><xref:System.Windows.Forms.Form.Show%2A> メソッドを呼び出す前に <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> メソッドを呼び出すと、フォームは既定の場所に配置されます。これは、オペレーティングシステムによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-396">If you call the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method before calling the <xref:System.Windows.Forms.Form.Show%2A> method, your form will be positioned at its default location, which is determined by the operating system.</span></span> <span data-ttu-id="174bb-397">ウィンドウ位置の詳細については、MSDN ライブラリ (https://msdn.microsoft.com/library) の「ウィンドウの機能」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-397">For more information about window positioning, see the "Window Size and Position" section of the "Window Features" document in the MSDN library at https://msdn.microsoft.com/library.</span></span>  
  
 <span data-ttu-id="174bb-398"><xref:System.Windows.Forms.Form.Show%2A>を呼び出した後に <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> を呼び出すと、指定した場所にフォームが配置されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-398">If you call <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> after calling <xref:System.Windows.Forms.Form.Show%2A>, your form will be positioned at the location you specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-399">次の例では、フォームの位置を設定して、デスクトップの左の境界から100ピクセル、およびデスクトップの上部から100ピクセルを配置します。</span><span class="sxs-lookup"><span data-stu-id="174bb-399">The following example sets the position of a form so that the form is positioned 100 pixels from the left border of the desktop and 100 pixels from the top of the desktop.</span></span> <span data-ttu-id="174bb-400">この例では、フォームクラス内でメソッドが定義されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-400">This example requires that method has been defined within a form class.</span></span>  
  
 [!code-cpp[Classic Form.DesktopLocation Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.DesktopLocation Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/CS/source.cs#1)]
 [!code-vb[Classic Form.DesktopLocation Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
      </Docs>
    </Member>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DialogResult DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogResult As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DialogResult DialogResult { System::Windows::Forms::DialogResult get(); void set(System::Windows::Forms::DialogResult value); };" />
      <MemberSignature Language="F#" Value="member this.DialogResult : System.Windows.Forms.DialogResult with get, set" Usage="System.Windows.Forms.Form.DialogResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-401">フォームのダイアログ結果を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-401">Gets or sets the dialog result for the form.</span></span></summary>
        <value><span data-ttu-id="174bb-402">フォームがダイアログ ボックスとして使用された場合の結果を表す <see cref="T:System.Windows.Forms.DialogResult" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-402">A <see cref="T:System.Windows.Forms.DialogResult" /> that represents the result of the form when used as a dialog box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-403">フォームのダイアログの結果は、モーダルダイアログボックスとして表示されるときにフォームから返される値です。</span><span class="sxs-lookup"><span data-stu-id="174bb-403">The dialog result of a form is the value that is returned from the form when it is displayed as a modal dialog box.</span></span> <span data-ttu-id="174bb-404">フォームがダイアログボックスとして表示されている場合、このプロパティを <xref:System.Windows.Forms.DialogResult> 列挙子の値に設定すると、フォームのダイアログボックスの結果の値が設定され、モーダルダイアログボックスが非表示になり、呼び出し元フォームに制御が戻ります。</span><span class="sxs-lookup"><span data-stu-id="174bb-404">If the form is displayed as a dialog box, setting this property with a value from the <xref:System.Windows.Forms.DialogResult> enumeration sets the value of the dialog box result for the form, hides the modal dialog box, and returns control to the calling form.</span></span> <span data-ttu-id="174bb-405">このプロパティは、通常、フォーム上の <xref:System.Windows.Forms.Button> コントロールの <xref:System.Windows.Forms.Button.DialogResult%2A> プロパティによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-405">This property is typically set by the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> control on the form.</span></span> <span data-ttu-id="174bb-406">ユーザーが <xref:System.Windows.Forms.Button> コントロールをクリックすると、<xref:System.Windows.Forms.Button> の <xref:System.Windows.Forms.Button.DialogResult%2A> プロパティに割り当てられた値が、フォームの <xref:System.Windows.Forms.Form.DialogResult%2A> プロパティに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="174bb-406">When the user clicks the <xref:System.Windows.Forms.Button> control, the value assigned to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of the <xref:System.Windows.Forms.Button> is assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form.</span></span>  
  
 <span data-ttu-id="174bb-407">フォームがモーダルダイアログボックスとして表示されている場合は、**閉じる** ボタン (フォームの右上隅にある X) をクリックすると、フォームが非表示になり、<xref:System.Windows.Forms.Form.DialogResult%2A> プロパティが `DialogResult.Cancel`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-407">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X in the top-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="174bb-408"><xref:System.Windows.Forms.Form.Close%2A> メソッドは、ユーザーがダイアログボックスの **[閉じる]** ボタンをクリックしたとき、または <xref:System.Windows.Forms.Form.DialogResult%2A> プロパティの値を設定したときに、自動的に呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="174bb-408">The <xref:System.Windows.Forms.Form.Close%2A> method is not automatically called when the user clicks the **Close** button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property.</span></span> <span data-ttu-id="174bb-409">代わりに、フォームは非表示になり、ダイアログボックスの新しいインスタンスを作成せずに再び表示できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-409">Instead, the form is hidden and can be shown again without creating a new instance of the dialog box.</span></span> <span data-ttu-id="174bb-410">この動作のため、アプリケーションでフォームが不要になった場合は、フォームの <xref:System.Windows.Forms.Control.Dispose%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-410">Because of this behavior, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.</span></span>  
  
 <span data-ttu-id="174bb-411">このプロパティを使用すると、ダイアログボックスで実行された操作を適切に処理するために、ダイアログボックスの終了方法を決定できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-411">You can use this property to determine how a dialog box is closed in order to properly process the actions performed in the dialog box.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-412">フォームの <xref:System.Windows.Forms.Form.Closing> イベントのイベントハンドラーで <xref:System.Windows.Forms.Form.DialogResult%2A> プロパティを設定して、ユーザーが **[閉じる]** ボタンをクリックしたときに、<xref:System.Windows.Forms.Form.DialogResult%2A> プロパティに割り当てられた値をオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-412">You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.Closing> event of the form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-413"><xref:System.Windows.Forms.Form> がモードレスウィンドウとして表示されている場合、フォームが閉じられるとフォームのリソースが自動的に解放されるため、<xref:System.Windows.Forms.Form.DialogResult%2A> プロパティによって返される値がフォームに割り当てられた値を返さないことがあります。</span><span class="sxs-lookup"><span data-stu-id="174bb-413">If a <xref:System.Windows.Forms.Form> is displayed as a modeless window, the value returned by the <xref:System.Windows.Forms.Form.DialogResult%2A> property might not return a value assigned to the form because the form's resources are automatically released when the form is closed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-414">次の例では、フォームをダイアログボックスとして表示し、フォームの <xref:System.Windows.Forms.Form.DialogResult%2A> プロパティを参照して、フォームの [OK] または [キャンセル] ボタンがクリックされたかどうかを示すメッセージボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-414">The following example displays a form as a dialog box and displays a message box indicating whether the OK or Cancel button of the form was clicked by referencing the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form.</span></span>  
  
 [!code-cpp[Classic Form.DialogResult Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DialogResult Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.DialogResult Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DialogResult Example/CS/source.cs#1)]
 [!code-vb[Classic Form.DialogResult Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DialogResult Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="174bb-415">指定された値が有効値の範囲内にありません。</span><span class="sxs-lookup"><span data-stu-id="174bb-415">The value specified is outside the range of valid values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DialogResult" />
        <altmember cref="P:System.Windows.Forms.Button.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="form.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="174bb-416">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-416"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="174bb-417"><see cref="T:System.Windows.Forms.Form" />で使用されていたリソース (メモリを除く) を解放します。</span><span class="sxs-lookup"><span data-stu-id="174bb-417">Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.Form" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-418">このメソッドは、パブリックな `Dispose` メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-418">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="174bb-419">`Dispose` は、`disposing` パラメーターを `true`に設定して、protected `Dispose(Boolean)` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="174bb-419">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="174bb-420"><xref:System.Object.Finalize%2A> は `disposing` を `false`に設定して `Dispose` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="174bb-420"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="174bb-421">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.Windows.Forms.Form> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="174bb-421">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Form> references.</span></span> <span data-ttu-id="174bb-422">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="174bb-422">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 <span data-ttu-id="174bb-423">フォームが <xref:System.Windows.Forms.Form.Show%2A> メソッドを使用して表示されている場合、<xref:System.Windows.Forms.Form.Dispose%2A> は自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-423"><xref:System.Windows.Forms.Form.Dispose%2A> will be called automatically if the form is shown using the <xref:System.Windows.Forms.Form.Show%2A> method.</span></span> <span data-ttu-id="174bb-424"><xref:System.Windows.Forms.Form.ShowDialog%2A> などの別のメソッドが使用されている場合、またはフォームがまったく表示されない場合は、アプリケーション内で <xref:System.Windows.Forms.Form.Dispose%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-424">If another method such as <xref:System.Windows.Forms.Form.ShowDialog%2A> is used, or the form is never shown at all, you must call <xref:System.Windows.Forms.Form.Dispose%2A> yourself within your application.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-425">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-425">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="174bb-426"><see langword="Dispose(Boolean)" /> をオーバーライドする場合は、以前に <see langword="Dispose" /> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-426">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="174bb-427"><see langword="Dispose(Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](/dotnet/standard/garbage-collection/implementing-dispose)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-427">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
<span data-ttu-id="174bb-428"><see langword="Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](/dotnet/standard/garbage-collection/unmanaged)」と「 [Finalize メソッドのオーバーライド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-428">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChanged As DpiChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DpiChangedEventHandler ^ DpiChanged;" />
      <MemberSignature Language="F#" Value="member this.DpiChanged : System.Windows.Forms.DpiChangedEventHandler " Usage="member this.DpiChanged : System.Windows.Forms.DpiChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-429">フォームが現在表示されているディスプレイ デバイスの DPI 設定が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-429">Occurs when the DPI setting changes on the display device where the form is currently displayed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormBorderStyle FormBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FormBorderStyle FormBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.FormBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FormBorderStyle As FormBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormBorderStyle FormBorderStyle { System::Windows::Forms::FormBorderStyle get(); void set(System::Windows::Forms::FormBorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.FormBorderStyle : System.Windows.Forms.FormBorderStyle with get, set" Usage="System.Windows.Forms.Form.FormBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-430">フォームの境界線スタイルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-430">Gets or sets the border style of the form.</span></span></summary>
        <value><span data-ttu-id="174bb-431">表示するフォームの境界線スタイルを表す <see cref="T:System.Windows.Forms.FormBorderStyle" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-431">A <see cref="T:System.Windows.Forms.FormBorderStyle" /> that represents the style of border to display for the form.</span></span> <span data-ttu-id="174bb-432">既定では、 <see langword="FormBorderStyle.Sizable" />です。</span><span class="sxs-lookup"><span data-stu-id="174bb-432">The default is <see langword="FormBorderStyle.Sizable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-433">フォームの境界線スタイルによって、フォームの外縁がどのように表示されるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="174bb-433">The border style of the form determines how the outer edge of the form appears.</span></span> <span data-ttu-id="174bb-434">フォームの境界線の表示を変更するだけでなく、特定の罫線のスタイルによってフォームのサイズが変更されないようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-434">In addition to changing the border display for a form, certain border styles prevent the form from being sized.</span></span> <span data-ttu-id="174bb-435">たとえば、`FormBorderStyle.FixedDialog` の境界線スタイルによって、フォームの境界線がダイアログボックスの境界線に変わり、フォームのサイズが変更されないようにします。</span><span class="sxs-lookup"><span data-stu-id="174bb-435">For example, the `FormBorderStyle.FixedDialog` border style changes the border of the form to that of a dialog box and prevents the form from being resized.</span></span> <span data-ttu-id="174bb-436">罫線のスタイルは、フォームのキャプションバーセクションのサイズや可用性にも影響する場合があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-436">The border style can also affect the size or availability of the caption bar section of a form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-437"><xref:System.Windows.Forms.FormBorderStyle.Sizable> スタイルを使用すると、`false` に <xref:System.Windows.Forms.Form.ControlBox%2A> を設定し、長さ0の文字列を <xref:System.Windows.Forms.Form.Text%2A>に割り当てた場合でも、ウィンドウのサイズを特定の最小値より小さくすることはできません。</span><span class="sxs-lookup"><span data-stu-id="174bb-437">With the <xref:System.Windows.Forms.FormBorderStyle.Sizable> style, it is impossible to resize the window below a certain minimum value, even if you have set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false` and assigned a zero-length string to <xref:System.Windows.Forms.Form.Text%2A>.</span></span> <span data-ttu-id="174bb-438">代わりに、<xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow> スタイルを使用して、この問題を回避することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-438">Consider working around this by using the <xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow> style instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-439">次の例では、<xref:System.Windows.Forms.Form> の新しいインスタンスを作成し、<xref:System.Windows.Forms.Form.ShowDialog%2A> メソッドを呼び出して、フォームをダイアログボックスとして表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-439">The following example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="174bb-440">この例では、<xref:System.Windows.Forms.Form.FormBorderStyle%2A>、<xref:System.Windows.Forms.Form.AcceptButton%2A>、<xref:System.Windows.Forms.Form.CancelButton%2A>、<xref:System.Windows.Forms.Form.MinimizeBox%2A>、<xref:System.Windows.Forms.Form.MaximizeBox%2A>、および <xref:System.Windows.Forms.Form.StartPosition%2A> の各プロパティを設定して、フォームの外観と機能をダイアログボックスに変更します。</span><span class="sxs-lookup"><span data-stu-id="174bb-440">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="174bb-441">また、この例では、フォームの <xref:System.Windows.Forms.Control.Controls%2A> コレクションの <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> メソッドを使用して、2つの <xref:System.Windows.Forms.Button> コントロールを追加しています。</span><span class="sxs-lookup"><span data-stu-id="174bb-441">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="174bb-442">この例では、<xref:System.Windows.Forms.Form.HelpButton%2A> プロパティを使用して、ダイアログボックスのキャプションバーに [ヘルプ] ボタンを表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-442">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="174bb-443">指定された値が有効値の範囲内にありません。</span><span class="sxs-lookup"><span data-stu-id="174bb-443">The value specified is outside the range of valid values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.FormBorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="FormClosed">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.FormClosedEventHandler FormClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.FormClosedEventHandler FormClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.FormClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FormClosed As FormClosedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::FormClosedEventHandler ^ FormClosed;" />
      <MemberSignature Language="F#" Value="member this.FormClosed : System.Windows.Forms.FormClosedEventHandler " Usage="member this.FormClosed : System.Windows.Forms.FormClosedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormClosedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-444">フォームが閉じた後に発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-444">Occurs after the form is closed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-445"><xref:System.Windows.Forms.Form.FormClosed> イベントは、フォームがユーザーによって閉じられた後、または <xref:System.Windows.Forms.Form.Close%2A> メソッドまたは <xref:System.Windows.Forms.Application> クラスの <xref:System.Windows.Forms.Application.Exit%2A> メソッドによって終了した後に発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-445">The <xref:System.Windows.Forms.Form.FormClosed> event occurs after the form has been closed by the user or by the <xref:System.Windows.Forms.Form.Close%2A> method or the <xref:System.Windows.Forms.Application.Exit%2A> method of the <xref:System.Windows.Forms.Application> class.</span></span> <span data-ttu-id="174bb-446">フォームが終了しないようにするには、<xref:System.Windows.Forms.Form.FormClosing> イベントを処理し、イベントハンドラーに渡される <xref:System.ComponentModel.CancelEventArgs> の <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-446">To prevent a form from closing, handle the <xref:System.Windows.Forms.Form.FormClosing> event and set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="174bb-447">このイベントを使用して、フォームによって使用されるリソースの解放、フォームに入力された情報の保存、または親フォームの更新などのタスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-447">You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.</span></span>  
  
 <span data-ttu-id="174bb-448">フォームがマルチドキュメントインターフェイス (MDI) 親フォームの場合、mdi 親フォームの <xref:System.Windows.Forms.Form.FormClosing> イベントが発生する前に、すべての MDI 子フォームの <xref:System.Windows.Forms.Form.FormClosing> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-448">If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised.</span></span> <span data-ttu-id="174bb-449">同様に、mdi 親フォームの <xref:System.Windows.Forms.Form.FormClosed> イベントが発生する前に、すべての MDI 子フォームの <xref:System.Windows.Forms.Form.FormClosed> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-449">Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised.</span></span>  
  
 <span data-ttu-id="174bb-450">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-450">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-451">このメンバーの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-451">The following example demonstrates the use of this member.</span></span> <span data-ttu-id="174bb-452">この例では、イベントハンドラーは、<xref:System.Windows.Forms.Form.FormClosed> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="174bb-452">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.FormClosed> event.</span></span> <span data-ttu-id="174bb-453">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="174bb-453">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="174bb-454">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-454">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="174bb-455">コード例を実行するには、`Form1`という <xref:System.Windows.Forms.Form> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-455">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="174bb-456">次に、イベントハンドラーが <xref:System.Windows.Forms.Form.FormClosed> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="174bb-456">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.FormClosed> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#395](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#395)]
 [!code-vb[System.Windows.Forms.EventExamples#395](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#395)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
        <altmember cref="M:System.Windows.Forms.Application.Exit" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosing" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
        <altmember cref="T:System.Windows.Forms.CloseReason" />
      </Docs>
    </Member>
    <Member MemberName="FormClosing">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.FormClosingEventHandler FormClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.FormClosingEventHandler FormClosing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.FormClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FormClosing As FormClosingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::FormClosingEventHandler ^ FormClosing;" />
      <MemberSignature Language="F#" Value="member this.FormClosing : System.Windows.Forms.FormClosingEventHandler " Usage="member this.FormClosing : System.Windows.Forms.FormClosingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormClosingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-457">フォームが閉じる前に発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-457">Occurs before the form is closed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-458"><xref:System.Windows.Forms.Form.FormClosing> イベントは、フォームが閉じられているときに発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-458">The <xref:System.Windows.Forms.Form.FormClosing> event occurs as the form is being closed.</span></span> <span data-ttu-id="174bb-459">フォームが閉じられると、フォームに関連付けられているすべてのリソースが解放され、破棄されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-459">When a form is closed, it is disposed, releasing all resources associated with the form.</span></span> <span data-ttu-id="174bb-460">このイベントを取り消すと、フォームは開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="174bb-460">If you cancel this event, the form remains opened.</span></span> <span data-ttu-id="174bb-461">フォームのクロージャを取り消すには、イベントハンドラーに渡された <xref:System.Windows.Forms.FormClosingEventArgs> の <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-461">To cancel the closure of a form, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.FormClosingEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="174bb-462">フォームがモーダルダイアログボックスとして表示されている場合、**閉じる** ボタン (フォームの右上隅にある X) をクリックすると、フォームが非表示になり、<xref:System.Windows.Forms.Form.DialogResult%2A> プロパティが `DialogResult.Cancel`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-462">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="174bb-463">フォームの <xref:System.Windows.Forms.Form.FormClosing> イベントのイベントハンドラーで <xref:System.Windows.Forms.Form.DialogResult%2A> プロパティを設定して、ユーザーが **[閉じる]** ボタンをクリックしたときに、<xref:System.Windows.Forms.Form.DialogResult%2A> プロパティに割り当てられた値をオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-463">You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.FormClosing> event of the form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-464">モードレスウィンドウとして表示される <xref:System.Windows.Forms.Form> で <xref:System.Windows.Forms.Form.Close%2A> メソッドを呼び出すと、フォームのリソースが既に解放されているため、<xref:System.Windows.Forms.Control.Show%2A> メソッドを呼び出してフォームを表示することはできません。</span><span class="sxs-lookup"><span data-stu-id="174bb-464">When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released.</span></span> <span data-ttu-id="174bb-465">フォームを非表示にしてから表示できるようにするには、<xref:System.Windows.Forms.Control.Hide%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-465">To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A> method.</span></span>  
  
 <span data-ttu-id="174bb-466">フォームがマルチドキュメントインターフェイス (MDI) 親フォームの場合、mdi 親フォームの <xref:System.Windows.Forms.Form.FormClosing> イベントが発生する前に、すべての MDI 子フォームの <xref:System.Windows.Forms.Form.FormClosing> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-466">If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised.</span></span> <span data-ttu-id="174bb-467">同様に、mdi 親フォームの <xref:System.Windows.Forms.Form.FormClosed> イベントが発生する前に、すべての MDI 子フォームの <xref:System.Windows.Forms.Form.FormClosed> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-467">Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised.</span></span> <span data-ttu-id="174bb-468">MDI 子フォームの <xref:System.Windows.Forms.Form.FormClosing> イベントをキャンセルしても、MDI 親フォームの <xref:System.Windows.Forms.Form.FormClosing> イベントが発生するのを防ぐことはできません。</span><span class="sxs-lookup"><span data-stu-id="174bb-468">Canceling the <xref:System.Windows.Forms.Form.FormClosing> event of an MDI child form does not prevent the <xref:System.Windows.Forms.Form.FormClosing> event of the MDI parent form from being raised.</span></span> <span data-ttu-id="174bb-469">ただし、イベントを取り消すと、親フォームにパラメーターとして渡された <xref:System.Windows.Forms.FormClosingEventArgs> クラスの <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティ `true` に設定されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-469">However, canceling the event will set to `true` the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.FormClosingEventArgs> class that is passed as a parameter to the parent form.</span></span> <span data-ttu-id="174bb-470">すべての MDI 親フォームと子フォームを強制的に閉じられるようにするには、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを MDI 親フォームの `false` に設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-470">To force all MDI parent and child forms to close, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `false` in the MDI parent form.</span></span>  
  
 <span data-ttu-id="174bb-471">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-471">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-472">このメンバーの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-472">The following example demonstrates the use of this member.</span></span> <span data-ttu-id="174bb-473">この例では、イベントハンドラーは、<xref:System.Windows.Forms.Form.FormClosing> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="174bb-473">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.FormClosing> event.</span></span> <span data-ttu-id="174bb-474">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="174bb-474">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="174bb-475">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-475">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="174bb-476">コード例を実行するには、`Form1`という <xref:System.Windows.Forms.Form> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-476">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="174bb-477">次に、イベントハンドラーが <xref:System.Windows.Forms.Form.FormClosing> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="174bb-477">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.FormClosing> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#394](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#394)]
 [!code-vb[System.Windows.Forms.EventExamples#394](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#394)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosed" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
        <altmember cref="T:System.Windows.Forms.CloseReason" />
      </Docs>
    </Member>
    <Member MemberName="GetAutoScaleSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.SizeF GetAutoScaleSize (System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF GetAutoScaleSize(class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAutoScaleSize (font As Font) As SizeF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::SizeF GetAutoScaleSize(System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="static member GetAutoScaleSize : System.Drawing.Font -&gt; System.Drawing.SizeF" Usage="System.Windows.Forms.Form.GetAutoScaleSize font" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.Obsolete("This method has been deprecated. Use the AutoScaleDimensions property instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="font"><span data-ttu-id="174bb-478">フォームを自動スケールした場合の基本サイズを決めるフォントを表す <see cref="T:System.Drawing.Font" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-478">A <see cref="T:System.Drawing.Font" /> representing the font to determine the autoscaled base size of the form.</span></span></param>
        <summary><span data-ttu-id="174bb-479">指定したフォントに基づいてフォームを自動スケールした場合のサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="174bb-479">Gets the size when autoscaling the form based on a specified font.</span></span></summary>
        <returns><span data-ttu-id="174bb-480">フォームを自動スケールした後のサイズを表す <see cref="T:System.Drawing.SizeF" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-480">A <see cref="T:System.Drawing.SizeF" /> representing the autoscaled size of the form.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="174bb-481"><xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> メソッドは、.NET Framework 2.0 以降では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="174bb-481">The <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method is obsolete starting with the .NET Framework 2.0.</span></span> <span data-ttu-id="174bb-482">このメンバーは旧バージョンとの互換性のために残されています。</span><span class="sxs-lookup"><span data-stu-id="174bb-482">This member has been retained for backward compatibility.</span></span> <span data-ttu-id="174bb-483">自動スケーリングの詳細については、「 [Windows フォームでの自動スケーリング](/dotnet/framework/winforms/automatic-scaling-in-windows-forms)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-483">For more information about automatic scaling, see [Automatic Scaling in Windows Forms](/dotnet/framework/winforms/automatic-scaling-in-windows-forms).</span></span>  
  
 <span data-ttu-id="174bb-484">フォームにフォントを適用する前に、このメソッドを使用して、特定のフォントに合わせてフォームが自動スケールされるサイズを決定できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-484">You can use this method to determine the size a form would autoscale to for a specific font before applying the font to the form.</span></span> <span data-ttu-id="174bb-485">フォームに現在割り当てられているフォントに基づいてフォームが自動的に拡大縮小されるサイズを決定する場合は、<xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-485">If you want to determine the size a form is autoscaled to based on the font currently assigned to the form, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledBounds">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Rectangle GetScaledBounds(valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetScaledBounds (bounds As Rectangle, factor As SizeF, specified As BoundsSpecified) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Rectangle GetScaledBounds(System::Drawing::Rectangle bounds, System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.GetScaledBounds : System.Drawing.Rectangle * System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; System.Drawing.Rectangle" Usage="form.GetScaledBounds (bounds, factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="factor" Type="System.Drawing.SizeF" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" Index="2" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="bounds"><span data-ttu-id="174bb-486">ディスプレイの範囲の取得条件となる領域を指定する <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-486">A <see cref="T:System.Drawing.Rectangle" /> that specifies the area for which to retrieve the display bounds.</span></span></param>
        <param name="factor"><span data-ttu-id="174bb-487">コントロールの境界の高さおよび幅。</span><span class="sxs-lookup"><span data-stu-id="174bb-487">The height and width of the control's bounds.</span></span></param>
        <param name="specified"><span data-ttu-id="174bb-488">コントロールのサイズと位置を定義するときに使用するコントロールの境界を指定する <see cref="T:System.Windows.Forms.BoundsSpecified" /> の値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="174bb-488">One of the values of <see cref="T:System.Windows.Forms.BoundsSpecified" /> that specifies the bounds of the control to use when defining its size and position.</span></span></param>
        <summary><span data-ttu-id="174bb-489">コントロールのスケールが設定される境界を取得します。</span><span class="sxs-lookup"><span data-stu-id="174bb-489">Retrieves the bounds within which the control is scaled.</span></span></summary>
        <returns><span data-ttu-id="174bb-490">コントロールのスケールが設定される境界を表す <see cref="T:System.Drawing.Rectangle" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-490">A <see cref="T:System.Drawing.Rectangle" /> representing the bounds within which the control is scaled.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="HelpButton">
      <MemberSignature Language="C#" Value="public bool HelpButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HelpButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.HelpButton" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HelpButton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HelpButton : bool with get, set" Usage="System.Windows.Forms.Form.HelpButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-491">フォームのキャプション ボックスに [ヘルプ] ボタンを表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-491">Gets or sets a value indicating whether a Help button should be displayed in the caption box of the form.</span></span></summary>
        <value><span data-ttu-id="174bb-492">フォームのキャプション バーにヘルプ ボタンを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-492"><see langword="true" /> to display a Help button in the form's caption bar; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="174bb-493">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="174bb-493">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-494">このプロパティが `true`に設定されている場合は、**[閉じる]** ボタンの左側にあるキャプションバーに疑問符の付いた小さいボタンが表示されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-494">When this property is set to `true`, a small button with a question mark appears in the caption bar to the left of the **Close** button.</span></span> <span data-ttu-id="174bb-495">このボタンを使用すると、アプリケーションのヘルプを表示できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-495">You can use this button to display help for your application.</span></span> <span data-ttu-id="174bb-496">フォームの [ヘルプ] ボタンがクリックされたときに、ユーザーにヘルプ情報を表示するために、<xref:System.Windows.Forms.Control.HelpRequested> イベントのイベントハンドラーを作成できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-496">You can create an event handler for the <xref:System.Windows.Forms.Control.HelpRequested> event to display Help information to the user when the Help button of the form is clicked.</span></span>  

<span data-ttu-id="174bb-497">[ヘルプ] ボタンを表示するには、フォームの <xref:System.Windows.Forms.Form.ControlBox> プロパティの値を、既定値 `true`にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-497">To display a Help button, the value of the form's <xref:System.Windows.Forms.Form.ControlBox> property must be `true`, its default value.</span></span> <span data-ttu-id="174bb-498"><xref:System.Windows.Forms.Form.ControlBox> プロパティは、キャプションバーの右上隅に、最大化ボタン、最小化ボタン、ヘルプボタン、および閉じるボタンなどのコントロールが含まれているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="174bb-498">The <xref:System.Windows.Forms.Form.ControlBox> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</span></span> <span data-ttu-id="174bb-499">さらに、フォームの <xref:System.Windows.Forms.Form.FormBorderStyle%2A> プロパティを <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>、<xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>、<xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>、または <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>に設定する必要もあります。</span><span class="sxs-lookup"><span data-stu-id="174bb-499">In addition, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  


> [!IMPORTANT]
>  <span data-ttu-id="174bb-500">**[最大化]** ボタンまたは **[最小化]** ボタンが表示されている場合、<xref:System.Windows.Forms.Form.HelpButton%2A> プロパティの値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-500">The value of the <xref:System.Windows.Forms.Form.HelpButton%2A> property is ignored if the **Maximize** or **Minimize** buttons are shown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-501">次の例では、<xref:System.Windows.Forms.Form> の新しいインスタンスを作成し、<xref:System.Windows.Forms.Form.ShowDialog%2A> メソッドを呼び出して、フォームをダイアログボックスとして表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-501">The following example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="174bb-502">この例では、<xref:System.Windows.Forms.Form.FormBorderStyle%2A>、<xref:System.Windows.Forms.Form.AcceptButton%2A>、<xref:System.Windows.Forms.Form.CancelButton%2A>、<xref:System.Windows.Forms.Form.MinimizeBox%2A>、<xref:System.Windows.Forms.Form.MaximizeBox%2A>、および <xref:System.Windows.Forms.Form.StartPosition%2A> の各プロパティを設定して、フォームの外観と機能をダイアログボックスに変更します。</span><span class="sxs-lookup"><span data-stu-id="174bb-502">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="174bb-503">また、この例では、フォームの <xref:System.Windows.Forms.Control.Controls%2A> コレクションの <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> メソッドを使用して、2つの <xref:System.Windows.Forms.Button> コントロールを追加しています。</span><span class="sxs-lookup"><span data-stu-id="174bb-503">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="174bb-504">この例では、<xref:System.Windows.Forms.Form.HelpButton%2A> プロパティを使用して、ダイアログボックスのキャプションバーに [ヘルプ] ボタンを表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-504">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a Help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MinimizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.MaximizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
        <altmember cref="E:System.Windows.Forms.Form.HelpButtonClicked" />
      </Docs>
    </Member>
    <Member MemberName="HelpButtonClicked">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler HelpButtonClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler HelpButtonClicked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.HelpButtonClicked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HelpButtonClicked As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ HelpButtonClicked;" />
      <MemberSignature Language="F#" Value="member this.HelpButtonClicked : System.ComponentModel.CancelEventHandler " Usage="member this.HelpButtonClicked : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-505">**[ヘルプ]** ボタンがクリックされると発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-505">Occurs when the **Help** button is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-506"><xref:System.Windows.Forms.Form.HelpButtonClicked> イベントは、フォームのキャプションバーの **[ヘルプ]** ボタンがクリックされたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-506">The <xref:System.Windows.Forms.Form.HelpButtonClicked> event occurs when the **Help** button in the form's caption bar is clicked.</span></span> <span data-ttu-id="174bb-507"><xref:System.Windows.Forms.Form.HelpButton%2A> プロパティが `true`に設定されている場合は、**[ヘルプ]** ボタンが表示されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-507">The **Help** button is displayed when the <xref:System.Windows.Forms.Form.HelpButton%2A> property is set to `true`.</span></span> <span data-ttu-id="174bb-508"><xref:System.Windows.Forms.Form.HelpButtonClicked> は取り消すことができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-508"><xref:System.Windows.Forms.Form.HelpButtonClicked> can be canceled.</span></span>  
  
 <span data-ttu-id="174bb-509">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-509">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-510">このメンバーの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-510">The following example demonstrates the use of this member.</span></span> <span data-ttu-id="174bb-511">この例では、イベントハンドラーは、<xref:System.Windows.Forms.Form.HelpButtonClicked> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="174bb-511">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.HelpButtonClicked> event.</span></span> <span data-ttu-id="174bb-512">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="174bb-512">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="174bb-513">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-513">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="174bb-514">コード例を実行するには、`Form1`という <xref:System.Windows.Forms.Form> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-514">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="174bb-515">次に、イベントハンドラーが <xref:System.Windows.Forms.Form.HelpButtonClicked> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="174bb-515">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.HelpButtonClicked> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#388](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#388)]
 [!code-vb[System.Windows.Forms.EventExamples#388](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#388)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.HelpButton" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
        <altmember cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.HelpRequested" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Drawing.Icon Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Icon Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As Icon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Icon ^ Icon { System::Drawing::Icon ^ get(); void set(System::Drawing::Icon ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : System.Drawing.Icon with get, set" Usage="System.Windows.Forms.Form.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Icon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-516">フォームのアイコンを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-516">Gets or sets the icon for the form.</span></span></summary>
        <value><span data-ttu-id="174bb-517">フォームのアイコンを表す <see cref="T:System.Drawing.Icon" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-517">An <see cref="T:System.Drawing.Icon" /> that represents the icon for the form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-518">フォームのアイコンは、タスクバーのフォームを表す画像と、フォームのコントロールボックスに表示されるアイコンを指定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-518">A form's icon designates the picture that represents the form in the taskbar as well as the icon that is displayed for the control box of the form.</span></span>  
  
 <span data-ttu-id="174bb-519"><xref:System.Windows.Forms.Form.FormBorderStyle%2A> が <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>に設定されている場合、このプロパティは無効になります。</span><span class="sxs-lookup"><span data-stu-id="174bb-519">This property will have no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>.</span></span> <span data-ttu-id="174bb-520">その場合、フォームにアイコンは表示されません。</span><span class="sxs-lookup"><span data-stu-id="174bb-520">In that case, the form will not display an icon.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
      </Docs>
    </Member>
    <Member MemberName="InputLanguageChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.InputLanguageChangedEventHandler InputLanguageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.InputLanguageChangedEventHandler InputLanguageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.InputLanguageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InputLanguageChanged As InputLanguageChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::InputLanguageChangedEventHandler ^ InputLanguageChanged;" />
      <MemberSignature Language="F#" Value="member this.InputLanguageChanged : System.Windows.Forms.InputLanguageChangedEventHandler " Usage="member this.InputLanguageChanged : System.Windows.Forms.InputLanguageChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguageChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-521">フォームの入力言語が変更された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-521">Occurs after the input language of the form has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-522">このイベントを使用すると、フォームの入力言語に対して行われた変更に基づいて、フォームの外観とテキストを変更できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-522">You can use this event to make changes to your form's appearance and text based on changes made to the input language of the form.</span></span>  
  
 <span data-ttu-id="174bb-523">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-523">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-524">このメンバーの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-524">The following example demonstrates the use of this member.</span></span> <span data-ttu-id="174bb-525">この例では、イベントハンドラーは、<xref:System.Windows.Forms.Form.InputLanguageChanged> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="174bb-525">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.InputLanguageChanged> event.</span></span> <span data-ttu-id="174bb-526">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="174bb-526">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="174bb-527">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-527">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="174bb-528">コード例を実行するには、`Form1`という <xref:System.Windows.Forms.Form> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-528">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="174bb-529">次に、イベントハンドラーが <xref:System.Windows.Forms.Form.InputLanguageChanged> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="174bb-529">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.InputLanguageChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#400](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#400)]
 [!code-vb[System.Windows.Forms.EventExamples#400](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#400)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanging" />
        <altmember cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InputLanguageChanging">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.InputLanguageChangingEventHandler InputLanguageChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.InputLanguageChangingEventHandler InputLanguageChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.InputLanguageChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InputLanguageChanging As InputLanguageChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::InputLanguageChangingEventHandler ^ InputLanguageChanging;" />
      <MemberSignature Language="F#" Value="member this.InputLanguageChanging : System.Windows.Forms.InputLanguageChangingEventHandler " Usage="member this.InputLanguageChanging : System.Windows.Forms.InputLanguageChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguageChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-530">ユーザーがフォームの入力言語を変更しようとすると発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-530">Occurs when the user attempts to change the input language for the form.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-531">このイベントは、フォームに対して入力言語の変更が行われる前に発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-531">This event occurs before the change of input language is made for the form.</span></span> <span data-ttu-id="174bb-532">言語の変更を取り消すには、イベントハンドラーに渡された <xref:System.Windows.Forms.InputLanguageChangingEventArgs> の <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `false`に設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-532">You can cancel the language change by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.InputLanguageChangingEventArgs> passed to your event handler to `false`.</span></span> <span data-ttu-id="174bb-533">イベントが取り消された場合、入力言語は変更されません。</span><span class="sxs-lookup"><span data-stu-id="174bb-533">If the event is canceled, the input language is not changed.</span></span> <span data-ttu-id="174bb-534">このイベントを使用して、要求された入力言語の変更がアプリケーションに適しているかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-534">You can use this event to determine whether the requested input language change is appropriate for your application.</span></span>  
  
 <span data-ttu-id="174bb-535">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-535">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-536">このメンバーの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-536">The following example demonstrates the use of this member.</span></span> <span data-ttu-id="174bb-537">この例では、イベントハンドラーは、<xref:System.Windows.Forms.Form.InputLanguageChanging> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="174bb-537">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.InputLanguageChanging> event.</span></span> <span data-ttu-id="174bb-538">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="174bb-538">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="174bb-539">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-539">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="174bb-540">コード例を実行するには、`Form1`という <xref:System.Windows.Forms.Form> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-540">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="174bb-541">次に、イベントハンドラーが <xref:System.Windows.Forms.Form.InputLanguageChanging> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="174bb-541">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.InputLanguageChanging> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#401](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#401)]
 [!code-vb[System.Windows.Forms.EventExamples#401](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#401)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanged" />
        <altmember cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="IsMdiChild">
      <MemberSignature Language="C#" Value="public bool IsMdiChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMdiChild" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.IsMdiChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMdiChild As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMdiChild { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMdiChild : bool" Usage="System.Windows.Forms.Form.IsMdiChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-542">フォームがマルチ ドキュメント インターフェイス (MDI) 子フォームかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="174bb-542">Gets a value indicating whether the form is a multiple-document interface (MDI) child form.</span></span></summary>
        <value><span data-ttu-id="174bb-543">フォームが MDI 子フォームである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-543"><see langword="true" /> if the form is an MDI child form; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-544">実行時に、mdi 子フォームは MDI 親フォームのクライアント領域内に表示されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-544">At run time, MDI child forms are displayed inside the client area of an MDI parent form.</span></span> <span data-ttu-id="174bb-545">Mdi 子フォームは、MDI 親フォーム内で最大化、最小化、および移動できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-545">An MDI child form can be maximized, minimized, and moved within the MDI parent form.</span></span> <span data-ttu-id="174bb-546">MDI 子フォームを作成するには、MDI 親フォームとなる <xref:System.Windows.Forms.Form> を子フォームの <xref:System.Windows.Forms.Form.MdiParent%2A> プロパティに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="174bb-546">To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.</span></span> <span data-ttu-id="174bb-547"><xref:System.Windows.Forms.Form.IsMdiContainer%2A> プロパティを使用して、フォームが MDI 親フォームであるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-547">You can use the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to determine whether a form is an MDI parent form.</span></span>  
  
 <span data-ttu-id="174bb-548"><xref:System.Windows.Forms.Form.IsMdiChild%2A> プロパティを使用して、メソッドまたはプロパティによって返されるフォームが、MDI 子フォームであるか、またはダイアログボックスなどのアプリケーションの標準フォームであるかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-548">You can use the <xref:System.Windows.Forms.Form.IsMdiChild%2A> property to determine whether a form returned by a method or property is an MDI child form or a standard form in your application such as a dialog box.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-549">すべての MDI 子フォームには、<xref:System.Windows.Forms.Form.FormBorderStyle%2A>、<xref:System.Windows.Forms.Form.ControlBox%2A>、<xref:System.Windows.Forms.Form.MinimizeBox%2A>、および <xref:System.Windows.Forms.Form.MaximizeBox%2A> の各プロパティの設定に関係なく、さまざまな境界線、コントロールメニューボックス、および最小化ボタンと**最大化**ボタンがあります。</span><span class="sxs-lookup"><span data-stu-id="174bb-549">All MDI child forms have sizable borders, a control-menu box, and Minimize and **Maximize** buttons, regardless of the settings of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MdiParent" />
        <altmember cref="P:System.Windows.Forms.Form.MdiChildren" />
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
      </Docs>
    </Member>
    <Member MemberName="IsMdiContainer">
      <MemberSignature Language="C#" Value="public bool IsMdiContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMdiContainer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.IsMdiContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMdiContainer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMdiContainer { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMdiContainer : bool with get, set" Usage="System.Windows.Forms.Form.IsMdiContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-550">フォームがマルチ ドキュメント インターフェイス (MDI: Multiple Document Interface) 子フォームのコンテナーかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-550">Gets or sets a value indicating whether the form is a container for multiple-document interface (MDI) child forms.</span></span></summary>
        <value><span data-ttu-id="174bb-551">フォームが MDI 子フォームのコンテナーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-551"><see langword="true" /> if the form is a container for MDI child forms; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="174bb-552">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="174bb-552">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-553">このプロパティは、フォームの表示と動作を MDI 親フォームに変更します。</span><span class="sxs-lookup"><span data-stu-id="174bb-553">This property changes the display and behavior of the form to an MDI parent form.</span></span> <span data-ttu-id="174bb-554">このプロパティが `true`に設定されている場合、フォームには、くぼんだ境界線を持つくぼんだクライアント領域が表示されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-554">When this property is set to `true`, the form displays a sunken client area with a raised border.</span></span> <span data-ttu-id="174bb-555">親フォームに割り当てられているすべての MDI 子フォームは、そのクライアント領域内に表示されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-555">All MDI child forms assigned to the parent form are displayed within its client area.</span></span>  
  
 <span data-ttu-id="174bb-556">MDI 親フォームが閉じられると、mdi 親フォームの <xref:System.Windows.Forms.Form.Closing> イベントが発生する前に、すべての MDI 子フォームの <xref:System.Windows.Forms.Form.Closing> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-556">When an MDI parent form is closed, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised.</span></span> <span data-ttu-id="174bb-557">また、MDI 親フォームの <xref:System.Windows.Forms.Form.Closed> イベントが発生する前に、すべての MDI 子フォームの <xref:System.Windows.Forms.Form.Closed> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-557">In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-558">MDI 子フォームに2つの <xref:System.Windows.Forms.MenuStrip> コントロールがある場合、親フォームの `true` に <xref:System.Windows.Forms.Form.IsMdiContainer%2A> を設定すると、1つの <xref:System.Windows.Forms.MenuStrip> コントロールの内容のみがマージされます。</span><span class="sxs-lookup"><span data-stu-id="174bb-558">If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls.</span></span> <span data-ttu-id="174bb-559"><xref:System.Windows.Forms.ToolStripManager.Merge%2A> を使用して、追加の子 <xref:System.Windows.Forms.MenuStrip> コントロールの内容を MDI 親フォームにマージします。</span><span class="sxs-lookup"><span data-stu-id="174bb-559">Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-560">次の例では、<xref:System.Windows.Forms.Form.IsMdiContainer%2A> プロパティを使用する方法と、MDI フォームの `BackColor` プロパティを変更する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-560">The following example demonstrates using the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property as well as changing the `BackColor` property of an MDI Form.</span></span> <span data-ttu-id="174bb-561">この例を実行するには、新しいフォームに次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-561">To run this example, paste the following code in a new form.</span></span>  
  
 [!code-csharp[System.Windows.Forms.MdiClientExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MdiClientExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MdiClientExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MdiClientExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.MdiParent" />
        <altmember cref="P:System.Windows.Forms.Form.MdiChildren" />
      </Docs>
    </Member>
    <Member MemberName="IsRestrictedWindow">
      <MemberSignature Language="C#" Value="public bool IsRestrictedWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRestrictedWindow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.IsRestrictedWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRestrictedWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRestrictedWindow { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRestrictedWindow : bool" Usage="System.Windows.Forms.Form.IsRestrictedWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-562">フォームがすべてのウィンドウとユーザー入力イベントを制限なく使用できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="174bb-562">Gets a value indicating whether the form can use all windows and user input events without restriction.</span></span></summary>
        <value><span data-ttu-id="174bb-563">フォームに制限が課せられている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-563"><see langword="true" /> if the form has restrictions; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="174bb-564">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="174bb-564">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-565"><xref:System.Windows.Forms.Form.IsRestrictedWindow%2A> プロパティは、<xref:System.Security.Permissions.UIPermissionWindow.AllWindows> のアクセス許可を付与するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-565">The <xref:System.Windows.Forms.Form.IsRestrictedWindow%2A> property determines whether the <xref:System.Security.Permissions.UIPermissionWindow.AllWindows> permission is granted.</span></span> <span data-ttu-id="174bb-566">このプロパティは、フォームのコンストラクターで実行時に設定され、フォームの有効期間にわたってキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="174bb-566">This property is set at run time in the form's constructor, and is cached for the lifetime of the form.</span></span> <span data-ttu-id="174bb-567">部分信頼で実行されている Windows フォームアプリケーションは、親コンストラクターが常に部分信頼で呼び出されるようにするため、このチェックを回避することはできません。</span><span class="sxs-lookup"><span data-stu-id="174bb-567">Windows Forms applications running in partial trust cannot circumvent this check, as the common language runtime ensures that the parent constructor is always called in partial trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPreview">
      <MemberSignature Language="C#" Value="public bool KeyPreview { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeyPreview" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.KeyPreview" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPreview As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeyPreview { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeyPreview : bool with get, set" Usage="System.Windows.Forms.Form.KeyPreview" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-568">キー イベントがフォーカスを持つコントロールに渡される前に、フォームがそのイベントを受け取るかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-568">Gets or sets a value indicating whether the form will receive key events before the event is passed to the control that has focus.</span></span></summary>
        <value><span data-ttu-id="174bb-569">フォームがすべてのキー イベントを受け取る場合は <see langword="true" />。フォーム上で現在選択されているコントロールがキー イベントを受け取る場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-569"><see langword="true" /> if the form will receive all key events; <see langword="false" /> if the currently selected control on the form receives key events.</span></span> <span data-ttu-id="174bb-570">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="174bb-570">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-571">このプロパティが `true`に設定されている場合、フォームはすべての <xref:System.Windows.Forms.Control.KeyPress>、<xref:System.Windows.Forms.Control.KeyDown>、および <xref:System.Windows.Forms.Control.KeyUp> イベントを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="174bb-571">When this property is set to `true`, the form will receive all <xref:System.Windows.Forms.Control.KeyPress>, <xref:System.Windows.Forms.Control.KeyDown>, and <xref:System.Windows.Forms.Control.KeyUp> events.</span></span> <span data-ttu-id="174bb-572">フォームのイベントハンドラーがキーストロークの処理を完了すると、フォーカスがあるコントロールにキーストロークが割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="174bb-572">After the form's event handlers have completed processing the keystroke, the keystroke is then assigned to the control with focus.</span></span> <span data-ttu-id="174bb-573">たとえば、<xref:System.Windows.Forms.Form.KeyPreview%2A> プロパティが `true` に設定されていて、現在選択されているコントロールが <xref:System.Windows.Forms.TextBox>の場合、フォームのイベントハンドラーによってキーストロークが処理された後、<xref:System.Windows.Forms.TextBox> コントロールは、押されたキーを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="174bb-573">For example, if the <xref:System.Windows.Forms.Form.KeyPreview%2A> property is set to `true` and the currently selected control is a <xref:System.Windows.Forms.TextBox>, after the keystroke is handled by the event handlers of the form the <xref:System.Windows.Forms.TextBox> control will receive the key that was pressed.</span></span> <span data-ttu-id="174bb-574">キーボードイベントをフォームレベルでのみ処理し、コントロールがキーボードイベントを受信できないようにするには、フォームの <xref:System.Windows.Forms.Control.KeyPress> イベントハンドラーの <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-574">To handle keyboard events only at the form level and not allow controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event handler to `true`.</span></span>  
  
 <span data-ttu-id="174bb-575">このプロパティを使用して、アプリケーションのほとんどのキーストロークを処理し、キーストロークを処理するか、適切なコントロールを呼び出してキーストロークを処理することができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-575">You can use this property to process most keystrokes in your application and either handle the keystroke or call the appropriate control to handle the keystroke.</span></span> <span data-ttu-id="174bb-576">たとえば、アプリケーションで関数キーを使用する場合、キーストロークイベントを受け取る可能性のある各コントロールのコードを記述するのではなく、フォームレベルでキーストロークを処理することができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-576">For example, when an application uses function keys, you might want to process the keystrokes at the form level rather than writing code for each control that might receive keystroke events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-577">フォームに表示または有効になっているコントロールがない場合は、すべてのキーボードイベントが自動的に受信されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-577">If a form has no visible or enabled controls, it automatically receives all keyboard events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-578">フォーム上のコントロールは、受け取ったキーストロークをキャンセルするようにプログラミングされる場合があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-578">A control on a form may be programmed to cancel any keystrokes it receives.</span></span> <span data-ttu-id="174bb-579">コントロールは、これらのキーストロークをフォームに送信することはないため、<xref:System.Windows.Forms.Form.KeyPreview%2A>の設定に関係なくフォームに表示されることはありません。</span><span class="sxs-lookup"><span data-stu-id="174bb-579">Since the control never sends these keystrokes to the form, the form will never see them regardless of the setting of <xref:System.Windows.Forms.Form.KeyPreview%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-580">次の例では、フォームの <xref:System.Windows.Forms.Form.KeyPreview%2A> プロパティを true に設定し、キーイベントをフォームレベルで処理する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-580">The following example demonstrates setting a form's <xref:System.Windows.Forms.Form.KeyPreview%2A> property to true and handling the key events at the form level.</span></span> <span data-ttu-id="174bb-581">この例を実行するには、空白のフォームに次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-581">To run the example, paste the following code in a blank form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="LayoutMdi">
      <MemberSignature Language="C#" Value="public void LayoutMdi (System.Windows.Forms.MdiLayout value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LayoutMdi(valuetype System.Windows.Forms.MdiLayout value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LayoutMdi (value As MdiLayout)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LayoutMdi(System::Windows::Forms::MdiLayout value);" />
      <MemberSignature Language="F#" Value="member this.LayoutMdi : System.Windows.Forms.MdiLayout -&gt; unit" Usage="form.LayoutMdi value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.MdiLayout" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="174bb-582">MDI 子フォームのレイアウトを定義する <see cref="T:System.Windows.Forms.MdiLayout" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="174bb-582">One of the <see cref="T:System.Windows.Forms.MdiLayout" /> values that defines the layout of MDI child forms.</span></span></param>
        <summary><span data-ttu-id="174bb-583">マルチ ドキュメント インターフェイス (MDI) 親フォーム内に MDI 子フォームを配置します。</span><span class="sxs-lookup"><span data-stu-id="174bb-583">Arranges the multiple-document interface (MDI) child forms within the MDI parent form.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-584">このメソッドを使用して、mdi 子フォームのナビゲーションと操作を簡単に行えるように、mdi 親フォームに MDI 子フォームを配置できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-584">You can use this method to arrange the MDI child forms in your MDI parent form to allow for easier navigation and manipulation of MDI child forms.</span></span> <span data-ttu-id="174bb-585">MDI 子フォームは、水平方向、垂直方向、カスケード形式、または MDI 親フォーム内のアイコンとして並べて表示できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-585">MDI child forms can be tiled horizontally and vertically, cascaded, or as icons within the MDI parent form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-586">次の例は、MDI アプリケーションの親フォームにあるウィンドウメニューのメニュー項目のイベントハンドラーを示しています。</span><span class="sxs-lookup"><span data-stu-id="174bb-586">The following example shows the event handlers for the menu items of a Window menu in an MDI application's parent form.</span></span> <span data-ttu-id="174bb-587">各イベントハンドラーは、<xref:System.Windows.Forms.Form.LayoutMdi%2A> メソッドを呼び出して、アプリケーションで現在開いているすべての子フォームを配置します。</span><span class="sxs-lookup"><span data-stu-id="174bb-587">Each event handler makes calls to the <xref:System.Windows.Forms.Form.LayoutMdi%2A> method to arrange any child forms that are currently open in the application.</span></span>  
  
 [!code-cpp[Classic Form.LayoutMdi Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.LayoutMdi Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/CS/source.cs#1)]
 [!code-vb[Classic Form.LayoutMdi Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MdiLayout" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public event EventHandler Load;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Load" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Load" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Load As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Load;" />
      <MemberSignature Language="F#" Value="member this.Load : EventHandler " Usage="member this.Load : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-588">フォームが初めて表示される直前に発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-588">Occurs before a form is displayed for the first time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-589">このイベントを使用して、フォームによって使用されるリソースの割り当てなどのタスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-589">You can use this event to perform tasks such as allocating resources used by the form.</span></span>  
  
 <span data-ttu-id="174bb-590">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-590">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-591">次の例では、<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>、<xref:System.Windows.Forms.Form.Load>、<xref:System.Windows.Forms.Form.Activated>、および <xref:System.Windows.Forms.Form.Activate%2A> メンバーを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-591">The following example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="174bb-592">この例を実行するには、`Button1` と呼ばれる <xref:System.Windows.Forms.Button> を含む `Form1` という名前のフォームに次のコードを貼り付け `Label1` と `Label2`と呼ばれる2つの <xref:System.Windows.Forms.Label> コントロールを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-592">To run the example, paste the following code in a form called `Form1` containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Location { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Drawing.Point with get, set" Usage="System.Windows.Forms.Form.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-593">画面座標における <see cref="T:System.Windows.Forms.Form" /> の左上隅を表す <see cref="T:System.Drawing.Point" /> を取得および設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-593">Gets or sets the <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the <see cref="T:System.Windows.Forms.Form" /> in screen coordinates.</span></span></summary>
        <value><span data-ttu-id="174bb-594">画面座標における <see cref="T:System.Drawing.Point" /> の左上隅を表す <see cref="T:System.Windows.Forms.Form" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-594">The <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the <see cref="T:System.Windows.Forms.Form" /> in screen coordinates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-595"><xref:System.Drawing.Point> は構造体であり、これは値型であることを意味します。</span><span class="sxs-lookup"><span data-stu-id="174bb-595"><xref:System.Drawing.Point> is a structure, which means that it is a value type.</span></span> <span data-ttu-id="174bb-596"><xref:System.Drawing.Point>のプロパティにアクセスすると、プロパティのコピーが返されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-596">If you access a property in <xref:System.Drawing.Point>, a copy of the property is returned.</span></span> <span data-ttu-id="174bb-597">したがって、<xref:System.Windows.Forms.Control.Location%2A> プロパティから返された <xref:System.Drawing.Point> の <xref:System.Drawing.Point.X%2A> または <xref:System.Drawing.Point.Y%2A> プロパティを変更しても、<xref:System.Windows.Forms.Control.Left%2A>の <xref:System.Windows.Forms.Control.Right%2A>、<xref:System.Windows.Forms.Control.Top%2A>、<xref:System.Windows.Forms.Control.Bottom%2A>、<xref:System.Windows.Forms.Form>の各プロパティ値には影響しません。</span><span class="sxs-lookup"><span data-stu-id="174bb-597">Therefore, changing the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Drawing.Point> returned from the <xref:System.Windows.Forms.Control.Location%2A> property will not affect the <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, or <xref:System.Windows.Forms.Control.Bottom%2A> property values of the <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="174bb-598">これらのプロパティを調整するには、各プロパティ値を個別に設定するか、<xref:System.Windows.Forms.Form.Location%2A> プロパティに新しい <xref:System.Drawing.Point>を設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-598">To adjust these properties, set each property value individually, or set the <xref:System.Windows.Forms.Form.Location%2A> property with a new <xref:System.Drawing.Point>.</span></span>  
  
 <span data-ttu-id="174bb-599"><xref:System.Windows.Forms.Form.Location%2A> プロパティは <xref:System.Windows.Forms.Control> 基本クラスの <xref:System.Windows.Forms.Control.Location%2A> プロパティを取得または設定し、<xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-599">The <xref:System.Windows.Forms.Form.Location%2A> property gets or sets the <xref:System.Windows.Forms.Control.Location%2A> property of the <xref:System.Windows.Forms.Control> base class, and sets the <xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A> property to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="MainMenuStrip">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MenuStrip MainMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MenuStrip MainMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MainMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Property MainMenuStrip As MenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MenuStrip ^ MainMenuStrip { System::Windows::Forms::MenuStrip ^ get(); void set(System::Windows::Forms::MenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MainMenuStrip : System.Windows.Forms.MenuStrip with get, set" Usage="System.Windows.Forms.Form.MainMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-600">フォームの主要メニューのコンテナーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-600">Gets or sets the primary menu container for the form.</span></span></summary>
        <value><span data-ttu-id="174bb-601">フォームのメニュー構造のコンテナーを表す <see cref="T:System.Windows.Forms.MenuStrip" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-601">A <see cref="T:System.Windows.Forms.MenuStrip" /> that represents the container for the menu structure of the form.</span></span> <span data-ttu-id="174bb-602">既定では、 <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="174bb-602">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-603"><xref:System.Windows.Forms.Form.MainMenuStrip%2A> プロパティの設定に加えて、<xref:System.Windows.Forms.MenuStrip> コントロールをフォームの <xref:System.Windows.Forms.Control.Controls%2A> コレクションに <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> する必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-603">In addition to setting the <xref:System.Windows.Forms.Form.MainMenuStrip%2A> property, you must <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> the <xref:System.Windows.Forms.MenuStrip> control to the <xref:System.Windows.Forms.Control.Controls%2A> collection of the form.</span></span>  
  
 <span data-ttu-id="174bb-604"><xref:System.Windows.Forms.MenuStrip> クラスは、以前のバージョンの .NET Framework の <xref:System.Windows.Forms.MainMenu> クラスよりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-604">The <xref:System.Windows.Forms.MenuStrip> class supersedes the <xref:System.Windows.Forms.MainMenu> class in previous versions of the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuStrip" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Margin { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Margin : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.Form.Margin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-605">コントロール間の空白を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-605">Gets or sets the space between controls.</span></span></summary>
        <value><span data-ttu-id="174bb-606">コントロール間の空白を表す値。</span><span class="sxs-lookup"><span data-stu-id="174bb-606">A value that represents the space between controls.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarginChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MarginChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MarginChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MarginChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MarginChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MarginChanged;" />
      <MemberSignature Language="F#" Value="member this.MarginChanged : EventHandler " Usage="member this.MarginChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-607"><see cref="P:System.Windows.Forms.Form.Margin" /> プロパティが変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-607">Occurs when the <see cref="P:System.Windows.Forms.Form.Margin" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximizeBox">
      <MemberSignature Language="C#" Value="public bool MaximizeBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaximizeBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MaximizeBox" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximizeBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaximizeBox { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MaximizeBox : bool with get, set" Usage="System.Windows.Forms.Form.MaximizeBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-608">フォームのキャプション バーに **[最大化]** ボタンを表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-608">Gets or sets a value indicating whether the **Maximize** button is displayed in the caption bar of the form.</span></span></summary>
        <value><span data-ttu-id="174bb-609">フォームに **[最大化]** ボタンを表示する <see langword="true" /> ます。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="174bb-609"><see langword="true" /> to display a **Maximize** button for the form; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="174bb-610">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="174bb-610">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="174bb-611">**[最大化]** ボタンを使用すると、ウィンドウを全画面サイズに拡大できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-611">A **Maximize** button enables users to enlarge a window to full-screen size.</span></span> <span data-ttu-id="174bb-612">**[最大化]** ボタンを表示するには、フォームの [<xref:System.Windows.Forms.Form.ControlBox>] プロパティの値を `true`、既定値にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-612">To display a **Maximize** button, the value of the form's <xref:System.Windows.Forms.Form.ControlBox> property must be `true`, its default value.</span></span>  <span data-ttu-id="174bb-613"><xref:System.Windows.Forms.Form.ControlBox> プロパティは、キャプションバーの右上隅に、最大化ボタン、最小化ボタン、ヘルプボタン、および閉じるボタンなどのコントロールが含まれているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="174bb-613">The <xref:System.Windows.Forms.Form.ControlBox> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</span></span> <span data-ttu-id="174bb-614">さらに、フォームの <xref:System.Windows.Forms.Form.FormBorderStyle%2A> プロパティを <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>、<xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>、<xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>、または <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>に設定する必要もあります。</span><span class="sxs-lookup"><span data-stu-id="174bb-614">In addition, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="174bb-615">ウィンドウが最大化されると、**最大化** ボタンが自動的に 復元 ボタンになります。</span><span class="sxs-lookup"><span data-stu-id="174bb-615">A **Maximize** button automatically becomes a restore button when a window is maximized.</span></span> <span data-ttu-id="174bb-616">ウィンドウを最小化または復元すると、復元 ボタンが自動的に **最大化** ボタンに変わります。</span><span class="sxs-lookup"><span data-stu-id="174bb-616">Minimizing or restoring a window automatically changes the restore button back to a **Maximize** button.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-617">実行時にフォームを最大化すると、<xref:System.Windows.Forms.Control.Resize> イベントが生成されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-617">Maximizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event.</span></span> <span data-ttu-id="174bb-618"><xref:System.Windows.Forms.Form.WindowState%2A> プロパティには、ウィンドウの現在の状態が反映されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-618">The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window.</span></span> <span data-ttu-id="174bb-619">[<xref:System.Windows.Forms.Form.WindowState%2A>] プロパティを [`FormWindowState.Maximized`] に設定すると、<xref:System.Windows.Forms.Form.MaximizeBox%2A> および <xref:System.Windows.Forms.Form.FormBorderStyle%2A> プロパティで有効になっている設定とは無関係にフォームが最大化されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-619">If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Maximized`, the form is maximized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MaximizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-620">次の例では、<xref:System.Windows.Forms.Form> の新しいインスタンスを作成し、<xref:System.Windows.Forms.Form.ShowDialog%2A> メソッドを呼び出して、フォームをダイアログボックスとして表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-620">The following example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="174bb-621">この例では、<xref:System.Windows.Forms.Form.FormBorderStyle%2A>、<xref:System.Windows.Forms.Form.AcceptButton%2A>、<xref:System.Windows.Forms.Form.CancelButton%2A>、<xref:System.Windows.Forms.Form.MinimizeBox%2A>、<xref:System.Windows.Forms.Form.MaximizeBox%2A>、および <xref:System.Windows.Forms.Form.StartPosition%2A> の各プロパティを設定して、フォームの外観と機能をダイアログボックスに変更します。</span><span class="sxs-lookup"><span data-stu-id="174bb-621">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="174bb-622">また、この例では、フォームの <xref:System.Windows.Forms.Control.Controls%2A> コレクションの <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> メソッドを使用して、2つの <xref:System.Windows.Forms.Button> コントロールを追加しています。</span><span class="sxs-lookup"><span data-stu-id="174bb-622">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="174bb-623">この例では、<xref:System.Windows.Forms.Form.HelpButton%2A> プロパティを使用して、ダイアログボックスのキャプションバーに [ヘルプ] ボタンを表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-623">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MinimizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
      </Docs>
    </Member>
    <Member MemberName="MaximizedBounds">
      <MemberSignature Language="C#" Value="protected System.Drawing.Rectangle MaximizedBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle MaximizedBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MaximizedBounds" />
      <MemberSignature Language="VB.NET" Value="Protected Property MaximizedBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Drawing::Rectangle MaximizedBounds { System::Drawing::Rectangle get(); void set(System::Drawing::Rectangle value); };" />
      <MemberSignature Language="F#" Value="member this.MaximizedBounds : System.Drawing.Rectangle with get, set" Usage="System.Windows.Forms.Form.MaximizedBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-624">最大化された場合のフォームのサイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-624">Gets or sets the size of the form when it is maximized.</span></span></summary>
        <value><span data-ttu-id="174bb-625">最大化された場合のフォームの範囲を表す <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-625">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the form when it is maximized.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="174bb-626"><see cref="P:System.Drawing.Rectangle.Top" /> プロパティの値がフォームの高さよりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="174bb-626">The value of the <see cref="P:System.Drawing.Rectangle.Top" /> property is greater than the height of the form.</span></span>  
  
<span data-ttu-id="174bb-627">または</span><span class="sxs-lookup"><span data-stu-id="174bb-627">-or-</span></span> 
<span data-ttu-id="174bb-628"><see cref="P:System.Drawing.Rectangle.Left" /> プロパティの値がフォームの幅よりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="174bb-628">The value of the <see cref="P:System.Drawing.Rectangle.Left" /> property is greater than the width of the form.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-629"><see cref="T:System.Windows.Forms.Form" /> から継承するクラスでは、このメソッドをオーバーライドして、フォームが最大化されたときに新しい境界を指定できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-629">Classes that inherit from <see cref="T:System.Windows.Forms.Form" /> can override this method to provide new bounds for the form when it is maximized.</span></span> <span data-ttu-id="174bb-630">クラスは、フォームの **[最大化]** ボタンがクリックされたときに、このプロパティを内部的に設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-630">The class sets this property internally when the form's **Maximize** button is clicked.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
      </Docs>
    </Member>
    <Member MemberName="MaximizedBoundsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MaximizedBoundsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MaximizedBoundsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MaximizedBoundsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MaximizedBoundsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MaximizedBoundsChanged;" />
      <MemberSignature Language="F#" Value="member this.MaximizedBoundsChanged : EventHandler " Usage="member this.MaximizedBoundsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-631"><see cref="P:System.Windows.Forms.Form.MaximizedBounds" /> プロパティの値が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-631">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MaximizedBounds" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-632">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-632">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-633">このメンバーの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-633">The following example demonstrates the use of this member.</span></span> <span data-ttu-id="174bb-634">この例では、イベントハンドラーは、<xref:System.Windows.Forms.Form.MaximizedBoundsChanged> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="174bb-634">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MaximizedBoundsChanged> event.</span></span> <span data-ttu-id="174bb-635">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="174bb-635">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="174bb-636">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-636">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="174bb-637">コード例を実行するには、`Form1`という <xref:System.Windows.Forms.Form> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-637">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="174bb-638">次に、イベントハンドラーが <xref:System.Windows.Forms.Form.MaximizedBoundsChanged> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="174bb-638">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MaximizedBoundsChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#389](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#389)]
 [!code-vb[System.Windows.Forms.EventExamples#389](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#389)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximizedBounds" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MaximumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MaximumSize { get; set; }" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MaximumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MaximumSize As Size" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MaximumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.MaximumSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Form.MaximumSize" />
      <MemberSignature Language="C#" Value="public System.Drawing.Size MaximumSize { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumSize As Size" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size MaximumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Size), "0, 0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-639">フォームのサイズを変更する場合の最大サイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="174bb-639">Gets the maximum size the form can be resized to.</span></span></summary>
        <value><span data-ttu-id="174bb-640">フォームの最大サイズを表す <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-640">A <see cref="T:System.Drawing.Size" /> that represents the maximum size for the form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-641">このプロパティを使用すると、フォームのサイズを指定した最大サイズに制限することができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-641">This property enables you to limit the size of a form to a specified maximum size.</span></span> <span data-ttu-id="174bb-642">この機能は、複数のウィンドウを同時に表示する場合に使用できます。これにより、1つのウィンドウで他のウィンドウが非表示になることを防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-642">You can use this feature when displaying multiple windows at the same time, to ensure that a single window does not cause other windows to be hidden.</span></span> <span data-ttu-id="174bb-643">このプロパティが、高さが0で、幅が0の <xref:System.Drawing.Size> オブジェクトに設定されている場合、フォームの最大サイズは Windows で設定された制限を超えます。</span><span class="sxs-lookup"><span data-stu-id="174bb-643">If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no maximum size beyond the limits set by Windows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-644">次の例では、<xref:System.Windows.Forms.Form.MaximumSize%2A> プロパティを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-644">The following example demonstrates setting the <xref:System.Windows.Forms.Form.MaximumSize%2A> property.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.FormExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.FormExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="174bb-645"><see cref="T:System.Drawing.Size" /> オブジェクト内の高さまたは幅の値が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="174bb-645">The values of the height or width within the <see cref="T:System.Drawing.Size" /> object are less than zero.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.Form.MaximizedBounds" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
        <altmember cref="P:System.Windows.Forms.SystemInformation.MaxWindowTrackSize" />
      </Docs>
    </Member>
    <Member MemberName="MaximumSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MaximumSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MaximumSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MaximumSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MaximumSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MaximumSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.MaximumSizeChanged : EventHandler " Usage="member this.MaximumSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-646"><see cref="P:System.Windows.Forms.Form.MaximumSize" /> プロパティの値が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-646">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MaximumSize" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-647">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-647">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-648">このメンバーの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-648">The following example demonstrates the use of this member.</span></span> <span data-ttu-id="174bb-649">この例では、イベントハンドラーは、<xref:System.Windows.Forms.Form.MaximumSizeChanged> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="174bb-649">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MaximumSizeChanged> event.</span></span> <span data-ttu-id="174bb-650">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="174bb-650">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="174bb-651">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-651">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="174bb-652">コード例を実行するには、`Form1`という <xref:System.Windows.Forms.Form> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-652">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="174bb-653">次に、イベントハンドラーが <xref:System.Windows.Forms.Form.MaximumSizeChanged> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="174bb-653">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MaximumSizeChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#390](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#390)]
 [!code-vb[System.Windows.Forms.EventExamples#390](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#390)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MdiChildActivate">
      <MemberSignature Language="C#" Value="public event EventHandler MdiChildActivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MdiChildActivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MdiChildActivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MdiChildActivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MdiChildActivate;" />
      <MemberSignature Language="F#" Value="member this.MdiChildActivate : EventHandler " Usage="member this.MdiChildActivate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-654">マルチ ドキュメント インターフェイス (MDI) 子フォームが MDI アプリケーション内でアクティブになった場合、または閉じた場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-654">Occurs when a multiple-document interface (MDI) child form is activated or closed within an MDI application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-655">このイベントを使用すると、アクティブ化されている MDI 子フォームの状態に基づいて、mdi 子フォームの内容を更新したり、mdi 親フォームで使用できるメニューオプションを変更したりするなどのタスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-655">You can use this event to perform tasks such as updating the contents of the MDI child form and changing the menu options available in the MDI parent form based on the status of the MDI child form that is activated.</span></span>  
  
 <span data-ttu-id="174bb-656">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-656">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-657">このメンバーの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-657">The following example demonstrates the use of this member.</span></span> <span data-ttu-id="174bb-658">この例では、イベントハンドラーは、<xref:System.Windows.Forms.Form.MdiChildActivate> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="174bb-658">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MdiChildActivate> event.</span></span> <span data-ttu-id="174bb-659">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="174bb-659">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="174bb-660">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-660">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="174bb-661">コード例を実行するには、`Form1`という <xref:System.Windows.Forms.Form> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-661">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="174bb-662">次に、イベントハンドラーが <xref:System.Windows.Forms.Form.MdiChildActivate> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="174bb-662">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MdiChildActivate> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#397](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#397)]
 [!code-vb[System.Windows.Forms.EventExamples#397](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#397)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MdiChildren">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form[] MdiChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form[] MdiChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MdiChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MdiChildren As Form()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Windows::Forms::Form ^&gt; ^ MdiChildren { cli::array &lt;System::Windows::Forms::Form ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MdiChildren : System.Windows.Forms.Form[]" Usage="System.Windows.Forms.Form.MdiChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-663">対象のフォームが親フォームであるマルチ ドキュメント インターフェイス (MDI) 子フォームの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="174bb-663">Gets an array of forms that represent the multiple-document interface (MDI) child forms that are parented to this form.</span></span></summary>
        <value><span data-ttu-id="174bb-664"><see cref="T:System.Windows.Forms.Form" /> オブジェクトの配列。各オブジェクトが、対象となるフォームの MDI 子フォームの 1 つを示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-664">An array of <see cref="T:System.Windows.Forms.Form" /> objects, each of which identifies one of this form's MDI child forms.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-665">このプロパティを使用すると、現在 MDI 親フォームで開かれているすべての MDI 子フォームへの参照を取得できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-665">This property allows you to obtain references to all the MDI child forms currently opened in an MDI parent form.</span></span> <span data-ttu-id="174bb-666">MDI 子フォームを作成するには、MDI 親フォームとなる <xref:System.Windows.Forms.Form> を子フォームの <xref:System.Windows.Forms.Form.MdiParent%2A> プロパティに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="174bb-666">To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.</span></span>  
  
 <span data-ttu-id="174bb-667">このプロパティを使用すると、mdi 親フォームを閉じるときにデータベースにデータを保存したり、アプリケーションで実行されたアクションに基づいて子フォーム上のフィールドを更新したりするなどの操作を実行するために、すべての MDI 子フォームをループ処理できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-667">You can use this property to loop through all the MDI child forms to perform operations such as saving data to a database when the MDI parent form closes or to update fields on the child forms based on actions performed in your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-668">次の例では、<xref:System.Windows.Forms.Form.MdiChildren%2A> プロパティを使用して、MDI 子フォームのリストを反復処理し、それぞれに <xref:System.Windows.Forms.Button> コントロールを追加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-668">The following example demonstrates how to use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property to iterate through the list of MDI child forms and add a <xref:System.Windows.Forms.Button> control to each.</span></span>  
  
 [!code-cpp[Form.MDIChildren#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.MDIChildren/CPP/form1.cpp#1)]
 [!code-csharp[Form.MDIChildren#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.MDIChildren/CS/form1.cs#1)]
 [!code-vb[Form.MDIChildren#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.MDIChildren/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="P:System.Windows.Forms.Form.MdiParent" />
      </Docs>
    </Member>
    <Member MemberName="MdiParent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form MdiParent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form MdiParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MdiParent" />
      <MemberSignature Language="VB.NET" Value="Public Property MdiParent As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ MdiParent { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MdiParent : System.Windows.Forms.Form with get, set" Usage="System.Windows.Forms.Form.MdiParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-669">対象となるフォームの現在のマルチ ドキュメント インターフェイス (MDI) 親フォームを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-669">Gets or sets the current multiple-document interface (MDI) parent form of this form.</span></span></summary>
        <value><span data-ttu-id="174bb-670">MDI 親フォームを表す <see cref="T:System.Windows.Forms.Form" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-670">A <see cref="T:System.Windows.Forms.Form" /> that represents the MDI parent form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-671">MDI 子フォームを作成するには、MDI 親フォームとなる <xref:System.Windows.Forms.Form> を子フォームの <xref:System.Windows.Forms.Form.MdiParent%2A> プロパティに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="174bb-671">To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.</span></span> <span data-ttu-id="174bb-672">このプロパティを MDI 子フォームから使用すると、すべての子フォームが必要とするグローバル情報を取得したり、すべての子フォームに対してアクションを実行するメソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-672">You can use this property from an MDI child form to obtain global information that all child forms need or to invoke methods that perform actions to all child forms.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-673">MDI 子フォームに2つの <xref:System.Windows.Forms.MenuStrip> コントロールがある場合、親フォームの `true` に <xref:System.Windows.Forms.Form.IsMdiContainer%2A> を設定すると、1つの <xref:System.Windows.Forms.MenuStrip> コントロールの内容のみがマージされます。</span><span class="sxs-lookup"><span data-stu-id="174bb-673">If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls.</span></span> <span data-ttu-id="174bb-674"><xref:System.Windows.Forms.ToolStripManager.Merge%2A> を使用して、追加の子 <xref:System.Windows.Forms.MenuStrip> コントロールの内容を MDI 親フォームにマージします。</span><span class="sxs-lookup"><span data-stu-id="174bb-674">Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-675">次の例は、MDI アプリケーションで子フォームを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="174bb-675">The following example demonstrates how to create child forms in an MDI application.</span></span> <span data-ttu-id="174bb-676">このコード例では、子フォームを識別するための一意のテキストを含むフォームを作成します。</span><span class="sxs-lookup"><span data-stu-id="174bb-676">The example code creates a form with unique text to identify the child form.</span></span> <span data-ttu-id="174bb-677">この例では、<xref:System.Windows.Forms.Form.MdiParent%2A> プロパティを使用して、フォームが子フォームであることを指定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-677">The example uses the <xref:System.Windows.Forms.Form.MdiParent%2A> property to specify that a form is a child form.</span></span> <span data-ttu-id="174bb-678">この例では、<xref:System.Windows.Forms.Form.IsMdiContainer%2A> プロパティが `true` に設定され、フォームに `childCount`という名前のプライベートクラスレベルの整数変数があるフォームから、この例のコードを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-678">This example requires that the code in the example is called from a form that has its <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property set to `true` and that the form has a private class level integer variable named `childCount`.</span></span>  
  
 [!code-cpp[Form.MDIParent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.MDIParent/CPP/form1.cpp#1)]
 [!code-csharp[Form.MDIParent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.MDIParent/CS/form1.cs#1)]
 [!code-vb[Form.MDIParent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.MDIParent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="174bb-679">このプロパティに割り当てられた <see cref="T:System.Windows.Forms.Form" /> が MDI コンテナーとしてマークされていません。</span><span class="sxs-lookup"><span data-stu-id="174bb-679">The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is not marked as an MDI container.</span></span>  
  
<span data-ttu-id="174bb-680">または</span><span class="sxs-lookup"><span data-stu-id="174bb-680">-or-</span></span> 
<span data-ttu-id="174bb-681">このプロパティに割り当てられた <see cref="T:System.Windows.Forms.Form" /> が子フォームと MDI コンテナー フォームの両方を表しています。</span><span class="sxs-lookup"><span data-stu-id="174bb-681">The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is both a child and an MDI container form.</span></span>  
  
<span data-ttu-id="174bb-682">または</span><span class="sxs-lookup"><span data-stu-id="174bb-682">-or-</span></span> 
<span data-ttu-id="174bb-683">このプロパティに割り当てられた <see cref="T:System.Windows.Forms.Form" /> が別のスレッドにあります。</span><span class="sxs-lookup"><span data-stu-id="174bb-683">The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is located on a different thread.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="P:System.Windows.Forms.Form.MdiChildren" />
      </Docs>
    </Member>
    <Member MemberName="Menu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MainMenu Menu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MainMenu Menu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Menu" />
      <MemberSignature Language="VB.NET" Value="Public Property Menu As MainMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MainMenu ^ Menu { System::Windows::Forms::MainMenu ^ get(); void set(System::Windows::Forms::MainMenu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Menu : System.Windows.Forms.MainMenu with get, set" Usage="System.Windows.Forms.Form.Menu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MainMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-684">フォームに表示する <see cref="T:System.Windows.Forms.MainMenu" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-684">Gets or sets the <see cref="T:System.Windows.Forms.MainMenu" /> that is displayed in the form.</span></span></summary>
        <value><span data-ttu-id="174bb-685">フォームに表示するメニューを表す <see cref="T:System.Windows.Forms.MainMenu" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-685">A <see cref="T:System.Windows.Forms.MainMenu" /> that represents the menu to display in the form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-686">このプロパティを使用すると、実行時にすべてのメニューセットを切り替えることができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-686">You can use this property to switch between complete menu sets at run time.</span></span> <span data-ttu-id="174bb-687">たとえば、マルチドキュメントインターフェイス (MDI) フォームにアクティブな MDI 子フォームがなく、子ウィンドウが表示されたときに表示される別の <xref:System.Windows.Forms.MainMenu> がある場合に表示される <xref:System.Windows.Forms.MainMenu> を定義できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-687">For example, you can define one <xref:System.Windows.Forms.MainMenu> to be displayed when your multiple-document interface (MDI) form has no active MDI child forms and another <xref:System.Windows.Forms.MainMenu> to display when a child window is displayed.</span></span> <span data-ttu-id="174bb-688">また、アプリケーション内に特定の条件が存在し、別のメニューセットを表示する必要がある場合にも、別の <xref:System.Windows.Forms.MainMenu> を使用できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-688">You can also use a different <xref:System.Windows.Forms.MainMenu> when specific conditions exist in your application that require displaying a different menu set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-689">次の例では、<xref:System.Windows.Forms.MainMenu>を作成し、2つの <xref:System.Windows.Forms.MenuItem> オブジェクトを <xref:System.Windows.Forms.MainMenu> に割り当てて、フォームにバインドします。</span><span class="sxs-lookup"><span data-stu-id="174bb-689">The following example creates a <xref:System.Windows.Forms.MainMenu>, assigns two <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.MainMenu> and binds it to a form.</span></span> <span data-ttu-id="174bb-690">この例では、`Form1`という名前の <xref:System.Windows.Forms.Form> を作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-690">This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.</span></span>  
  
 [!code-cpp[Classic MainMenu.MainMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MainMenu.MainMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/CS/source.cs#1)]
 [!code-vb[Classic MainMenu.MainMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MainMenu" />
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.Menu" />
      </Docs>
    </Member>
    <Member MemberName="MenuComplete">
      <MemberSignature Language="C#" Value="public event EventHandler MenuComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MenuComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MenuComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MenuComplete;" />
      <MemberSignature Language="F#" Value="member this.MenuComplete : EventHandler " Usage="member this.MenuComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-691">フォームのメニューがフォーカスを失ったときに発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-691">Occurs when the menu of a form loses focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-692">このイベントは、メニューのメニュー項目をクリックすると、コマンドが実行され、メニューがフォーカスを失った場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-692">This event is raised when you click on any menu item in a menu that results in a command being performed and the menu losing focus.</span></span> <span data-ttu-id="174bb-693">このイベントを使用すると、<xref:System.Windows.Forms.StatusBar> コントロールのテキストを更新したり、<xref:System.Windows.Forms.ToolBar>のボタンを有効または無効にしたりするなどのタスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-693">You can use this event to perform tasks such as updating the text of a <xref:System.Windows.Forms.StatusBar> control or enabling and disabling buttons on a <xref:System.Windows.Forms.ToolBar>.</span></span>  
  
 <span data-ttu-id="174bb-694">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-694">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-695">このメンバーの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-695">The following example demonstrates the use of this member.</span></span> <span data-ttu-id="174bb-696">この例では、イベントハンドラーは、<xref:System.Windows.Forms.Form.MenuComplete> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="174bb-696">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MenuComplete> event.</span></span> <span data-ttu-id="174bb-697">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="174bb-697">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="174bb-698">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-698">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="174bb-699">コード例を実行するには、`Form1`という <xref:System.Windows.Forms.Form> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-699">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="174bb-700">次に、イベントハンドラーが <xref:System.Windows.Forms.Form.MenuComplete> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="174bb-700">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MenuComplete> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#398](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#398)]
 [!code-vb[System.Windows.Forms.EventExamples#398](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#398)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MenuStart">
      <MemberSignature Language="C#" Value="public event EventHandler MenuStart;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MenuStart" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MenuStart" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuStart As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MenuStart;" />
      <MemberSignature Language="F#" Value="member this.MenuStart : EventHandler " Usage="member this.MenuStart : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-701">フォームのメニューがフォーカスを受け取ると発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-701">Occurs when the menu of a form receives focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-702">このイベントは、ユーザーがメニューのメニュー項目をクリックすると発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-702">This event is raised when any menu item in the menu is clicked by the user.</span></span> <span data-ttu-id="174bb-703">このイベントを使用して、メニューにアクセスするときにユーザーがアクセスできないように、フォーム上のコントロールを有効または無効にするなどのタスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-703">You can use this event to perform tasks such as enabling and disabling controls on the form that should not be accessed by the user when the menus are being accessed.</span></span>  
  
 <span data-ttu-id="174bb-704">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-704">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-705">このメンバーの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-705">The following example demonstrates the use of this member.</span></span> <span data-ttu-id="174bb-706">この例では、イベントハンドラーは、<xref:System.Windows.Forms.Form.MenuStart> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="174bb-706">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MenuStart> event.</span></span> <span data-ttu-id="174bb-707">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="174bb-707">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="174bb-708">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-708">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="174bb-709">コード例を実行するには、`Form1`という <xref:System.Windows.Forms.Form> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-709">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="174bb-710">次に、イベントハンドラーが <xref:System.Windows.Forms.Form.MenuStart> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="174bb-710">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MenuStart> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#399](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#399)]
 [!code-vb[System.Windows.Forms.EventExamples#399](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#399)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MergedMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MainMenu MergedMenu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MainMenu MergedMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MergedMenu" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MergedMenu As MainMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MainMenu ^ MergedMenu { System::Windows::Forms::MainMenu ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MergedMenu : System.Windows.Forms.MainMenu" Usage="System.Windows.Forms.Form.MergedMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MainMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-711">フォームのマージされたメニューを取得します。</span><span class="sxs-lookup"><span data-stu-id="174bb-711">Gets the merged menu for the form.</span></span></summary>
        <value><span data-ttu-id="174bb-712">フォームのマージされたメニューを表す <see cref="T:System.Windows.Forms.MainMenu" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-712">A <see cref="T:System.Windows.Forms.MainMenu" /> that represents the merged menu of the form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-713">このプロパティは、主に、フォームがマルチドキュメントインターフェイス (MDI) 子フォームであり、そのメニューを親フォームのメニューとマージする場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-713">This property is primarily used when the form is a multiple-document interface (MDI) child form that merges its menu with its parent form's menu.</span></span> <span data-ttu-id="174bb-714">このプロパティを使用して、MDI アプリケーションの現在のメニュー構造を取得し、メニュー構造を変更または追加することができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-714">You can use this property to obtain the current menu structure in an MDI application to make changes or additions to the menu structure.</span></span> <span data-ttu-id="174bb-715">フォームに割り当てられている結合されていない <xref:System.Windows.Forms.MainMenu> を取得するには、<xref:System.Windows.Forms.Form.Menu%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-715">To obtain the nonmerged <xref:System.Windows.Forms.MainMenu> assigned to a form, use the <xref:System.Windows.Forms.Form.Menu%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MainMenu" />
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="P:System.Windows.Forms.Form.Menu" />
      </Docs>
    </Member>
    <Member MemberName="MinimizeBox">
      <MemberSignature Language="C#" Value="public bool MinimizeBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MinimizeBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MinimizeBox" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimizeBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MinimizeBox { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MinimizeBox : bool with get, set" Usage="System.Windows.Forms.Form.MinimizeBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-716">フォームのキャプション バーに **[最小化]** ボタンを表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-716">Gets or sets a value indicating whether the **Minimize** button is displayed in the caption bar of the form.</span></span></summary>
        <value><span data-ttu-id="174bb-717">フォームの **[最小化]** ボタンを表示する <see langword="true" /> ます。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="174bb-717"><see langword="true" /> to display a **Minimize** button for the form; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="174bb-718">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="174bb-718">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-719">**[最小化]** ボタンを使用すると、ユーザーはウィンドウをアイコンに最小化できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-719">A **Minimize** button enables users to minimize a window to an icon.</span></span> <span data-ttu-id="174bb-720">**[最小化]** ボタンを表示するには、フォームの <xref:System.Windows.Forms.Form.ControlBox> プロパティの値を、既定値 `true`にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-720">To display a **Minimize** button, the value of the form's <xref:System.Windows.Forms.Form.ControlBox> property must be `true`, its default value.</span></span>  <span data-ttu-id="174bb-721"><xref:System.Windows.Forms.Form.ControlBox> プロパティは、キャプションバーの右上隅に、最大化ボタン、最小化ボタン、ヘルプボタン、および閉じるボタンなどのコントロールが含まれているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="174bb-721">The <xref:System.Windows.Forms.Form.ControlBox> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</span></span> <span data-ttu-id="174bb-722">さらに、フォームの <xref:System.Windows.Forms.Form.FormBorderStyle%2A> プロパティを <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>、<xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>、<xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>、または <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>に設定する必要もあります。</span><span class="sxs-lookup"><span data-stu-id="174bb-722">In addition, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-723">実行時にフォームを最小化すると、<xref:System.Windows.Forms.Control.Resize> イベントが生成されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-723">Minimizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event.</span></span> <span data-ttu-id="174bb-724"><xref:System.Windows.Forms.Form.WindowState%2A> プロパティには、ウィンドウの現在の状態が反映されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-724">The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window.</span></span> <span data-ttu-id="174bb-725">[<xref:System.Windows.Forms.Form.WindowState%2A>] プロパティを [`FormWindowState.Minimized`] に設定すると、<xref:System.Windows.Forms.Form.MinimizeBox%2A> と <xref:System.Windows.Forms.Form.FormBorderStyle%2A> のプロパティで有効になっている設定とは無関係に、フォームが最小化されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-725">If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Minimized`, the form is minimized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MinimizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-726">次の例では、<xref:System.Windows.Forms.Form> の新しいインスタンスを作成し、<xref:System.Windows.Forms.Form.ShowDialog%2A> メソッドを呼び出して、フォームをダイアログボックスとして表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-726">The following example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="174bb-727">この例では、<xref:System.Windows.Forms.Form.FormBorderStyle%2A>、<xref:System.Windows.Forms.Form.AcceptButton%2A>、<xref:System.Windows.Forms.Form.CancelButton%2A>、<xref:System.Windows.Forms.Form.MinimizeBox%2A>、<xref:System.Windows.Forms.Form.MaximizeBox%2A>、および <xref:System.Windows.Forms.Form.StartPosition%2A> の各プロパティを設定して、フォームの外観と機能をダイアログボックスに変更します。</span><span class="sxs-lookup"><span data-stu-id="174bb-727">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="174bb-728">また、この例では、フォームの <xref:System.Windows.Forms.Control.Controls%2A> コレクションの <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> メソッドを使用して、2つの <xref:System.Windows.Forms.Button> コントロールを追加しています。</span><span class="sxs-lookup"><span data-stu-id="174bb-728">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="174bb-729">この例では、<xref:System.Windows.Forms.Form.HelpButton%2A> プロパティを使用して、ダイアログボックスのキャプションバーに [ヘルプ] ボタンを表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-729">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
      </Docs>
    </Member>
    <Member MemberName="MinimumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MinimumSize { get; set; }" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MinimumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MinimumSize As Size" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MinimumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.MinimumSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Form.MinimumSize" />
      <MemberSignature Language="C#" Value="public System.Drawing.Size MinimumSize { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumSize As Size" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size MinimumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Size), "0, 0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-730">フォームのサイズを変更する場合の最小サイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-730">Gets or sets the minimum size the form can be resized to.</span></span></summary>
        <value><span data-ttu-id="174bb-731">フォームの最小サイズを表す <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-731">A <see cref="T:System.Drawing.Size" /> that represents the minimum size for the form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-732">このプロパティを使用すると、フォームのサイズを指定した最小サイズに制限することができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-732">This property enables you to limit the size of a form to a specified minimum size.</span></span> <span data-ttu-id="174bb-733">この機能を使用すると、ユーザーがウィンドウをサイズ変更できないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-733">You can use this feature to prevent a user from sizing a window to an undesirable size.</span></span> <span data-ttu-id="174bb-734">このプロパティが [高さ] が0、[幅] が0の <xref:System.Drawing.Size> オブジェクトに設定されている場合、フォームには、Windows によって設定された制限を超える最小サイズはありません。</span><span class="sxs-lookup"><span data-stu-id="174bb-734">If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no minimum size beyond the limits set by Windows.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="174bb-735"><see cref="T:System.Drawing.Size" /> オブジェクト内の高さまたは幅の値が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="174bb-735">The values of the height or width within the <see cref="T:System.Drawing.Size" /> object are less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MinimumSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MinimumSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MinimumSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MinimumSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MinimumSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MinimumSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.MinimumSizeChanged : EventHandler " Usage="member this.MinimumSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-736"><see cref="P:System.Windows.Forms.Form.MinimumSize" /> プロパティの値が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-736">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MinimumSize" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-737">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-737">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-738">このメンバーの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-738">The following example demonstrates the use of this member.</span></span> <span data-ttu-id="174bb-739">この例では、イベントハンドラーは、<xref:System.Windows.Forms.Form.MinimumSizeChanged> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="174bb-739">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MinimumSizeChanged> event.</span></span> <span data-ttu-id="174bb-740">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="174bb-740">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="174bb-741">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-741">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="174bb-742">コード例を実行するには、`Form1`という <xref:System.Windows.Forms.Form> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-742">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="174bb-743">次に、イベントハンドラーが <xref:System.Windows.Forms.Form.MinimumSizeChanged> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="174bb-743">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MinimumSizeChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#391](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#391)]
 [!code-vb[System.Windows.Forms.EventExamples#391](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#391)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
      </Docs>
    </Member>
    <Member MemberName="Modal">
      <MemberSignature Language="C#" Value="public bool Modal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Modal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Modal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Modal : bool" Usage="System.Windows.Forms.Form.Modal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-744">フォームをモーダルとして表示するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="174bb-744">Gets a value indicating whether this form is displayed modally.</span></span></summary>
        <value><span data-ttu-id="174bb-745">フォームをモーダルとして表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-745"><see langword="true" /> if the form is displayed modally; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-746">フォームがモーダルとして表示されている場合、モーダルフォーム上のオブジェクトを除き、入力 (キーボードまたはマウスクリック) は発生しません。</span><span class="sxs-lookup"><span data-stu-id="174bb-746">When a form is displayed modally, no input (keyboard or mouse click) can occur except to objects on the modal form.</span></span> <span data-ttu-id="174bb-747">プログラムでは、別のフォームへの入力が発生する前に、モーダルフォーム (通常は何らかのユーザー操作に応答) を非表示にしたり閉じたりする必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-747">The program must hide or close a modal form (usually in response to some user action) before input to another form can occur.</span></span> <span data-ttu-id="174bb-748">モーダルとして表示されるフォームは、通常、アプリケーションのダイアログボックスとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-748">Forms that are displayed modally are typically used as dialog boxes in an application.</span></span>  
  
 <span data-ttu-id="174bb-749">このプロパティを使用して、メソッドまたはプロパティから取得したフォームがモーダルとして表示されているかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-749">You can use this property to determine whether a form that you have obtained from a method or property has been displayed modally.</span></span>  
  
 <span data-ttu-id="174bb-750">フォームをモーダルとして表示するには、<xref:System.Windows.Forms.Form.ShowDialog%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-750">To display a form modally use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-751">次の例では、<xref:System.Windows.Forms.Form.Modal%2A> プロパティを使用して、フォームがモーダルフォームとして表示されるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="174bb-751">The following example uses the <xref:System.Windows.Forms.Form.Modal%2A> property to determine if a form is displayed as a modal form.</span></span> <span data-ttu-id="174bb-752"><xref:System.Windows.Forms.Form.FormBorderStyle%2A> でない場合に <xref:System.Windows.Forms.Form.TopLevel%2A> プロパティを変更して、ツールウィンドウの境界線を持つトップレベル以外のフォームにします。</span><span class="sxs-lookup"><span data-stu-id="174bb-752">If it is not the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> and <xref:System.Windows.Forms.Form.TopLevel%2A> properties are changed to make the form a non-top-level form with a tool window border.</span></span>  
  
 [!code-cpp[Form.Modal#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Modal/CPP/form1.cpp#1)]
 [!code-csharp[Form.Modal#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Modal/CS/form1.cs#1)]
 [!code-vb[Form.Modal#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Modal/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.ShowDialog" />
      </Docs>
    </Member>
    <Member MemberName="OnActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnActivated : EventArgs -&gt; unit&#xA;override this.OnActivated : EventArgs -&gt; unit" Usage="form.OnActivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-753">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-753">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-754"><see cref="E:System.Windows.Forms.Form.Activated" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-754">Raises the <see cref="E:System.Windows.Forms.Form.Activated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-755">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-755">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-756">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-756">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-757"><xref:System.Windows.Forms.Form.OnActivated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-757">The <xref:System.Windows.Forms.Form.OnActivated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-758">派生クラスでイベントを処理する場合は、このメソッドをオーバーライドすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-758">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-759">派生クラスで <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-759">When overriding <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackgroundImageChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackgroundImageChanged : EventArgs -&gt; unit" Usage="form.OnBackgroundImageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-760">データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-760">An <see cref="T:System.EventArgs" /> that contains the data.</span></span></param>
        <summary><span data-ttu-id="174bb-761"><see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-761">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-762">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-762">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-763">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-763">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-764"><xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-764">The <xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-765">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-765">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-766">派生クラスで <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-766">When overriding <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackgroundImageLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackgroundImageLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackgroundImageLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackgroundImageLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackgroundImageLayoutChanged : EventArgs -&gt; unit" Usage="form.OnBackgroundImageLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-767">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-767">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-768"><see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-768">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-769">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-769">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-770">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-770">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-771"><xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-771">The <xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-772">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-772">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-773">派生クラスで <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-773">When overriding <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : EventArgs -&gt; unit&#xA;override this.OnClosed : EventArgs -&gt; unit" Usage="form.OnClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-774">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-774">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-775"><see cref="E:System.Windows.Forms.Form.Closed" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-775">Raises the <see cref="E:System.Windows.Forms.Form.Closed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="174bb-776"><xref:System.Windows.Forms.Form.OnClosed%2A> メソッドは、.NET Framework 2.0; 以降では廃止されています。代わりに、<xref:System.Windows.Forms.Form.OnFormClosed%2A> メソッドを使用してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-776">The <xref:System.Windows.Forms.Form.OnClosed%2A> method is obsolete starting with the .NET Framework 2.0; use the <xref:System.Windows.Forms.Form.OnFormClosed%2A> method instead.</span></span>  
  
 <span data-ttu-id="174bb-777">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-777">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-778">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-778">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-779"><xref:System.Windows.Forms.Form.OnFormClosed%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-779">The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-780">派生クラスでイベントを処理する場合は、このメソッドをオーバーライドすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-780">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="174bb-781"><xref:System.Windows.Forms.Form.OnClosed%2A> メソッドと <xref:System.Windows.Forms.Form.OnClosing%2A> メソッドは、アプリケーションを終了するために <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> メソッドが呼び出されるときに呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="174bb-781">The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="174bb-782">これらのメソッドのいずれかで実行する必要のある検証コードがある場合は、<xref:System.Windows.Forms.Application.Exit%2A> メソッドを呼び出す前に、開いているフォームごとに <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-782">If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-783">次の例は、<xref:System.Windows.Forms.Form> から派生したクラスの <xref:System.Windows.Forms.Form.OnClosed%2A> メソッドをオーバーライドする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="174bb-783">The following example demonstrates how to override the <xref:System.Windows.Forms.Form.OnClosed%2A> method in a class derived from <xref:System.Windows.Forms.Form> .</span></span>  
  
 [!code-cpp[System.Drawing.PointsAndSizes#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.PointsAndSizes#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CS/form1.cs#6)]
 [!code-vb[System.Drawing.PointsAndSizes#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-784">派生クラスで <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-784">When overriding <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Form.Closed" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnClosing (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosing(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosing (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosing(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="form.OnClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-785">イベント データを含んでいる <see cref="T:System.ComponentModel.CancelEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="174bb-785">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-786"><see cref="E:System.Windows.Forms.Form.Closing" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-786">Raises the <see cref="E:System.Windows.Forms.Form.Closing" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="174bb-787"><xref:System.Windows.Forms.Form.OnClosing%2A> メソッドは、.NET Framework 2.0; 以降では廃止されています。代わりに、<xref:System.Windows.Forms.Form.OnFormClosing%2A> メソッドを使用してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-787">The <xref:System.Windows.Forms.Form.OnClosing%2A> method is obsolete starting with the .NET Framework 2.0; use the <xref:System.Windows.Forms.Form.OnFormClosing%2A> method instead.</span></span>  
  
 <span data-ttu-id="174bb-788">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-788">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-789">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-789">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-790"><xref:System.Windows.Forms.Form.OnClosing%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-790">The <xref:System.Windows.Forms.Form.OnClosing%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-791">派生クラスでイベントを処理する場合は、このメソッドをオーバーライドすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-791">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="174bb-792"><xref:System.Windows.Forms.Form.OnClosed%2A> メソッドと <xref:System.Windows.Forms.Form.OnClosing%2A> メソッドは、アプリケーションを終了するために <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> メソッドが呼び出されるときに呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="174bb-792">The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="174bb-793">これらのメソッドのいずれかで実行する必要のある検証コードがある場合は、<xref:System.Windows.Forms.Application.Exit%2A> メソッドを呼び出す前に、開いているフォームごとに <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-793">If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-794">次の例では、<xref:System.Windows.Forms.Form.Closing> を使用して、<xref:System.Windows.Forms.TextBox> 内のテキストが変更されたかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="174bb-794">The following example uses <xref:System.Windows.Forms.Form.Closing> to test if the text in a <xref:System.Windows.Forms.TextBox> has changed.</span></span> <span data-ttu-id="174bb-795">存在する場合は、変更をファイルに保存するかどうかを確認するメッセージがユーザーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-795">If it has, the user is asked whether to save the changes to a file.</span></span>  
  
 [!code-cpp[Form.Closing#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Closing/CPP/form1.cpp#1)]
 [!code-csharp[Form.Closing#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Closing/CS/form1.cs#1)]
 [!code-vb[Form.Closing#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Closing/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-796">派生クラスで <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-796">When overriding <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Form.Closing" />
        <altmember cref="T:System.ComponentModel.CancelEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateControl">
      <MemberSignature Language="C#" Value="protected override void OnCreateControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnCreateControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCreateControl ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCreateControl();" />
      <MemberSignature Language="F#" Value="override this.OnCreateControl : unit -&gt; unit" Usage="form.OnCreateControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="174bb-797"><see langword="CreateControl" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-797">Raises the <see langword="CreateControl" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-798">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-798">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-799">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-799">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-800">派生クラスで <see cref="M:System.Windows.Forms.Form.OnCreateControl" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Windows.Forms.Form.OnCreateControl" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-800">When overriding <see cref="M:System.Windows.Forms.Form.OnCreateControl" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnCreateControl" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDeactivate">
      <MemberSignature Language="C#" Value="protected virtual void OnDeactivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeactivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeactivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeactivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeactivate : EventArgs -&gt; unit&#xA;override this.OnDeactivate : EventArgs -&gt; unit" Usage="form.OnDeactivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-801">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-801">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-802"><see cref="E:System.Windows.Forms.Form.Deactivate" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-802">Raises the <see cref="E:System.Windows.Forms.Form.Deactivate" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-803">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-803">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-804">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-804">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-805"><xref:System.Windows.Forms.Form.OnDeactivate%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-805">The <xref:System.Windows.Forms.Form.OnDeactivate%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-806">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-806">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-807">派生クラスで <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-807">When overriding <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Form.Deactivate" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChanged (System.Windows.Forms.DpiChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChanged(class System.Windows.Forms.DpiChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnDpiChanged(System.Windows.Forms.DpiChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChanged (e As DpiChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChanged(System::Windows::Forms::DpiChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChanged : System.Windows.Forms.DpiChangedEventArgs -&gt; unit&#xA;override this.OnDpiChanged : System.Windows.Forms.DpiChangedEventArgs -&gt; unit" Usage="form.OnDpiChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DpiChangedEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-808">イベント データを格納している <see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-808">An <see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-809"><see cref="E:System.Windows.Forms.Form.DpiChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-809">Raises the <see cref="E:System.Windows.Forms.Form.DpiChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="form.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-810">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-810">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-811"><see cref="E:System.Windows.Forms.Control.EnabledChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-811">Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected override void OnEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnter : EventArgs -&gt; unit" Usage="form.OnEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-812">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-812">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-813"><see cref="E:System.Windows.Forms.Control.Enter" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-813">Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-814">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-814">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-815">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-815">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-816"><xref:System.Windows.Forms.Form.OnEnter%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-816">The <xref:System.Windows.Forms.Form.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-817">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-817">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-818">派生クラスで <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-818">When overriding <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="form.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-819">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-819">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-820"><see cref="E:System.Windows.Forms.Control.FontChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-820">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.OnFontChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnFormClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnFormClosed (System.Windows.Forms.FormClosedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormClosed(class System.Windows.Forms.FormClosedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormClosed (e As FormClosedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormClosed(System::Windows::Forms::FormClosedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFormClosed : System.Windows.Forms.FormClosedEventArgs -&gt; unit&#xA;override this.OnFormClosed : System.Windows.Forms.FormClosedEventArgs -&gt; unit" Usage="form.OnFormClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.FormClosedEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-821">イベント データを含んでいる <see cref="T:System.Windows.Forms.FormClosedEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="174bb-821">A <see cref="T:System.Windows.Forms.FormClosedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-822"><see cref="E:System.Windows.Forms.Form.FormClosed" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-822">Raises the <see cref="E:System.Windows.Forms.Form.FormClosed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-823"><xref:System.Windows.Forms.Form.OnFormClosing%2A> メソッドは、関連付けられた <xref:System.Windows.Forms.Application>の <xref:System.Windows.Forms.Application.OpenForms%2A> コレクションから現在のフォームを削除します。</span><span class="sxs-lookup"><span data-stu-id="174bb-823">The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method removes the current form from the <xref:System.Windows.Forms.Application.OpenForms%2A> collection of the associated <xref:System.Windows.Forms.Application>.</span></span>  
  
 <span data-ttu-id="174bb-824">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-824">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-825">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-825">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-826"><xref:System.Windows.Forms.Form.OnFormClosed%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-826">The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-827">派生クラスでイベントを処理する場合は、このメソッドをオーバーライドすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-827">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-828">派生クラスで <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-828">When overriding <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Form.FormClosed" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnFormClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnFormClosing (System.Windows.Forms.FormClosingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormClosing(class System.Windows.Forms.FormClosingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormClosing (e As FormClosingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormClosing(System::Windows::Forms::FormClosingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFormClosing : System.Windows.Forms.FormClosingEventArgs -&gt; unit&#xA;override this.OnFormClosing : System.Windows.Forms.FormClosingEventArgs -&gt; unit" Usage="form.OnFormClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.FormClosingEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-829">イベント データを含んでいる <see cref="T:System.Windows.Forms.FormClosingEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="174bb-829">A <see cref="T:System.Windows.Forms.FormClosingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-830"><see cref="E:System.Windows.Forms.Form.FormClosing" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-830">Raises the <see cref="E:System.Windows.Forms.Form.FormClosing" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-831">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-831">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-832">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-832">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-833"><xref:System.Windows.Forms.Form.OnFormClosing%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-833">The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-834">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-834">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-835">派生クラスで <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-835">When overriding <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Form.FormClosing" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGetDpiScaledSize">
      <MemberSignature Language="C#" Value="protected virtual bool OnGetDpiScaledSize (int deviceDpiOld, int deviceDpiNew, ref System.Drawing.Size desiredSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnGetDpiScaledSize(int32 deviceDpiOld, int32 deviceDpiNew, valuetype System.Drawing.Size&amp; desiredSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnGetDpiScaledSize (deviceDpiOld As Integer, deviceDpiNew As Integer, ByRef desiredSize As Size) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnGetDpiScaledSize(int deviceDpiOld, int deviceDpiNew, System::Drawing::Size % desiredSize);" />
      <MemberSignature Language="F#" Value="abstract member OnGetDpiScaledSize : int * int * Size -&gt; bool&#xA;override this.OnGetDpiScaledSize : int * int * Size -&gt; bool" Usage="form.OnGetDpiScaledSize (deviceDpiOld, deviceDpiNew, desiredSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceDpiOld" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="deviceDpiNew" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="desiredSize" Type="System.Drawing.Size" RefType="ref" Index="2" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="deviceDpiOld"><span data-ttu-id="174bb-836">フォームが以前表示されていたディスプレイ デバイスの DPI 値。</span><span class="sxs-lookup"><span data-stu-id="174bb-836">The DPI value for the display device where the form was previously displayed.</span></span></param>
        <param name="deviceDpiNew"><span data-ttu-id="174bb-837">フォームが表示されるディスプレイ デバイスの DPI 値。</span><span class="sxs-lookup"><span data-stu-id="174bb-837">The DPI value for the display device where the form will be displayed.</span></span></param>
        <param name="desiredSize"><span data-ttu-id="174bb-838">新しい DPI 値に基づくフォームの新しいサイズを表す <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-838">A <see cref="T:System.Drawing.Size" /> representing the new size of the form based on the new DPI value.</span></span></param>
        <summary><span data-ttu-id="174bb-839">GetDpiScaledSize イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-839">Raises the GetDpiScaledSize event.</span></span></summary>
        <returns><span data-ttu-id="174bb-840">成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-840"><see langword="true" /> if successful; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="form.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-841">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-841">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-842"><see cref="E:System.Windows.Forms.Control.HandleCreated" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-842">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="form.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-843">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-843">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-844"><see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-844">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHelpButtonClicked">
      <MemberSignature Language="C#" Value="protected virtual void OnHelpButtonClicked (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHelpButtonClicked(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHelpButtonClicked (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHelpButtonClicked(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHelpButtonClicked : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnHelpButtonClicked : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="form.OnHelpButtonClicked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-845">イベント データを含んでいる <see cref="T:System.ComponentModel.CancelEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="174bb-845">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-846"><see cref="E:System.Windows.Forms.Form.HelpButtonClicked" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-846">Raises the <see cref="E:System.Windows.Forms.Form.HelpButtonClicked" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-847">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-847">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-848">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-848">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-849"><xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-849">The <xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-850">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-850">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-851">派生クラスで <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-851">When overriding <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Form.HelpButtonClicked" />
        <altmember cref="E:System.Windows.Forms.Control.QueryAccessibilityHelp" />
        <altmember cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnInputLanguageChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnInputLanguageChanged (System.Windows.Forms.InputLanguageChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInputLanguageChanged(class System.Windows.Forms.InputLanguageChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInputLanguageChanged (e As InputLanguageChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInputLanguageChanged(System::Windows::Forms::InputLanguageChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInputLanguageChanged : System.Windows.Forms.InputLanguageChangedEventArgs -&gt; unit&#xA;override this.OnInputLanguageChanged : System.Windows.Forms.InputLanguageChangedEventArgs -&gt; unit" Usage="form.OnInputLanguageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.InputLanguageChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-852">イベント データを格納している <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-852">The <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-853"><see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-853">Raises the <see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-854">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-854">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-855">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-855">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-856"><xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-856">The <xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-857">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-857">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-858">派生クラスで <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-858">When overriding <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanged" />
        <altmember cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInputLanguageChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnInputLanguageChanging (System.Windows.Forms.InputLanguageChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInputLanguageChanging(class System.Windows.Forms.InputLanguageChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInputLanguageChanging (e As InputLanguageChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInputLanguageChanging(System::Windows::Forms::InputLanguageChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInputLanguageChanging : System.Windows.Forms.InputLanguageChangingEventArgs -&gt; unit&#xA;override this.OnInputLanguageChanging : System.Windows.Forms.InputLanguageChangingEventArgs -&gt; unit" Usage="form.OnInputLanguageChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.InputLanguageChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-859">イベント データを格納している <see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-859">The <see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-860"><see cref="E:System.Windows.Forms.Form.InputLanguageChanging" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-860">Raises the <see cref="E:System.Windows.Forms.Form.InputLanguageChanging" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-861">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-861">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-862">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-862">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-863"><xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-863">The <xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-864">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-864">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-865">派生クラスで <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-865">When overriding <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanging" />
        <altmember cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs levent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs levent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayout (levent As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ levent);" />
      <MemberSignature Language="F#" Value="override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="form.OnLayout levent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levent" Type="System.Windows.Forms.LayoutEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="levent"><span data-ttu-id="174bb-866">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="174bb-866">The event data.</span></span></param>
        <summary><span data-ttu-id="174bb-867"><see cref="E:System.Windows.Forms.Control.Layout" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-867">Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoad : EventArgs -&gt; unit&#xA;override this.OnLoad : EventArgs -&gt; unit" Usage="form.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-868">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-868">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-869"><see cref="E:System.Windows.Forms.Form.Load" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-869">Raises the <see cref="E:System.Windows.Forms.Form.Load" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-870">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-870">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-871">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-871">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-872"><xref:System.Windows.Forms.Form.OnLoad%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-872">The <xref:System.Windows.Forms.Form.OnLoad%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-873">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-873">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-874">派生クラスで <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-874">When overriding <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMaximizedBoundsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMaximizedBoundsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMaximizedBoundsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMaximizedBoundsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMaximizedBoundsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMaximizedBoundsChanged : EventArgs -&gt; unit&#xA;override this.OnMaximizedBoundsChanged : EventArgs -&gt; unit" Usage="form.OnMaximizedBoundsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-875">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-875">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-876"><see cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-876">Raises the <see cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-877">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-877">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-878">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-878">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-879"><xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-879">The <xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-880">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-880">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-881">派生クラスで <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-881">When overriding <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.Form.MaximizedBounds" />
        <altmember cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMaximumSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMaximumSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMaximumSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMaximumSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMaximumSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMaximumSizeChanged : EventArgs -&gt; unit&#xA;override this.OnMaximumSizeChanged : EventArgs -&gt; unit" Usage="form.OnMaximumSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-882">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-882">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-883"><see cref="E:System.Windows.Forms.Form.MaximumSizeChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-883">Raises the <see cref="E:System.Windows.Forms.Form.MaximumSizeChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-884">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-884">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-885">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-885">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-886"><xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-886">The <xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-887">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-887">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-888">派生クラスで <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-888">When overriding <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="E:System.Windows.Forms.Form.MaximumSizeChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMdiChildActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnMdiChildActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMdiChildActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMdiChildActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMdiChildActivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMdiChildActivate : EventArgs -&gt; unit&#xA;override this.OnMdiChildActivate : EventArgs -&gt; unit" Usage="form.OnMdiChildActivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-889">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-889">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-890"><see cref="E:System.Windows.Forms.Form.MdiChildActivate" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-890">Raises the <see cref="E:System.Windows.Forms.Form.MdiChildActivate" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-891">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-891">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-892">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-892">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-893"><xref:System.Windows.Forms.Form.OnMdiChildActivate%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-893">The <xref:System.Windows.Forms.Form.OnMdiChildActivate%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-894">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-894">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-895">派生クラスで <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-895">When overriding <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Form.MdiChildActivate" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuComplete(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuComplete : EventArgs -&gt; unit&#xA;override this.OnMenuComplete : EventArgs -&gt; unit" Usage="form.OnMenuComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-896">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-896">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-897"><see cref="E:System.Windows.Forms.Form.MenuComplete" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-897">Raises the <see cref="E:System.Windows.Forms.Form.MenuComplete" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-898">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-898">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-899">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-899">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-900"><xref:System.Windows.Forms.Form.OnMenuComplete%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-900">The <xref:System.Windows.Forms.Form.OnMenuComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-901">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-901">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-902">派生クラスで <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-902">When overriding <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Form.MenuComplete" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuStart">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuStart (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuStart(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuStart (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuStart(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuStart : EventArgs -&gt; unit&#xA;override this.OnMenuStart : EventArgs -&gt; unit" Usage="form.OnMenuStart e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-903">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-903">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-904"><see cref="E:System.Windows.Forms.Form.MenuStart" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-904">Raises the <see cref="E:System.Windows.Forms.Form.MenuStart" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-905">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-905">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-906">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-906">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-907"><xref:System.Windows.Forms.Form.OnMenuStart%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-907">The <xref:System.Windows.Forms.Form.OnMenuStart%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-908">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-908">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-909">派生クラスで <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-909">When overriding <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Form.MenuStart" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMinimumSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMinimumSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMinimumSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMinimumSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMinimumSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMinimumSizeChanged : EventArgs -&gt; unit&#xA;override this.OnMinimumSizeChanged : EventArgs -&gt; unit" Usage="form.OnMinimumSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-910">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-910">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-911"><see cref="E:System.Windows.Forms.Form.MinimumSizeChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-911">Raises the <see cref="E:System.Windows.Forms.Form.MinimumSizeChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-912">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-912">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-913">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-913">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-914"><xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-914">The <xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-915">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-915">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-916">派生クラスで <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-916">When overriding <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Form.MinimumSizeChanged" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="form.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-917">イベント データを含んでいる <see cref="T:System.Windows.Forms.PaintEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="174bb-917">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-918"><see cref="E:System.Windows.Forms.Control.Paint" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-918">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="form.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-919">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-919">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-920"><see cref="E:System.Windows.Forms.Control.Resize" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-920">Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnResizeBegin">
      <MemberSignature Language="C#" Value="protected virtual void OnResizeBegin (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResizeBegin(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResizeBegin (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResizeBegin(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResizeBegin : EventArgs -&gt; unit&#xA;override this.OnResizeBegin : EventArgs -&gt; unit" Usage="form.OnResizeBegin e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-921">イベント データを含んでいる <see cref="T:System.EventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="174bb-921">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-922"><see cref="E:System.Windows.Forms.Form.ResizeBegin" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-922">Raises the <see cref="E:System.Windows.Forms.Form.ResizeBegin" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-923"><xref:System.Windows.Forms.Form.ResizeBegin> イベントは、フォームの <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> プロパティが `true`に設定されている場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-923">The <xref:System.Windows.Forms.Form.ResizeBegin> event will only be raised if the form's <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="174bb-924">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-924">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-925">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-925">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-926"><xref:System.Windows.Forms.Form.OnResizeBegin%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-926">The <xref:System.Windows.Forms.Form.OnResizeBegin%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-927">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-927">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-928">派生クラスで <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-928">When overriding <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Form.ResizeBegin" />
        <altmember cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnResizeEnd">
      <MemberSignature Language="C#" Value="protected virtual void OnResizeEnd (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResizeEnd(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResizeEnd (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResizeEnd(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResizeEnd : EventArgs -&gt; unit&#xA;override this.OnResizeEnd : EventArgs -&gt; unit" Usage="form.OnResizeEnd e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-929">イベント データを含んでいる <see cref="T:System.EventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="174bb-929">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-930"><see cref="E:System.Windows.Forms.Form.ResizeEnd" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-930">Raises the <see cref="E:System.Windows.Forms.Form.ResizeEnd" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-931"><xref:System.Windows.Forms.Form.ResizeEnd> イベントは、フォームの <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> プロパティが `true`に設定されている場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-931">The <xref:System.Windows.Forms.Form.ResizeEnd> event will only be raised if the form's <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="174bb-932">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-932">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-933">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-933">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-934"><xref:System.Windows.Forms.Form.OnResizeEnd%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-934">The <xref:System.Windows.Forms.Form.OnResizeEnd%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-935">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-935">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-936">派生クラスで <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-936">When overriding <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Form.ResizeEnd" />
        <altmember cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftLayoutChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftLayoutChanged : EventArgs -&gt; unit" Usage="form.OnRightToLeftLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-937">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-937">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-938"><see cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-938">Raises the <see cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-939">現在のフォームまたはその親のいずれかがリソースを破棄している場合、<xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> メソッドは何もアクションを実行せずにを返します。</span><span class="sxs-lookup"><span data-stu-id="174bb-939">If the current form or one of its parents is disposing of resources, the <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method will return without performing any action.</span></span> <span data-ttu-id="174bb-940">フォームの <xref:System.Windows.Forms.Control.RightToLeft%2A> プロパティの値が <xref:System.Windows.Forms.RightToLeft.Yes>の場合、フォームとその子コントロールのハンドルは <xref:System.Windows.Forms.Control.RecreateHandle%2A> メソッドの呼び出しによって再作成されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-940">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of the form has a value of <xref:System.Windows.Forms.RightToLeft.Yes>, then the handles of the form and its child controls will be recreated through calls to the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.</span></span>  
  
 <span data-ttu-id="174bb-941">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-941">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-942">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-942">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-943"><xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-943">The <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-944">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-944">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-945">派生クラスで <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-945">When overriding <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
        <altmember cref="P:System.Windows.Forms.Form.RightToLeftLayout" />
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="Overload:System.Windows.Forms.Form.Dispose" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
      </Docs>
    </Member>
    <Member MemberName="OnShown">
      <MemberSignature Language="C#" Value="protected virtual void OnShown (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShown(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShown (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShown(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnShown : EventArgs -&gt; unit&#xA;override this.OnShown : EventArgs -&gt; unit" Usage="form.OnShown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-946">イベント データを含んでいる <see cref="T:System.EventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="174bb-946">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-947"><see cref="E:System.Windows.Forms.Form.Shown" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-947">Raises the <see cref="E:System.Windows.Forms.Form.Shown" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-948"><xref:System.Windows.Forms.Form.Shown> イベントは、フォームが最初に表示されるたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-948">The <xref:System.Windows.Forms.Form.Shown> event occurs whenever the form is first shown.</span></span>  
  
 <span data-ttu-id="174bb-949">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-949">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-950">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-950">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-951"><xref:System.Windows.Forms.Form.OnShown%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-951">The <xref:System.Windows.Forms.Form.OnShown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-952">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-952">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-953">派生クラスで <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-953">When overriding <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
        <altmember cref="Overload:System.Windows.Forms.Form.Show" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleChanged">
      <MemberSignature Language="C#" Value="protected override void OnStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnStyleChanged : EventArgs -&gt; unit" Usage="form.OnStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-954">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-954">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-955"><see cref="E:System.Windows.Forms.Control.StyleChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-955">Raises the <see cref="E:System.Windows.Forms.Control.StyleChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="form.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-956">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-956">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-957"><see cref="E:System.Windows.Forms.Control.TextChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-957">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnVisibleChanged">
      <MemberSignature Language="C#" Value="protected override void OnVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnVisibleChanged : EventArgs -&gt; unit" Usage="form.OnVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="174bb-958">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="174bb-958">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="174bb-959"><see cref="E:System.Windows.Forms.Control.VisibleChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="174bb-959">Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-960">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-960">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="174bb-961">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="174bb-961">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="174bb-962"><xref:System.Windows.Forms.Form.OnVisibleChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-962">The <xref:System.Windows.Forms.Form.OnVisibleChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="174bb-963">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-963">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="174bb-964">派生クラスで <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-964">When overriding <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="E:System.Windows.Forms.Control.VisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public double Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Opacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Opacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Opacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Opacity { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Opacity : double with get, set" Usage="System.Windows.Forms.Form.Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.OpacityConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-965">フォームの不透明度を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-965">Gets or sets the opacity level of the form.</span></span></summary>
        <value><span data-ttu-id="174bb-966">フォームの不透明度。</span><span class="sxs-lookup"><span data-stu-id="174bb-966">The level of opacity for the form.</span></span> <span data-ttu-id="174bb-967">既定値は 1.00 です。</span><span class="sxs-lookup"><span data-stu-id="174bb-967">The default is 1.00.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-968"><xref:System.Windows.Forms.Form.Opacity%2A> プロパティを使用すると、フォームとそのコントロールの透明度のレベルを指定できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-968">The <xref:System.Windows.Forms.Form.Opacity%2A> property enables you to specify a level of transparency for the form and its controls.</span></span> <span data-ttu-id="174bb-969">このプロパティが 100% (1.00) 未満の値に設定されている場合、罫線を含むフォーム全体が透明になります。</span><span class="sxs-lookup"><span data-stu-id="174bb-969">When this property is set to a value less than 100 percent (1.00), the entire form, including borders, is made more transparent.</span></span> <span data-ttu-id="174bb-970">このプロパティを 0% (0.00) に設定すると、フォームが完全に非表示になります。</span><span class="sxs-lookup"><span data-stu-id="174bb-970">Setting this property to a value of 0 percent (0.00) makes the form completely invisible.</span></span> <span data-ttu-id="174bb-971">このプロパティを使用すると、さまざまなレベルの透明度を指定したり、フォームの表示や非表示などの効果を提供したりできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-971">You can use this property to provide different levels of transparency or to provide effects such as phasing a form in or out of view.</span></span> <span data-ttu-id="174bb-972">たとえば、フォームをビューに段階的に分割するには、<xref:System.Windows.Forms.Form.Opacity%2A> プロパティを 0% (0.00) に設定し、100% (1.00) になるまで値を徐々に増やします。</span><span class="sxs-lookup"><span data-stu-id="174bb-972">For example, you can phase a form into view by setting the <xref:System.Windows.Forms.Form.Opacity%2A> property to a value of 0 percent (0.00) and gradually increasing the value until it reaches 100 percent (1.00).</span></span>  
  
<span data-ttu-id="174bb-973"><xref:System.Windows.Forms.Form.Opacity%2A> は、<xref:System.Windows.Forms.Form.TransparencyKey%2A>によって提供される透明度とは異なります。 <xref:System.Windows.Forms.Form.TransparencyKey%2A> プロパティに指定された値と同じ色である場合にのみ、フォームとコントロールが完全に透明になります。</span><span class="sxs-lookup"><span data-stu-id="174bb-973"><xref:System.Windows.Forms.Form.Opacity%2A> differs from the transparency provided by <xref:System.Windows.Forms.Form.TransparencyKey%2A>, which only makes a form and its controls completely transparent if they are the same color as the value specified in the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property.</span></span>  
  
<span data-ttu-id="174bb-974"><xref:System.Windows.Forms.Form.RightToLeftLayout%2A> が `true`場合、このプロパティはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="174bb-974">This property is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is `true`.</span></span>  
  
<span data-ttu-id="174bb-975"><xref:System.Windows.Forms.Form.Opacity%2A> プロパティは、レイヤード Windows API に依存します。</span><span class="sxs-lookup"><span data-stu-id="174bb-975">The <xref:System.Windows.Forms.Form.Opacity%2A> property depends on the Layered Windows API.</span></span> <span data-ttu-id="174bb-976">詳細については、「[レイヤードウィンドウ](/windows/win32/winmsg/window-features#layered-windows)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-976">For more information, see [Layered Windows](/windows/win32/winmsg/window-features#layered-windows).</span></span>

## Examples

<span data-ttu-id="174bb-977">次の例では、透明度レベル75% で表示されるフォームを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-977">The following example demonstrates how to create a form that is displayed with an opacity level of 75 percent.</span></span> <span data-ttu-id="174bb-978">フォームの不透明度を変更するために <xref:System.Windows.Forms.Form.Opacity%2A> プロパティが設定された、画面の中央に配置される新しいフォームを作成します。</span><span class="sxs-lookup"><span data-stu-id="174bb-978">It creates a new form that is positioned in the center of the screen with an <xref:System.Windows.Forms.Form.Opacity%2A> property set to change the opacity level of the form.</span></span> <span data-ttu-id="174bb-979">また、この例では、フォームの既定のサイズよりも大きなサイズのフォームを提供するように <xref:System.Windows.Forms.Form.Size%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-979">The example also sets the <xref:System.Windows.Forms.Form.Size%2A> property to provide a larger sized form than the default size of the form.</span></span> 

<span data-ttu-id="174bb-980">この例では、`CreateMyOpaqueForm` メソッドがイベントハンドラーまたは他のメソッドの別の形式から呼び出されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="174bb-980">This example assumes that the `CreateMyOpaqueForm` method is called from another form in an event handler or other method.</span></span>  
  
 [!code-cpp[Form.Opacity#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Opacity/CPP/form1.cpp#1)]
 [!code-csharp[Form.Opacity#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Opacity/CS/form1.cs#1)]
 [!code-vb[Form.Opacity#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Opacity/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.TransparencyKey" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="OwnedForms">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form[] OwnedForms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form[] OwnedForms" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.OwnedForms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnedForms As Form()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Windows::Forms::Form ^&gt; ^ OwnedForms { cli::array &lt;System::Windows::Forms::Form ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnedForms : System.Windows.Forms.Form[]" Usage="System.Windows.Forms.Form.OwnedForms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-981">対象となるフォームによって所有されている全フォームを表す、<see cref="T:System.Windows.Forms.Form" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="174bb-981">Gets an array of <see cref="T:System.Windows.Forms.Form" /> objects that represent all forms that are owned by this form.</span></span></summary>
        <value><span data-ttu-id="174bb-982">対象となるフォームによって所有されているフォームを表す <see cref="T:System.Windows.Forms.Form" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="174bb-982">A <see cref="T:System.Windows.Forms.Form" /> array that represents the owned forms for this form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-983">このプロパティは、このフォームが所有するすべてのフォームを含む配列を返します。</span><span class="sxs-lookup"><span data-stu-id="174bb-983">This property returns an array that contains all forms that are owned by this form.</span></span> <span data-ttu-id="174bb-984">フォームが別のフォームに所有されるようにするには、<xref:System.Windows.Forms.Form.AddOwnedForm%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="174bb-984">To make a form owned by another form, call the <xref:System.Windows.Forms.Form.AddOwnedForm%2A> method.</span></span> <span data-ttu-id="174bb-985">所有者フォームに割り当てられたフォームは、<xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> メソッドが呼び出されるまで所有されたままになります。</span><span class="sxs-lookup"><span data-stu-id="174bb-985">The form assigned to the owner form will remain owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called.</span></span> <span data-ttu-id="174bb-986">また、<xref:System.Windows.Forms.Form.Owner%2A> プロパティに所有者フォームへの参照を設定することによって、他のユーザーが所有するフォームを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-986">You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form.</span></span>  
  
 <span data-ttu-id="174bb-987">フォームが別のフォームに所有されている場合は、所有者フォームで閉じられるか、非表示になります。</span><span class="sxs-lookup"><span data-stu-id="174bb-987">When a form is owned by another form, it is closed or hidden with the owner form.</span></span> <span data-ttu-id="174bb-988">たとえば、`Form1`という名前のフォームが所有する `Form2` という名前のフォームを考えてみます。</span><span class="sxs-lookup"><span data-stu-id="174bb-988">For example, consider a form named `Form2` that is owned by a form named `Form1`.</span></span> <span data-ttu-id="174bb-989">`Form1` が閉じているか最小化されている場合は、`Form2` も閉じられるか、非表示になります。</span><span class="sxs-lookup"><span data-stu-id="174bb-989">If `Form1` is closed or minimized, `Form2` is also closed or hidden.</span></span> <span data-ttu-id="174bb-990">所有フォームは、所有者フォームの背後にも表示されません。</span><span class="sxs-lookup"><span data-stu-id="174bb-990">Owned forms are also never displayed behind their owner form.</span></span> <span data-ttu-id="174bb-991">所有しているフォーム ([検索と置換] ウィンドウなど) は、所有者フォームを選択したときに所有者フォームの背後に表示されないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-991">You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-992">フォームがマルチドキュメントインターフェイス (MDI) 親フォームの場合、このプロパティは、現在開いている MDI 子フォームを除き、表示されるすべてのフォームを返します。</span><span class="sxs-lookup"><span data-stu-id="174bb-992">If the form is a multiple-document interface (MDI) parent form, this property will return all forms that are displayed with the exception of any MDI child forms that are currently open.</span></span> <span data-ttu-id="174bb-993">MDI 親フォームで開かれている MDI 子フォームを取得するには、<xref:System.Windows.Forms.Form.MdiChildren%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-993">To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-994">次の例では、<xref:System.Windows.Forms.Form.OwnedForms%2A> プロパティを使用して、所有者フォームが所有するすべてのフォームを変更する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-994">The following example demonstrates how to use the <xref:System.Windows.Forms.Form.OwnedForms%2A> property to modify all forms owned by the owner form.</span></span> <span data-ttu-id="174bb-995">この例の最初のメソッドは、所有フォームに関連付けられている所有フォームの配列にフォームを追加します。</span><span class="sxs-lookup"><span data-stu-id="174bb-995">The first method in the example adds forms to the array of owned forms associated with the owned form.</span></span> <span data-ttu-id="174bb-996">2番目のメソッドは、所有されているすべてのフォームをループし、キャプションを変更します。</span><span class="sxs-lookup"><span data-stu-id="174bb-996">The second method loops through all owned forms and changes the caption.</span></span> <span data-ttu-id="174bb-997">この例では、両方のメソッドが、フォームのイベントまたはその他のメソッドによって呼び出される必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-997">This example requires that both methods are called by an event or other method of a form.</span></span>  
  
 [!code-cpp[Form.OwnedForms#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.OwnedForms/CPP/form1.cpp#1)]
 [!code-csharp[Form.OwnedForms#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.OwnedForms/CS/form1.cs#1)]
 [!code-vb[Form.OwnedForms#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.OwnedForms/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ Owner { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.Forms.Form with get, set" Usage="System.Windows.Forms.Form.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-998">対象のフォームを所有しているフォームを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-998">Gets or sets the form that owns this form.</span></span></summary>
        <value><span data-ttu-id="174bb-999">対象のフォームを所有しているフォームを表す <see cref="T:System.Windows.Forms.Form" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-999">A <see cref="T:System.Windows.Forms.Form" /> that represents the form that is the owner of this form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1000">フォームが別のフォームに所有されるようにするには、その <xref:System.Windows.Forms.Form.Owner%2A> プロパティに、所有者となるフォームへの参照を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1000">To make a form owned by another form, assign its <xref:System.Windows.Forms.Form.Owner%2A> property a reference to the form that will be the owner.</span></span>  
  
 <span data-ttu-id="174bb-1001">フォームが別のフォームに所有されている場合は、所有者フォームで閉じられるか、非表示になります。</span><span class="sxs-lookup"><span data-stu-id="174bb-1001">When a form is owned by another form, it is closed or hidden with the owner form.</span></span> <span data-ttu-id="174bb-1002">たとえば、`Form1`という名前のフォームが所有する `Form2` という名前のフォームを考えてみます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1002">For example, consider a form named `Form2` that is owned by a form named `Form1`.</span></span> <span data-ttu-id="174bb-1003">`Form1` が閉じているか最小化されている場合は、`Form2` も閉じられるか、非表示になります。所有フォームは、所有者フォームの背後にも表示されません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1003">If `Form1` is closed or minimized, `Form2` is also closed or hidden.Owned forms are also never displayed behind their owner form.</span></span> <span data-ttu-id="174bb-1004">[検索と置換] ウィンドウなど、windows で所有されているフォームを使用できます。これは、[所有者] フォームを選択したときには表示されなくなります。</span><span class="sxs-lookup"><span data-stu-id="174bb-1004">You can use owned forms for windows such as find and replace windows, which should not disappear when the owner form is selected.</span></span> <span data-ttu-id="174bb-1005">親フォームが所有するフォームを特定するには、<xref:System.Windows.Forms.Form.OwnedForms%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1005">To determine the forms that are owned by a parent form, use the <xref:System.Windows.Forms.Form.OwnedForms%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="174bb-1006">トップレベル ウィンドウには所有側フォームがありません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1006">A top-level window cannot have an owner.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.OwnedForms" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey : Message * System.Windows.Forms.Keys -&gt; bool" Usage="form.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="174bb-1007">処理する Win32 メッセージを表す、参照渡しされた <see cref="T:System.Windows.Forms.Message" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1007">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the Win32 message to process.</span></span></param>
        <param name="keyData"><span data-ttu-id="174bb-1008">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="174bb-1008">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span></span></param>
        <summary><span data-ttu-id="174bb-1009">コマンド キーを処理します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1009">Processes a command key.</span></span></summary>
        <returns><span data-ttu-id="174bb-1010">キーストロークがコントロールによって処理および使用された場合は <see langword="true" />。キーストロークをさらに処理できるようにする場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1010"><see langword="true" /> if the keystroke was processed and consumed by the control; otherwise, <see langword="false" /> to allow further processing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1011"><xref:System.Windows.Forms.Form.ProcessCmdKey%2A> メソッドは、基本 <xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=nameWithType> の実装をオーバーライドして、メインメニューコマンドキーおよび MDI アクセラレータの追加処理を提供します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1011">The <xref:System.Windows.Forms.Form.ProcessCmdKey%2A> method overrides the base <xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=nameWithType> implementation to provide additional handling of main menu command keys and MDI accelerators.</span></span>  
  
 <span data-ttu-id="174bb-1012">キーボード入力の詳細については、「 [Windows フォームアプリケーションでのキーボード入力](/dotnet/framework/winforms/keyboard-input-in-a-windows-forms-application)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-1012">For information about keyboard input, see [Keyboard Input in a Windows Forms Application](/dotnet/framework/winforms/keyboard-input-in-a-windows-forms-application).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <altmember cref="T:System.Windows.Forms.Message" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessMnemonic(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogChar">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogChar(char charCode);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogChar : char -&gt; bool" Usage="form.ProcessDialogChar charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode"><span data-ttu-id="174bb-1013">処理対象の文字。</span><span class="sxs-lookup"><span data-stu-id="174bb-1013">The character to process.</span></span></param>
        <summary><span data-ttu-id="174bb-1014">ダイアログ文字を処理します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1014">Processes a dialog character.</span></span></summary>
        <returns><span data-ttu-id="174bb-1015">文字がコントロールによって処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1015"><see langword="true" /> if the character was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="form.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="174bb-1016">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="174bb-1016">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span></span></param>
        <summary><span data-ttu-id="174bb-1017">ダイアログ ボックスのキーを処理します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1017">Processes a dialog box key.</span></span></summary>
        <returns><span data-ttu-id="174bb-1018">キーストロークがコントロールによって処理および使用された場合は <see langword="true" />。キーストロークをさらに処理できるようにする場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1018"><see langword="true" /> if the keystroke was processed and consumed by the control; otherwise, <see langword="false" /> to allow further processing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1019"><xref:System.Windows.Forms.Form.ProcessDialogKey%2A> メソッドは、基本 <xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=nameWithType> の実装をオーバーライドして、ダイアログボックスの戻り値とエスケープキーの追加の処理を提供します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1019">The <xref:System.Windows.Forms.Form.ProcessDialogKey%2A> method overrides the base <xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=nameWithType> implementation to provide additional handling of the RETURN and ESCAPE keys in dialog boxes.</span></span> <span data-ttu-id="174bb-1020">メソッドは、ALT またはコントロールの修飾子を含むキーストロークに対して処理を実行しません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1020">The method performs no processing on keystrokes that include the ALT or CONTROL modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessMnemonic(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyPreview">
      <MemberSignature Language="C#" Value="protected override bool ProcessKeyPreview (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessKeyPreview(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessKeyPreview (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessKeyPreview(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.ProcessKeyPreview : Message -&gt; bool" Usage="form.ProcessKeyPreview m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="174bb-1021">処理するウィンドウ メッセージを表す、参照渡しされた <see cref="T:System.Windows.Forms.Message" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1021">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span></span></param>
        <summary><span data-ttu-id="174bb-1022">キーボード メッセージをプレビューします。</span><span class="sxs-lookup"><span data-stu-id="174bb-1022">Previews a keyboard message.</span></span></summary>
        <returns><span data-ttu-id="174bb-1023">メッセージがコントロールによって処理された場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="174bb-1023"><see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessMnemonic(char charCode);" />
      <MemberSignature Language="F#" Value="override this.ProcessMnemonic : char -&gt; bool" Usage="form.ProcessMnemonic charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="charCode"><span data-ttu-id="174bb-1024">処理対象の文字。</span><span class="sxs-lookup"><span data-stu-id="174bb-1024">The character to process.</span></span></param>
        <summary><span data-ttu-id="174bb-1025">ニーモニック文字を処理します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1025">Processes a mnemonic character.</span></span></summary>
        <returns><span data-ttu-id="174bb-1026">文字がコントロールによってニーモニックとして処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1026"><see langword="true" /> if the character was processed as a mnemonic by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTabKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessTabKey (bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessTabKey(bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessTabKey (forward As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessTabKey(bool forward);" />
      <MemberSignature Language="F#" Value="override this.ProcessTabKey : bool -&gt; bool" Usage="form.ProcessTabKey forward" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="forward"><span data-ttu-id="174bb-1027">ContainerControl 内のコントロールを循環して選択する場合は<see langword="true" /> 、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1027"><see langword="true" /> to cycle forward through the controls in the ContainerControl; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="174bb-1028">次に使用できるコントロールを選択し、そのコントロールをアクティブにします。</span><span class="sxs-lookup"><span data-stu-id="174bb-1028">Selects the next available control and makes it the active control.</span></span></summary>
        <returns><span data-ttu-id="174bb-1029">コントロールが選択された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1029"><see langword="true" /> if a control is selected; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessTabKey(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveOwnedForm">
      <MemberSignature Language="C#" Value="public void RemoveOwnedForm (System.Windows.Forms.Form ownedForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveOwnedForm(class System.Windows.Forms.Form ownedForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveOwnedForm (ownedForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveOwnedForm(System::Windows::Forms::Form ^ ownedForm);" />
      <MemberSignature Language="F#" Value="member this.RemoveOwnedForm : System.Windows.Forms.Form -&gt; unit" Usage="form.RemoveOwnedForm ownedForm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownedForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="ownedForm"><span data-ttu-id="174bb-1030">対象となるフォームに所有されているフォームのリストから削除するフォームを表す <see cref="T:System.Windows.Forms.Form" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1030">A <see cref="T:System.Windows.Forms.Form" /> representing the form to remove from the list of owned forms for this form.</span></span></param>
        <summary><span data-ttu-id="174bb-1031">対象となるフォームから所有されているフォームを削除します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1031">Removes an owned form from this form.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1032">所有者フォームに割り当てられたフォームは、<xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> メソッドが呼び出されるまで所有されたままになります。</span><span class="sxs-lookup"><span data-stu-id="174bb-1032">The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called.</span></span> <span data-ttu-id="174bb-1033">所有されているフォームの一覧から所有されているフォームを削除するだけでなく、このメソッドも所有者フォームを `null`に設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1033">In addition to removing the owned form from the list of owned form, this method also sets the owner form to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
        <altmember cref="P:System.Windows.Forms.Form.OwnedForms" />
      </Docs>
    </Member>
    <Member MemberName="ResizeBegin">
      <MemberSignature Language="C#" Value="public event EventHandler ResizeBegin;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ResizeBegin" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.ResizeBegin" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResizeBegin As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ResizeBegin;" />
      <MemberSignature Language="F#" Value="member this.ResizeBegin : EventHandler " Usage="member this.ResizeBegin : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1034">フォームがサイズ変更モードになったときに発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1034">Occurs when a form enters resizing mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1035"><xref:System.Windows.Forms.Form.ResizeBegin> イベントは、ユーザーがフォームのサイズ変更を開始したときに発生します。通常は、フォームの右下隅にあるいずれかの境界線またはサイズ変更グリップをクリックしてドラッグします。</span><span class="sxs-lookup"><span data-stu-id="174bb-1035">The <xref:System.Windows.Forms.Form.ResizeBegin> event is raised when the user begins to resize a form, typically by clicking and dragging one of the borders or the sizing grip located on the lower-right corner of the form.</span></span> <span data-ttu-id="174bb-1036">この操作により、サイズ変更操作が完了するまで、モーダルサイズ変更ループにフォームが配置されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1036">This action puts the form into a modal sizing loop until the resize operation is completed.</span></span> <span data-ttu-id="174bb-1037">通常、次の一連のイベントは、サイズ変更操作中に発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1037">Typically, the following set of events occurs during a resize operation:</span></span>  
  
1.  <span data-ttu-id="174bb-1038">フォームがサイズ変更モードに切り替わると、1つの <xref:System.Windows.Forms.Form.ResizeBegin> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1038">A single <xref:System.Windows.Forms.Form.ResizeBegin> event occurs as the form enters resizing mode.</span></span>  
  
2.  <span data-ttu-id="174bb-1039">フォームの <xref:System.Windows.Forms.Form.Size%2A> が変更されると、<xref:System.Windows.Forms.Control.Resize> と <xref:System.Windows.Forms.Control.SizeChanged> イベントの0個以上のペアが発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1039">Zero or more pairs of <xref:System.Windows.Forms.Control.Resize> and <xref:System.Windows.Forms.Control.SizeChanged> events occur as the form's <xref:System.Windows.Forms.Form.Size%2A> is modified.</span></span>  
  
3.  <span data-ttu-id="174bb-1040">フォームがサイズ変更モードを終了すると、1つの <xref:System.Windows.Forms.Form.ResizeEnd> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1040">A single <xref:System.Windows.Forms.Form.ResizeEnd> event occurs as the form exits resizing mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-1041">境界線またはサイズ変更グリップをドラッグせずにクリックするだけで、中間 <xref:System.Windows.Forms.Control.Resize> と <xref:System.Windows.Forms.Control.SizeChanged> イベントのペアを使用せずに、<xref:System.Windows.Forms.Form.ResizeBegin> イベントと <xref:System.Windows.Forms.Form.ResizeEnd> イベントが生成されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1041">Just clicking without dragging on a border or resizing grip will generate the <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> events without any intermediate <xref:System.Windows.Forms.Control.Resize> and <xref:System.Windows.Forms.Control.SizeChanged> event pairs.</span></span>  
  
 <span data-ttu-id="174bb-1042">イベントの <xref:System.Windows.Forms.Form.ResizeBegin> と <xref:System.Windows.Forms.Form.ResizeEnd> のペアは、ユーザーがフォームを移動したときにも発生します。通常は、キャプションバーをクリックしてドラッグします。</span><span class="sxs-lookup"><span data-stu-id="174bb-1042">The <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> pair of events is also raised when the user moves the form, typically by clicking and dragging on the caption bar.</span></span> <span data-ttu-id="174bb-1043">これらのイベントは、フォームのプログラム操作では生成されません。たとえば、<xref:System.Windows.Forms.Form.Size%2A> または <xref:System.Windows.Forms.Control.Location%2A> プロパティを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1043">These events are not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties.</span></span>  
  
 <span data-ttu-id="174bb-1044">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-1044">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-1045">このメンバーの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1045">The following example demonstrates the use of this member.</span></span> <span data-ttu-id="174bb-1046">この例では、イベントハンドラーは、<xref:System.Windows.Forms.Form.ResizeBegin> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1046">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.ResizeBegin> event.</span></span> <span data-ttu-id="174bb-1047">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1047">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="174bb-1048">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-1048">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="174bb-1049">コード例を実行するには、`Form1`という <xref:System.Windows.Forms.Form> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1049">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="174bb-1050">次に、イベントハンドラーが <xref:System.Windows.Forms.Form.ResizeBegin> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1050">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.ResizeBegin> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#404](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#404)]
 [!code-vb[System.Windows.Forms.EventExamples#404](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#404)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Form.AutoSize" />
        <altmember cref="P:System.Windows.Forms.Form.ClientSize" />
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
        <altmember cref="P:System.Windows.Forms.Control.PreferredSize" />
        <altmember cref="P:System.Windows.Forms.Form.Size" />
        <altmember cref="P:System.Windows.Forms.Form.SizeGripStyle" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
        <altmember cref="E:System.Windows.Forms.Form.ResizeEnd" />
        <altmember cref="E:System.Windows.Forms.Control.SizeChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResizeEnd">
      <MemberSignature Language="C#" Value="public event EventHandler ResizeEnd;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ResizeEnd" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.ResizeEnd" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResizeEnd As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ResizeEnd;" />
      <MemberSignature Language="F#" Value="member this.ResizeEnd : EventHandler " Usage="member this.ResizeEnd : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1051">フォームがサイズ変更モードでなくなったときに発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1051">Occurs when a form exits resizing mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1052"><xref:System.Windows.Forms.Form.ResizeEnd> イベントは、ユーザーがフォームのサイズ変更を完了したときに発生します。通常は、フォームの右下隅にあるいずれかの境界線またはサイズ変更グリップをドラッグしてから離します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1052">The <xref:System.Windows.Forms.Form.ResizeEnd> event is raised when the user finishes resizing a form, typically by dragging one of the borders or the sizing grip located on the lower-right corner of the form, and then releasing it.</span></span> <span data-ttu-id="174bb-1053">サイズ変更操作の詳細については、「<xref:System.Windows.Forms.Form.ResizeBegin> イベント」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-1053">For more information about the resizing operation, see the <xref:System.Windows.Forms.Form.ResizeBegin> event.</span></span>  
  
 <span data-ttu-id="174bb-1054"><xref:System.Windows.Forms.Form.ResizeEnd> イベントは、ユーザーがフォームを移動した後にも生成されます。通常は、キャプションバーをクリックしてドラッグします。</span><span class="sxs-lookup"><span data-stu-id="174bb-1054">The <xref:System.Windows.Forms.Form.ResizeEnd> event is also generated after the user moves a form, typically by clicking and dragging on the caption bar.</span></span> <span data-ttu-id="174bb-1055">このイベントは、フォームのプログラム操作では生成されません。たとえば、<xref:System.Windows.Forms.Form.Size%2A> または <xref:System.Windows.Forms.Control.Location%2A> プロパティを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1055">This event is not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties.</span></span>  
  
 <span data-ttu-id="174bb-1056">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-1056">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-1057">このメンバーの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1057">The following example demonstrates the use of this member.</span></span> <span data-ttu-id="174bb-1058">この例では、イベントハンドラーは、<xref:System.Windows.Forms.Form.ResizeEnd> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1058">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.ResizeEnd> event.</span></span> <span data-ttu-id="174bb-1059">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1059">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="174bb-1060">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-1060">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="174bb-1061">コード例を実行するには、`Form1`という <xref:System.Windows.Forms.Form> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1061">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="174bb-1062">次に、イベントハンドラーが <xref:System.Windows.Forms.Form.ResizeEnd> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1062">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.ResizeEnd> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#405](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#405)]
 [!code-vb[System.Windows.Forms.EventExamples#405](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#405)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Form.AutoSize" />
        <altmember cref="P:System.Windows.Forms.Form.ClientSize" />
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
        <altmember cref="P:System.Windows.Forms.Control.PreferredSize" />
        <altmember cref="P:System.Windows.Forms.Form.Size" />
        <altmember cref="P:System.Windows.Forms.Form.SizeGripStyle" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
        <altmember cref="E:System.Windows.Forms.Form.ResizeBegin" />
        <altmember cref="E:System.Windows.Forms.Control.SizeChanged" />
      </Docs>
    </Member>
    <Member MemberName="RestoreBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle RestoreBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle RestoreBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.RestoreBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestoreBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle RestoreBounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.RestoreBounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.Form.RestoreBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1063">通常のウィンドウ状態におけるフォームの位置とサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1063">Gets the location and size of the form in its normal window state.</span></span></summary>
        <value><span data-ttu-id="174bb-1064">通常のウィンドウ状態におけるフォームの位置とサイズを含む <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1064">A <see cref="T:System.Drawing.Rectangle" /> that contains the location and size of the form in the normal window state.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1065">通常は、<xref:System.Windows.Forms.Form.RestoreBounds%2A> プロパティを使用して、通常のウィンドウ状態でのフォームのユーザーのウィンドウサイズと位置設定を追跡します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1065">Typically, you use the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property to track the user's window size and position preferences for the form in its normal window state.</span></span> <span data-ttu-id="174bb-1066">ユーザーのウィンドウ設定を追跡するときに、<xref:System.Windows.Forms.Form.WindowState%2A> の値と <xref:System.Windows.Forms.Form.RestoreBounds%2A> のプロパティの両方を追跡する必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-1066">You should track both the value of the <xref:System.Windows.Forms.Form.WindowState%2A> and <xref:System.Windows.Forms.Form.RestoreBounds%2A> properties when tracking the user's window preferences.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-1067"><xref:System.Windows.Forms.Form.RestoreBounds%2A> プロパティの値は、<xref:System.Windows.Forms.Form> クラスの <xref:System.Windows.Forms.Form.WindowState%2A> プロパティが <xref:System.Windows.Forms.FormWindowState.Normal>と等しくない場合にのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="174bb-1067">The value of the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property is valid only when the <xref:System.Windows.Forms.Form.WindowState%2A> property of the <xref:System.Windows.Forms.Form> class is not equal to <xref:System.Windows.Forms.FormWindowState.Normal>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.RightToLeftLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeftLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeftLayout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayout : bool with get, set" Usage="System.Windows.Forms.Form.RightToLeftLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1068">右から左方向の反転配置を有効にするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1068">Gets or sets a value indicating whether right-to-left mirror placement is turned on.</span></span></summary>
        <value><span data-ttu-id="174bb-1069">右から左方向の反転配置を有効にする場合は <see langword="true" />。子コントロールを通常どおりに配置する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1069"><see langword="true" /> if right-to-left mirror placement is turned on; otherwise, <see langword="false" /> for standard child control placement.</span></span> <span data-ttu-id="174bb-1070">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="174bb-1070">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1071"><xref:System.Windows.Forms.Form.RightToLeftLayout%2A> プロパティは、主に世界中のユーザー向けの国際対応フォームを開発する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="174bb-1071">The <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> property is primarily useful for developing world-ready forms for worldwide audiences.</span></span> <span data-ttu-id="174bb-1072">多くのフォームは、コントロールが左から右の形式でフォームにレイアウトされるように設計されています。</span><span class="sxs-lookup"><span data-stu-id="174bb-1072">Many forms are designed so that controls are laid out on a form in a left-to-right fashion.</span></span> <span data-ttu-id="174bb-1073">これらのフォームは、この書き込み方向に従う言語と互換性があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-1073">These forms are compatible with languages that follow this writing direction.</span></span> <span data-ttu-id="174bb-1074">ただし、右から左へ記述する言語のユーザーに同じフォームを表示する場合は、フォーム上のコントロールの順序を逆にすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="174bb-1074">However, when you display the same forms to users of right-to-left languages, it is often preferable to reverse the order of the controls on the form.</span></span> <span data-ttu-id="174bb-1075"><xref:System.Windows.Forms.Form.RightToLeftLayout%2A> と <xref:System.Windows.Forms.Control.RightToLeft%2A> の両方のプロパティが `true`場合、フォームに対してミラーリングが有効になり、制御の配置とテキストフローは右から左になります。</span><span class="sxs-lookup"><span data-stu-id="174bb-1075">If both the <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> and <xref:System.Windows.Forms.Control.RightToLeft%2A> properties are `true`, mirroring will be turned on for the form, and control placement and text flow will be right-to-left.</span></span>  
  
 <span data-ttu-id="174bb-1076"><xref:System.Windows.Forms.Control.RightToLeft%2A>とは異なり、<xref:System.Windows.Forms.Form.RightToLeftLayout%2A> はを継承しません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1076">Unlike <xref:System.Windows.Forms.Control.RightToLeft%2A>, <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> does not inherit.</span></span> <span data-ttu-id="174bb-1077">子コントロールに対して有効にする場合は、ミラー化する各子コントロールに設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-1077">If you want it to take effect for child controls, you must set it on each child control that you want mirrored.</span></span>  
  
 <span data-ttu-id="174bb-1078"><xref:System.Windows.Forms.Form.RightToLeftLayout%2A> が `Yes`に設定されている場合、オーナー描画はサポートされません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1078">Owner draw is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `Yes`.</span></span> <span data-ttu-id="174bb-1079">オーナー描画イベントは引き続き発生しますが、これらのイベントで作成したコードの動作は定義されていません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1079">The owner draw events will still occur, but the behavior of any code you author in these events is not defined.</span></span> <span data-ttu-id="174bb-1080">さらに、<xref:System.Windows.Forms.Control.BackgroundImage%2A>、<xref:System.Windows.Forms.Form.Opacity%2A>、<xref:System.Windows.Forms.Form.TransparencyKey%2A>、および描画イベントはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1080">Additionally, <xref:System.Windows.Forms.Control.BackgroundImage%2A>, <xref:System.Windows.Forms.Form.Opacity%2A>, <xref:System.Windows.Forms.Form.TransparencyKey%2A>, and the painting events are not supported.</span></span>  
  
 <span data-ttu-id="174bb-1081"><xref:System.Windows.Forms.Form.RightToLeftLayout%2A> プロパティと <xref:System.Windows.Forms.Control.RightToLeft%2A> プロパティによって、次の Windows API ウィンドウスタイルが設定されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1081">The <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> and <xref:System.Windows.Forms.Control.RightToLeft%2A> properties cause the following Windows API window styles to be set:</span></span>  
  
-   <span data-ttu-id="174bb-1082"><xref:System.Windows.Forms.Control.RightToLeft%2A> が `Yes` に設定され <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> が `true`に設定されている場合、Windows フォームは `WS_EX_LAYOUTRTL` ウィンドウスタイルを設定し、`WS_EX_RIGHT` スタイルと `WS_EX_RTLREADING` スタイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1082">When <xref:System.Windows.Forms.Control.RightToLeft%2A> is set to `Yes` and <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `true`, Windows Forms sets the `WS_EX_LAYOUTRTL` window style, and removes the `WS_EX_RIGHT` and `WS_EX_RTLREADING` styles.</span></span>  
  
-   <span data-ttu-id="174bb-1083"><xref:System.Windows.Forms.Control.RightToLeft%2A> が `Yes` に設定されているにもかかわらず <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> が `No`に設定されている場合、Windows フォームによって `WS_EX_RIGHT` ウィンドウスタイルが設定されます。`WS_EX_RTLREADING`</span><span class="sxs-lookup"><span data-stu-id="174bb-1083">When <xref:System.Windows.Forms.Control.RightToLeft%2A> is set to `Yes` but <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `No`, Windows Forms sets the `WS_EX_RIGHT` and `WS_EX_RTLREADING` window styles.</span></span>  
  
 <span data-ttu-id="174bb-1084">このプロパティの値を変更すると、<xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1084">Changing the value of this property raises the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.</span></span>  
  
 <span data-ttu-id="174bb-1085">グローバリゼーションの問題の詳細については、「[国際対応アプリケーションを開発するためのベストプラクティス](/dotnet/standard/globalization-localization/best-practices-for-developing-world-ready-apps)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-1085">For more information about globalization issues, see [Best Practices for Developing World-Ready Applications](/dotnet/standard/globalization-localization/best-practices-for-developing-world-ready-apps).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="Overload:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayoutChanged : EventHandler " Usage="member this.RightToLeftLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1086"><see cref="P:System.Windows.Forms.Form.RightToLeftLayout" /> プロパティの値が変更された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1086">Occurs after the value of the <see cref="P:System.Windows.Forms.Form.RightToLeftLayout" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1087"><xref:System.Windows.Forms.Control.RightToLeft%2A> と <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> のプロパティは、通常、国際対応アプリケーションの開発に使用されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1087">The <xref:System.Windows.Forms.Control.RightToLeft%2A> and <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> properties are typically used in developing World-Ready applications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-1088">このメンバーの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1088">The following example demonstrates the use of this member.</span></span> <span data-ttu-id="174bb-1089">この例では、イベントハンドラーは、<xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1089">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.</span></span> <span data-ttu-id="174bb-1090">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1090">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="174bb-1091">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-1091">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="174bb-1092">コード例を実行するには、`Form1`という <xref:System.Windows.Forms.Form> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1092">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="174bb-1093">次に、イベントハンドラーが <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1093">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#402](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#402)]
 [!code-vb[System.Windows.Forms.EventExamples#402](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#402)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.RightToLeftLayout" />
        <altmember cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleControl">
      <MemberSignature Language="C#" Value="protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleControl(valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleControl (factor As SizeF, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleControl(System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.ScaleControl : System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="form.ScaleControl (factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="factor"><span data-ttu-id="174bb-1094">コントロールの高さと幅のスケールを設定する際の係数。</span><span class="sxs-lookup"><span data-stu-id="174bb-1094">The factor by which the height and width of the control are scaled.</span></span></param>
        <param name="specified"><span data-ttu-id="174bb-1095">コントロールのサイズと位置を定義するときに使用するコントロールの境界を指定する <see cref="T:System.Windows.Forms.BoundsSpecified" /> 値。</span><span class="sxs-lookup"><span data-stu-id="174bb-1095">A <see cref="T:System.Windows.Forms.BoundsSpecified" /> value that specifies the bounds of the control to use when defining its size and position.</span></span></param>
        <summary><span data-ttu-id="174bb-1096">コントロールの位置、サイズ、埋め込み、および余白のスケールを設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1096">Scales the location, size, padding, and margin of a control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleCore">
      <MemberSignature Language="C#" Value="protected override void ScaleCore (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleCore(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleCore (x As Single, y As Single)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleCore(float x, float y);" />
      <MemberSignature Language="F#" Value="override this.ScaleCore : single * single -&gt; unit" Usage="form.ScaleCore (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="174bb-1097">フォームを水平方向にスケーリングするための倍率。</span><span class="sxs-lookup"><span data-stu-id="174bb-1097">Percentage to scale the form horizontally</span></span></param>
        <param name="y"><span data-ttu-id="174bb-1098">フォームを垂直方向にスケーリングするための倍率。</span><span class="sxs-lookup"><span data-stu-id="174bb-1098">Percentage to scale the form vertically</span></span></param>
        <summary><span data-ttu-id="174bb-1099">フォームのスケーリングを実行します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1099">Performs scaling of the form.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="protected override void Select (bool directed, bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Select(bool directed, bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Select (directed As Boolean, forward As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Select(bool directed, bool forward);" />
      <MemberSignature Language="F#" Value="override this.Select : bool * bool -&gt; unit" Usage="form.Select (directed, forward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directed" Type="System.Boolean" />
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="directed"><span data-ttu-id="174bb-1100">true に設定すると、アクティブ コントロールが変更されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1100">If set to true that the active control is changed</span></span></param>
        <param name="forward"><span data-ttu-id="174bb-1101">directed が true の場合に、フォーカスを移動させる方向を制御します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1101">If directed is true, then this controls the direction in which focus is moved.</span></span> <span data-ttu-id="174bb-1102">このパラメーターが <see langword="true" /> の場合は次のコントロールが選択され、それ以外の場合は前のコントロールが選択されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1102">If this is <see langword="true" />, then the next control is selected; otherwise, the previous control is selected.</span></span></param>
        <summary><span data-ttu-id="174bb-1103">このフォームを選択し、オプションで次のコントロールまたは前のコントロールを選択します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1103">Selects this form, and optionally selects the next or previous control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="form.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="174bb-1104">コントロールの新しい <see cref="P:System.Windows.Forms.Control.Left" /> プロパティ値。</span><span class="sxs-lookup"><span data-stu-id="174bb-1104">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span></span></param>
        <param name="y"><span data-ttu-id="174bb-1105">コントロールの新しい <see cref="P:System.Windows.Forms.Control.Top" /> プロパティ値。</span><span class="sxs-lookup"><span data-stu-id="174bb-1105">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span></span></param>
        <param name="width"><span data-ttu-id="174bb-1106">コントロールの新しい <see cref="P:System.Windows.Forms.Control.Width" /> プロパティ値。</span><span class="sxs-lookup"><span data-stu-id="174bb-1106">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span></span></param>
        <param name="height"><span data-ttu-id="174bb-1107">コントロールの新しい <see cref="P:System.Windows.Forms.Control.Height" /> プロパティ値。</span><span class="sxs-lookup"><span data-stu-id="174bb-1107">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span></span></param>
        <param name="specified"><span data-ttu-id="174bb-1108"><see cref="T:System.Windows.Forms.BoundsSpecified" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="174bb-1108">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span></span></param>
        <summary><span data-ttu-id="174bb-1109">このコントロールの指定した境界を設定する作業を実行します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1109">Performs the work of setting the specified bounds of this control.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="SetClientSizeCore">
      <MemberSignature Language="C#" Value="protected override void SetClientSizeCore (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetClientSizeCore(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetClientSizeCore (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetClientSizeCore(int x, int y);" />
      <MemberSignature Language="F#" Value="override this.SetClientSizeCore : int * int -&gt; unit" Usage="form.SetClientSizeCore (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="174bb-1110">必要なクライアント領域の幅。</span><span class="sxs-lookup"><span data-stu-id="174bb-1110">Requested width of the client region.</span></span></param>
        <param name="y"><span data-ttu-id="174bb-1111">必要なクライアント領域の高さ。</span><span class="sxs-lookup"><span data-stu-id="174bb-1111">Requested height of the client region.</span></span></param>
        <summary><span data-ttu-id="174bb-1112">フォームのクライアント サイズを設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1112">Sets the client size of the form.</span></span> <span data-ttu-id="174bb-1113">このメソッドは、クライアント サイズを指定されたサイズにするために、フォームの境界を調節します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1113">This will adjust the bounds of the form to make the client size the requested size.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Form.ClientSize" />
      </Docs>
    </Member>
    <Member MemberName="SetDesktopBounds">
      <MemberSignature Language="C#" Value="public void SetDesktopBounds (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDesktopBounds(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDesktopBounds (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDesktopBounds(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.SetDesktopBounds : int * int * int * int -&gt; unit" Usage="form.SetDesktopBounds (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="174bb-1114">フォームの位置の x 座標。</span><span class="sxs-lookup"><span data-stu-id="174bb-1114">The x-coordinate of the form's location.</span></span></param>
        <param name="y"><span data-ttu-id="174bb-1115">フォームの位置の y 座標。</span><span class="sxs-lookup"><span data-stu-id="174bb-1115">The y-coordinate of the form's location.</span></span></param>
        <param name="width"><span data-ttu-id="174bb-1116">フォームの幅。</span><span class="sxs-lookup"><span data-stu-id="174bb-1116">The width of the form.</span></span></param>
        <param name="height"><span data-ttu-id="174bb-1117">フォームの高さ。</span><span class="sxs-lookup"><span data-stu-id="174bb-1117">The height of the form.</span></span></param>
        <summary><span data-ttu-id="174bb-1118">フォームの範囲をデスクトップ座標で設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1118">Sets the bounds of the form in desktop coordinates.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1119">デスクトップ座標は、タスクバーを除外する画面の作業領域に基づいています。</span><span class="sxs-lookup"><span data-stu-id="174bb-1119">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="174bb-1120">このメソッドを使用して、デスクトップ上のフォームの位置とサイズを設定できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1120">You can use this method to set the position and size of your form on the desktop.</span></span> <span data-ttu-id="174bb-1121">デスクトップの座標はフォームの作業領域に基づいているため、この方法を使用して、フォームがデスクトップに完全に表示されるようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1121">Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-1122"><xref:System.Windows.Forms.Form.SetDesktopBounds%2A> メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1122">The following example demonstrates using the <xref:System.Windows.Forms.Form.SetDesktopBounds%2A> method.</span></span> <span data-ttu-id="174bb-1123">この例を実行するには、`Button2`という名前のボタンを含むフォームに次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1123">To run this example, paste the following code in a form that contains a button named `Button2`.</span></span> <span data-ttu-id="174bb-1124">すべてのイベントがイベントハンドラーに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1124">Ensure all events are associated with their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.FormExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.FormExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetDesktopLocation">
      <MemberSignature Language="C#" Value="public void SetDesktopLocation (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDesktopLocation(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDesktopLocation (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDesktopLocation(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.SetDesktopLocation : int * int -&gt; unit" Usage="form.SetDesktopLocation (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="174bb-1125">フォームの位置の x 座標。</span><span class="sxs-lookup"><span data-stu-id="174bb-1125">The x-coordinate of the form's location.</span></span></param>
        <param name="y"><span data-ttu-id="174bb-1126">フォームの位置の y 座標。</span><span class="sxs-lookup"><span data-stu-id="174bb-1126">The y-coordinate of the form's location.</span></span></param>
        <summary><span data-ttu-id="174bb-1127">フォームの位置をデスクトップ座標で設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1127">Sets the location of the form in desktop coordinates.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1128">デスクトップ座標は、タスクバーを除外する画面の作業領域に基づいています。</span><span class="sxs-lookup"><span data-stu-id="174bb-1128">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="174bb-1129">この方法を使用して、フォームをデスクトップに配置できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1129">You can use this method to position your form on the desktop.</span></span> <span data-ttu-id="174bb-1130">デスクトップの座標はフォームの作業領域に基づいているため、この方法を使用して、フォームがデスクトップに完全に表示されるようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1130">Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.</span></span> <span data-ttu-id="174bb-1131">このメソッドは、主にトップレベルのフォームに使用することを目的としています。<xref:System.Windows.Forms.Form.LayoutMdi%2A> メソッドを使用して、マルチドキュメントインターフェイス (MDI) 子フォームを配置します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1131">This method is intended to be used primarily for top-level forms; use the <xref:System.Windows.Forms.Form.LayoutMdi%2A> method to position multiple-document interface (MDI) child forms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-1132">次の例では、<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>、<xref:System.Windows.Forms.Form.Load>、および <xref:System.Windows.Forms.Form.Activate%2A> メンバーを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1132">The following example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="174bb-1133">この例を実行するには、`Button1` と呼ばれるボタンと、`Label1` と `Label2`と呼ばれる2つの `Label` コントロールを含む `Form1` という名前のフォームに次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1133">To run the example, paste the following code in a form called `Form1` containing a button called `Button1` and two `Label` controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
      </Docs>
    </Member>
    <Member MemberName="SetVisibleCore">
      <MemberSignature Language="C#" Value="protected override void SetVisibleCore (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetVisibleCore(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetVisibleCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetVisibleCore (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetVisibleCore(bool value);" />
      <MemberSignature Language="F#" Value="override this.SetVisibleCore : bool -&gt; unit" Usage="form.SetVisibleCore value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="174bb-1134">コントロールを表示する場合は<see langword="true" /> 。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1134"><see langword="true" /> to make the control visible; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="174bb-1135">コントロールを指定した表示状態に設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1135">Sets the control to the specified visible state.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (System.Windows.Forms.IWin32Window owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(class System.Windows.Forms.IWin32Window owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show (owner As IWin32Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(System::Windows::Forms::IWin32Window ^ owner);" />
      <MemberSignature Language="F#" Value="override this.Show : System.Windows.Forms.IWin32Window -&gt; unit" Usage="form.Show owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="174bb-1136"><see cref="T:System.Windows.Forms.IWin32Window" /> を実装し、このフォームを所有するトップレベル ウィンドウを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="174bb-1136">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> and represents the top-level window that will own this form.</span></span></param>
        <summary><span data-ttu-id="174bb-1137">所有側フォームを指定してフォームをユーザーに表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1137">Shows the form with the specified owner to the user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1138">このメソッドを使用すると、非モーダルフォームを表示できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1138">You can use this method to display a non-modal form.</span></span> <span data-ttu-id="174bb-1139">このメソッドを使用すると、フォームの [<xref:System.Windows.Forms.Form.Owner%2A>] プロパティが `owner`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1139">When you use this method, the <xref:System.Windows.Forms.Form.Owner%2A> property of the form is set to `owner`.</span></span> <span data-ttu-id="174bb-1140">非モーダルフォームは、<xref:System.Windows.Forms.Form.Owner%2A> プロパティを使用して、所有しているフォームに関する情報を取得できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1140">The non-modal form can use the <xref:System.Windows.Forms.Form.Owner%2A> property to get information about the owning form.</span></span>  <span data-ttu-id="174bb-1141">このメソッドの呼び出しは、非モーダルの <xref:System.Windows.Forms.Form.Owner%2A> プロパティを設定し、<xref:System.Windows.Forms.Control.Show> メソッドを呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="174bb-1141">Calling this method is identical to setting the <xref:System.Windows.Forms.Form.Owner%2A> property of the non-modal and then calling the <xref:System.Windows.Forms.Control.Show> method.</span></span>  
  
 <span data-ttu-id="174bb-1142">フォームを表示することは、<xref:System.Windows.Forms.Control.Visible%2A> プロパティを `true`に設定することと同じです。</span><span class="sxs-lookup"><span data-stu-id="174bb-1142">Showing the form is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `true`.</span></span> <span data-ttu-id="174bb-1143"><xref:System.Windows.Forms.Form.Show%2A> メソッドが呼び出されると、<xref:System.Windows.Forms.Control.Hide%2A> メソッドが呼び出されるまで、<xref:System.Windows.Forms.Control.Visible%2A> プロパティは `true` の値を返します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1143">After the <xref:System.Windows.Forms.Form.Show%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `true` until the <xref:System.Windows.Forms.Control.Hide%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="174bb-1144">表示しようとしているフォームが既に表示されています。</span><span class="sxs-lookup"><span data-stu-id="174bb-1144">The form being shown is already visible.</span></span>  
  
<span data-ttu-id="174bb-1145">または</span><span class="sxs-lookup"><span data-stu-id="174bb-1145">-or-</span></span> 
<span data-ttu-id="174bb-1146"><paramref name="owner" /> パラメーターで指定されたフォームが、表示しようとしているフォームと同じです。</span><span class="sxs-lookup"><span data-stu-id="174bb-1146">The form specified in the <paramref name="owner" /> parameter is the same as the form being shown.</span></span>  
  
<span data-ttu-id="174bb-1147">または</span><span class="sxs-lookup"><span data-stu-id="174bb-1147">-or-</span></span> 
<span data-ttu-id="174bb-1148">表示しようとしているフォームが無効です。</span><span class="sxs-lookup"><span data-stu-id="174bb-1148">The form being shown is disabled.</span></span>  
  
<span data-ttu-id="174bb-1149">または</span><span class="sxs-lookup"><span data-stu-id="174bb-1149">-or-</span></span> 
<span data-ttu-id="174bb-1150">表示しようとしているフォームがトップレベル ウィンドウではありません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1150">The form being shown is not a top-level window.</span></span>  
  
<span data-ttu-id="174bb-1151">または</span><span class="sxs-lookup"><span data-stu-id="174bb-1151">-or-</span></span> 
<span data-ttu-id="174bb-1152">ダイアログ ボックスとして表示しようとしているフォームが既にモーダル フォームです。</span><span class="sxs-lookup"><span data-stu-id="174bb-1152">The form being shown as a dialog box is already a modal form.</span></span>  
  
<span data-ttu-id="174bb-1153">または</span><span class="sxs-lookup"><span data-stu-id="174bb-1153">-or-</span></span> 
<span data-ttu-id="174bb-1154">現在のプロセスがユーザー対話モードで実行されていません (詳細については、<see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> のトピックを参照してください)。</span><span class="sxs-lookup"><span data-stu-id="174bb-1154">The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span></span></exception>
        <altmember cref="Overload:System.Windows.Forms.Form.ShowDialog" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="P:System.Windows.Forms.Form.WindowState" />
        <altmember cref="P:System.Windows.Forms.Form.ShowInTaskbar" />
        <altmember cref="P:System.Windows.Forms.Form.ShowIcon" />
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowDialog">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="174bb-1155">フォームをモーダル ダイアログ ボックスとして表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1155">Shows the form as a modal dialog box.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DialogResult ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : unit -&gt; System.Windows.Forms.DialogResult" Usage="form.ShowDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="174bb-1156">フォームをモーダル ダイアログ ボックスとして表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1156">Shows the form as a modal dialog box.</span></span></summary>
        <returns><span data-ttu-id="174bb-1157"><see cref="T:System.Windows.Forms.DialogResult" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="174bb-1157">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1158">このメソッドを使用すると、アプリケーションにモーダルダイアログボックスを表示できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1158">You can use this method to display a modal dialog box in your application.</span></span> <span data-ttu-id="174bb-1159">このメソッドが呼び出されると、ダイアログボックスが閉じられるまで、その後のコードは実行されません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1159">When this method is called, the code following it is not executed until after the dialog box is closed.</span></span> <span data-ttu-id="174bb-1160">ダイアログボックスには、<xref:System.Windows.Forms.DialogResult> 列挙型の値の1つを割り当てることができます。そのためには、フォームの <xref:System.Windows.Forms.Button> の <xref:System.Windows.Forms.Button.DialogResult%2A> プロパティに割り当てるか、コードでフォームの <xref:System.Windows.Forms.Form.DialogResult%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1160">The dialog box can be assigned one of the values of the <xref:System.Windows.Forms.DialogResult> enumeration by assigning it to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> on the form or by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form in code.</span></span> <span data-ttu-id="174bb-1161">この値は、このメソッドによって返されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1161">This value is then returned by this method.</span></span> <span data-ttu-id="174bb-1162">この戻り値を使用して、ダイアログボックスで発生したアクションをどのように処理するかを決定できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1162">You can use this return value to determine how to process the actions that occurred in the dialog box.</span></span> <span data-ttu-id="174bb-1163">たとえば、ダイアログボックスが閉じられ、このメソッドによって `DialogResult.Cancel` 値が返された場合、呼び出し <xref:System.Windows.Forms.Form.ShowDialog%2A> に続くコードが実行されないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1163">For example, if the dialog box was closed and returned the `DialogResult.Cancel` value through this method, you could prevent code following the call to <xref:System.Windows.Forms.Form.ShowDialog%2A> from executing.</span></span>  
  
 <span data-ttu-id="174bb-1164">フォームがモーダルダイアログボックスとして表示されている場合、**閉じる** ボタン (フォームの右上隅にある X) をクリックすると、フォームが非表示になり、<xref:System.Windows.Forms.Form.DialogResult%2A> プロパティが `DialogResult.Cancel`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1164">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="174bb-1165">非モーダルフォームとは異なり、<xref:System.Windows.Forms.Form.Close%2A> メソッドは、ユーザーがダイアログボックスの [フォームを閉じる] ボタンをクリックしたとき、または <xref:System.Windows.Forms.Form.DialogResult%2A> プロパティの値を設定したときに .NET Framework によって呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1165">Unlike non-modal forms, the <xref:System.Windows.Forms.Form.Close%2A> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property.</span></span> <span data-ttu-id="174bb-1166">代わりに、フォームは非表示になり、ダイアログボックスの新しいインスタンスを作成せずに再び表示できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1166">Instead the form is hidden and can be shown again without creating a new instance of the dialog box.</span></span> <span data-ttu-id="174bb-1167">ダイアログボックスとして表示されるフォームは、closed ではなく非表示になるため、アプリケーションでフォームが不要になったときに、フォームの <xref:System.Windows.Forms.Control.Dispose%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-1167">Because a form displayed as a dialog box is hidden instead of closed, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.</span></span>  
  
 <span data-ttu-id="174bb-1168">このバージョンの <xref:System.Windows.Forms.Form.ShowDialog%2A> メソッドでは、フォームまたはコントロールが所有者として指定されていません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1168">This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method does not specify a form or control as its owner.</span></span> <span data-ttu-id="174bb-1169">このバージョンが呼び出されると、現在アクティブなウィンドウがダイアログボックスの所有者になります。</span><span class="sxs-lookup"><span data-stu-id="174bb-1169">When this version is called, the currently active window is made the owner of the dialog box.</span></span> <span data-ttu-id="174bb-1170">特定の所有者を指定する場合は、このメソッドのもう1つのバージョンを使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1170">If you want to specify a specific owner, use the other version of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-1171">次の例では、フォームをモーダルダイアログボックスとして表示し、ダイアログボックスフォームの <xref:System.Windows.Forms.TextBox> コントロールの値を読み取るかどうかを決定する前に、ダイアログボックスの戻り値を評価します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1171">The following example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <xref:System.Windows.Forms.TextBox> control on the dialog box form.</span></span> <span data-ttu-id="174bb-1172">この例では、`testDialog` という名前の <xref:System.Windows.Forms.Form> が作成され、`TextBox1`という名前の <xref:System.Windows.Forms.TextBox> コントロールが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-1172">This example requires that a <xref:System.Windows.Forms.Form> named `testDialog` is created and that it contains a <xref:System.Windows.Forms.TextBox> control named `TextBox1`.</span></span> <span data-ttu-id="174bb-1173">さらに、この例では、`testDialog` をモーダルダイアログボックスとして表示するために、この例のコードが含まれており、別の <xref:System.Windows.Forms.Form> から呼び出されていることが必要です。</span><span class="sxs-lookup"><span data-stu-id="174bb-1173">Furthermore, the example requires that code in this example is contained and called from a different <xref:System.Windows.Forms.Form> in order to display `testDialog` as a modal dialog box.</span></span> <span data-ttu-id="174bb-1174">この例では、ダイアログボックスの所有者を指定する <xref:System.Windows.Forms.Form.ShowDialog%2A> のバージョンを使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1174">The example uses the version of <xref:System.Windows.Forms.Form.ShowDialog%2A> that specifies an owner for the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.ShowDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ShowDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ShowDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ShowDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="174bb-1175">表示しようとしているフォームが既に表示されています。</span><span class="sxs-lookup"><span data-stu-id="174bb-1175">The form being shown is already visible.</span></span>  
  
<span data-ttu-id="174bb-1176">または</span><span class="sxs-lookup"><span data-stu-id="174bb-1176">-or-</span></span> 
<span data-ttu-id="174bb-1177">表示しようとしているフォームが無効です。</span><span class="sxs-lookup"><span data-stu-id="174bb-1177">The form being shown is disabled.</span></span>  
  
<span data-ttu-id="174bb-1178">または</span><span class="sxs-lookup"><span data-stu-id="174bb-1178">-or-</span></span> 
<span data-ttu-id="174bb-1179">表示しようとしているフォームがトップレベル ウィンドウではありません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1179">The form being shown is not a top-level window.</span></span>  
  
<span data-ttu-id="174bb-1180">または</span><span class="sxs-lookup"><span data-stu-id="174bb-1180">-or-</span></span> 
<span data-ttu-id="174bb-1181">ダイアログ ボックスとして表示しようとしているフォームが既にモーダル フォームです。</span><span class="sxs-lookup"><span data-stu-id="174bb-1181">The form being shown as a dialog box is already a modal form.</span></span>  
  
<span data-ttu-id="174bb-1182">または</span><span class="sxs-lookup"><span data-stu-id="174bb-1182">-or-</span></span> 
<span data-ttu-id="174bb-1183">現在のプロセスがユーザー対話モードで実行されていません (詳細については、<see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> のトピックを参照してください)。</span><span class="sxs-lookup"><span data-stu-id="174bb-1183">The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span></span></exception>
        <altmember cref="P:System.Windows.Forms.Form.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog (System.Windows.Forms.IWin32Window owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DialogResult ShowDialog(class System.Windows.Forms.IWin32Window owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog (owner As IWin32Window) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog(System::Windows::Forms::IWin32Window ^ owner);" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : System.Windows.Forms.IWin32Window -&gt; System.Windows.Forms.DialogResult" Usage="form.ShowDialog owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="174bb-1184">モーダル ダイアログ ボックスを所有するトップレベル ウィンドウを表す <see cref="T:System.Windows.Forms.IWin32Window" /> を実装しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="174bb-1184">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> that represents the top-level window that will own the modal dialog box.</span></span></param>
        <summary><span data-ttu-id="174bb-1185">指定した所有者を持つモーダル ダイアログ ボックスとしてフォームを表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1185">Shows the form as a modal dialog box with the specified owner.</span></span></summary>
        <returns><span data-ttu-id="174bb-1186"><see cref="T:System.Windows.Forms.DialogResult" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="174bb-1186">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1187">このメソッドを使用すると、アプリケーションにモーダルダイアログボックスを表示できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1187">You can use this method to display a modal dialog box in your application.</span></span> <span data-ttu-id="174bb-1188">このメソッドが呼び出されると、ダイアログボックスが閉じられるまで、その後のコードは実行されません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1188">When this method is called, the code following it is not executed until after the dialog box is closed.</span></span> <span data-ttu-id="174bb-1189">ダイアログボックスには <xref:System.Windows.Forms.DialogResult> の値の1つを割り当てることができます。そのためには、フォームの <xref:System.Windows.Forms.Button> の <xref:System.Windows.Forms.Button.DialogResult%2A> プロパティに割り当てるか、コードでフォームの <xref:System.Windows.Forms.Form.DialogResult%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1189">The dialog box can be assigned one of the values of <xref:System.Windows.Forms.DialogResult> by assigning it to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> on the form or by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form in code.</span></span> <span data-ttu-id="174bb-1190">この値は、このメソッドによって返されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1190">This value is then returned by this method.</span></span> <span data-ttu-id="174bb-1191">この戻り値を使用して、ダイアログボックスで発生したアクションをどのように処理するかを決定できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1191">You can use this return value to determine how to process the actions that occurred in the dialog box.</span></span> <span data-ttu-id="174bb-1192">たとえば、ダイアログボックスが閉じられ、このメソッドによって `DialogResult.Cancel` 値が返された場合、呼び出し <xref:System.Windows.Forms.Form.ShowDialog%2A> に続くコードが実行されないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1192">For example, if the dialog box was closed and returned the `DialogResult.Cancel` value through this method, you could prevent code following the call to <xref:System.Windows.Forms.Form.ShowDialog%2A> from executing.</span></span>  
  
 <span data-ttu-id="174bb-1193">フォームがモーダルダイアログボックスとして表示されている場合、**閉じる** ボタン (フォームの右上隅にある X) をクリックすると、フォームが非表示になり、<xref:System.Windows.Forms.Form.DialogResult%2A> プロパティが `DialogResult.Cancel`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1193">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="174bb-1194">モードレスフォームとは異なり、<xref:System.Windows.Forms.Form.Close%2A> メソッドは、ユーザーがダイアログボックスの [フォームを閉じる] ボタンをクリックしたとき、または <xref:System.Windows.Forms.Form.DialogResult%2A> プロパティの値を設定したときに .NET Framework によって呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1194">Unlike modeless forms, the <xref:System.Windows.Forms.Form.Close%2A> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property.</span></span> <span data-ttu-id="174bb-1195">代わりに、フォームは非表示になり、ダイアログボックスの新しいインスタンスを作成せずに再び表示できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1195">Instead the form is hidden and can be shown again without creating a new instance of the dialog box.</span></span> <span data-ttu-id="174bb-1196">ダイアログボックスとして表示されるフォームは、closed ではなく非表示になるため、アプリケーションでフォームが不要になったときに、フォームの <xref:System.Windows.Forms.Control.Dispose%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-1196">Because a form displayed as a dialog box is hidden instead of closed, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.</span></span>  
  
 <span data-ttu-id="174bb-1197">このバージョンの <xref:System.Windows.Forms.Form.ShowDialog%2A> メソッドでは、表示されているダイアログボックスを所有する特定のフォームを指定できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1197">This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method allows you to specify a specific form that will own the dialog box that is shown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-1198">次の例では、フォームをモーダルダイアログボックスとして表示し、ダイアログボックスフォームの <xref:System.Windows.Forms.TextBox> コントロールの値を読み取るかどうかを決定する前に、ダイアログボックスの戻り値を評価します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1198">The following example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <xref:System.Windows.Forms.TextBox> control on the dialog box form.</span></span> <span data-ttu-id="174bb-1199">この例では、`Form2` という名前の <xref:System.Windows.Forms.Form> が作成され、`TextBox1`という名前の <xref:System.Windows.Forms.TextBox> コントロールが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-1199">This example requires that a <xref:System.Windows.Forms.Form> named `Form2` is created and that it contains a <xref:System.Windows.Forms.TextBox> control named `TextBox1`.</span></span> <span data-ttu-id="174bb-1200">この例では、ダイアログボックスの所有者を指定する <xref:System.Windows.Forms.Form.ShowDialog%2A> のバージョンを使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1200">The example uses the version of <xref:System.Windows.Forms.Form.ShowDialog%2A> that specifies an owner for the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.ShowDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ShowDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ShowDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ShowDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="174bb-1201"><paramref name="owner" /> パラメーターで指定されたフォームが、表示しようとしているフォームと同じです。</span><span class="sxs-lookup"><span data-stu-id="174bb-1201">The form specified in the <paramref name="owner" /> parameter is the same as the form being shown.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="174bb-1202">表示しようとしているフォームが既に表示されています。</span><span class="sxs-lookup"><span data-stu-id="174bb-1202">The form being shown is already visible.</span></span>  
  
<span data-ttu-id="174bb-1203">または</span><span class="sxs-lookup"><span data-stu-id="174bb-1203">-or-</span></span> 
<span data-ttu-id="174bb-1204">表示しようとしているフォームが無効です。</span><span class="sxs-lookup"><span data-stu-id="174bb-1204">The form being shown is disabled.</span></span>  
  
<span data-ttu-id="174bb-1205">または</span><span class="sxs-lookup"><span data-stu-id="174bb-1205">-or-</span></span> 
<span data-ttu-id="174bb-1206">表示しようとしているフォームがトップレベル ウィンドウではありません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1206">The form being shown is not a top-level window.</span></span>  
  
<span data-ttu-id="174bb-1207">または</span><span class="sxs-lookup"><span data-stu-id="174bb-1207">-or-</span></span> 
<span data-ttu-id="174bb-1208">ダイアログ ボックスとして表示しようとしているフォームが既にモーダル フォームです。</span><span class="sxs-lookup"><span data-stu-id="174bb-1208">The form being shown as a dialog box is already a modal form.</span></span>  
  
<span data-ttu-id="174bb-1209">または</span><span class="sxs-lookup"><span data-stu-id="174bb-1209">-or-</span></span> 
<span data-ttu-id="174bb-1210">現在のプロセスがユーザー対話モードで実行されていません (詳細については、<see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> のトピックを参照してください)。</span><span class="sxs-lookup"><span data-stu-id="174bb-1210">The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span></span></exception>
        <altmember cref="P:System.Windows.Forms.Form.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="ShowIcon">
      <MemberSignature Language="C#" Value="public bool ShowIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowIcon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ShowIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowIcon As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowIcon { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowIcon : bool with get, set" Usage="System.Windows.Forms.Form.ShowIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1211">フォームのキャプション バーにアイコンを表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1211">Gets or sets a value indicating whether an icon is displayed in the caption bar of the form.</span></span></summary>
        <value><span data-ttu-id="174bb-1212">フォームのキャプション バーにアイコンを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1212"><see langword="true" /> if the form displays an icon in the caption bar; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="174bb-1213">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="174bb-1213">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1214"><xref:System.Windows.Forms.Form.ShowIcon%2A> プロパティには、フォームの <xref:System.Windows.Forms.Form.Icon%2A> をフォームのキャプションバーに表示するかどうかを示す <xref:System.Boolean> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="174bb-1214">The <xref:System.Windows.Forms.Form.ShowIcon%2A> property contains a <xref:System.Boolean> value that indicates whether the form's <xref:System.Windows.Forms.Form.Icon%2A> is displayed in the caption bar of the form.</span></span> <span data-ttu-id="174bb-1215"><xref:System.Windows.Forms.Form.ControlBox%2A> プロパティが `false`場合は、アイコンとコントロールボックスの両方が抑制されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1215">If the <xref:System.Windows.Forms.Form.ControlBox%2A> property is `false`, both the icon and control box will be suppressed.</span></span>  
  
 <span data-ttu-id="174bb-1216">プライマリフォームが表示されているときに <xref:System.Windows.Forms.Form.ShowIcon%2A> が `false` 場合、アプリケーションのタスクバーボタンに汎用アイコンが表示されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1216">If <xref:System.Windows.Forms.Form.ShowIcon%2A> is `false` when the primary form is shown, a generic icon will be displayed in the taskbar button for the application.</span></span>  
  
 <span data-ttu-id="174bb-1217"><xref:System.Windows.Forms.Form.FormBorderStyle%2A> が <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>に設定されている場合、このプロパティは無効です。</span><span class="sxs-lookup"><span data-stu-id="174bb-1217">This property has no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>.</span></span> <span data-ttu-id="174bb-1218">その場合、フォームにアイコンは表示されません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1218">In that case, the form does not display an icon.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.Icon" />
        <altmember cref="P:System.Windows.Forms.Form.ShowInTaskbar" />
        <altmember cref="P:System.Windows.Forms.Form.FormBorderStyle" />
        <altmember cref="P:System.Windows.Forms.Form.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="ShowInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowInTaskbar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ShowInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowInTaskbar { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowInTaskbar : bool with get, set" Usage="System.Windows.Forms.Form.ShowInTaskbar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1219">フォームを Windows タスクバーに表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1219">Gets or sets a value indicating whether the form is displayed in the Windows taskbar.</span></span></summary>
        <value><span data-ttu-id="174bb-1220">実行時にフォームを Windows タスク バーに表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1220"><see langword="true" /> to display the form in the Windows taskbar at run time; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="174bb-1221">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="174bb-1221">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1222">フォームが別のフォーム内で親になっている場合、親フォームは Windows タスクバーに表示されません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1222">If a form is parented within another form, the parented form is not displayed in the Windows taskbar.</span></span>  
  
 <span data-ttu-id="174bb-1223">このプロパティを使用すると、ユーザーが Windows タスクバーでフォームを選択できないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1223">You can use this property to prevent users from selecting your form through the Windows taskbar.</span></span> <span data-ttu-id="174bb-1224">たとえば、アプリケーションで [検索と置換] ツールウィンドウを表示する場合は、アプリケーションのメインウィンドウと [検索と置換] ツールウィンドウの両方が表示され、検索を適切に処理するために必要になるため、このウィンドウが Windows タスクバーで選択されないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1224">For example, if you display a Find and Replace tool window in your application, you might want to prevent that window from being selected through the Windows taskbar because you would need both the application's main window and the Find and Replace tool window displayed in order to process searches appropriately.</span></span>  
  
 <span data-ttu-id="174bb-1225"><xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> スタイルでフォームを作成する場合は、このプロパティを使用することがよくあります。</span><span class="sxs-lookup"><span data-stu-id="174bb-1225">You will often wish to use this property when creating a form with the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style.</span></span> <span data-ttu-id="174bb-1226"><xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> スタイルを設定しても、ウィンドウがタスクバーに表示されないことを保証するだけではありません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1226">Setting the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style does not alone guarantee that a window will not appear in the taskbar.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-1227">次の例では、<xref:System.Windows.Forms.Form.ShowInTaskbar%2A> プロパティを使用して、Windows タスクバーに表示されないダイアログボックスを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1227">The following example demonstrates how to use the <xref:System.Windows.Forms.Form.ShowInTaskbar%2A> property to make a dialog box that is not displayed in the Windows taskbar.</span></span>  
  
 [!code-cpp[Form.ShowInTaskbar#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.ShowInTaskbar/CPP/form1.cpp#1)]
 [!code-csharp[Form.ShowInTaskbar#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.ShowInTaskbar/CS/form1.cs#1)]
 [!code-vb[Form.ShowInTaskbar#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.ShowInTaskbar/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shown">
      <MemberSignature Language="C#" Value="public event EventHandler Shown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Shown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Shown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Shown As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Shown;" />
      <MemberSignature Language="F#" Value="member this.Shown : EventHandler " Usage="member this.Shown : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1228">フォームが初めて表示されるたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1228">Occurs whenever the form is first displayed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1229"><xref:System.Windows.Forms.Form.Shown> イベントは、フォームが初めて表示されたときにのみ発生します。その後、最小化、最大化、復元、非表示、表示、または無効にして再描画しても、このイベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1229">The <xref:System.Windows.Forms.Form.Shown> event is only raised the first time a form is displayed; subsequently minimizing, maximizing, restoring, hiding, showing, or invalidating and repainting will not raise this event.</span></span> <span data-ttu-id="174bb-1230">フォームのイベントの順序の詳細については、「 [Windows フォームのイベントの順序](/dotnet/framework/winforms/order-of-events-in-windows-forms)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-1230">For more information about the order of events of a form, see [Order of Events in Windows Forms](/dotnet/framework/winforms/order-of-events-in-windows-forms).</span></span>  
  
 <span data-ttu-id="174bb-1231">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-1231">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-1232">このメンバーの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1232">The following example demonstrates the use of this member.</span></span> <span data-ttu-id="174bb-1233">この例では、イベントハンドラーは、<xref:System.Windows.Forms.Form.Shown> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1233">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.Shown> event.</span></span> <span data-ttu-id="174bb-1234">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1234">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="174bb-1235">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-1235">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="174bb-1236">コード例を実行するには、`Form1`という <xref:System.Windows.Forms.Form> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1236">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="174bb-1237">次に、イベントハンドラーが <xref:System.Windows.Forms.Form.Shown> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1237">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.Shown> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#403](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#403)]
 [!code-vb[System.Windows.Forms.EventExamples#403](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#403)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
        <altmember cref="Overload:System.Windows.Forms.Form.Show" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosing" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosed" />
        <altmember cref="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
        <altmember cref="E:System.Windows.Forms.Control.Paint" />
      </Docs>
    </Member>
    <Member MemberName="ShowWithoutActivation">
      <MemberSignature Language="C#" Value="protected virtual bool ShowWithoutActivation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWithoutActivation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ShowWithoutActivation" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ShowWithoutActivation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ShowWithoutActivation { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowWithoutActivation : bool" Usage="System.Windows.Forms.Form.ShowWithoutActivation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1238">ウィンドウが表示された時点でそれをアクティブにするかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1238">Gets a value indicating whether the window will be activated when it is shown.</span></span></summary>
        <value><span data-ttu-id="174bb-1239">ウィンドウが表示された時点でウィンドウをアクティブにしない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1239"><see langword="true" /> if the window will not be activated when it is shown; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="174bb-1240">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="174bb-1240">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1241">トップレベルウィンドウを表示するが、現在のウィンドウから入力フォーカスを取得して、ユーザーの作業を中断したくない場合は、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1241">Use this property if you want to show a top-level window, but don't want to interrupt a user's work by taking the input focus away from the current window.</span></span> <span data-ttu-id="174bb-1242">これには、情報ポップアップウィンドウまたは描画アプリケーションのツールパレットなどのフローティングウィンドウを使用できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1242">This can be an informational pop-up window or a floating window, such as a Tools palette in the Paint application.</span></span>  
  
 <span data-ttu-id="174bb-1243">このプロパティは読み取り専用であるため、<xref:System.Windows.Forms.Form.ShowWithoutActivation%2A> を独自の形式でオーバーライドし、それをプログラミングして `true`を返すことによってのみ、値を変更できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1243">Because this property is read-only, you can only change its value by overriding <xref:System.Windows.Forms.Form.ShowWithoutActivation%2A> in your own form, and programming it to return `true`.</span></span>  
  
 <span data-ttu-id="174bb-1244">アクティブ化されていないウィンドウで UI コントロールを使用する必要がある場合は、<xref:System.Windows.Forms.ToolStripDropDown>などの <xref:System.Windows.Forms.ToolStrip> コントロールを使用することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="174bb-1244">If your non-activated window needs to use UI controls, you should consider using the <xref:System.Windows.Forms.ToolStrip> controls, such as <xref:System.Windows.Forms.ToolStripDropDown>.</span></span> <span data-ttu-id="174bb-1245">これらのコントロールはウィンドウなしであり、選択されたときにウィンドウがアクティブになることはありません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1245">These controls are windowless, and will not cause a window to activate when they are selected.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.Form.Show" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Form.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1246">フォームのサイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1246">Gets or sets the size of the form.</span></span></summary>
        <value><span data-ttu-id="174bb-1247">フォームのサイズを表す <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1247">A <see cref="T:System.Drawing.Size" /> that represents the size of the form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1248">このプロパティを使用すると、<xref:System.Windows.Forms.Control.Height%2A> と <xref:System.Windows.Forms.Control.Width%2A> のプロパティを個別に設定する代わりに、フォームの高さと幅 (ピクセル単位) の両方を同時に設定できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1248">This property allows you to set both the height and width (in pixels) of the form at the same time instead of setting the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> properties individually.</span></span> <span data-ttu-id="174bb-1249">フォームのサイズと位置を設定する場合は、<xref:System.Windows.Forms.Form.DesktopBounds%2A> プロパティを使用して、デスクトップ座標に基づいてフォームのサイズを指定したり、<xref:System.Windows.Forms.Control> クラスの <xref:System.Windows.Forms.Control.Bounds%2A> プロパティを使用して、画面座標に基づいてフォームのサイズと位置を設定したりできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1249">If you want to set the size and location of a form, you can use the <xref:System.Windows.Forms.Form.DesktopBounds%2A> property to size and locate the form based on desktop coordinates or use the <xref:System.Windows.Forms.Control.Bounds%2A> property of the <xref:System.Windows.Forms.Control> class to set the size and location of the form based on screen coordinates.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-1250">このプロパティの最大値は、フォームを実行する画面の解像度によって制限されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1250">The maximum value of this property is limited by the resolution of the screen on which the form runs.</span></span> <span data-ttu-id="174bb-1251">各画面ディメンションでは、値を12ピクセルより大きくすることはできません (水平 + 12 および垂直 + 12)。</span><span class="sxs-lookup"><span data-stu-id="174bb-1251">The value cannot be greater than 12 pixels over each screen dimension (horizontal + 12 and vertical + 12).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="174bb-1252">Pocket PC デバイスでは、<xref:System.Windows.Forms.MainMenu> コントロールを `None` および削除するように <xref:System.Windows.Forms.Form.FormBorderStyle%2A> を設定することにより、サイズ変更可能なウィンドウを作成できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1252">On Pocket PC devices, you can create a resizable window by setting <xref:System.Windows.Forms.Form.FormBorderStyle%2A> to `None` and removing any <xref:System.Windows.Forms.MainMenu> control.</span></span> <span data-ttu-id="174bb-1253">スマートフォンデバイスでは、<xref:System.Windows.Forms.Form> のサイズを変更することはできません。常に画面全体に表示されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1253">On SmartPhone devices, you can never resize a <xref:System.Windows.Forms.Form> - it will always fill the entire screen.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-1254">次の例では、透明度レベル75% で表示されるフォームを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1254">The following example demonstrates how to create a form that is displayed with an opacity level of 75 percent.</span></span> <span data-ttu-id="174bb-1255">このコード例では、<xref:System.Windows.Forms.Form.Opacity%2A> プロパティが設定された画面の中央に配置される新しいフォームを作成し、フォームの不透明度を変更します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1255">The example code creates a new form that is positioned in the center of the screen with an <xref:System.Windows.Forms.Form.Opacity%2A> property set to change the opacity level of the form.</span></span> <span data-ttu-id="174bb-1256">また、このコード例では、フォームの既定のサイズよりも大きいサイズのフォームを提供するように <xref:System.Windows.Forms.Form.Size%2A> プロパティを設定しています。</span><span class="sxs-lookup"><span data-stu-id="174bb-1256">The example code also sets the <xref:System.Windows.Forms.Form.Size%2A> property to provide a larger sized form than the default size of the form.</span></span> <span data-ttu-id="174bb-1257">この例では、イベントハンドラーまたは他のメソッドで、この例で定義されているメソッドを別の形式から呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-1257">This example requires that the method defined in this example is called from another form in an event handler or other method.</span></span>  
  
 [!code-cpp[Form.Opacity#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Opacity/CPP/form1.cpp#1)]
 [!code-csharp[Form.Opacity#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Opacity/CS/form1.cs#1)]
 [!code-vb[Form.Opacity#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Opacity/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Width" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="SizeGripStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SizeGripStyle SizeGripStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SizeGripStyle SizeGripStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.SizeGripStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeGripStyle As SizeGripStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SizeGripStyle SizeGripStyle { System::Windows::Forms::SizeGripStyle get(); void set(System::Windows::Forms::SizeGripStyle value); };" />
      <MemberSignature Language="F#" Value="member this.SizeGripStyle : System.Windows.Forms.SizeGripStyle with get, set" Usage="System.Windows.Forms.Form.SizeGripStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SizeGripStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1258">フォームの右下隅に表示するサイズ変更グリップのスタイルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1258">Gets or sets the style of the size grip to display in the lower-right corner of the form.</span></span></summary>
        <value><span data-ttu-id="174bb-1259">表示するサイズ変更グリップのスタイルを表す <see cref="T:System.Windows.Forms.SizeGripStyle" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1259">A <see cref="T:System.Windows.Forms.SizeGripStyle" /> that represents the style of the size grip to display.</span></span> <span data-ttu-id="174bb-1260">既定値は <see cref="F:System.Windows.Forms.SizeGripStyle.Auto" /> です</span><span class="sxs-lookup"><span data-stu-id="174bb-1260">The default is <see cref="F:System.Windows.Forms.SizeGripStyle.Auto" /></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1261">このプロパティを使用すると、サイズ変更グリップをフォームに表示するタイミングを決定できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1261">This property enables you to determine when the sizing grip is displayed on the form.</span></span> <span data-ttu-id="174bb-1262">このプロパティは、サイズ変更グリップを表示するように設定することも、<xref:System.Windows.Forms.Form.FormBorderStyle%2A> プロパティの設定に基づいて自動的に表示されるように設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1262">You can set this property to display the sizing grip or have it automatically displayed based on the setting of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-1263">次の例は、<xref:System.Windows.Forms.Form> のサイズを変更できないときに、<xref:System.Windows.Forms.Form> のサイズグリップを非表示にする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="174bb-1263">The following example demonstrates how to hide the size grip for a <xref:System.Windows.Forms.Form> when the <xref:System.Windows.Forms.Form> is not resizable.</span></span>  
  
 [!code-cpp[Form.SizeGripStyle#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.SizeGripStyle/CPP/form1.cpp#1)]
 [!code-csharp[Form.SizeGripStyle#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.SizeGripStyle/CS/form1.cs#1)]
 [!code-vb[Form.SizeGripStyle#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.SizeGripStyle/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="174bb-1264">指定された値が有効値の範囲内にありません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1264">The value specified is outside the range of valid values.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.Form.FormBorderStyle" />
        <altmember cref="T:System.Windows.Forms.SizeGripStyle" />
      </Docs>
    </Member>
    <Member MemberName="StartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormStartPosition StartPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FormStartPosition StartPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.StartPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property StartPosition As FormStartPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormStartPosition StartPosition { System::Windows::Forms::FormStartPosition get(); void set(System::Windows::Forms::FormStartPosition value); };" />
      <MemberSignature Language="F#" Value="member this.StartPosition : System.Windows.Forms.FormStartPosition with get, set" Usage="System.Windows.Forms.Form.StartPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormStartPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1265">実行時にフォームの開始位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1265">Gets or sets the starting position of the form at run time.</span></span></summary>
        <value><span data-ttu-id="174bb-1266">フォームの開始位置を表す <see cref="T:System.Windows.Forms.FormStartPosition" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1266">A <see cref="T:System.Windows.Forms.FormStartPosition" /> that represents the starting position of the form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1267">このプロパティを使用すると、実行時にフォームが表示されるときの開始位置を設定できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1267">This property enables you to set the starting position of the form when it is displayed at run time.</span></span> <span data-ttu-id="174bb-1268">フォームの位置を手動で指定するには、<xref:System.Windows.Forms.Form.Location%2A> プロパティを設定するか、Windows によって指定された既定の場所を使用します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1268">The form's position can be specified manually by setting the <xref:System.Windows.Forms.Form.Location%2A> property or use the default location specified by Windows.</span></span> <span data-ttu-id="174bb-1269">また、フォームを画面の中央または親フォームの中央に配置して、マルチドキュメントインターフェイス (MDI) 子フォームなどのフォームを表示することもできます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1269">You can also position the form to display in the center of the screen or in the center of its parent form for forms such as multiple-document interface (MDI) child forms.</span></span>  
  
 <span data-ttu-id="174bb-1270">フォームが表示される前に、このプロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-1270">This property should be set before the form is shown.</span></span>  <span data-ttu-id="174bb-1271">このプロパティは、<xref:System.Windows.Forms.Form.Show%2A> または <xref:System.Windows.Forms.Form.ShowDialog%2A> メソッドを呼び出す前に、またはフォームのコンストラクターで設定できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1271">You can set this property before you call the <xref:System.Windows.Forms.Form.Show%2A> or <xref:System.Windows.Forms.Form.ShowDialog%2A> method or in your form's constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-1272">次の例では、<xref:System.Windows.Forms.Form> の新しいインスタンスを作成し、<xref:System.Windows.Forms.Form.ShowDialog%2A> メソッドを呼び出して、フォームをダイアログボックスとして表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1272">The following example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="174bb-1273">この例では、<xref:System.Windows.Forms.Form.FormBorderStyle%2A>、<xref:System.Windows.Forms.Form.AcceptButton%2A>、<xref:System.Windows.Forms.Form.CancelButton%2A>、および <xref:System.Windows.Forms.Form.StartPosition%2A> プロパティを設定して、フォームの外観と機能をダイアログボックスに変更します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1273">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="174bb-1274">また、この例では、フォームの <xref:System.Windows.Forms.Control.Controls%2A> コレクションの <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> メソッドを使用して、2つの <xref:System.Windows.Forms.Button> コントロールを追加しています。</span><span class="sxs-lookup"><span data-stu-id="174bb-1274">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="174bb-1275">この例では、<xref:System.Windows.Forms.Form.HelpButton%2A> プロパティを使用して、ダイアログボックスのキャプションバーに [ヘルプ] ボタンを表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1275">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.StartPosition Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.StartPosition Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.StartPosition Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.StartPosition Example/CS/source.cs#1)]
 [!code-vb[Classic Form.StartPosition Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.StartPosition Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="174bb-1276">指定された値が有効値の範囲内にありません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1276">The value specified is outside the range of valid values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.FormStartPosition" />
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public int TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property TabIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TabIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int with get, set" Usage="System.Windows.Forms.Form.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1277">コンテナー内のコントロールのタブ オーダーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1277">Gets or sets the tab order of the control within its container.</span></span></summary>
        <value><span data-ttu-id="174bb-1278">タブ オーダーに含まれるコンテナー内のコントロールのセットにおけるコントロールのインデックスを含む <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1278">An <see cref="T:System.Int32" /> containing the index of the control within the set of controls within its container that is included in the tab order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1279">フォームは、タブオーダーには含まれません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1279">Forms are not included in the tab order.</span></span> <span data-ttu-id="174bb-1280"><xref:System.Windows.Forms.Form.TabIndex%2A> プロパティを設定しても、何も行われません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1280">Setting the <xref:System.Windows.Forms.Form.TabIndex%2A> property does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.TabIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.TabIndexChanged : EventHandler " Usage="member this.TabIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1281"><see cref="P:System.Windows.Forms.Form.TabIndex" /> プロパティの値が変化したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1281">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.TabIndex" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStop">
      <MemberSignature Language="C#" Value="public bool TabStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TabStop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TabStop" />
      <MemberSignature Language="VB.NET" Value="Public Property TabStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TabStop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TabStop : bool with get, set" Usage="System.Windows.Forms.Form.TabStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.Runtime.InteropServices.DispId(-516)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1282">ユーザーが Tab キーで、このコントロールにフォーカスを移すことができるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1282">Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</span></span></summary>
        <value><span data-ttu-id="174bb-1283">ユーザーが Tab キーを使用してコントロールにフォーカスを移すことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1283"><see langword="true" /> if the user can give the focus to the control using the TAB key; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="174bb-1284">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="174bb-1284">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStopChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabStopChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabStopChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.TabStopChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabStopChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabStopChanged;" />
      <MemberSignature Language="F#" Value="member this.TabStopChanged : EventHandler " Usage="member this.TabStopChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1285"><see cref="P:System.Windows.Forms.Form.TabStop" /> プロパティが変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1285">Occurs when the <see cref="P:System.Windows.Forms.Form.TabStop" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.Form.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1286">このコントロールに関連付けられているテキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1286">Gets or sets the text associated with this control.</span></span></summary>
        <value><span data-ttu-id="174bb-1287">このコントロールに関連付けられているテキスト。</span><span class="sxs-lookup"><span data-stu-id="174bb-1287">The text associated with this control.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Text" />
      </Docs>
    </Member>
    <Member MemberName="TopLevel">
      <MemberSignature Language="C#" Value="public bool TopLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TopLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TopLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property TopLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TopLevel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TopLevel : bool with get, set" Usage="System.Windows.Forms.Form.TopLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1288">フォームをトップレベル ウィンドウとして表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1288">Gets or sets a value indicating whether to display the form as a top-level window.</span></span></summary>
        <value><span data-ttu-id="174bb-1289">フォームをトップレベル ウィンドウとして表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1289"><see langword="true" /> to display the form as a top-level window; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="174bb-1290">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="174bb-1290">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1291">最上位のフォームとは、親フォームがないウィンドウ、または親フォームがデスクトップウィンドウであるウィンドウです。</span><span class="sxs-lookup"><span data-stu-id="174bb-1291">A top-level form is a window that has no parent form, or whose parent form is the desktop window.</span></span> <span data-ttu-id="174bb-1292">トップレベルウィンドウは、通常、アプリケーションのメインフォームとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1292">Top-level windows are typically used as the main form in an application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-1293">次の例では、<xref:System.Windows.Forms.Form.Modal%2A> プロパティを使用して、フォームがモーダルフォームとして表示されるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1293">The following example use the <xref:System.Windows.Forms.Form.Modal%2A> property to determine if a form is displayed as a modal form.</span></span> <span data-ttu-id="174bb-1294"><xref:System.Windows.Forms.Form.FormBorderStyle%2A> でない場合は <xref:System.Windows.Forms.Form.TopLevel%2A> のプロパティが変更され、ツールウィンドウの境界線を持つトップレベル以外のフォームが作成されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1294">If it is not the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> and <xref:System.Windows.Forms.Form.TopLevel%2A> properties are changed to make the form non-top-level form with a tool window border.</span></span>  
  
 [!code-cpp[Form.Modal#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Modal/CPP/form1.cpp#1)]
 [!code-csharp[Form.Modal#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Modal/CS/form1.cs#1)]
 [!code-vb[Form.Modal#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Modal/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="174bb-1295">マルチ ドキュメント インターフェイス (MDI) 親フォームはトップレベル ウィンドウにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-1295">A Multiple-document interface (MDI) parent form must be a top-level window.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.Form.TopMost" />
      </Docs>
    </Member>
    <Member MemberName="TopMost">
      <MemberSignature Language="C#" Value="public bool TopMost { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TopMost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TopMost" />
      <MemberSignature Language="VB.NET" Value="Public Property TopMost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TopMost { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TopMost : bool with get, set" Usage="System.Windows.Forms.Form.TopMost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1296">フォームを最上位フォームとして表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1296">Gets or sets a value indicating whether the form should be displayed as a topmost form.</span></span></summary>
        <value><span data-ttu-id="174bb-1297">フォームを最上位フォームとして表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1297"><see langword="true" /> to display the form as a topmost form; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="174bb-1298">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="174bb-1298">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1299">最上位フォームは、アクティブまたはフォアグラウンドのフォームでない場合でも、他のすべての (最上位ではない) フォームと重なるフォームです。</span><span class="sxs-lookup"><span data-stu-id="174bb-1299">A topmost form is a form that overlaps all the other (non-topmost) forms even if it is not the active or foreground form.</span></span> <span data-ttu-id="174bb-1300">最上位のフォームは、デスクトップ上のウィンドウの z オーダーの最上位に常に表示されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1300">Topmost forms are always displayed at the highest point in the z-order of the windows on the desktop.</span></span> <span data-ttu-id="174bb-1301">このプロパティを使用すると、[検索と置換] ツールウィンドウなど、アプリケーションに常に表示されるフォームを作成できます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1301">You can use this property to create a form that is always displayed in your application, such as a Find and Replace tool window.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-1302">次の例では、最上位のフォームを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1302">The following example demonstrates how to create a topmost form.</span></span> <span data-ttu-id="174bb-1303">この例では2つのフォームを作成します。1つは最大化され、もう1つは最上位フォームとして表示されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1303">The example creates two forms, one that is maximized and one that will be displayed as a topmost form.</span></span> <span data-ttu-id="174bb-1304">`bottomForm`という名前の最初のフォームは、最上位のフォームの機能をより適切に示すために、<xref:System.Windows.Forms.Form.WindowState%2A> プロパティを使用して、最大化されて表示されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1304">The first form, named `bottomForm`, is displayed maximized, using the <xref:System.Windows.Forms.Form.WindowState%2A> property, to better demonstrate the abilities of the topmost form.</span></span> <span data-ttu-id="174bb-1305">`topMostForm`という名前の2番目の形式は、<xref:System.Windows.Forms.Form.TopMost%2A> プロパティを `true` に設定して、フォームを最上位フォームとして表示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1305">The second form, named `topMostForm`, sets the <xref:System.Windows.Forms.Form.TopMost%2A> property to `true` to display the form as a topmost form.</span></span> <span data-ttu-id="174bb-1306">このコードを実行すると、最大化されたフォームをクリックしても、最上位のフォームが最大化されたフォームの下に表示されることはありません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1306">When this code is run, clicking on the maximized form will not cause the topmost form to be displayed below the maximized form.</span></span> <span data-ttu-id="174bb-1307">この例では、例で定義されているメソッドを別の形式から呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-1307">The example requires that the method defined in the example is called from another form.</span></span>  
  
 [!code-cpp[Form.TopMost#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.TopMost/CPP/form1.cpp#1)]
 [!code-csharp[Form.TopMost#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.TopMost/CS/form1.cs#1)]
 [!code-vb[Form.TopMost#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.TopMost/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.TopLevel" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="form.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="174bb-1308">フォームの現在のインスタンスを表す文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1308">Gets a string representing the current instance of the form.</span></span></summary>
        <returns><span data-ttu-id="174bb-1309">フォーム オブジェクトのクラスの完全修飾名で構成される文字列。フォームの <see cref="P:System.Windows.Forms.Form.Text" /> プロパティの値が末尾に追加されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1309">A string consisting of the fully qualified name of the form object's class, with the <see cref="P:System.Windows.Forms.Form.Text" /> property of the form appended to the end.</span></span> <span data-ttu-id="174bb-1310">たとえば、フォームが <c>MyNamespace</c> 名前空間の <c>MyForm</c> クラスから派生し、<see cref="P:System.Windows.Forms.Form.Text" /> プロパティが <c>Hello, World</c> に設定された場合、このメソッドは <c>MyNamespace.MyForm, Text: Hello, World</c> を返します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1310">For example, if the form is derived from the class <c>MyForm</c> in the <c>MyNamespace</c> namespace, and the <see cref="P:System.Windows.Forms.Form.Text" /> property is set to <c>Hello, World</c>, this method will return <c>MyNamespace.MyForm, Text: Hello, World</c>.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransparencyKey">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TransparencyKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TransparencyKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TransparencyKey" />
      <MemberSignature Language="VB.NET" Value="Public Property TransparencyKey As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TransparencyKey { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.TransparencyKey : System.Drawing.Color with get, set" Usage="System.Windows.Forms.Form.TransparencyKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1311">フォームの透明な領域を表す色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1311">Gets or sets the color that will represent transparent areas of the form.</span></span></summary>
        <value><span data-ttu-id="174bb-1312">フォーム上で透明色として表示される色を表す <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1312">A <see cref="T:System.Drawing.Color" /> that represents the color to display transparently on the form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1313"><xref:System.Windows.Forms.Form.TransparencyKey%2A> プロパティに <xref:System.Drawing.Color>が割り当てられている場合、同じ <xref:System.Windows.Forms.Control.BackColor%2A> を持つフォームの領域が透過的に表示されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1313">When the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property is assigned a <xref:System.Drawing.Color>, the areas of the form that have the same <xref:System.Windows.Forms.Control.BackColor%2A> will be displayed transparently.</span></span> <span data-ttu-id="174bb-1314">マウスのクリックなど、フォームの透明な領域に対して実行されるマウス操作は、透明領域の下のウィンドウに転送されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1314">Any mouse actions, such as the click of the mouse, that are performed on the transparent areas of the form will be transferred to the windows below the transparent area.</span></span> <span data-ttu-id="174bb-1315">たとえば、フォームのクライアント領域が透明になっている場合、その領域でマウスをクリックすると、その下にある任意のウィンドウにクリックのイベント通知が送信されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1315">For example, if the client region of a form is made transparent, clicking the mouse on that area would send the event notification of the click to any window that is below it.</span></span> <span data-ttu-id="174bb-1316"><xref:System.Windows.Forms.Form.TransparencyKey%2A> プロパティに割り当てられた色がフォーム上のコントロールと同じ場合、それらも透過的に表示されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1316">If the color assigned to the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property is the same as any controls on the form, they also will be displayed transparently.</span></span> <span data-ttu-id="174bb-1317">たとえば、<xref:System.Windows.Forms.Form.TransparencyKey%2A> プロパティが `SystemColors.Control`に設定されているフォームに <xref:System.Windows.Forms.Button> コントロールがある場合、そのコントロールは、<xref:System.Windows.Forms.Button> コントロールの <xref:System.Windows.Forms.Control.BackColor%2A> プロパティが別の色に変更されない限り、透過的に表示されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1317">For example, if you have a <xref:System.Windows.Forms.Button> control on a form that has its <xref:System.Windows.Forms.Form.TransparencyKey%2A> property set to `SystemColors.Control`, the control will be displayed transparently unless the <xref:System.Windows.Forms.Control.BackColor%2A> property of the <xref:System.Windows.Forms.Button> control is changed to a different color.</span></span>  
  
 <span data-ttu-id="174bb-1318"><xref:System.Windows.Forms.Form.RightToLeftLayout%2A> が `true`場合、このプロパティはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1318">This property is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-1319">次の例では、フォームの背景色に関係なく、透明なクライアント領域を持つウィンドウを作成します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1319">The following example creates a window that has a transparent client region regardless of background color of the form.</span></span> <span data-ttu-id="174bb-1320">この例では、例のメソッドがフォームクラス内で定義されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="174bb-1320">This example requires that the example method is defined within a form class.</span></span>  
  
 [!code-cpp[Classic Form.TransparencyKey Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.TransparencyKey Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/CS/source.cs#1)]
 [!code-vb[Classic Form.TransparencyKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDefaultButton">
      <MemberSignature Language="C#" Value="protected override void UpdateDefaultButton ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateDefaultButton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.UpdateDefaultButton" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateDefaultButton ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateDefaultButton();" />
      <MemberSignature Language="F#" Value="override this.UpdateDefaultButton : unit -&gt; unit" Usage="form.UpdateDefaultButton " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="174bb-1321">既定のボタンを更新します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1321">Updates which button is the default button.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1322"><xref:System.Windows.Forms.Form.UpdateDefaultButton%2A> メソッドは、ユーザーが ENTER キーを押したときに、次の優先順位に従ってフォーム上のどのボタンが Click イベントを発生させるかを決定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1322">The <xref:System.Windows.Forms.Form.UpdateDefaultButton%2A> method determines which button on the form raises its Click event when the user presses ENTER, according to the following priority:</span></span>  
  
1.  <span data-ttu-id="174bb-1323"><xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> プロパティが <xref:System.Windows.Forms.IButtonControl> インターフェイスを実装している場合は、そのコントロールが既定のボタンになります。</span><span class="sxs-lookup"><span data-stu-id="174bb-1323">If the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property implements the <xref:System.Windows.Forms.IButtonControl> interface, that control is the default button.</span></span>  
  
2.  <span data-ttu-id="174bb-1324"><xref:System.Windows.Forms.Form.AcceptButton%2A> プロパティは、既定のボタンです。</span><span class="sxs-lookup"><span data-stu-id="174bb-1324">The <xref:System.Windows.Forms.Form.AcceptButton%2A> property is the default button.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ContainerControl.ActiveControl" />
        <altmember cref="P:System.Windows.Forms.Form.AcceptButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateChildren">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="174bb-1325">フォームに含まれる選択可能な子コントロールすべてを検証します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1325">Validates all selectable child controls in the form.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateChildren">
      <MemberSignature Language="C#" Value="public override bool ValidateChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ValidateChildren" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateChildren () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateChildren();" />
      <MemberSignature Language="F#" Value="override this.ValidateChildren : unit -&gt; bool" Usage="form.ValidateChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="174bb-1326">検証をサポートするコントロールに含まれるすべての子コントロールでデータを検証します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1326">Causes all of the child controls within a control that support validation to validate their data.</span></span></summary>
        <returns><span data-ttu-id="174bb-1327">すべての子の検証が正常に実行された場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1327"><see langword="true" /> if all of the children validated successfully; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="174bb-1328">このメソッドは、 <see cref="E:System.Windows.Forms.Control.Validating" /> イベント ハンドラーまたは <see cref="E:System.Windows.Forms.Control.Validated" /> イベント ハンドラーから呼び出された場合、常に <see langword="false" />を返します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1328">If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ValidateChildren" />
      </Docs>
    </Member>
    <Member MemberName="ValidateChildren">
      <MemberSignature Language="C#" Value="public override bool ValidateChildren (System.Windows.Forms.ValidationConstraints validationConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateChildren(valuetype System.Windows.Forms.ValidationConstraints validationConstraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateChildren (validationConstraints As ValidationConstraints) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateChildren(System::Windows::Forms::ValidationConstraints validationConstraints);" />
      <MemberSignature Language="F#" Value="override this.ValidateChildren : System.Windows.Forms.ValidationConstraints -&gt; bool" Usage="form.ValidateChildren validationConstraints" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationConstraints" Type="System.Windows.Forms.ValidationConstraints" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="validationConstraints"><span data-ttu-id="174bb-1329">どのコントロールで <see cref="E:System.Windows.Forms.Control.Validating" /> イベントを発生させるかについて制限を設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1329">Places restrictions on which controls have their <see cref="E:System.Windows.Forms.Control.Validating" /> event raised.</span></span></param>
        <summary><span data-ttu-id="174bb-1330">検証をサポートするコントロールに含まれるすべての子コントロールでデータを検証します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1330">Causes all of the child controls within a control that support validation to validate their data.</span></span></summary>
        <returns><span data-ttu-id="174bb-1331">すべての子の検証が正常に実行された場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1331"><see langword="true" /> if all of the children validated successfully; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="174bb-1332">このメソッドは、 <see cref="E:System.Windows.Forms.Control.Validating" /> イベント ハンドラーまたは <see cref="E:System.Windows.Forms.Control.Validated" /> イベント ハンドラーから呼び出された場合、常に <see langword="false" />を返します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1332">If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ValidateChildren(System.Windows.Forms.ValidationConstraints)" />
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FormWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As FormWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormWindowState WindowState { System::Windows::Forms::FormWindowState get(); void set(System::Windows::Forms::FormWindowState value); };" />
      <MemberSignature Language="F#" Value="member this.WindowState : System.Windows.Forms.FormWindowState with get, set" Usage="System.Windows.Forms.Form.WindowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="174bb-1333">フォームが最小化されているか、最大化されているか、通常の状態であるかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1333">Gets or sets a value that indicates whether form is minimized, maximized, or normal.</span></span></summary>
        <value><span data-ttu-id="174bb-1334">フォームが最小化されているか、最大化されているか、通常の状態であるかを表す <see cref="T:System.Windows.Forms.FormWindowState" />。</span><span class="sxs-lookup"><span data-stu-id="174bb-1334">A <see cref="T:System.Windows.Forms.FormWindowState" /> that represents whether form is minimized, maximized, or normal.</span></span> <span data-ttu-id="174bb-1335">既定では、 <see langword="FormWindowState.Normal" />です。</span><span class="sxs-lookup"><span data-stu-id="174bb-1335">The default is <see langword="FormWindowState.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="174bb-1336">フォームが表示される前に、初期設定に関係なく、<xref:System.Windows.Forms.Form.WindowState%2A> プロパティは常に `FormWindowState.Normal`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1336">Before a form is displayed, the <xref:System.Windows.Forms.Form.WindowState%2A> property is always set to `FormWindowState.Normal`, regardless of its initial setting.</span></span> <span data-ttu-id="174bb-1337">これは、<xref:System.Windows.Forms.Control.Height%2A>、<xref:System.Windows.Forms.Control.Left%2A>、<xref:System.Windows.Forms.Control.Top%2A>、および <xref:System.Windows.Forms.Control.Width%2A> プロパティの設定に反映されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1337">This is reflected in the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Top%2A>, and <xref:System.Windows.Forms.Control.Width%2A> property settings.</span></span> <span data-ttu-id="174bb-1338">表示された後にフォームが非表示になっている場合、これらのプロパティは、<xref:System.Windows.Forms.Form.WindowState%2A> プロパティに加えられた変更に関係なく、フォームが再度表示されるまで、以前の状態を反映します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1338">If a form is hidden after it has been shown, these properties reflect the previous state until the form is shown again, regardless of any changes made to the <xref:System.Windows.Forms.Form.WindowState%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="174bb-1339">次の例では、<xref:System.Windows.Forms.Form.WindowState%2A> を最大化に設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1339">The following example demonstrates how to set the <xref:System.Windows.Forms.Form.WindowState%2A> to maximized.</span></span> <span data-ttu-id="174bb-1340">このコードは、フォームの作成後に <xref:System.Windows.Forms.Form.Shown> イベントハンドラーから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="174bb-1340">The code is called from the <xref:System.Windows.Forms.Form.Shown> event handler after the form has been created.</span></span>  
  
```csharp  
private void Form1_Shown(object sender, EventArgs e)  
        {  
            this.WindowState = System.Windows.Forms.FormWindowState.Maximized;  
        }  
```  
  
```vb  
Private  Sub Form1_Shown(ByVal sender As Object, ByVal e As EventArgs)  
            Me.WindowState = System.Windows.Forms.FormWindowState.Maximized  
End Sub  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="174bb-1341">指定された値が有効値の範囲内にありません。</span><span class="sxs-lookup"><span data-stu-id="174bb-1341">The value specified is outside the range of valid values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.FormWindowState" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc : Message -&gt; unit" Usage="form.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="174bb-1342">処理する Windows <see cref="T:System.Windows.Forms.Message" /> です。</span><span class="sxs-lookup"><span data-stu-id="174bb-1342">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="174bb-1343">Windows メッセージを処理します。</span><span class="sxs-lookup"><span data-stu-id="174bb-1343">Processes Windows messages.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>
