<Type Name="ButtonBase" FullName="System.Windows.Forms.ButtonBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5eb61767d6e0b4bf5244e4f4055e070aa5bce6ab" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75176198" /></Metadata><TypeSignature Language="C#" Value="public abstract class ButtonBase : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ButtonBase extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ButtonBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ButtonBase&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonBase abstract : System::Windows::Forms::Control" />
  <TypeSignature Language="F#" Value="type ButtonBase = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ButtonBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ButtonBaseDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="701bc-101">ボタン コントロールに共通の基本機能を実装します。</span><span class="sxs-lookup"><span data-stu-id="701bc-101">Implements the basic functionality common to button controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-102">通常、<xref:System.Windows.Forms.ButtonBase>から継承することはありません。</span><span class="sxs-lookup"><span data-stu-id="701bc-102">You do not typically inherit from <xref:System.Windows.Forms.ButtonBase>.</span></span> <span data-ttu-id="701bc-103">独自のボタンクラスを作成するには、<xref:System.Windows.Forms.Button>、<xref:System.Windows.Forms.CheckBox>、または <xref:System.Windows.Forms.RadioButton> クラスを継承します。</span><span class="sxs-lookup"><span data-stu-id="701bc-103">To create your own button class, inherit from the <xref:System.Windows.Forms.Button>, <xref:System.Windows.Forms.CheckBox>, or <xref:System.Windows.Forms.RadioButton> class.</span></span>  
  
 <span data-ttu-id="701bc-104">派生ボタンコントロールにイメージを表示させるには、<xref:System.Windows.Forms.ButtonBase.Image%2A> プロパティ、<xref:System.Windows.Forms.ButtonBase.ImageList%2A> プロパティ、および <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-104">To have the derived button control display an image, set the <xref:System.Windows.Forms.ButtonBase.Image%2A> property or the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> and <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> properties.</span></span> <span data-ttu-id="701bc-105">イメージは、<xref:System.Windows.Forms.ButtonBase.ImageAlign%2A> プロパティを設定することによって、ボタンコントロール上に配置できます。</span><span class="sxs-lookup"><span data-stu-id="701bc-105">The image can be aligned on the button control by setting the <xref:System.Windows.Forms.ButtonBase.ImageAlign%2A> property.</span></span> <span data-ttu-id="701bc-106">同様に、ボタンコントロールに表示される <xref:System.Windows.Forms.Control.Text%2A> を配置するには、<xref:System.Windows.Forms.ButtonBase.TextAlign%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-106">Likewise, to align the <xref:System.Windows.Forms.Control.Text%2A> displayed on the button control, set the <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> property.</span></span>  
  
 <span data-ttu-id="701bc-107"><xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> プロパティは、コントロールのスタイルと外観を決定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-107">The <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property determines the style and appearance of the control.</span></span> <span data-ttu-id="701bc-108"><xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> プロパティが <xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType>に設定されている場合、ユーザーのオペレーティングシステムによってコントロールの外観が決まります。</span><span class="sxs-lookup"><span data-stu-id="701bc-108">If the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to <xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType>, the user's operating system determines the appearance of the control.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Control" />
    <altmember cref="T:System.Windows.Forms.Button" />
    <altmember cref="T:System.Windows.Forms.CheckBox" />
    <altmember cref="T:System.Windows.Forms.RadioButton" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ButtonBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ButtonBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="701bc-109">
          <see cref="T:System.Windows.Forms.ButtonBase" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="701bc-109">Initializes a new instance of the <see cref="T:System.Windows.Forms.ButtonBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoEllipsis">
      <MemberSignature Language="C#" Value="public bool AutoEllipsis { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoEllipsis" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.AutoEllipsis" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoEllipsis As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoEllipsis { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoEllipsis : bool with get, set" Usage="System.Windows.Forms.ButtonBase.AutoEllipsis" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-110">コントロールのテキストが、指定されたコントロールの長さを超えることを示す省略記号文字 (...) を、コントロールの右端に表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-110">Gets or sets a value indicating whether the ellipsis character (...) appears at the right edge of the control, denoting that the control text extends beyond the specified length of the control.</span></span></summary>
        <value><span data-ttu-id="701bc-111">追加のラベル テキストがあることを省略記号によって示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-111"><see langword="true" /> if the additional label text is to be indicated by an ellipsis; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="701bc-112">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="701bc-112">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-113"><xref:System.Windows.Forms.ButtonBase.AutoEllipsis%2A> を `true` に設定すると、ユーザーがマウスでコントロールを操作したときに、コントロールの幅を超えるテキストが表示されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-113">Set <xref:System.Windows.Forms.ButtonBase.AutoEllipsis%2A> to `true` to display text that extends beyond the width of the control when the user passes over the control with the mouse.</span></span> <span data-ttu-id="701bc-114"><xref:System.Windows.Forms.ButtonBase.AutoEllipsis%2A> を `true`にする場合は、コントロールの `AutoSize` プロパティを `false` に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="701bc-114">You must set the control's `AutoSize` property to `false` if you want <xref:System.Windows.Forms.ButtonBase.AutoEllipsis%2A> to be `true`.</span></span> <span data-ttu-id="701bc-115">`AutoSize` が `true`場合、コントロールはテキストに合わせて拡大され、省略記号は表示されません。</span><span class="sxs-lookup"><span data-stu-id="701bc-115">If `AutoSize` is `true`, the control will grow to fit the text and an ellipsis will not appear.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.ButtonBase.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-116">内容に合わせてコントロールのサイズを変更するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-116">Gets or sets a value that indicates whether the control resizes based on its contents.</span></span></summary>
        <value><span data-ttu-id="701bc-117">内容に合わせてコントロールのサイズを調整する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-117"><see langword="true" /> if the control automatically resizes based on its contents; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="701bc-118">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="701bc-118">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ButtonBase.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeChanged : EventHandler " Usage="member this.AutoSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-119"><see cref="P:System.Windows.Forms.ButtonBase.AutoSize" /> プロパティの値が変化したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="701bc-119">Occurs when the value of the <see cref="P:System.Windows.Forms.ButtonBase.AutoSize" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-120">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-120">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="701bc-121">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="701bc-121">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="701bc-122">この例では、イベントハンドラーは、<xref:System.Windows.Forms.ButtonBase.AutoSizeChanged> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="701bc-122">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ButtonBase.AutoSizeChanged> event.</span></span> <span data-ttu-id="701bc-123">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="701bc-123">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="701bc-124">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-124">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="701bc-125">コード例を実行するには、<xref:System.Windows.Forms.Button> や <xref:System.Windows.Forms.CheckBox>などの <xref:System.Windows.Forms.ButtonBase>から継承する型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="701bc-125">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.ButtonBase>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.CheckBox>.</span></span> <span data-ttu-id="701bc-126">次に、インスタンスに `ButtonBase1` という名前を付け、イベントハンドラーが <xref:System.Windows.Forms.ButtonBase.AutoSizeChanged> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="701bc-126">Then name the instance `ButtonBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.ButtonBase.AutoSizeChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#136](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#136)]
 [!code-vb[System.Windows.Forms.EventExamples#136](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#136)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ButtonBase.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-127">コントロールの背景色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-127">Gets or sets the background color of the control.</span></span></summary>
        <value><span data-ttu-id="701bc-128">背景色を表す <see cref="T:System.Drawing.Color" /> 値。</span><span class="sxs-lookup"><span data-stu-id="701bc-128">A <see cref="T:System.Drawing.Color" /> value representing the background color.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="buttonBase.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="701bc-129">コントロールの新しいユーザー補助オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="701bc-129">Creates a new accessibility object for the control.</span></span></summary>
        <returns><span data-ttu-id="701bc-130">コントロールの新しい <see cref="T:System.Windows.Forms.AccessibleObject" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-130">A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.ButtonBase.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-131">コントロール ハンドルが作成されるときに必要な作成パラメーターを取得します。</span><span class="sxs-lookup"><span data-stu-id="701bc-131">Gets the required creation parameters when the control handle is created.</span></span></summary>
        <value><span data-ttu-id="701bc-132">コントロールを識別するハンドルを作成するときに必要な作成パラメーターを格納している <see cref="T:System.Windows.Forms.CreateParams" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-132">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="701bc-133">アンマネージコードを操作するために使用します。</span><span class="sxs-lookup"><span data-stu-id="701bc-133">for operating with unmanaged code.</span></span> <span data-ttu-id="701bc-134">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="701bc-134">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="DefaultImeMode">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode DefaultImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode DefaultImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.DefaultImeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode DefaultImeMode { System::Windows::Forms::ImeMode get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultImeMode : System.Windows.Forms.ImeMode" Usage="System.Windows.Forms.ButtonBase.DefaultImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-135">このコントロールでサポートされている既定の IME (Input Method Editor) モードを取得します。</span><span class="sxs-lookup"><span data-stu-id="701bc-135">Gets the default Input Method Editor (IME) mode supported by this control.</span></span></summary>
        <value><span data-ttu-id="701bc-136"><see cref="T:System.Windows.Forms.ImeMode" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="701bc-136">One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-137"><xref:System.Windows.Forms.ButtonBase> クラスに実装されている場合、このプロパティは常に <xref:System.Windows.Forms.ImeMode?displayProperty=nameWithType>の `Disable` 値を返します。</span><span class="sxs-lookup"><span data-stu-id="701bc-137">As implemented in the <xref:System.Windows.Forms.ButtonBase> class, this property always returns the `Disable` value of <xref:System.Windows.Forms.ImeMode?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.ButtonBase.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-138">コントロールの既定のサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="701bc-138">Gets the default size of the control.</span></span></summary>
        <value><span data-ttu-id="701bc-139">コントロールの既定の <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-139">The default <see cref="T:System.Drawing.Size" /> of the control.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="buttonBase.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="701bc-140">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-140"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="701bc-141"><see cref="T:System.Windows.Forms.ButtonBase" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="701bc-141">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ButtonBase" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-142">このメソッドは、パブリック `Dispose` メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-142">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="701bc-143">`Dispose` は、`disposing` パラメーターを `true`に設定して、protected `Dispose(Boolean)` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="701bc-143">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="701bc-144"><xref:System.Object.Finalize%2A> は `disposing` を `false`に設定して `Dispose` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="701bc-144"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="701bc-145">`disposing` パラメーターが true の場合、このメソッドは、この <xref:System.Windows.Forms.ButtonBase> が参照するすべてのマネージオブジェクトによって保持されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="701bc-145">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.ButtonBase> references.</span></span> <span data-ttu-id="701bc-146">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="701bc-146">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="701bc-147">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="701bc-147">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="701bc-148">をオーバーライドする場合は <see langword="Dispose(Boolean)" /> 以前に <see langword="Dispose" />を呼び出したときに破棄されたオブジェクトを参照しないように注意してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-148">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="701bc-149"><see langword="Dispose(Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-149">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="701bc-150"><see langword="Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」と「 [Finalize メソッドのオーバーライド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-150">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="FlatAppearance">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FlatButtonAppearance FlatAppearance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.FlatButtonAppearance FlatAppearance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.FlatAppearance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FlatAppearance As FlatButtonAppearance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FlatButtonAppearance ^ FlatAppearance { System::Windows::Forms::FlatButtonAppearance ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FlatAppearance : System.Windows.Forms.FlatButtonAppearance" Usage="System.Windows.Forms.ButtonBase.FlatAppearance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FlatButtonAppearance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-151">チェックの状態およびマウスの状態を示すために使用する境界線の外観と色を取得します。</span><span class="sxs-lookup"><span data-stu-id="701bc-151">Gets the appearance of the border and the colors used to indicate check state and mouse state.</span></span></summary>
        <value><span data-ttu-id="701bc-152"><see cref="T:System.Windows.Forms.FlatButtonAppearance" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="701bc-152">One of the <see cref="T:System.Windows.Forms.FlatButtonAppearance" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-153"><xref:System.Windows.Forms.ButtonBase.FlatAppearance%2A> プロパティは、<xref:System.Windows.Forms.FlatStyle> が <xref:System.Windows.Forms.FlatStyle.Flat>である <xref:System.Windows.Forms.Button> コントロールでのみ使用します。</span><span class="sxs-lookup"><span data-stu-id="701bc-153">Use the <xref:System.Windows.Forms.ButtonBase.FlatAppearance%2A> property only with <xref:System.Windows.Forms.Button> controls whose <xref:System.Windows.Forms.FlatStyle> is <xref:System.Windows.Forms.FlatStyle.Flat>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlatStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FlatStyle FlatStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FlatStyle FlatStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.FlatStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FlatStyle As FlatStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FlatStyle FlatStyle { System::Windows::Forms::FlatStyle get(); void set(System::Windows::Forms::FlatStyle value); };" />
      <MemberSignature Language="F#" Value="member this.FlatStyle : System.Windows.Forms.FlatStyle with get, set" Usage="System.Windows.Forms.ButtonBase.FlatStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FlatStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-154">ボタン コントロールのフラット スタイルの外観を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-154">Gets or sets the flat style appearance of the button control.</span></span></summary>
        <value><span data-ttu-id="701bc-155"><see cref="T:System.Windows.Forms.FlatStyle" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="701bc-155">One of the <see cref="T:System.Windows.Forms.FlatStyle" /> values.</span></span> <span data-ttu-id="701bc-156">既定値は <see langword="Standard" />です。</span><span class="sxs-lookup"><span data-stu-id="701bc-156">The default value is <see langword="Standard" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-157"><xref:System.Windows.Forms.RadioButton> クラスおよび <xref:System.Windows.Forms.CheckBox> クラスの <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> プロパティが `System`に設定されている場合、コントロールはユーザーのオペレーティングシステムによって描画され、チェックの配置は `CheckAlign` と <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> のプロパティ値に基づいて行われます。</span><span class="sxs-lookup"><span data-stu-id="701bc-157">When the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property of the <xref:System.Windows.Forms.RadioButton> and <xref:System.Windows.Forms.CheckBox> classes is set to `System`, the control is drawn by the user's operating system and the check alignment is based upon the `CheckAlign` and <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> property values.</span></span> <span data-ttu-id="701bc-158">`CheckAlign` プロパティの値は変更されませんが、コントロールの外観は影響を受ける可能性があります。</span><span class="sxs-lookup"><span data-stu-id="701bc-158">The `CheckAlign` property value is not changed, but the appearance of the control can be affected.</span></span> <span data-ttu-id="701bc-159">このチェックボックスは、コントロールの左端または右端に沿って水平方向に配置されます (左揃えまたは中央揃えは左揃えで表示され、右側は変更されません)。垂直方向は、説明のテキストと同じになります。</span><span class="sxs-lookup"><span data-stu-id="701bc-159">The check box is horizontally aligned with either the left or right edge of the control (a left or center alignment appears left aligned, right remains unchanged), and vertically aligned the same as the descriptive text.</span></span> <span data-ttu-id="701bc-160">たとえば、`CheckAlign` プロパティ値が `ContentAlignment`の <xref:System.Windows.Forms.CheckBox> コントロールがあるとします。</span><span class="sxs-lookup"><span data-stu-id="701bc-160">For example, if you have a <xref:System.Windows.Forms.CheckBox> control with a `CheckAlign` property value of `ContentAlignment`.</span></span> <span data-ttu-id="701bc-161">`MiddleCenter`、<xref:System.Windows.Forms.ButtonBase.TextAlign%2A> プロパティ値 `ContentAlignment.TopRight`、<xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> プロパティ値が `System`に設定されている場合、テキストの配置は変更されませんが、チェックボックスの配置は `ContentAlignment.TopLeft` されているように見えます。</span><span class="sxs-lookup"><span data-stu-id="701bc-161">`MiddleCenter`, a <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> property value of `ContentAlignment.TopRight`, and the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property value is set to `System`, the check box alignment will appear to be `ContentAlignment.TopLeft` while the text alignment remains unchanged.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="701bc-162"><xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> プロパティが `FlatStyle.System`に設定されている場合、<xref:System.Windows.Forms.ButtonBase.Image%2A> プロパティに割り当てられているイメージは表示されません。</span><span class="sxs-lookup"><span data-stu-id="701bc-162">If the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to `FlatStyle.System`, any images assigned to the <xref:System.Windows.Forms.ButtonBase.Image%2A> property are not displayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="701bc-163">次のコード例では、派生クラスを使用して <xref:System.Windows.Forms.Button> し、いくつかの共通プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-163">The following code example uses the derived class, <xref:System.Windows.Forms.Button> and sets some of its common properties.</span></span> <span data-ttu-id="701bc-164">結果はフラットボタンになり、左側にテキストが表示され、右側に画像が表示されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-164">The result will be a flat button with text on the left and an image on the right.</span></span> <span data-ttu-id="701bc-165">このコードでは、`C:\Graphics` ディレクトリに格納されている `MyBitMap.bmp` という名前のビットマップイメージがあり、<xref:System.Drawing?displayProperty=nameWithType> 名前空間への参照が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="701bc-165">This code requires that you have a bitmap image named `MyBitMap.bmp` stored in the `C:\Graphics` directory, and that a reference to the <xref:System.Drawing?displayProperty=nameWithType> namespace is included.</span></span>  
  
 [!code-cpp[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/CS/source.cs#1)]
 [!code-vb[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="701bc-166">代入された値が、<see cref="T:System.Windows.Forms.FlatStyle" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="701bc-166">The value assigned is not one of the <see cref="T:System.Windows.Forms.FlatStyle" /> values.</span></span></exception>
        <altmember cref="T:System.Drawing.ContentAlignment" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size GetPreferredSize (System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Size GetPreferredSize(valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.GetPreferredSize(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreferredSize (proposedSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Drawing::Size GetPreferredSize(System::Drawing::Size proposedSize);" />
      <MemberSignature Language="F#" Value="override this.GetPreferredSize : System.Drawing.Size -&gt; System.Drawing.Size" Usage="buttonBase.GetPreferredSize proposedSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proposedSize" Type="System.Drawing.Size" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="proposedSize"><span data-ttu-id="701bc-167">サイズがカスタマイズされたコントロール用の領域です。</span><span class="sxs-lookup"><span data-stu-id="701bc-167">The custom-sized area for a control.</span></span></param>
        <summary><span data-ttu-id="701bc-168">コントロールが収まる四角形の領域のサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="701bc-168">Retrieves the size of a rectangular area into which a control can be fitted.</span></span></summary>
        <returns><span data-ttu-id="701bc-169">四角形の幅と高さを表す、順序を付与した <see cref="T:System.Drawing.Size" /> 型のペア。</span><span class="sxs-lookup"><span data-stu-id="701bc-169">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-170"><xref:System.Windows.Forms.ButtonBase.GetPreferredSize%2A> の動作は、コントロールによって異なります。</span><span class="sxs-lookup"><span data-stu-id="701bc-170">The behavior of <xref:System.Windows.Forms.ButtonBase.GetPreferredSize%2A> differs by control.</span></span> <span data-ttu-id="701bc-171"><xref:System.Windows.Forms.Control.LayoutEngine%2A> が、返されたサイズをコントロールに割り当てることができない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="701bc-171">The <xref:System.Windows.Forms.Control.LayoutEngine%2A> might be unable to assign the returned size to the control.</span></span> <span data-ttu-id="701bc-172">`proposedSize` パラメーターに示されている制約よりも大きいサイズを返すことができますが、制約が減少すると `proposedSize` が減少します。</span><span class="sxs-lookup"><span data-stu-id="701bc-172">You can return a size larger than the constraints indicated in the `proposedSize` parameter, but `proposedSize` should decrease as the constraint decreases.</span></span> <span data-ttu-id="701bc-173">たとえば、`GetPreferredSize(new Size(100, 0))` を `GetPreferredSize(new Size(200, 0))`よりも大きくすることはできません。</span><span class="sxs-lookup"><span data-stu-id="701bc-173">For example, `GetPreferredSize(new Size(100, 0))` should not be wider than `GetPreferredSize(new Size(200, 0))`.</span></span> <span data-ttu-id="701bc-174">この例外は、無制限として定義されている0または `Size.Empty`の `proposedSize` です。</span><span class="sxs-lookup"><span data-stu-id="701bc-174">The exception is a `proposedSize` of 0 or `Size.Empty`, which are defined as unconstrained.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public System.Drawing.Image Image { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Image" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.Image" />
      <MemberSignature Language="VB.NET" Value="Public Property Image As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Image ^ Image { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Image : System.Drawing.Image with get, set" Usage="System.Windows.Forms.ButtonBase.Image" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-175">ボタン コントロールに表示されるイメージを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-175">Gets or sets the image that is displayed on a button control.</span></span></summary>
        <value><span data-ttu-id="701bc-176">ボタン コントロールに表示される <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-176">The <see cref="T:System.Drawing.Image" /> displayed on the button control.</span></span> <span data-ttu-id="701bc-177">既定値は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="701bc-177">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-178"><xref:System.Windows.Forms.ButtonBase.Image%2A> プロパティが設定されている場合、<xref:System.Windows.Forms.ButtonBase.ImageList%2A> プロパティは `null`に設定され、<xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> プロパティは既定値の-1 に設定されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-178">When the <xref:System.Windows.Forms.ButtonBase.Image%2A> property is set, the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property will be set to `null`, and the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property will be set to its default, -1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="701bc-179"><xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> プロパティが `FlatStyle.System`に設定されている場合、<xref:System.Windows.Forms.ButtonBase.Image%2A> プロパティに割り当てられているイメージは表示されません。</span><span class="sxs-lookup"><span data-stu-id="701bc-179">If the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to `FlatStyle.System`, any images assigned to the <xref:System.Windows.Forms.ButtonBase.Image%2A> property are not displayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="701bc-180">次のコード例では、派生クラスを使用して <xref:System.Windows.Forms.Button> し、いくつかの共通プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-180">The following code example uses the derived class, <xref:System.Windows.Forms.Button> and sets some of its common properties.</span></span> <span data-ttu-id="701bc-181">結果はフラットボタンになり、左側にテキストが表示され、右側に画像が表示されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-181">The result will be a flat button with text on the left and an image on the right.</span></span> <span data-ttu-id="701bc-182">このコードでは、`C:\Graphics` ディレクトリに格納されている `MyBitMap.bmp` という名前のビットマップイメージがあり、<xref:System.Drawing?displayProperty=nameWithType> 名前空間への参照が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="701bc-182">This code requires that you have a bitmap image named `MyBitMap.bmp` stored in the `C:\Graphics` directory, and that a reference to the <xref:System.Drawing?displayProperty=nameWithType> namespace is included.</span></span>  
  
 [!code-cpp[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/CS/source.cs#1)]
 [!code-vb[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.ButtonBase.FlatStyle" />
      </Docs>
    </Member>
    <Member MemberName="ImageAlign">
      <MemberSignature Language="C#" Value="public System.Drawing.ContentAlignment ImageAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment ImageAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.ImageAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::ContentAlignment ImageAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.ImageAlign : System.Drawing.ContentAlignment with get, set" Usage="System.Windows.Forms.ButtonBase.ImageAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-183">ボタン コントロール上のイメージの配置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-183">Gets or sets the alignment of the image on the button control.</span></span></summary>
        <value><span data-ttu-id="701bc-184"><see cref="T:System.Drawing.ContentAlignment" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="701bc-184">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span></span> <span data-ttu-id="701bc-185">既定値は <see langword="MiddleCenter" />です。</span><span class="sxs-lookup"><span data-stu-id="701bc-185">The default value is <see langword="MiddleCenter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="701bc-186">次のコード例では、派生クラスを使用して <xref:System.Windows.Forms.Button> し、いくつかの共通プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-186">The following code example uses the derived class, <xref:System.Windows.Forms.Button> and sets some of its common properties.</span></span> <span data-ttu-id="701bc-187">結果はフラットボタンになり、左側にテキストが表示され、右側に画像が表示されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-187">The result will be a flat button with text on the left and an image on the right.</span></span> <span data-ttu-id="701bc-188">このコードでは、`C:\Graphics` ディレクトリに格納されている `MyBitMap.bmp` という名前のビットマップイメージがあり、<xref:System.Drawing?displayProperty=nameWithType> 名前空間への参照が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="701bc-188">This code requires that you have a bitmap image named `MyBitMap.bmp` stored in the `C:\Graphics` directory, and that a reference to the <xref:System.Drawing?displayProperty=nameWithType> namespace is included.</span></span>  
  
 [!code-cpp[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/CS/source.cs#1)]
 [!code-vb[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="701bc-189">代入された値が、<see cref="T:System.Drawing.ContentAlignment" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="701bc-189">The value assigned is not one of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.ButtonBase.TextAlign" />
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ImageIndex : int with get, set" Usage="System.Windows.Forms.ButtonBase.ImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-190">ボタン コントロールに表示されているイメージのイメージ リスト内でのインデックス値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-190">Gets or sets the image list index value of the image displayed on the button control.</span></span></summary>
        <value><span data-ttu-id="701bc-191"><see cref="T:System.Windows.Forms.ImageList" /> 内でのイメージの位置を表す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="701bc-191">A zero-based index, which represents the image position in an <see cref="T:System.Windows.Forms.ImageList" />.</span></span> <span data-ttu-id="701bc-192">既定値は -1 です。</span><span class="sxs-lookup"><span data-stu-id="701bc-192">The default is -1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-193"><xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> または <xref:System.Windows.Forms.ButtonBase.ImageList%2A> のプロパティが設定されている場合、<xref:System.Windows.Forms.ButtonBase.Image%2A> プロパティは既定値の `null`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-193">When the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> or <xref:System.Windows.Forms.ButtonBase.ImageList%2A> properties are set, the <xref:System.Windows.Forms.ButtonBase.Image%2A> property is set to its default value, `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="701bc-194"><xref:System.Windows.Forms.ButtonBase.ImageList%2A> プロパティの値が `null`に変更された場合、<xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> プロパティは既定値の-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="701bc-194">If the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property value is changed to `null`, the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property returns its default value, -1.</span></span> <span data-ttu-id="701bc-195">ただし、割り当てられた <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> 値は内部で保持され、別の <xref:System.Windows.Forms.ImageList> オブジェクトが <xref:System.Windows.Forms.ButtonBase.ImageList%2A> プロパティに割り当てられるときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-195">However, the assigned <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> value is retained internally and used when another <xref:System.Windows.Forms.ImageList> object is assigned to the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property.</span></span> <span data-ttu-id="701bc-196"><xref:System.Windows.Forms.ButtonBase.ImageList%2A> プロパティに割り当てられた新しい <xref:System.Windows.Forms.ImageList> に、<xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> プロパティに割り当てられた値以下の <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A?displayProperty=nameWithType> プロパティ値がある場合 (コレクションが0から始まるインデックスである場合)、<xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> プロパティ値は、<xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A> プロパティ値より1小さい値に調整されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-196">If the new <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property has an <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A?displayProperty=nameWithType> property value that is less than or equal to the value assigned to the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property minus one (to account for the collection being a zero-based index), the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property value is adjusted to one less than the <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A> property value.</span></span> <span data-ttu-id="701bc-197">たとえば、<xref:System.Windows.Forms.ImageList> に3つのイメージがあり、<xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> プロパティが2に設定されているボタンコントロールがあるとします。</span><span class="sxs-lookup"><span data-stu-id="701bc-197">For example, consider a button control whose <xref:System.Windows.Forms.ImageList> has three images and whose <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property is set to 2.</span></span> <span data-ttu-id="701bc-198">2つのイメージのみを持つ新しい <xref:System.Windows.Forms.ImageList> がボタンに割り当てられている場合、<xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> の値は1に変更されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-198">If a new <xref:System.Windows.Forms.ImageList> that has only two images is assigned to the button, the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> value changes to 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="701bc-199">次のコード例では、派生クラスを使用して <xref:System.Windows.Forms.Button> し、<xref:System.Windows.Forms.ButtonBase.ImageList%2A> プロパティと <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-199">The following code example uses the derived class, <xref:System.Windows.Forms.Button> and sets the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> and <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> properties.</span></span> <span data-ttu-id="701bc-200">このコードでは、<xref:System.Windows.Forms.ImageList> が作成され、少なくとも1つの <xref:System.Drawing.Image> が割り当てられている必要があります。</span><span class="sxs-lookup"><span data-stu-id="701bc-200">This code requires that an <xref:System.Windows.Forms.ImageList> has been created and a minimum of one <xref:System.Drawing.Image> has been assigned to it.</span></span> <span data-ttu-id="701bc-201">また、このコードでは、`MyBitMap.bmp` という名前のビットマップイメージが `C:\Graphics` ディレクトリに格納されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="701bc-201">This code also requires that you have a bitmap image named `MyBitMap.bmp` stored in the `C:\Graphics` directory.</span></span>  
  
 [!code-cpp[Classic ButtonBase.ImageIndex Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ButtonBase.ImageIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ButtonBase.ImageIndex Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ButtonBase.ImageIndex Example/CS/source.cs#1)]
 [!code-vb[Classic ButtonBase.ImageIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ButtonBase.ImageIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="701bc-202">代入された値が <see cref="P:System.Windows.Forms.ButtonBase.ImageIndex" /> の下限値より小さいです。</span><span class="sxs-lookup"><span data-stu-id="701bc-202">The assigned value is less than the lower bounds of the <see cref="P:System.Windows.Forms.ButtonBase.ImageIndex" />.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.ImageList" />
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageKey : string with get, set" Usage="System.Windows.Forms.ButtonBase.ImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-203"><see cref="P:System.Windows.Forms.ButtonBase.ImageList" /> 内のイメージのキー アクセサーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-203">Gets or sets the key accessor for the image in the <see cref="P:System.Windows.Forms.ButtonBase.ImageList" />.</span></span></summary>
        <value><span data-ttu-id="701bc-204">イメージのキーを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="701bc-204">A string representing the key of the image.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-205"><xref:System.Windows.Forms.ButtonBase.ImageKey%2A> プロパティは、イメージリストからコントロールに表示するイメージを指定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-205">The <xref:System.Windows.Forms.ButtonBase.ImageKey%2A> property specifies the image from the image list to display on the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList ImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList ImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.ImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ ImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ButtonBase.ImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-206">ボタン コントロールに表示される <see cref="T:System.Windows.Forms.ImageList" /> を保持している <see cref="T:System.Drawing.Image" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-206">Gets or sets the <see cref="T:System.Windows.Forms.ImageList" /> that contains the <see cref="T:System.Drawing.Image" /> displayed on a button control.</span></span></summary>
        <value><span data-ttu-id="701bc-207"><see cref="T:System.Windows.Forms.ImageList" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-207">An <see cref="T:System.Windows.Forms.ImageList" />.</span></span> <span data-ttu-id="701bc-208">既定値は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="701bc-208">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-209"><xref:System.Windows.Forms.ButtonBase.ImageList%2A> または <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> プロパティが設定されている場合、<xref:System.Windows.Forms.ButtonBase.Image%2A> プロパティは `null`設定されます。これは既定値です。</span><span class="sxs-lookup"><span data-stu-id="701bc-209">When the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> or <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property is set, the <xref:System.Windows.Forms.ButtonBase.Image%2A> property is set `null`, which is its default value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="701bc-210"><xref:System.Windows.Forms.ButtonBase.ImageList%2A> プロパティの値が `null`に変更された場合、<xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> プロパティは既定値の-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="701bc-210">If the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property value is changed to `null`, the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property returns its default value, -1.</span></span> <span data-ttu-id="701bc-211">ただし、割り当てられた <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> 値は内部で保持され、別の <xref:System.Windows.Forms.ImageList> が <xref:System.Windows.Forms.ButtonBase.ImageList%2A> プロパティに割り当てられるときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-211">However, the assigned <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> value is retained internally and used when another <xref:System.Windows.Forms.ImageList> is assigned to the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property.</span></span> <span data-ttu-id="701bc-212"><xref:System.Windows.Forms.ButtonBase.ImageList%2A> プロパティに割り当てられた新しい <xref:System.Windows.Forms.ImageList> に、<xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> プロパティに割り当てられた値以下の <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A?displayProperty=nameWithType> プロパティ値がある場合 (コレクションが0から始まるインデックスであるため)、<xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> プロパティ値は、<xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A> プロパティ値より1小さい値に調整されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-212">If the new <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property has an <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A?displayProperty=nameWithType> property value that is less than or equal to the value assigned to the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property minus one (because the collection is a zero-based index), the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property value is adjusted to one less than the <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A> property value.</span></span> <span data-ttu-id="701bc-213">たとえば、<xref:System.Windows.Forms.ImageList> に3つのイメージがあり、<xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> プロパティが2に設定されているボタンコントロールがあるとします。</span><span class="sxs-lookup"><span data-stu-id="701bc-213">For example, consider a button control whose <xref:System.Windows.Forms.ImageList> has three images and whose <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property is set to 2.</span></span> <span data-ttu-id="701bc-214">2つのイメージのみを持つ新しい <xref:System.Windows.Forms.ImageList> がボタンに割り当てられている場合、<xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> の値は1に変更されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-214">If a new <xref:System.Windows.Forms.ImageList> that has only two images is assigned to the button, the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> value changes to 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="701bc-215">次のコード例では、派生クラスを使用して <xref:System.Windows.Forms.Button> し、<xref:System.Windows.Forms.ButtonBase.ImageList%2A> プロパティと <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-215">The following code example uses the derived class, <xref:System.Windows.Forms.Button> and sets the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> and <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> properties.</span></span> <span data-ttu-id="701bc-216">このコードでは、<xref:System.Windows.Forms.ImageList> が作成され、少なくとも1つの <xref:System.Drawing.Image> が割り当てられている必要があります。</span><span class="sxs-lookup"><span data-stu-id="701bc-216">This code requires that an <xref:System.Windows.Forms.ImageList> has been created and a minimum of one <xref:System.Drawing.Image> has been assigned to it.</span></span> <span data-ttu-id="701bc-217">また、このコードでは、`MyBitMap.bmp` という名前のビットマップイメージが `C:\Graphics` ディレクトリに格納されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="701bc-217">This code also requires that you have a bitmap image named `MyBitMap.bmp` stored in the `C:\Graphics` directory.</span></span>  
  
 [!code-cpp[Classic ButtonBase.ImageIndex Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ButtonBase.ImageIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ButtonBase.ImageIndex Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ButtonBase.ImageIndex Example/CS/source.cs#1)]
 [!code-vb[Classic ButtonBase.ImageIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ButtonBase.ImageIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="P:System.Windows.Forms.ButtonBase.ImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="ImeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImeMode ImeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.ImeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImeMode ImeMode { System::Windows::Forms::ImeMode get(); void set(System::Windows::Forms::ImeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ImeMode : System.Windows.Forms.ImeMode with get, set" Usage="System.Windows.Forms.ButtonBase.ImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-218">このコントロールでサポートされている IME (Input Method Editor) モードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-218">Gets or sets the Input Method Editor (IME) mode supported by this control.</span></span> <span data-ttu-id="701bc-219">このクラスでは、このプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="701bc-219">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="701bc-220"><see cref="T:System.Windows.Forms.ImeMode" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="701bc-220">One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-221">このクラスでは、このプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="701bc-221">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImeMode" />
        <altmember cref="P:System.Windows.Forms.ButtonBase.DefaultImeMode" />
      </Docs>
    </Member>
    <Member MemberName="ImeModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ImeModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ImeModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ButtonBase.ImeModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ImeModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ImeModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ImeModeChanged : EventHandler " Usage="member this.ImeModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-222"><see cref="P:System.Windows.Forms.ButtonBase.ImeMode" /> プロパティが変更されると発生します。</span><span class="sxs-lookup"><span data-stu-id="701bc-222">Occurs when the <see cref="P:System.Windows.Forms.ButtonBase.ImeMode" /> property is changed.</span></span> <span data-ttu-id="701bc-223">このクラスでは、このイベントは使用されません。</span><span class="sxs-lookup"><span data-stu-id="701bc-223">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-224">このクラスでは、このイベントは使用されません。</span><span class="sxs-lookup"><span data-stu-id="701bc-224">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="protected internal bool IsDefault { get; set; }" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property IsDefault As Boolean" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool IsDefault { bool get(); void set(bool value); };" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool with get, set" Usage="System.Windows.Forms.ButtonBase.IsDefault" />
      <MemberSignature Language="C#" Value="protected bool IsDefault { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Property IsDefault As Boolean" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDefault { bool get(); void set(bool value); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-225">ボタン コントロールが既定のボタンかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-225">Gets or sets a value indicating whether the button control is the default button.</span></span></summary>
        <value><span data-ttu-id="701bc-226">ボタン コントロールが既定のボタンの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-226"><see langword="true" /> if the button control is the default button; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-227"><xref:System.Windows.Forms.ButtonBase.IsDefault%2A> プロパティが `true`に設定されている場合、ボタンは <xref:System.Windows.Forms.Form>の既定のボタンになります。</span><span class="sxs-lookup"><span data-stu-id="701bc-227">When the <xref:System.Windows.Forms.ButtonBase.IsDefault%2A> property is set to `true`, the button is the default button for the <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="701bc-228">これは、enter キーを押したときに enter キーを押したときにボタンがクリックされることを意味します。他のボタンや、ENTER キーをキャプチャするその他のコントロールにはフォーカスがありません。</span><span class="sxs-lookup"><span data-stu-id="701bc-228">This means that the button is clicked when the ENTER key is pressed if no other button or any other control that captures the ENTER key has focus.</span></span>  
  
 <span data-ttu-id="701bc-229">フォームの既定のボタンを指定するには、フォームの [<xref:System.Windows.Forms.Form.AcceptButton%2A>] プロパティを目的のボタンに設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-229">To specify the default button of a form, set the <xref:System.Windows.Forms.Form.AcceptButton%2A> property of the form to the desired button.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AcceptButton" />
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="buttonBase.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="701bc-230">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-230">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="701bc-231"><see cref="E:System.Windows.Forms.Control.EnabledChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="701bc-231">Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : EventArgs -&gt; unit" Usage="buttonBase.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="701bc-232">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-232">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="701bc-233"><see cref="E:System.Windows.Forms.Control.GotFocus" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="701bc-233">Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-234">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-234">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="701bc-235">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-235">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="701bc-236"><xref:System.Windows.Forms.ButtonBase.OnGotFocus%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="701bc-236">The <xref:System.Windows.Forms.ButtonBase.OnGotFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="701bc-237">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="701bc-237">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="701bc-238">派生クラスで <see cref="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-238">When overriding <see cref="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs kevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs kevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (kevent As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ kevent);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="buttonBase.OnKeyDown kevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kevent" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="kevent"><span data-ttu-id="701bc-239">イベント データを格納している <see cref="T:System.Windows.Forms.KeyEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-239">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="701bc-240"><see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="701bc-240">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-241">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-241">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="701bc-242">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-242">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="701bc-243"><xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="701bc-243">The <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="701bc-244">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="701bc-244">This is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="701bc-245">ボタンが無効になっている場合は <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A> を呼び出さないでください (これには、派生クラスの <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A> をオーバーライドするときの基本クラスの <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A> メソッドの呼び出しが含まれます)。</span><span class="sxs-lookup"><span data-stu-id="701bc-245">Do not call <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A> if the button is disabled (this includes calls to the base class's <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A> method when you override <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A> in a derived class).</span></span> <span data-ttu-id="701bc-246"><xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A>のオーバーライドでボタンを無効にする場合は、ボタンを無効にする前に基本クラスの <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A> メソッドを呼び出すか、またはまったく呼び出しないようにします。</span><span class="sxs-lookup"><span data-stu-id="701bc-246">When disabling the button in an override of <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A>, call the base class's <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A> method before disabling the button, or do not call it at all.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="701bc-247">派生クラスで <see cref="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-247">When overriding <see cref="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs kevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs kevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (kevent As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ kevent);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="buttonBase.OnKeyUp kevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kevent" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="kevent"><span data-ttu-id="701bc-248">イベント データを格納している <see cref="T:System.Windows.Forms.KeyEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-248">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="701bc-249"><see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="701bc-249">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-250">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-250">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="701bc-251">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-251">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="701bc-252"><xref:System.Windows.Forms.ButtonBase.OnKeyUp%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="701bc-252">The <xref:System.Windows.Forms.ButtonBase.OnKeyUp%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="701bc-253">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="701bc-253">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="701bc-254">派生クラスで <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-254">When overriding <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostFocus : EventArgs -&gt; unit" Usage="buttonBase.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="701bc-255">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-255">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="701bc-256"><see cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="701bc-256">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-257">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-257">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="701bc-258">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-258">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="701bc-259"><xref:System.Windows.Forms.ButtonBase.OnLostFocus%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="701bc-259">The <xref:System.Windows.Forms.ButtonBase.OnLostFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="701bc-260">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="701bc-260">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="701bc-261">派生クラスで <see cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-261">When overriding <see cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="buttonBase.OnMouseDown mevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent"><span data-ttu-id="701bc-262">イベント データを格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-262">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="701bc-263"><see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="701bc-263">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-264">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-264">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="701bc-265">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-265">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="701bc-266"><xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="701bc-266">The <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="701bc-267">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="701bc-267">This is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="701bc-268">ボタンが無効になっている場合は <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A> を呼び出さないでください (これには、派生クラスの <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A> をオーバーライドするときの基本クラスの <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A> メソッドの呼び出しが含まれます)。</span><span class="sxs-lookup"><span data-stu-id="701bc-268">Do not call <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A> if the button is disabled (this includes calls to the base class's <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A> method when you override <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A> in a derived class).</span></span> <span data-ttu-id="701bc-269"><xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A>のオーバーライドでボタンを無効にする場合は、ボタンを無効にする前に基本クラスの <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A> メソッドを呼び出すか、またはまったく呼び出しないようにします。</span><span class="sxs-lookup"><span data-stu-id="701bc-269">When disabling the button in an override of <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A>, call the base class's <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A> method before disabling the button, or do not call it at all.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="701bc-270">派生クラスで <see cref="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-270">When overriding <see cref="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (EventArgs eventargs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.EventArgs eventargs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(EventArgs ^ eventargs);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : EventArgs -&gt; unit" Usage="buttonBase.OnMouseEnter eventargs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventargs" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="eventargs"><span data-ttu-id="701bc-271">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-271">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="701bc-272"><see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="701bc-272">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-273">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-273">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="701bc-274">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-274">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="701bc-275"><xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="701bc-275">The <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="701bc-276">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="701bc-276">This is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="701bc-277">ボタンが無効になっている場合は <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A> を呼び出さないでください (これには、派生クラスで <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A> をオーバーライドするときに、基本クラスの <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A> メソッドの呼び出しが含まれます)。</span><span class="sxs-lookup"><span data-stu-id="701bc-277">Do not call <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A> if the button is disabled (this includes call to the base class's <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A> method when you override <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A> in a derived class).</span></span> <span data-ttu-id="701bc-278"><xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A>のオーバーライドでボタンを無効にする場合は、ボタンを無効にする前に基本クラスの <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A> メソッドを呼び出すか、またはまったく呼び出しないようにします。</span><span class="sxs-lookup"><span data-stu-id="701bc-278">When disabling the button in an override of <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A>, call the base class's <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A> method before disabling the button, or do not call it at all.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="701bc-279">派生クラスで <see cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-279">When overriding <see cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs eventargs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs eventargs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ eventargs);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="buttonBase.OnMouseLeave eventargs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventargs" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="eventargs"><span data-ttu-id="701bc-280">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-280">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="701bc-281"><see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="701bc-281">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-282">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-282">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="701bc-283">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-283">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="701bc-284"><xref:System.Windows.Forms.ButtonBase.OnMouseLeave%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="701bc-284">The <xref:System.Windows.Forms.ButtonBase.OnMouseLeave%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="701bc-285">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="701bc-285">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="701bc-286">派生クラスで <see cref="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-286">When overriding <see cref="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="buttonBase.OnMouseMove mevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent"><span data-ttu-id="701bc-287">イベント データを格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-287">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="701bc-288"><see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="701bc-288">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-289">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-289">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="701bc-290">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-290">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="701bc-291"><xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="701bc-291">The <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="701bc-292">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="701bc-292">This is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="701bc-293">ボタンが無効になっている場合は <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A> を呼び出さないでください (これには、派生クラスの <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A> をオーバーライドするときの基本クラスの <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A> メソッドの呼び出しが含まれます)。</span><span class="sxs-lookup"><span data-stu-id="701bc-293">Do not call <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A> if the button is disabled (this includes calls to the base class's <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A> method when you override <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A> in a derived class).</span></span> <span data-ttu-id="701bc-294"><xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A>のオーバーライドでボタンを無効にする場合は、ボタンを無効にする前に基本クラスの <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A> メソッドを呼び出すか、またはまったく呼び出しないようにします。</span><span class="sxs-lookup"><span data-stu-id="701bc-294">When disabling the button in an override of <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A>, call the base class's <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A> method before disabling the button, or do not call it at all.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="701bc-295">派生クラスで <see cref="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-295">When overriding <see cref="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="buttonBase.OnMouseUp mevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent"><span data-ttu-id="701bc-296">イベント データを格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-296">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="701bc-297"><see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="701bc-297">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-298">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-298">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="701bc-299">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-299">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="701bc-300"><xref:System.Windows.Forms.ButtonBase.OnMouseUp%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="701bc-300">The <xref:System.Windows.Forms.ButtonBase.OnMouseUp%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="701bc-301">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="701bc-301">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="701bc-302">派生クラスで <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-302">When overriding <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs pevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs pevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (pevent As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ pevent);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="buttonBase.OnPaint pevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pevent" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="pevent"><span data-ttu-id="701bc-303">イベント データを格納している <see cref="T:System.Windows.Forms.PaintEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-303">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="701bc-304"><see cref="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="701bc-304">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-305">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-305">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="701bc-306">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-306">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="701bc-307"><xref:System.Windows.Forms.ButtonBase.OnPaint%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="701bc-307">The <xref:System.Windows.Forms.ButtonBase.OnPaint%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="701bc-308">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="701bc-308">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="701bc-309">派生クラスで <see cref="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="701bc-309">When overriding <see cref="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected override void OnParentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnParentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnParentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnParentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnParentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnParentChanged : EventArgs -&gt; unit" Usage="buttonBase.OnParentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="701bc-310">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-310">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="701bc-311"><see cref="E:System.Windows.Forms.Control.ParentChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="701bc-311">Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="buttonBase.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="701bc-312">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-312">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="701bc-313"><see cref="E:System.Windows.Forms.Control.TextChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="701bc-313">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnVisibleChanged">
      <MemberSignature Language="C#" Value="protected override void OnVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnVisibleChanged : EventArgs -&gt; unit" Usage="buttonBase.OnVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="701bc-314">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="701bc-314">An <see cref="T:System.EventArgs" /> object that contains the event data.</span></span></param>
        <summary><span data-ttu-id="701bc-315"><see cref="E:System.Windows.Forms.Control.VisibleChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="701bc-315">Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ResetFlagsandPaint">
      <MemberSignature Language="C#" Value="protected void ResetFlagsandPaint ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetFlagsandPaint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.ResetFlagsandPaint" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ResetFlagsandPaint ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ResetFlagsandPaint();" />
      <MemberSignature Language="F#" Value="member this.ResetFlagsandPaint : unit -&gt; unit" Usage="buttonBase.ResetFlagsandPaint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="701bc-316"><see cref="T:System.Windows.Forms.Button" /> コントロールを押される前の状態にリセットし、再描画します。</span><span class="sxs-lookup"><span data-stu-id="701bc-316">Resets the <see cref="T:System.Windows.Forms.Button" /> control to the state before it is pressed and redraws it.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.ButtonBase.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-317">このコントロールに関連付けられているテキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-317">Gets or sets the text associated with this control.</span></span></summary>
        <value><span data-ttu-id="701bc-318">このコントロールに関連付けられているテキスト。</span><span class="sxs-lookup"><span data-stu-id="701bc-318">The text associated with this control.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Text" />
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.ContentAlignment TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment TextAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.TextAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TextAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::ContentAlignment TextAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlign : System.Drawing.ContentAlignment with get, set" Usage="System.Windows.Forms.ButtonBase.TextAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-319">ボタン コントロールのテキストの配置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-319">Gets or sets the alignment of the text on the button control.</span></span></summary>
        <value><span data-ttu-id="701bc-320"><see cref="T:System.Drawing.ContentAlignment" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="701bc-320">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span></span> <span data-ttu-id="701bc-321">既定値は、<see langword="MiddleCenter" /> です。</span><span class="sxs-lookup"><span data-stu-id="701bc-321">The default is <see langword="MiddleCenter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="701bc-322">次のコード例では、派生クラスを使用して <xref:System.Windows.Forms.Button> し、いくつかの共通プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-322">The following code example uses the derived class, <xref:System.Windows.Forms.Button> and sets some of its common properties.</span></span> <span data-ttu-id="701bc-323">結果はフラットボタンになり、左側にテキストが表示され、右側に画像が表示されます。</span><span class="sxs-lookup"><span data-stu-id="701bc-323">The result will be a flat button with text on the left and an image on the right.</span></span> <span data-ttu-id="701bc-324">このコードでは、`C:\Graphics` ディレクトリに格納されている `MyBitMap.bmp` という名前のビットマップイメージがあり、<xref:System.Drawing?displayProperty=nameWithType> 名前空間への参照が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="701bc-324">This code requires that you have a bitmap image named `MyBitMap.bmp` stored in the `C:\Graphics` directory, and that a reference to the <xref:System.Drawing?displayProperty=nameWithType> namespace is included.</span></span>  
  
 [!code-cpp[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/CS/source.cs#1)]
 [!code-vb[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="701bc-325">代入された値が、<see cref="T:System.Drawing.ContentAlignment" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="701bc-325">The value assigned is not one of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.ButtonBase.ImageAlign" />
      </Docs>
    </Member>
    <Member MemberName="TextImageRelation">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TextImageRelation TextImageRelation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TextImageRelation TextImageRelation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.TextImageRelation" />
      <MemberSignature Language="VB.NET" Value="Public Property TextImageRelation As TextImageRelation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TextImageRelation TextImageRelation { System::Windows::Forms::TextImageRelation get(); void set(System::Windows::Forms::TextImageRelation value); };" />
      <MemberSignature Language="F#" Value="member this.TextImageRelation : System.Windows.Forms.TextImageRelation with get, set" Usage="System.Windows.Forms.ButtonBase.TextImageRelation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextImageRelation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-326">テキストおよびイメージの、互いを基準とした相対位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-326">Gets or sets the position of text and image relative to each other.</span></span></summary>
        <value><span data-ttu-id="701bc-327"><see cref="T:System.Windows.Forms.TextImageRelation" /> の値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="701bc-327">One of the values of <see cref="T:System.Windows.Forms.TextImageRelation" />.</span></span> <span data-ttu-id="701bc-328">既定値は、<see cref="F:System.Windows.Forms.TextImageRelation.Overlay" /> です。</span><span class="sxs-lookup"><span data-stu-id="701bc-328">The default is <see cref="F:System.Windows.Forms.TextImageRelation.Overlay" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="701bc-329">値が、<see cref="T:System.Windows.Forms.TextImageRelation" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="701bc-329">The value is not one of the <see cref="T:System.Windows.Forms.TextImageRelation" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UseCompatibleTextRendering">
      <MemberSignature Language="C#" Value="public bool UseCompatibleTextRendering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCompatibleTextRendering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.UseCompatibleTextRendering" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCompatibleTextRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCompatibleTextRendering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCompatibleTextRendering : bool with get, set" Usage="System.Windows.Forms.ButtonBase.UseCompatibleTextRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-330">テキストのレンダリングに <see cref="T:System.Drawing.Graphics" /> クラス ([!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]) を使用するか、<see cref="T:System.Windows.Forms.TextRenderer" /> クラス ([!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]) を使用するかを決定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-330">Gets or sets a value that determines whether to use the <see cref="T:System.Drawing.Graphics" /> class ([!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]) or the <see cref="T:System.Windows.Forms.TextRenderer" /> class ([!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]) to render text.</span></span></summary>
        <value><span data-ttu-id="701bc-331"><see cref="T:System.Drawing.Graphics" /> クラスを使用して、バージョン1.0 および1.1 との互換性を保つためにテキストレンダリングを実行する必要がある場合は <see langword="true" /> します。</span><span class="sxs-lookup"><span data-stu-id="701bc-331"><see langword="true" /> if the <see cref="T:System.Drawing.Graphics" /> class should be used to perform text rendering for compatibility with versions 1.0 and 1.1.</span></span> <span data-ttu-id="701bc-332">.NET Framework の。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="701bc-332">of the .NET Framework; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="701bc-333">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="701bc-333">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-334">`UseCompatibleTextRendering` プロパティは、<xref:System.Windows.Forms.TextRenderer> クラスを使用してテキストを表示する Windows フォームコントロールと、[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] クラスを使用してカスタムテキストレンダリングを実行する [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] および <xref:System.Drawing.Graphics> アプリケーションの間で、視覚的な互換性を提供するためのものです。</span><span class="sxs-lookup"><span data-stu-id="701bc-334">The `UseCompatibleTextRendering` property is intended to provide visual compatibility between Windows Forms controls that render text using the <xref:System.Windows.Forms.TextRenderer> class and [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] and [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] applications that perform custom text rendering using the <xref:System.Drawing.Graphics> class.</span></span> <span data-ttu-id="701bc-335">ほとんどの場合、アプリケーションが [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] または [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]からアップグレードされていない場合は、`UseCompatibleTextRendering` を既定値の `false`に設定したままにしておくことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="701bc-335">In most cases, if your application is not being upgraded from [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] or [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)], it is recommended that you leave `UseCompatibleTextRendering` set to the default value of `false`.</span></span>  
  
 <span data-ttu-id="701bc-336">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] ベースの <xref:System.Windows.Forms.TextRenderer> クラスは [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] で導入され、パフォーマンスの向上、テキストの見栄え向上、および国際対応フォントのサポートの向上を実現しました。</span><span class="sxs-lookup"><span data-stu-id="701bc-336">The [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] based <xref:System.Windows.Forms.TextRenderer> class was introduced in the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] to improve performance, make text look better, and improve support for international fonts.</span></span> <span data-ttu-id="701bc-337">以前のバージョンの [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]では、[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] ベースの <xref:System.Drawing.Graphics> クラスを使用してすべてのテキスト表示を実行していました。</span><span class="sxs-lookup"><span data-stu-id="701bc-337">In earlier versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] based <xref:System.Drawing.Graphics> class was used to perform all text rendering.</span></span> [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] <span data-ttu-id="701bc-338">は、文字間隔と単語の折り返しを [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]とは異なる方法で計算します。</span><span class="sxs-lookup"><span data-stu-id="701bc-338">calculates character spacing and word wrapping differently from [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)].</span></span> <span data-ttu-id="701bc-339"><xref:System.Drawing.Graphics> クラスを使用してテキストを表示する Windows フォームアプリケーションでは、<xref:System.Windows.Forms.TextRenderer> を使用するコントロールのテキストが、アプリケーション内の他のテキストとは異なるように表示される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="701bc-339">In a Windows Forms application that uses the <xref:System.Drawing.Graphics> class to render text, this could cause the text for controls that use <xref:System.Windows.Forms.TextRenderer> to appear different from the other text in the application.</span></span> <span data-ttu-id="701bc-340">この非互換性を解決するには、特定のコントロールの `UseCompatibleTextRendering` プロパティを `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-340">To resolve this incompatibility, you can set the `UseCompatibleTextRendering` property to `true` for a specific control.</span></span> <span data-ttu-id="701bc-341">アプリケーションでサポートされているすべてのコントロールの `UseCompatibleTextRendering` を `true` に設定するには、`true`のパラメーターを指定して <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="701bc-341">To set `UseCompatibleTextRendering` to `true` for all supported controls in the application, call the <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A?displayProperty=nameWithType> method with a parameter of `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering" />
      </Docs>
    </Member>
    <Member MemberName="UseMnemonic">
      <MemberSignature Language="C#" Value="public bool UseMnemonic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseMnemonic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.UseMnemonic" />
      <MemberSignature Language="VB.NET" Value="Public Property UseMnemonic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseMnemonic { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseMnemonic : bool with get, set" Usage="System.Windows.Forms.ButtonBase.UseMnemonic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-342">前にアンパサンド (&amp;) が付いている最初の文字をコントロールのニーモニック キーとして使用するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-342">Gets or sets a value indicating whether the first character that is preceded by an ampersand (&amp;) is used as the mnemonic key of the control.</span></span></summary>
        <value><span data-ttu-id="701bc-343">アンパサンド (&amp;) を先頭とする最初の文字をコントロールのニーモニックキーとして使用する場合は <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="701bc-343"><see langword="true" /> if the first character that is preceded by an ampersand (&amp;) is used as the mnemonic key of the control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="701bc-344">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="701bc-344">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseVisualStyleBackColor">
      <MemberSignature Language="C#" Value="public bool UseVisualStyleBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseVisualStyleBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.UseVisualStyleBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property UseVisualStyleBackColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseVisualStyleBackColor { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseVisualStyleBackColor : bool with get, set" Usage="System.Windows.Forms.ButtonBase.UseVisualStyleBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="701bc-345">visual スタイルがサポートされている場合に、visual スタイルを使用して背景を描画するかどうかを決定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="701bc-345">Gets or sets a value that determines if the background is drawn using visual styles, if supported.</span></span></summary>
        <value><span data-ttu-id="701bc-346">visual スタイルを使用して背景を描画する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-346"><see langword="true" /> if the background is drawn using visual styles; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="701bc-347">視覚スタイルは、コントロールの外観を指定するためのものです。</span><span class="sxs-lookup"><span data-stu-id="701bc-347">Visual styles are specifications for the appearance of controls.</span></span> <span data-ttu-id="701bc-348">たとえば、visual スタイルでは、コントロールの色、サイズ、フォントを定義できます。また、ビジュアルインターフェイスを使用して、アプリケーションインターフェイスと連携するようにビジュアルインターフェイスを構成することができます。</span><span class="sxs-lookup"><span data-stu-id="701bc-348">For example, visual styles can define the color, size, and font of controls, and they enable you to configure the visual interface to coordinate with your application interface.</span></span> <span data-ttu-id="701bc-349">さらに、すべての Windows ベースのアプリケーションで視覚スタイルを適用するためのメカニズムが用意されています。</span><span class="sxs-lookup"><span data-stu-id="701bc-349">Additionally, they provide a mechanism for all Windows-based applications to have visual styles applied.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc : Message -&gt; unit" Usage="buttonBase.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="701bc-350">処理対象の Windows <see cref="T:System.Windows.Forms.Message" />。</span><span class="sxs-lookup"><span data-stu-id="701bc-350">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="701bc-351">Windows メッセージを処理します。</span><span class="sxs-lookup"><span data-stu-id="701bc-351">Processes Windows messages.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>
