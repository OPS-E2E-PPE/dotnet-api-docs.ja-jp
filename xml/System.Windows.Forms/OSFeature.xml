<Type Name="OSFeature" FullName="System.Windows.Forms.OSFeature">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6b3b5d89b7c7109089a9e756ccd1a0f670b52864" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75178364" /></Metadata><TypeSignature Language="C#" Value="public class OSFeature : System.Windows.Forms.FeatureSupport" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OSFeature extends System.Windows.Forms.FeatureSupport" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OSFeature" />
  <TypeSignature Language="VB.NET" Value="Public Class OSFeature&#xA;Inherits FeatureSupport" />
  <TypeSignature Language="C++ CLI" Value="public ref class OSFeature : System::Windows::Forms::FeatureSupport" />
  <TypeSignature Language="F#" Value="type OSFeature = class&#xA;    inherit FeatureSupport" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FeatureSupport</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>オペレーティング システム固有の機能についてのクエリを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オペレーティングシステムの機能を照会するには、<xref:System.Windows.Forms.OSFeature.Feature%2A> プロパティに用意されているこのクラスの `static` インスタンスを使用します。 このクラスのインスタンスを作成することはできません。  
  
 機能のバージョンを確認するには、<xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> メソッドを呼び出します。 機能または特定のバージョンが存在するかどうかを判断するには、<xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> メソッドを呼び出し、このクラスに用意されている機能識別子を使用して検索する機能を指定します。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Forms.OSFeature> を使用してオペレーティングシステムを照会し、<xref:System.Windows.Forms.OSFeature.LayeredWindows> 機能がインストールされているかどうかを確認します。 この例では、この機能が存在するかどうかを確認する2つの異なる方法を示しています。 最初の方法では、`myVersion` が `null`かどうかが確認されます。 バージョンが `null`場合、この機能はインストールされません。 2番目のメソッドでは、この例では <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> 基底クラスのメソッドを呼び出して、機能がインストールされているかどうかを確認します。 結果はテキストボックスに表示されます。  
  
 このコードは `textBox1` が作成され、フォームに配置されていることを前提としています。  
  
 [!code-cpp[Classic OSFeature Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.AppDomain" />
    <altmember cref="T:System.Windows.Forms.Application" />
    <altmember cref="T:System.Environment" />
    <altmember cref="T:System.Windows.Forms.SystemInformation" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OSFeature ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OSFeature();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.OSFeature" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスはインスタンス化できません。 オペレーティングシステムの機能を照会するには、このクラスに用意されている <xref:System.Windows.Forms.OSFeature> の `static` インスタンスを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.OSFeature" />
      </Docs>
    </Member>
    <Member MemberName="Feature">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.OSFeature Feature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.OSFeature Feature" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OSFeature.Feature" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Feature As OSFeature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::OSFeature ^ Feature { System::Windows::Forms::OSFeature ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Feature : System.Windows.Forms.OSFeature" Usage="System.Windows.Forms.OSFeature.Feature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.OSFeature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>機能の問い合わせに使用する <see langword="static" /> クラスの <see cref="T:System.Windows.Forms.OSFeature" /> インスタンスを取得します。 このプロパティは読み取り専用です。</summary>
        <value><see cref="T:System.Windows.Forms.OSFeature" /> クラスのインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オペレーティングシステムの機能を照会するには、この `static` プロパティを使用します。 このクラスのインスタンスを作成することはできません。  
  
 機能のバージョンを確認するには、<xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> メソッドを呼び出します。 機能または特定のバージョンが存在するかどうかを判断するには、<xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> メソッドを呼び出し、このクラスに用意されている機能識別子を使用して検索する機能を指定します。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Forms.OSFeature.LayeredWindows> 機能の <xref:System.Windows.Forms.OSFeature> をクエリします。 バージョンは、機能が存在するかどうかを判断するために、`null`かどうかを確認します。 結果がテキストボックスに表示されます。 このコードは `textBox1` が作成され、フォームに配置されていることを前提としています。  
  
 [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.OSFeature.#ctor" />
        <altmember cref="T:System.Version" />
        <altmember cref="T:System.Windows.Forms.FeatureSupport" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="GetVersionPresent">
      <MemberSignature Language="C#" Value="public override Version GetVersionPresent (object feature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Version GetVersionPresent(object feature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetVersionPresent (feature As Object) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Version ^ GetVersionPresent(System::Object ^ feature);" />
      <MemberSignature Language="F#" Value="override this.GetVersionPresent : obj -&gt; Version" Usage="oSFeature.GetVersionPresent feature" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="feature">バージョンが要求されている機能。<see cref="F:System.Windows.Forms.OSFeature.LayeredWindows" /> または <see cref="F:System.Windows.Forms.OSFeature.Themes" /> です。</param>
        <summary>システムで現在使用できる、指定した機能のバージョンを取得します。</summary>
        <returns>システムで現在使用できる、指定したオペレーティング システムの機能のバージョンを表す <see cref="T:System.Version" />。機能が見つからない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスに用意されている <xref:System.Windows.Forms.OSFeature> の `static` インスタンス <xref:System.Windows.Forms.OSFeature.Feature%2A> プロパティを使用して、機能のバージョン番号を照会します。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Forms.OSFeature.LayeredWindows> 機能の <xref:System.Windows.Forms.OSFeature> をクエリします。 バージョンは、機能が存在するかどうかを判断するために、`null`かどうかを確認します。 結果がテキストボックスに表示されます。 このコードは `textBox1` が作成され、フォームに配置されていることを前提としています。  
  
 [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
        <altmember cref="T:System.Windows.Forms.FeatureSupport" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public static bool IsPresent (System.Windows.Forms.SystemParameter enumVal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPresent(valuetype System.Windows.Forms.SystemParameter enumVal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPresent (enumVal As SystemParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPresent(System::Windows::Forms::SystemParameter enumVal);" />
      <MemberSignature Language="F#" Value="static member IsPresent : System.Windows.Forms.SystemParameter -&gt; bool" Usage="System.Windows.Forms.OSFeature.IsPresent enumVal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumVal" Type="System.Windows.Forms.SystemParameter" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="enumVal">検索する機能を表す <see cref="T:System.Windows.Forms.SystemParameter" />。</param>
        <summary>オペレーティング システムが、指定した機能またはメトリックをサポートしているかどうかを示す値を取得します。</summary>
        <returns>その機能をシステムで使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常は、<xref:System.Windows.Forms.OSFeature.IsPresent%2A> メソッドを使用して、オペレーティングシステムが `enumValue`によって識別される特定の機能またはメトリックをサポートしているかどうかを判断します。 <xref:System.Windows.Forms.OSFeature.IsPresent%2A>から返された値に基づいて、コードで条件付きアクションを実行します。 たとえば、<xref:System.Windows.Forms.SystemParameter.FlatMenu> のパラメーター値を使用してこのメソッドを呼び出して `true`を返した場合、アプリケーションのオーナー描画メニューをフラットスタイルで作成できます。  
  
 システム機能やメトリックによっては、特定のオペレーティングシステムのバージョンでは利用できない場合、例外が発生することがあります。 この場合、最初に、対応する <xref:System.Windows.Forms.SystemParameter> 列挙値を <xref:System.Windows.Forms.OSFeature.IsPresent%2A>と共に使用して、メトリックがサポートされているかどうかを判断します。 たとえば、<xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=nameWithType> プロパティ値を取得する前に <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A> を指定して <xref:System.Windows.Forms.OSFeature.IsPresent%2A> を呼び出します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.OSFeature.IsPresent%2A> メソッドを <xref:System.Windows.Forms.SystemParameter> 列挙体と共に使用する方法を示します。 この例では、<xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=nameWithType> プロパティを呼び出す前に、オペレーティングシステムが `CaretWidth` メトリックをサポートするかどうかを判断します。  
  
 [!code-cpp[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.SystemParameter" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LayeredWindows">
      <MemberSignature Language="C#" Value="public static readonly object LayeredWindows;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object LayeredWindows" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LayeredWindows As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ LayeredWindows;" />
      <MemberSignature Language="F#" Value=" staticval mutable LayeredWindows : obj" Usage="System.Windows.Forms.OSFeature.LayeredWindows" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>レイヤード トップレベル ウィンドウ機能を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 レイヤーウィンドウは、オペレーティングシステムによって透過的または半透明にすることができます。 Windows 2000 では、最初にレイヤードウィンドウのサポートが導入されました。 詳細については、https://msdn.microsoft.comのプラットフォーム SDK ドキュメントの「レイヤードウィンドウ: Windows アプリケーションでの透明度と透明度の効果を新しい方法で使用する」を参照してください。  
  
 レイヤード windows 機能がインストールされているかどうかを判断するには、<xref:System.Windows.Forms.OSFeature.Feature%2A> プロパティを使用して、検索する機能として <xref:System.Windows.Forms.OSFeature.LayeredWindows> で基本クラスのメソッド <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> を呼び出します。  
  
 または、検索する機能として <xref:System.Windows.Forms.OSFeature.LayeredWindows> を使用して <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> メソッドを呼び出すことによって、機能がインストールされているかどうかを確認することもできます。  
  
   
  
## Examples  
 次の例では、現在のシステムがレイヤードウィンドウをサポートしているかどうかを判断します。 基底クラスのメソッド <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> は、検索する機能として <xref:System.Windows.Forms.OSFeature.LayeredWindows> を使用して呼び出されます。 結果がテキストボックスに表示されます。 このコードは、`textBox1` がインスタンス化され、フォームに配置されていることを前提としています。  
  
 [!code-cpp[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.OSFeature.IsPresent" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
      </Docs>
    </Member>
    <Member MemberName="Themes">
      <MemberSignature Language="C#" Value="public static readonly object Themes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object Themes" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.OSFeature.Themes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Themes As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ Themes;" />
      <MemberSignature Language="F#" Value=" staticval mutable Themes : obj" Usage="System.Windows.Forms.OSFeature.Themes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オペレーティング システムのテーマ機能を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 テーマとは、Microsoft Plus Plus で初めて導入された壁紙、カーソル、フォント、サウンド、およびアイコンを含むビジュアルインターフェイス設定のコレクションです。 Windows 95 の場合。 .NET Framework は、テーマの操作を直接サポートしていませんが、<xref:System.Windows.Forms.VisualStyles?displayProperty=nameWithType> 名前空間での visual スタイルの広範なサポートがあります。 Windows テーマの詳細については、Win32 SDK のトピック「テーマと Visual スタイル」および「Visual スタイルリファレンス」を参照してください。  
  
 テーマ機能がインストールされているかどうかを判断するには、基本クラスのメソッドを呼び出して、<xref:System.Windows.Forms.OSFeature.Themes> を検索する機能として <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> します。  
  
 または、検索する機能として <xref:System.Windows.Forms.OSFeature.Themes> を使用して <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> メソッドを呼び出すことによって、機能がインストールされているかどうかを確認することもできます。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.OSFeature.IsPresent" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
      </Docs>
    </Member>
  </Members>
</Type>
