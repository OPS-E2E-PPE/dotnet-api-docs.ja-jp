<Type Name="BindingManagerBase" FullName="System.Windows.Forms.BindingManagerBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="527bb5c19c3e61dc4471701c98316928ddd5bba3" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83969627" /></Metadata><TypeSignature Language="C#" Value="public abstract class BindingManagerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BindingManagerBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingManagerBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingManagerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingManagerBase abstract" />
  <TypeSignature Language="F#" Value="type BindingManagerBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ad659-101">同じデータ ソースおよび同じデータ メンバーに結合された <see cref="T:System.Windows.Forms.Binding" /> オブジェクトをすべて管理します。</span><span class="sxs-lookup"><span data-stu-id="ad659-101">Manages all <see cref="T:System.Windows.Forms.Binding" /> objects that are bound to the same data source and data member.</span></span> <span data-ttu-id="ad659-102">このクラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="ad659-102">This class is abstract.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-103"><xref:System.Windows.Forms.BindingManagerBase> を使用すると、同じデータソースにバインドされた Windows フォーム上のデータバインドコントロールを同期できます。</span><span class="sxs-lookup"><span data-stu-id="ad659-103">The <xref:System.Windows.Forms.BindingManagerBase> enables the synchronization of data-bound controls on a Windows Form that are bound to the same data source.</span></span> <span data-ttu-id="ad659-104">(データソースへのコントロールの単純なバインドの詳細については、<xref:System.Windows.Forms.Binding> クラスを参照してください)。たとえば、同じデータソースにバインドされ、異なる列にバインドされている2つの <xref:System.Windows.Forms.TextBox> コントロールがフォームに含まれているとします。</span><span class="sxs-lookup"><span data-stu-id="ad659-104">(For more information about simple binding a control to a data source, see the <xref:System.Windows.Forms.Binding> class.) For example, suppose that a form contains two <xref:System.Windows.Forms.TextBox> controls that are bound to the same data source but to different columns.</span></span> <span data-ttu-id="ad659-105">データソースは、顧客名を含む <xref:System.Data.DataTable> であり、列に姓と名が含まれている場合があります。</span><span class="sxs-lookup"><span data-stu-id="ad659-105">The data source might be a <xref:System.Data.DataTable> that contains customer names, while the columns might contain the first and last names.</span></span> <span data-ttu-id="ad659-106">2つのコントロールは、同じ顧客に対して正しい姓と名を一緒に表示するために同期する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ad659-106">The two controls must be synchronized in order to display the correct first and last names together for the same customer.</span></span> <span data-ttu-id="ad659-107"><xref:System.Windows.Forms.BindingManagerBase> クラスから継承された <xref:System.Windows.Forms.CurrencyManager>は、データソース内の現在の項目へのポインターを保持することによって、この同期を行います。</span><span class="sxs-lookup"><span data-stu-id="ad659-107">The <xref:System.Windows.Forms.CurrencyManager>, which inherits from the <xref:System.Windows.Forms.BindingManagerBase> class, accomplishes this synchronization by maintaining a pointer to the current item in the data source.</span></span> <span data-ttu-id="ad659-108"><xref:System.Windows.Forms.TextBox> コントロールは現在の項目にバインドされるため、同じ行の情報が表示されます。</span><span class="sxs-lookup"><span data-stu-id="ad659-108">The <xref:System.Windows.Forms.TextBox> controls are bound to the current item so they display the information for the same row.</span></span> <span data-ttu-id="ad659-109">現在の項目が変更されると、<xref:System.Windows.Forms.CurrencyManager> は、バインドされたすべてのコントロールにデータを更新できるように通知します。</span><span class="sxs-lookup"><span data-stu-id="ad659-109">When the current item changes, the <xref:System.Windows.Forms.CurrencyManager> notifies all the bound controls so that they can refresh their data.</span></span> <span data-ttu-id="ad659-110">さらに、<xref:System.Windows.Forms.BindingManagerBase.Position%2A> プロパティを設定して、コントロールが指す <xref:System.Data.DataTable> 内の行を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="ad659-110">Furthermore, you can set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to specify the row in the <xref:System.Data.DataTable> that the controls point to.</span></span> <span data-ttu-id="ad659-111">データソース内に存在する行の数を確認するには、<xref:System.Windows.Forms.BindingManagerBase.Count%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="ad659-111">To determine how many rows exist in the data source, use the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property.</span></span>  
  
 <span data-ttu-id="ad659-112">データソースが現在の項目のポインターを保持しているとは限らないため、<xref:System.Windows.Forms.CurrencyManager> が必要です。</span><span class="sxs-lookup"><span data-stu-id="ad659-112">The <xref:System.Windows.Forms.CurrencyManager> is necessary because data sources do not necessarily maintain a current-item pointer.</span></span> <span data-ttu-id="ad659-113">たとえば、配列と <xref:System.Collections.ArrayList> オブジェクトはデータソースにすることができますが、現在の項目を返すプロパティはありません。</span><span class="sxs-lookup"><span data-stu-id="ad659-113">For instance, arrays and <xref:System.Collections.ArrayList> objects can be data sources, but they do not have a property that returns the current item.</span></span> <span data-ttu-id="ad659-114">現在の項目を取得するには、<xref:System.Windows.Forms.BindingManagerBase.Current%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="ad659-114">To get the current item, use the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> property.</span></span>  
  
 <span data-ttu-id="ad659-115"><xref:System.Windows.Forms.PropertyManager> も <xref:System.Windows.Forms.BindingManagerBase>から継承され、データソース内の現在のオブジェクトのプロパティではなく、オブジェクトの現在のプロパティを維持するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="ad659-115">The <xref:System.Windows.Forms.PropertyManager> also inherits from the <xref:System.Windows.Forms.BindingManagerBase>, and it is used to maintain the current property of an object, rather than the property of a current object in a data source.</span></span> <span data-ttu-id="ad659-116">このため、<xref:System.Windows.Forms.PropertyManager> の <xref:System.Windows.Forms.BindingManagerBase.Position%2A> または <xref:System.Windows.Forms.BindingManagerBase.Count%2A> プロパティを設定しようとしても、効果はありません。</span><span class="sxs-lookup"><span data-stu-id="ad659-116">For this reason, trying to set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> or <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property for a <xref:System.Windows.Forms.PropertyManager> has no effect.</span></span>  
  
 <span data-ttu-id="ad659-117"><xref:System.Windows.Forms.BindingManagerBase>を作成するには、管理されているデータソースに応じて <xref:System.Windows.Forms.CurrencyManager> または <xref:System.Windows.Forms.PropertyManager>を返す <xref:System.Windows.Forms.BindingContext> クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="ad659-117">To create a <xref:System.Windows.Forms.BindingManagerBase>, use the <xref:System.Windows.Forms.BindingContext> class, which returns either a <xref:System.Windows.Forms.CurrencyManager> or a <xref:System.Windows.Forms.PropertyManager>, depending on the data source being managed.</span></span>  
  
 <span data-ttu-id="ad659-118">ソリューションプログラマは、コントロールを <xref:System.Windows.Forms.BindingSource> コンポーネントに直接バインドすることをお勧めします。これは、実際のターゲットデータソースに対するデータソースとデータコネクタの両方として機能します。</span><span class="sxs-lookup"><span data-stu-id="ad659-118">Solutions programmers are encouraged to bind controls directly to a <xref:System.Windows.Forms.BindingSource> component, which acts as both a data source and data connector to the actual target data source.</span></span> <span data-ttu-id="ad659-119"><xref:System.Windows.Forms.BindingSource> は、コントロールとそのターゲットの間の通貨の管理など、単純なデータバインドと複合データバインディングの両方を大幅に簡素化します。</span><span class="sxs-lookup"><span data-stu-id="ad659-119"><xref:System.Windows.Forms.BindingSource> greatly simplifies both simple and complex data binding, including managing currency between the control and its target.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad659-120">次のコード例では、<xref:System.Windows.Forms.BindingContext> を使用して、特定のデータソースの <xref:System.Windows.Forms.BindingManagerBase> を返します。</span><span class="sxs-lookup"><span data-stu-id="ad659-120">The following code example uses the <xref:System.Windows.Forms.BindingContext> to return a <xref:System.Windows.Forms.BindingManagerBase> for a specific data source.</span></span> <span data-ttu-id="ad659-121">(例では、モジュールの宣言セクションで `myBindingManagerBase` が宣言されていることを前提としています)。この例では、イベントデリゲートを <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> イベントと <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> イベントに追加します。</span><span class="sxs-lookup"><span data-stu-id="ad659-121">(The example assumes you have declared `myBindingManagerBase` in the Declarations section of the module.) The example then adds event delegates to the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> and <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> events.</span></span> <span data-ttu-id="ad659-122">最後に、この例には、<xref:System.Windows.Forms.BindingManagerBase.Position%2A> プロパティをインクリメントまたはデクリメントする4つのメソッド (`MoveNext`、`MovePrevious`、`MoveFirst`、および `MoveLast`) が含まれています。また、<xref:System.Windows.Forms.BindingManagerBase.Position%2A> をリストの最初または最後の行に設定します。</span><span class="sxs-lookup"><span data-stu-id="ad659-122">Lastly, the example contains four methods (`MoveNext`, `MovePrevious`, `MoveFirst`, and `MoveLast`) that increment or decrement the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property, and set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to the first or last row in the list.</span></span> <span data-ttu-id="ad659-123">一覧の最後の行は、<xref:System.Windows.Forms.BindingManagerBase.Count%2A> プロパティを使用して決定されます。</span><span class="sxs-lookup"><span data-stu-id="ad659-123">The last row in the list is determined by using the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="ad659-124"><see cref="T:System.Windows.Forms.BindingManagerBase" />から継承する場合は、<see cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />、<see cref="P:System.Windows.Forms.BindingManagerBase.Count" />、<see cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />、<see cref="P:System.Windows.Forms.BindingManagerBase.Current" />、<see cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />、<see cref="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" />、<see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />、<see cref="P:System.Windows.Forms.BindingManagerBase.Position" />、<see cref="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" />、<see cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />、<see cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />、<see cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />の各抽象メンバーをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ad659-124">When you inherit from <see cref="T:System.Windows.Forms.BindingManagerBase" />, you must override the following abstract members: <see cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Count" />, <see cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Current" />, <see cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />, <see cref="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" />, <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Position" />, <see cref="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" />, <see cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />, <see cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />, and <see cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />.</span></span></para></block>
    <altmember cref="T:System.Windows.Forms.BindingSource" />
    <altmember cref="T:System.Windows.Forms.BindingContext" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.Windows.Forms.PropertyManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingManagerBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingManagerBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad659-125"><see cref="T:System.Windows.Forms.BindingManagerBase" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ad659-125">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingManagerBase" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-126">パラメーターなしのコンストラクターは、<xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> プロパティを `null`に設定します。</span><span class="sxs-lookup"><span data-stu-id="ad659-126">The parameterless constructor sets the <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public abstract void AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddNew();" />
      <MemberSignature Language="F#" Value="abstract member AddNew : unit -&gt; unit" Usage="bindingManagerBase.AddNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad659-127">派生クラスでオーバーライドされると、基になるリストに新しい項目を追加します。</span><span class="sxs-lookup"><span data-stu-id="ad659-127">When overridden in a derived class, adds a new item to the underlying list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-128"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> メソッドは、その項目の型のパラメーターなしのコンストラクターを使用して、基になるリストに新しい項目を追加します。</span><span class="sxs-lookup"><span data-stu-id="ad659-128">The <xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> method adds a new item to the underlying list by using the parameterless constructor for that item's type.</span></span> <span data-ttu-id="ad659-129"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> は、複雑なデータバインディングサポートをカスタムコンポーネントに追加するプログラマが主に使用することを目的としています。</span><span class="sxs-lookup"><span data-stu-id="ad659-129"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> is intended primarily to be used by programmers adding complex data-binding support to their custom component.</span></span>  
  
 <span data-ttu-id="ad659-130"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> は、通常、アプリケーションプログラマがカスタマイズされた項目を作成するための独自のコードを挿入できるようにするために、次のパターンを使用して実装されます。</span><span class="sxs-lookup"><span data-stu-id="ad659-130"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> is commonly implemented using the following pattern that allows application programmers to inject their own code for creating customized items:</span></span>  
  
1.  <span data-ttu-id="ad659-131"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> は、<xref:System.Windows.Forms.BindingSource.AddingNew> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="ad659-131"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> raises the <xref:System.Windows.Forms.BindingSource.AddingNew> event.</span></span>  
  
2.  <span data-ttu-id="ad659-132">プログラマは、<xref:System.Windows.Forms.BindingSource.AddingNew> イベントを処理し、<xref:System.ComponentModel.AddingNewEventArgs> パラメーターの <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> プロパティを新しい項目に設定することによって、カスタム項目を提供できます。</span><span class="sxs-lookup"><span data-stu-id="ad659-132">The programmer can supply a custom item by handling the <xref:System.Windows.Forms.BindingSource.AddingNew> event and setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs> parameter to the new item.</span></span> <span data-ttu-id="ad659-133">それ以外の場合、コンポーネントは、パラメーターなしのコンストラクターを使用して項目を作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ad659-133">Otherwise, the component should create an item using the parameterless constructor.</span></span>  
  
3.  <span data-ttu-id="ad659-134">データソースに <xref:System.ComponentModel.IEditableObject> インターフェイスが実装されていない場合は、その項目がすぐにデータソースおよび基になるリストに追加されます。</span><span class="sxs-lookup"><span data-stu-id="ad659-134">If the data source does not implement the <xref:System.ComponentModel.IEditableObject> interface, the item is immediately added to the data source and underlying list.</span></span> <span data-ttu-id="ad659-135">このインターフェイスがサポートされている場合、追加は <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> および <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> メソッドによって処理されます。</span><span class="sxs-lookup"><span data-stu-id="ad659-135">If this interface is supported, then the addition is transacted by the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
      </Docs>
    </Member>
    <Member MemberName="BindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingCompleteEventHandler BindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingComplete As BindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingCompleteEventHandler ^ BindingComplete;" />
      <MemberSignature Language="F#" Value="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " Usage="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad659-136">データ バインディング操作の完了時に発生します。</span><span class="sxs-lookup"><span data-stu-id="ad659-136">Occurs at the completion of a data-binding operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-137"><xref:System.Windows.Forms.BindingManagerBase.BindingComplete> イベントは、データバインディング操作の完了後に発生します。これには次のものが含まれます。</span><span class="sxs-lookup"><span data-stu-id="ad659-137">The <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event occurs after the completion of a data-binding operation, which may include the following:</span></span>  
  
-   <span data-ttu-id="ad659-138">データソースからバインドされたコントロールのプロパティに情報をプッシュします。</span><span class="sxs-lookup"><span data-stu-id="ad659-138">Pushing information from the data source into the property of its bound control.</span></span>  
  
-   <span data-ttu-id="ad659-139">バインドされたコントロールから、関連付けられているデータソースに情報をプルします。</span><span class="sxs-lookup"><span data-stu-id="ad659-139">Pulling information from a bound control into its associated data source.</span></span>  
  
 <span data-ttu-id="ad659-140">このイベントはバインド操作の完了ステータスに関係なく発生しますが、イベントに関連付けられた <xref:System.Windows.Forms.BindingCompleteEventArgs> パラメーターの <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> プロパティを調べることによって、この状態を確認することもできます。</span><span class="sxs-lookup"><span data-stu-id="ad659-140">Note that this event is raised regardless of the completion status of the binding operation, although this status can be determined by examining the <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> property of the <xref:System.Windows.Forms.BindingCompleteEventArgs> parameter associated with the event.</span></span> <span data-ttu-id="ad659-141"><xref:System.Windows.Forms.BindingCompleteEventArgs> には、エラーおよび例外の情報が含まれている場合もあります。</span><span class="sxs-lookup"><span data-stu-id="ad659-141"><xref:System.Windows.Forms.BindingCompleteEventArgs> may also contain error and exception information.</span></span> <span data-ttu-id="ad659-142">たとえば、データソースから <xref:System.Windows.Forms.DateTimePicker> コントロールに null 値をプッシュしようとするバインド操作では、<xref:System.DateTime> を `null`できないため、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="ad659-142">For example, a binding operation that attempts to push a null value from a data source into a <xref:System.Windows.Forms.DateTimePicker> control will generate an exception, since a <xref:System.DateTime> cannot be `null`.</span></span> <span data-ttu-id="ad659-143">この場合、バインド操作は正常に完了しませんが、<xref:System.Windows.Forms.BindingManagerBase.BindingComplete> イベントが発生し、失敗したバインド試行に関する情報がイベントに含まれます。</span><span class="sxs-lookup"><span data-stu-id="ad659-143">In this case, although the binding operation does not successfully complete, the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event will be raised, and the event will contain information on the failed binding attempt.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad659-144">次のコード例は、<xref:System.Windows.Forms.BindingManagerBase.BindingComplete> イベントの処理方法を示しています。また、同じデータソースにバインドされている複数のコントロールが、コントロールのいずれかの値が変更されたときに同期状態が維持されることを確認します。</span><span class="sxs-lookup"><span data-stu-id="ad659-144">The following code example demonstrates how to handle the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event and ensure multiple controls bound to the same data source remain synchronized when one of the control values is changed.</span></span> <span data-ttu-id="ad659-145">この例を実行するには、Windows フォームにコードを貼り付け、フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベント処理メソッドから `InitializeControlsAndData` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ad659-145">To run this example, paste the code into a Windows Form and call the `InitializeControlsAndData` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
        <altmember cref="T:System.Windows.Forms.BindingCompleteEventArgs" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
      </Docs>
    </Member>
    <Member MemberName="Bindings">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingsCollection Bindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingsCollection Bindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bindings As BindingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingsCollection ^ Bindings { System::Windows::Forms::BindingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Bindings : System.Windows.Forms.BindingsCollection" Usage="System.Windows.Forms.BindingManagerBase.Bindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad659-146">管理されているバインディングのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="ad659-146">Gets the collection of bindings being managed.</span></span></summary>
        <value><span data-ttu-id="ad659-147">この <see cref="T:System.Windows.Forms.BindingsCollection" /> が管理する <see cref="T:System.Windows.Forms.Binding" /> オブジェクトを保持している <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="ad659-147">A <see cref="T:System.Windows.Forms.BindingsCollection" /> that contains the <see cref="T:System.Windows.Forms.Binding" /> objects managed by this <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ad659-148">次のコード例では、特定のデータソースの <xref:System.Windows.Forms.BindingManagerBase> を取得します。</span><span class="sxs-lookup"><span data-stu-id="ad659-148">The following code example gets the <xref:System.Windows.Forms.BindingManagerBase> for a specific data source.</span></span> <span data-ttu-id="ad659-149">この例では、<xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> プロパティを使用して、同じデータソースにバインドされている各コントロールに関する情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ad659-149">The example then uses the <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> property to print information about each control bound to the same data source.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="T:System.Windows.Forms.BindingContext" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
      </Docs>
    </Member>
    <Member MemberName="CancelCurrentEdit">
      <MemberSignature Language="C#" Value="public abstract void CancelCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CancelCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CancelCurrentEdit();" />
      <MemberSignature Language="F#" Value="abstract member CancelCurrentEdit : unit -&gt; unit" Usage="bindingManagerBase.CancelCurrentEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad659-150">派生クラスでオーバーライドされると、現在の編集をキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="ad659-150">When overridden in a derived class, cancels the current edit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-151">このメソッドは、データソースが <xref:System.ComponentModel.IEditableObject> インターフェイスを実装している場合にのみサポートされます。</span><span class="sxs-lookup"><span data-stu-id="ad659-151">This method is supported only if the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="ad659-152">オブジェクトが <xref:System.ComponentModel.IEditableObject> インターフェイスを実装していない場合、データに加えられた変更は破棄されません。</span><span class="sxs-lookup"><span data-stu-id="ad659-152">If the object does not implement the <xref:System.ComponentModel.IEditableObject> interface, changes made to the data will not be discarded.</span></span>  
  
 <span data-ttu-id="ad659-153"><xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> メソッドを呼び出すと、<xref:System.Windows.Forms.Binding.Format> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="ad659-153">Calling the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> method causes the <xref:System.Windows.Forms.Binding.Format> event to occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad659-154">次のコード例は、<xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> と <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> の両方のメソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="ad659-154">The following code example demonstrates both the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span> <span data-ttu-id="ad659-155"><xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> メソッドを呼び出すと、データに対して行われた変更は破棄されます。</span><span class="sxs-lookup"><span data-stu-id="ad659-155">When you call the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> methods, changes made to the data are discarded.</span></span> <span data-ttu-id="ad659-156"><xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> メソッドを呼び出すと、変更は保持されます。</span><span class="sxs-lookup"><span data-stu-id="ad659-156">When you call the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> method, the changes are kept.</span></span>  
  
 [!code-cpp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CPP/canceledit.cpp#1)]
 [!code-csharp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CS/canceledit.cs#1)]
 [!code-vb[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/VB/canceledit.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public abstract int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.BindingManagerBase.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad659-157">派生クラスでオーバーライドされると、<see cref="T:System.Windows.Forms.BindingManagerBase" /> によって管理される行の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="ad659-157">When overridden in a derived class, gets the number of rows managed by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></summary>
        <value><span data-ttu-id="ad659-158"><see cref="T:System.Windows.Forms.BindingManagerBase" /> によって管理される行の数。</span><span class="sxs-lookup"><span data-stu-id="ad659-158">The number of rows managed by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-159"><xref:System.Windows.Forms.BindingManagerBase>によって管理されている行の一覧の最後の項目を確認するには、<xref:System.Windows.Forms.BindingManagerBase.Count%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="ad659-159">Use the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property to determine the last item in the list of rows maintained by the <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="ad659-160">最後の項目に進むには、<xref:System.Windows.Forms.BindingManagerBase.Position%2A> プロパティを <xref:System.Windows.Forms.BindingManagerBase.Count%2A> プロパティ値から1を引いた値に設定します。</span><span class="sxs-lookup"><span data-stu-id="ad659-160">To go to the last item, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property value minus 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad659-161">次のコード例は、<xref:System.Windows.Forms.BindingManagerBase.Position%2A> プロパティを設定する4つのメソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="ad659-161">The following code example shows four methods that set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property.</span></span> <span data-ttu-id="ad659-162">`MoveNext` メソッドは、プロパティを1だけインクリメントします。</span><span class="sxs-lookup"><span data-stu-id="ad659-162">The `MoveNext` method increments the property by 1.</span></span> <span data-ttu-id="ad659-163">`MovePrevious` メソッドは、プロパティを1だけデクリメントします。</span><span class="sxs-lookup"><span data-stu-id="ad659-163">The `MovePrevious` method decrements the property by 1.</span></span> <span data-ttu-id="ad659-164">`MoveFirst` メソッドは、プロパティを0に設定します。</span><span class="sxs-lookup"><span data-stu-id="ad659-164">The `MoveFirst` method sets the property to 0.</span></span> <span data-ttu-id="ad659-165">`MoveLast` メソッドは、プロパティを <xref:System.Windows.Forms.BindingManagerBase.Count%2A> プロパティから1を引いた値に設定します。</span><span class="sxs-lookup"><span data-stu-id="ad659-165">The `MoveLast` method sets the property to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public abstract object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Current" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Windows.Forms.BindingManagerBase.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad659-166">派生クラスでオーバーライドされると、現在のオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="ad659-166">When overridden in a derived class, gets the current object.</span></span></summary>
        <value><span data-ttu-id="ad659-167">現在のオブジェクトを表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="ad659-167">An <see cref="T:System.Object" /> that represents the current object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-168"><xref:System.Windows.Forms.BindingManagerBase.Current%2A> オブジェクトには、データソース内の現在の項目の値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="ad659-168">The <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object contains the value of the current item in the data source.</span></span> <span data-ttu-id="ad659-169">現在の項目の値を使用するには、項目を <xref:System.Windows.Forms.Binding.DataSource%2A>に含まれるオブジェクトの <xref:System.Type> にキャストする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ad659-169">To use the value of the current item, you must cast the item to the <xref:System.Type> of the object contained by the <xref:System.Windows.Forms.Binding.DataSource%2A>.</span></span> <span data-ttu-id="ad659-170">たとえば、<xref:System.Data.DataTable> に <xref:System.Data.DataRowView> オブジェクトが含まれているとします。</span><span class="sxs-lookup"><span data-stu-id="ad659-170">For example, a <xref:System.Data.DataTable> contains <xref:System.Data.DataRowView> objects.</span></span> <span data-ttu-id="ad659-171">現在のオブジェクトの型を確認するには、<xref:System.Object.GetType%2A> メソッドと <xref:System.Type.ToString%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ad659-171">To determine the type of the current object, use the <xref:System.Object.GetType%2A> and <xref:System.Type.ToString%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ad659-172"><xref:System.Windows.Forms.Binding.DataSource%2A> が <xref:System.Data.DataSet>、<xref:System.Data.DataViewManager>、または <xref:System.Data.DataTable>の場合、実際には <xref:System.Data.DataView>にバインドされています。</span><span class="sxs-lookup"><span data-stu-id="ad659-172">When the <xref:System.Windows.Forms.Binding.DataSource%2A> is a <xref:System.Data.DataSet>, <xref:System.Data.DataViewManager>, or <xref:System.Data.DataTable>, you are actually binding to a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="ad659-173">その結果、各 <xref:System.Windows.Forms.BindingManagerBase.Current%2A> オブジェクトは <xref:System.Data.DataRowView> オブジェクトになります。</span><span class="sxs-lookup"><span data-stu-id="ad659-173">Consequently, each <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object is a <xref:System.Data.DataRowView> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad659-174">次のコード例では、<xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> イベントの <xref:System.Windows.Forms.BindingManagerBase> 内の <xref:System.Windows.Forms.BindingManagerBase.Current%2A> オブジェクトの値を出力します。</span><span class="sxs-lookup"><span data-stu-id="ad659-174">The following code example prints the value of the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object in a <xref:System.Windows.Forms.BindingManagerBase> in the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event.</span></span> <span data-ttu-id="ad659-175">この例では、データソースが `CustName`という名前の <xref:System.Data.DataColumn> を含む <xref:System.Data.DataTable> であることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="ad659-175">The example assumes the data source is a <xref:System.Data.DataTable> containing a <xref:System.Data.DataColumn> named `CustName`.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Current Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="CurrentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentChanged : EventHandler " Usage="member this.CurrentChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad659-176">現在バインドされている項目が変更されると発生します。</span><span class="sxs-lookup"><span data-stu-id="ad659-176">Occurs when the currently bound item changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-177"><xref:System.Windows.Forms.BindingManagerBase.Current%2A> プロパティが変更されるか、または <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> イベントが発生するたびに、<xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="ad659-177">The <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event is raised whenever the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> property changes or the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event occurs.</span></span>  
  
 <span data-ttu-id="ad659-178">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ad659-178">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad659-179">次のコード例では、<xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> イベントの <xref:System.Windows.Forms.BindingManagerBase> 内の <xref:System.Windows.Forms.BindingManagerBase.Current%2A> オブジェクトの値を出力します。</span><span class="sxs-lookup"><span data-stu-id="ad659-179">The following code example prints the value of the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object in a <xref:System.Windows.Forms.BindingManagerBase> in the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event.</span></span> <span data-ttu-id="ad659-180">この例では、データソースが `CustName`という名前の <xref:System.Data.DataColumn> を含む <xref:System.Data.DataTable> であることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="ad659-180">The example assumes the data source is a <xref:System.Data.DataTable> containing a <xref:System.Data.DataColumn> named `CustName`.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Current Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
      </Docs>
    </Member>
    <Member MemberName="CurrentItemChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentItemChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentItemChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentItemChanged : EventHandler " Usage="member this.CurrentItemChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad659-181">現在バインドされている項目の状態が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="ad659-181">Occurs when the state of the currently bound item changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-182"><xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> イベントは、現在バインドされている項目の状態が変更されるたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="ad659-182">The <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event occurs whenever there is a change in the state in the currently bound item.</span></span> <span data-ttu-id="ad659-183">この問題は、この項目のプロパティの1つが変更された場合、または項目自体が置換または移動された場合に発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ad659-183">This can occur if one of the properties of this item is changed or if the item itself is replaced or moved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad659-184">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="ad659-184">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="ad659-185">この例では、イベントハンドラーは、<xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="ad659-185">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event.</span></span> <span data-ttu-id="ad659-186">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="ad659-186">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="ad659-187">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="ad659-187">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="ad659-188">コード例を実行するには、<xref:System.Windows.Forms.PropertyManager> や <xref:System.Windows.Forms.CurrencyManager>などの <xref:System.Windows.Forms.BindingManagerBase>から継承する型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="ad659-188">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.BindingManagerBase>, such as a <xref:System.Windows.Forms.PropertyManager> or <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="ad659-189">次に、インスタンスに `BindingManagerBase1` という名前を付け、イベントハンドラーが <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="ad659-189">Then name the instance `BindingManagerBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#82](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#82)]
 [!code-vb[System.Windows.Forms.EventExamples#82](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#82)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataError">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingManagerDataErrorEventHandler DataError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingManagerDataErrorEventHandler DataError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.DataError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataError As BindingManagerDataErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingManagerDataErrorEventHandler ^ DataError;" />
      <MemberSignature Language="F#" Value="member this.DataError : System.Windows.Forms.BindingManagerDataErrorEventHandler " Usage="member this.DataError : System.Windows.Forms.BindingManagerDataErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerDataErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad659-190"><see cref="T:System.Exception" /> が <see cref="T:System.Windows.Forms.BindingManagerBase" /> によって処理された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="ad659-190">Occurs when an <see cref="T:System.Exception" /> is silently handled by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-191">このイベントは情報であり、共通言語仕様 (CLS: Common Language Specification) に準拠している例外のみを報告します。</span><span class="sxs-lookup"><span data-stu-id="ad659-191">This event is informational and reports Common Language Specification (CLS)-compliant exceptions only.</span></span> <span data-ttu-id="ad659-192">発生した例外の種類を特定するには、このイベントを処理し、<xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>の <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> プロパティを確認します。</span><span class="sxs-lookup"><span data-stu-id="ad659-192">To determine what type of exception occurred, handle this event and check the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> property of the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</span></span>  
  
 <span data-ttu-id="ad659-193">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ad659-193">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad659-194">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="ad659-194">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="ad659-195">この例では、イベントハンドラーは、<xref:System.Windows.Forms.BindingManagerBase.DataError> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="ad659-195">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.BindingManagerBase.DataError> event.</span></span> <span data-ttu-id="ad659-196">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="ad659-196">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="ad659-197">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="ad659-197">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="ad659-198">コード例を実行するには、<xref:System.Windows.Forms.PropertyManager> や <xref:System.Windows.Forms.CurrencyManager>などの <xref:System.Windows.Forms.BindingManagerBase>から継承する型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="ad659-198">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.BindingManagerBase>, such as a <xref:System.Windows.Forms.PropertyManager> or <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="ad659-199">次に、インスタンスに `BindingManagerBase1` という名前を付け、イベントハンドラーが <xref:System.Windows.Forms.BindingManagerBase.DataError> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="ad659-199">Then name the instance `BindingManagerBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.BindingManagerBase.DataError> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#83](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#83)]
 [!code-vb[System.Windows.Forms.EventExamples#83](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#83)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCurrentEdit">
      <MemberSignature Language="C#" Value="public abstract void EndCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndCurrentEdit();" />
      <MemberSignature Language="F#" Value="abstract member EndCurrentEdit : unit -&gt; unit" Usage="bindingManagerBase.EndCurrentEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad659-200">派生クラスでオーバーライドされると、現在の編集を終了します。</span><span class="sxs-lookup"><span data-stu-id="ad659-200">When overridden in a derived class, ends the current edit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-201">このメソッドは、データソースが <xref:System.ComponentModel.IEditableObject> インターフェイスを実装している場合にのみサポートされます。</span><span class="sxs-lookup"><span data-stu-id="ad659-201">This method is supported only if the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="ad659-202">その場合、変更が保存されます。</span><span class="sxs-lookup"><span data-stu-id="ad659-202">In that case, changes will be saved.</span></span> <span data-ttu-id="ad659-203">オブジェクトが <xref:System.ComponentModel.IEditableObject> インターフェイスを実装していない場合、データに加えられた変更は保存されません。</span><span class="sxs-lookup"><span data-stu-id="ad659-203">If the object does not implement the <xref:System.ComponentModel.IEditableObject> interface, changes made to the data will not be saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad659-204">次のコード例は、<xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> と <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> の両方のメソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="ad659-204">The following code example demonstrates both the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span> <span data-ttu-id="ad659-205"><xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> メソッドを呼び出すと、データに対して行われた変更は破棄されます。</span><span class="sxs-lookup"><span data-stu-id="ad659-205">When you call the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> methods, changes made to the data are discarded.</span></span> <span data-ttu-id="ad659-206"><xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> メソッドを呼び出すと、変更は保持されます。</span><span class="sxs-lookup"><span data-stu-id="ad659-206">When you call the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> method, the changes are kept.</span></span>  
  
 [!code-cpp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CPP/canceledit.cpp#1)]
 [!code-csharp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CS/canceledit.cs#1)]
 [!code-vb[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/VB/canceledit.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItemProperties">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ad659-207">データ ソースのプロパティ記述子のリストを取得します。</span><span class="sxs-lookup"><span data-stu-id="ad659-207">Gets the list of property descriptors for the data source.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties ();" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemProperties () As PropertyDescriptorCollection" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties();" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingManagerBase.GetItemProperties " FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.PropertyDescriptorCollection GetItemProperties ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItemProperties () As PropertyDescriptorCollection" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingManagerBase.GetItemProperties " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad659-208">派生クラスでオーバーライドされると、バインディングのプロパティ記述子のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="ad659-208">When overridden in a derived class, gets the collection of property descriptors for the binding.</span></span></summary>
        <returns><span data-ttu-id="ad659-209">バインディングのプロパティ記述子を表す <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ad659-209">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ad659-210">次のコード例では、<xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> メソッドを使用して <xref:System.ComponentModel.PropertyDescriptorCollection>を返します。</span><span class="sxs-lookup"><span data-stu-id="ad659-210">The following code example uses the <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> method to return a <xref:System.ComponentModel.PropertyDescriptorCollection>.</span></span> <span data-ttu-id="ad659-211">この例では、<xref:System.ComponentModel.PropertyDescriptor>の <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> メソッドを使用して、現在の <xref:System.Data.DataColumn> の <xref:System.ComponentModel.MemberDescriptor.Name%2A> と値を出力します。</span><span class="sxs-lookup"><span data-stu-id="ad659-211">The example prints the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and value of the current <xref:System.Data.DataColumn> using the <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> method of the <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.Collections.ArrayList dataSources, System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.Collections.ArrayList dataSources, class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Collections.ArrayList,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetItemProperties (dataSources As ArrayList, listAccessors As ArrayList) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(System::Collections::ArrayList ^ dataSources, System::Collections::ArrayList ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.Collections.ArrayList * System.Collections.ArrayList -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : System.Collections.ArrayList * System.Collections.ArrayList -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingManagerBase.GetItemProperties (dataSources, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSources" Type="System.Collections.ArrayList" />
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSources"><span data-ttu-id="ad659-212">データ ソースを格納している <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="ad659-212">An <see cref="T:System.Collections.ArrayList" /> containing the data sources.</span></span></param>
        <param name="listAccessors"><span data-ttu-id="ad659-213">テーブルのバインドされたプロパティを格納している <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="ad659-213">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span></span></param>
        <summary><span data-ttu-id="ad659-214">指定した <see cref="T:System.Collections.ArrayList" /> を使用して、バインディングのプロパティ記述子のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="ad659-214">Gets the collection of property descriptors for the binding using the specified <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="ad659-215">バインディングのプロパティ記述子を表す <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ad659-215">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-216">このメソッドは、データバインドコントロールを作成する開発者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="ad659-216">This method is used by developers creating data-bound controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (Type listType, int offset, System.Collections.ArrayList dataSources, System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.Type listType, int32 offset, class System.Collections.ArrayList dataSources, class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Type,System.Int32,System.Collections.ArrayList,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetItemProperties (listType As Type, offset As Integer, dataSources As ArrayList, listAccessors As ArrayList) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(Type ^ listType, int offset, System::Collections::ArrayList ^ dataSources, System::Collections::ArrayList ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : Type * int * System.Collections.ArrayList * System.Collections.ArrayList -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : Type * int * System.Collections.ArrayList * System.Collections.ArrayList -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingManagerBase.GetItemProperties (listType, offset, dataSources, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listType" Type="System.Type" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="dataSources" Type="System.Collections.ArrayList" />
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="listType"><span data-ttu-id="ad659-217">バインドされたリストの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="ad659-217">The <see cref="T:System.Type" /> of the bound list.</span></span></param>
        <param name="offset"><span data-ttu-id="ad659-218">メソッドの再帰的な呼び出しに使用するカウンター。</span><span class="sxs-lookup"><span data-stu-id="ad659-218">A counter used to recursively call the method.</span></span></param>
        <param name="dataSources"><span data-ttu-id="ad659-219">データ ソースを格納している <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="ad659-219">An <see cref="T:System.Collections.ArrayList" /> containing the data sources.</span></span></param>
        <param name="listAccessors"><span data-ttu-id="ad659-220">テーブルのバインドされたプロパティを格納している <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="ad659-220">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span></span></param>
        <summary><span data-ttu-id="ad659-221">この <see cref="T:System.Windows.Forms.BindingManagerBase" /> によって管理されている項目のプロパティのリストを取得します。</span><span class="sxs-lookup"><span data-stu-id="ad659-221">Gets the list of properties of the items managed by this <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></summary>
        <returns><span data-ttu-id="ad659-222">バインディングのプロパティ記述子を表す <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ad659-222">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-223">このオーバーロードは、データバインドコントロールを作成するために開発者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="ad659-223">This overload is used by developers to create data-bound controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad659-224">次のコード例では、<xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> メソッドを使用して、<xref:System.Windows.Forms.BindingManagerBase>の <xref:System.ComponentModel.PropertyDescriptorCollection> を返します。</span><span class="sxs-lookup"><span data-stu-id="ad659-224">The following code example uses the <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> method to return a <xref:System.ComponentModel.PropertyDescriptorCollection> for a <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="ad659-225">次に、コレクション内の各 <xref:System.ComponentModel.PropertyDescriptor> の <xref:System.ComponentModel.MemberDescriptor.Name%2A> と <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> を出力します。</span><span class="sxs-lookup"><span data-stu-id="ad659-225">The example then prints out the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of each <xref:System.ComponentModel.PropertyDescriptor> in the collection.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="protected internal abstract string GetListName (System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetListName(class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetListName (listAccessors As ArrayList) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::String ^ GetListName(System::Collections::ArrayList ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.Collections.ArrayList -&gt; string" Usage="bindingManagerBase.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="listAccessors"><span data-ttu-id="ad659-226">テーブルのバインドされたプロパティを格納している <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="ad659-226">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span></span></param>
        <summary><span data-ttu-id="ad659-227">派生クラスでオーバーライドされると、バインディングのためのデータを提供するリストの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="ad659-227">When overridden in a derived class, gets the name of the list supplying the data for the binding.</span></span></summary>
        <returns><span data-ttu-id="ad659-228">バインディングのためのデータを提供するリストの名前。</span><span class="sxs-lookup"><span data-stu-id="ad659-228">The name of the list supplying the data for the binding.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBindingSuspended">
      <MemberSignature Language="C#" Value="public bool IsBindingSuspended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBindingSuspended" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.IsBindingSuspended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBindingSuspended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBindingSuspended { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBindingSuspended : bool" Usage="System.Windows.Forms.BindingManagerBase.IsBindingSuspended" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad659-229">バインディングが中断されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="ad659-229">Gets a value indicating whether binding is suspended.</span></span></summary>
        <value><span data-ttu-id="ad659-230">バインディングが中断されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ad659-230"><see langword="true" /> if binding is suspended; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingComplete">
      <MemberSignature Language="C#" Value="protected internal void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnBindingComplete(class System.Windows.Forms.BindingCompleteEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnBindingComplete (args As BindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnBindingComplete(System::Windows::Forms::BindingCompleteEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="member this.OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit" Usage="bindingManagerBase.OnBindingComplete args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.Forms.BindingCompleteEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="ad659-231">イベント データを含んでいる <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="ad659-231">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="ad659-232"><see cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="ad659-232">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-233">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ad659-233">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ad659-234">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="ad659-234">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="ad659-235"><xref:System.Windows.Forms.BindingManagerBase.OnBindingComplete%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="ad659-235">The <xref:System.Windows.Forms.BindingManagerBase.OnBindingComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="ad659-236">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ad659-236">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ad659-237">派生クラスで <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="ad659-237">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentChanged">
      <MemberSignature Language="C#" Value="protected internal abstract void OnCurrentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCurrentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnCurrentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnCurrentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentChanged : EventArgs -&gt; unit" Usage="bindingManagerBase.OnCurrentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="ad659-238">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="ad659-238">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="ad659-239"><see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="ad659-239">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-240">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ad659-240">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ad659-241">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="ad659-241">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="ad659-242"><xref:System.Windows.Forms.BindingManagerBase.OnCurrentChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="ad659-242">The <xref:System.Windows.Forms.BindingManagerBase.OnCurrentChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="ad659-243">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ad659-243">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ad659-244">派生クラスで <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="ad659-244">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="onCurrentChangedHandler">
      <MemberSignature Language="C#" Value="protected EventHandler onCurrentChangedHandler;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.EventHandler onCurrentChangedHandler" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler" />
      <MemberSignature Language="VB.NET" Value="Protected onCurrentChangedHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected: EventHandler ^ onCurrentChangedHandler;" />
      <MemberSignature Language="F#" Value="val mutable onCurrentChangedHandler : EventHandler" Usage="System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad659-245"><see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> イベントのイベント ハンドラーを指定します。</span><span class="sxs-lookup"><span data-stu-id="ad659-245">Specifies the event handler for the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentItemChanged">
      <MemberSignature Language="C#" Value="protected internal abstract void OnCurrentItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCurrentItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnCurrentItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnCurrentItemChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentItemChanged : EventArgs -&gt; unit" Usage="bindingManagerBase.OnCurrentItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="ad659-246">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="ad659-246">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="ad659-247"><see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="ad659-247">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-248">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ad659-248">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ad659-249">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="ad659-249">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="ad659-250"><xref:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="ad659-250">The <xref:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="ad659-251">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ad659-251">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ad659-252">派生クラスで <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="ad659-252">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
      </Docs>
    </Member>
    <Member MemberName="OnDataError">
      <MemberSignature Language="C#" Value="protected internal void OnDataError (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnDataError(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnDataError (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnDataError(Exception ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnDataError : Exception -&gt; unit" Usage="bindingManagerBase.OnDataError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="ad659-253"><see cref="T:System.Exception" /> イベントを発生させた <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" />。</span><span class="sxs-lookup"><span data-stu-id="ad659-253">An <see cref="T:System.Exception" /> that caused the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event to occur.</span></span></param>
        <summary><span data-ttu-id="ad659-254"><see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="ad659-254">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-255">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ad659-255">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ad659-256">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="ad659-256">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="ad659-257"><xref:System.Windows.Forms.BindingManagerBase.OnDataError%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="ad659-257">The <xref:System.Windows.Forms.BindingManagerBase.OnDataError%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="ad659-258">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ad659-258">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ad659-259">派生クラスで <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="ad659-259">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="onPositionChangedHandler">
      <MemberSignature Language="C#" Value="protected EventHandler onPositionChangedHandler;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.EventHandler onPositionChangedHandler" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.BindingManagerBase.onPositionChangedHandler" />
      <MemberSignature Language="VB.NET" Value="Protected onPositionChangedHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected: EventHandler ^ onPositionChangedHandler;" />
      <MemberSignature Language="F#" Value="val mutable onPositionChangedHandler : EventHandler" Usage="System.Windows.Forms.BindingManagerBase.onPositionChangedHandler" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad659-260"><see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /> イベントのイベント ハンドラーを指定します。</span><span class="sxs-lookup"><span data-stu-id="ad659-260">Specifies the event handler for the <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public abstract int Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Position" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Position { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int with get, set" Usage="System.Windows.Forms.BindingManagerBase.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad659-261">派生クラスでオーバーライドされると、このデータ ソースにバインドされたコントロールが指す、基になるリストでの位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ad659-261">When overridden in a derived class, gets or sets the position in the underlying list that controls bound to this data source point to.</span></span></summary>
        <value><span data-ttu-id="ad659-262">基になるリストの中での位置を指定する、0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="ad659-262">A zero-based index that specifies a position in the underlying list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-263"><xref:System.Windows.Forms.BindingManagerBase>によって管理される基になるリストを反復処理するには、<xref:System.Windows.Forms.BindingManagerBase.Position%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="ad659-263">Use the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to iterate through the underlying list maintained by the <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="ad659-264">最初の項目に進むには、<xref:System.Windows.Forms.BindingManagerBase.Position%2A> を0に設定します。</span><span class="sxs-lookup"><span data-stu-id="ad659-264">To go to the first item, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to 0.</span></span> <span data-ttu-id="ad659-265">一覧の末尾に進むには、<xref:System.Windows.Forms.BindingManagerBase.Position%2A> を <xref:System.Windows.Forms.BindingManagerBase.Count%2A> プロパティの値から1を引いた値に設定します。</span><span class="sxs-lookup"><span data-stu-id="ad659-265">To go to the end of the list, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 <span data-ttu-id="ad659-266"><xref:System.Windows.Forms.BindingManagerBase.PositionChanged> イベントは、<xref:System.Windows.Forms.BindingManagerBase.Position%2A> プロパティの値が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="ad659-266">The <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> event occurs when the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property value changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad659-267">次のコード例は、<xref:System.Windows.Forms.BindingManagerBase.Position%2A> プロパティを設定する4つのメソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="ad659-267">The following code example shows four methods that set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property.</span></span> <span data-ttu-id="ad659-268">`MoveNext` メソッドは、プロパティを1だけインクリメントします。</span><span class="sxs-lookup"><span data-stu-id="ad659-268">The `MoveNext` method increments the property by 1.</span></span> <span data-ttu-id="ad659-269">`MovePrevious` メソッドは、プロパティを1だけデクリメントします。</span><span class="sxs-lookup"><span data-stu-id="ad659-269">The `MovePrevious` method decrements the property by 1.</span></span> <span data-ttu-id="ad659-270">`MoveFirst` メソッドはプロパティを0に設定し、`MoveLast` メソッドはプロパティを <xref:System.Windows.Forms.BindingManagerBase.Count%2A> プロパティの値から1を引いた値に設定します。</span><span class="sxs-lookup"><span data-stu-id="ad659-270">The `MoveFirst` method sets the property to 0, and the `MoveLast` method sets the property to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Count" />
      </Docs>
    </Member>
    <Member MemberName="PositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PositionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PositionChanged;" />
      <MemberSignature Language="F#" Value="member this.PositionChanged : EventHandler " Usage="member this.PositionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad659-271"><see cref="P:System.Windows.Forms.BindingManagerBase.Position" /> プロパティの値が変更された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="ad659-271">Occurs after the value of the <see cref="P:System.Windows.Forms.BindingManagerBase.Position" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-272">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ad659-272">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad659-273">次のコード例では、<xref:System.Windows.Forms.Binding>を作成し、<xref:System.Windows.Forms.TextBox> コントロールの <xref:System.Windows.Forms.Binding> オブジェクトのコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="ad659-273">The following code example creates a <xref:System.Windows.Forms.Binding>, and then adds it to a collection of <xref:System.Windows.Forms.Binding> objects for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="ad659-274">次に、データソースの <xref:System.Windows.Forms.BindingManagerBase> を取得し、デリゲートを <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> イベントに追加します。</span><span class="sxs-lookup"><span data-stu-id="ad659-274">The example then gets the <xref:System.Windows.Forms.BindingManagerBase> for the data source and adds a delegate to the <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> event.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PullData">
      <MemberSignature Language="C#" Value="protected void PullData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PullData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.PullData" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PullData ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PullData();" />
      <MemberSignature Language="F#" Value="member this.PullData : unit -&gt; unit" Usage="bindingManagerBase.PullData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad659-275">データ バインド コントロールからデータ ソースにデータをプルします。情報は返しません。</span><span class="sxs-lookup"><span data-stu-id="ad659-275">Pulls data from the data-bound control into the data source, returning no information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-276"><xref:System.Windows.Forms.BindingManagerBase.PullData%2A> メソッドは、データバインドコントロールからデータソースに情報を取得するプログラム的な方法です。</span><span class="sxs-lookup"><span data-stu-id="ad659-276">The <xref:System.Windows.Forms.BindingManagerBase.PullData%2A> method is a programmatic way to pull information from the data-bound control back into the data source.</span></span> <span data-ttu-id="ad659-277">コントロールの標準の操作には必要ありません。通常、コントロールは、フォーカスが離れると自動的にバインドされたデータソースを更新するためです。</span><span class="sxs-lookup"><span data-stu-id="ad659-277">It is not required for standard operation of a control, since normally a control automatically updates its bound data source when focus leaves it.</span></span>  
  
 <span data-ttu-id="ad659-278"><xref:System.Windows.Forms.BindingManagerBase.PullData%2A> は、必要に応じて、データソースの <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> イベントと変更イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="ad659-278"><xref:System.Windows.Forms.BindingManagerBase.PullData%2A> raises the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event and change events on the data source as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.PushData" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="PushData">
      <MemberSignature Language="C#" Value="protected void PushData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PushData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.PushData" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PushData ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PushData();" />
      <MemberSignature Language="F#" Value="member this.PushData : unit -&gt; unit" Usage="bindingManagerBase.PushData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad659-279">データ ソースからデータ バインド コントロールにデータをプッシュします。情報は返しません。</span><span class="sxs-lookup"><span data-stu-id="ad659-279">Pushes data from the data source into the data-bound control, returning no information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-280"><xref:System.Windows.Forms.BindingManagerBase.PushData%2A> メソッドは、データソースからデータバインドコントロールに情報をプッシュするプログラム的な方法です。</span><span class="sxs-lookup"><span data-stu-id="ad659-280">The <xref:System.Windows.Forms.BindingManagerBase.PushData%2A> method is a programmatic way to push information from the data source into the data-bound control.</span></span> <span data-ttu-id="ad659-281">このメソッドは、データソースが <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType> インターフェイスを実装する場合には必要ありません。これは、<xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType> イベントによって、コントロールが自動的に通貨マネージャーによって更新されるためです。</span><span class="sxs-lookup"><span data-stu-id="ad659-281">This method is not required if the data source implements the <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType> interface, because the <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType> event should automatically cause the control to be updated through its currency manager.</span></span>  
  
 <span data-ttu-id="ad659-282"><xref:System.Windows.Forms.BindingManagerBase.PullData%2A> 操作の実行時にこのメソッドが発行された場合、<xref:System.Windows.Forms.BindingManagerBase.PushData%2A> メソッドは `true`の値を使用して直ちに戻ります。</span><span class="sxs-lookup"><span data-stu-id="ad659-282">If this method is issued when a <xref:System.Windows.Forms.BindingManagerBase.PullData%2A> operation is being performed, the <xref:System.Windows.Forms.BindingManagerBase.PushData%2A> method returns immediately with a value of `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.PullData" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public abstract void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="bindingManagerBase.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="ad659-283">削除する行のインデックス。</span><span class="sxs-lookup"><span data-stu-id="ad659-283">The index of the row to delete.</span></span></param>
        <summary><span data-ttu-id="ad659-284">派生クラスでオーバーライドされると、基になるリストから指定されたインデックスに対応する行を削除します。</span><span class="sxs-lookup"><span data-stu-id="ad659-284">When overridden in a derived class, deletes the row at the specified index from the underlying list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-285"><xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> メソッドは、基になるデータソースに依存して、メソッドの動作を決定します。</span><span class="sxs-lookup"><span data-stu-id="ad659-285">The <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> method relies on the underlying data source to determine how the method behaves.</span></span> <span data-ttu-id="ad659-286">(サポートされているデータソースの一覧については、<xref:System.Windows.Forms.Binding> クラスを参照してください。)<xref:System.Collections.IList>、<xref:System.ComponentModel.IBindingList>、または <xref:System.ComponentModel.ITypedList>を実装するクラス、および <xref:System.Collections.IList>を実装する厳密に型指定されたクラスの場合、<xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> メソッドは、その内容を削除するのではなく、基になるリストの行を実際に削除します。</span><span class="sxs-lookup"><span data-stu-id="ad659-286">(See the <xref:System.Windows.Forms.Binding> class for a list of supported data sources.) For classes that implement <xref:System.Collections.IList>, <xref:System.ComponentModel.IBindingList>, or <xref:System.ComponentModel.ITypedList>, as well as strongly typed classes that implement <xref:System.Collections.IList>, the <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> method actually deletes the row in the underlying list instead of removing its contents.</span></span>  
  
 <span data-ttu-id="ad659-287">基になるリストが <xref:System.ComponentModel.IBindingList> インターフェイスを実装している場合、<xref:System.ComponentModel.IBindingList.AllowRemove%2A> プロパティは `true`を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ad659-287">If the underlying list implements the <xref:System.ComponentModel.IBindingList> interface, the <xref:System.ComponentModel.IBindingList.AllowRemove%2A> property must return `true`.</span></span> <span data-ttu-id="ad659-288">基になるリストが <xref:System.Collections.IList> インターフェイスを実装している場合、<xref:System.Collections.IList.IsFixedSize%2A> プロパティは `false`を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ad659-288">If the underlying list implements the <xref:System.Collections.IList> interface, the <xref:System.Collections.IList.IsFixedSize%2A> property must return `false`.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_RemoveAt#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/CPP/bindingmanagerbase_removeat.cpp#1)]
 [!code-csharp[BindingManagerBase_RemoveAt#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/CS/bindingmanagerbase_removeat.cs#1)]
 [!code-vb[BindingManagerBase_RemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/VB/bindingmanagerbase_removeat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="ad659-289">指定された <paramref name="index" /> の位置に行がありません。</span><span class="sxs-lookup"><span data-stu-id="ad659-289">There is no row at the specified <paramref name="index" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="ResumeBinding">
      <MemberSignature Language="C#" Value="public abstract void ResumeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResumeBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResumeBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResumeBinding();" />
      <MemberSignature Language="F#" Value="abstract member ResumeBinding : unit -&gt; unit" Usage="bindingManagerBase.ResumeBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad659-290">派生クラスでオーバーライドされると、データ連結を再開します。</span><span class="sxs-lookup"><span data-stu-id="ad659-290">When overridden in a derived class, resumes data binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-291"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> と <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> は、データバインディングの一時的な中断と再開を可能にする2つの方法です。</span><span class="sxs-lookup"><span data-stu-id="ad659-291"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding.</span></span> <span data-ttu-id="ad659-292">通常、検証が行われる前にユーザーがデータフィールドの編集を許可する必要がある場合は、データバインディングを中断します。</span><span class="sxs-lookup"><span data-stu-id="ad659-292">You would typically suspend data binding if the user must be allowed to edit data fields before validation occurs.</span></span> <span data-ttu-id="ad659-293">たとえば、ユーザーは、2番目のフィールドに従ってフィールドを変更する必要がある場合があります。それ以外の場合、最初のフィールドを検証すると、2番目のフィールドが "エラー" になります。</span><span class="sxs-lookup"><span data-stu-id="ad659-293">For example, the user might need to change a field to be in accordance with a second field; otherwise, validating the first field would cause the second field to be in error.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#2)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#2)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="SuspendBinding">
      <MemberSignature Language="C#" Value="public abstract void SuspendBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SuspendBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SuspendBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SuspendBinding();" />
      <MemberSignature Language="F#" Value="abstract member SuspendBinding : unit -&gt; unit" Usage="bindingManagerBase.SuspendBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad659-294">派生クラスでオーバーライドされると、データ連結を中断します。</span><span class="sxs-lookup"><span data-stu-id="ad659-294">When overridden in a derived class, suspends data binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-295"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> と <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> は、データバインディングの一時的な中断と再開を可能にする2つの方法です。</span><span class="sxs-lookup"><span data-stu-id="ad659-295"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding.</span></span> <span data-ttu-id="ad659-296">通常、検証が行われる前にユーザーがデータフィールドの編集を許可する必要がある場合は、データバインディングを中断します。</span><span class="sxs-lookup"><span data-stu-id="ad659-296">You would typically suspend data binding if the user must be allowed to edit data fields before validation occurs.</span></span> <span data-ttu-id="ad659-297">たとえば、ユーザーは、2番目のフィールドに従ってフィールドを変更する必要がある場合があります。それ以外の場合、最初のフィールドを検証すると、2番目のフィールドが "エラー" になります。</span><span class="sxs-lookup"><span data-stu-id="ad659-297">For example, the user might need to change a field to be in accordance with a second field; otherwise, validating the first field would cause the second field to be in error.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#2)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#2)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="UpdateIsBinding">
      <MemberSignature Language="C#" Value="protected abstract void UpdateIsBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UpdateIsBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub UpdateIsBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void UpdateIsBinding();" />
      <MemberSignature Language="F#" Value="abstract member UpdateIsBinding : unit -&gt; unit" Usage="bindingManagerBase.UpdateIsBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad659-298">派生クラスでオーバーライドされると、バインディングを更新します。</span><span class="sxs-lookup"><span data-stu-id="ad659-298">When overridden in a derived class, updates the binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad659-299"><xref:System.Windows.Forms.BindingManagerBase.UpdateIsBinding%2A> メソッドは、バインドされたコントロールとそのデータソースとの間のデータバインディングを更新します。</span><span class="sxs-lookup"><span data-stu-id="ad659-299">The <xref:System.Windows.Forms.BindingManagerBase.UpdateIsBinding%2A> method updates the data binding between the bound control and its data source.</span></span> <span data-ttu-id="ad659-300">複雑なデータバインディングのシナリオでは、現在の位置を基になるリストの先頭にリセットすることもできます。</span><span class="sxs-lookup"><span data-stu-id="ad659-300">For complex data-binding scenarios, it also resets the current position to the beginning of the underlying list.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
  </Members>
</Type>
