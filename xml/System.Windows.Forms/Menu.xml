<Type Name="Menu" FullName="System.Windows.Forms.Menu">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d940471331db2bfd26d94d9f39a9e905fffb596" /><Meta Name="ms.sourcegitcommit" Value="7bf087b9509f080e7a73672bb84fa0bec74bf944" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/14/2020" /><Meta Name="ms.locfileid" Value="75939271" /></Metadata><TypeSignature Language="C#" Value="public abstract class Menu : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Menu extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Menu" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Menu&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class Menu abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type Menu = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Windows.Forms.MenuDesigner, Microsoft.VisualStudio, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>すべてのメニューの基本機能を表します。 <see cref="T:System.Windows.Forms.ToolStripDropDown" /> および <see cref="T:System.Windows.Forms.ToolStripDropDownMenu" /> では、以前のバージョンの <see cref="T:System.Windows.Forms.Menu" /> コントロールの機能が置換または追加されていますが、下位互換性を維持し、今後必要に応じて使用できるように、<see cref="T:System.Windows.Forms.Menu" /> が保持されています。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスは、<xref:System.Windows.Forms.MainMenu>、<xref:System.Windows.Forms.MenuItem>、および <xref:System.Windows.Forms.ContextMenu> クラスの基本クラスです。 このクラスのインスタンスを作成することはできません。 アプリケーションのメニューは <xref:System.Windows.Forms.MenuItem> オブジェクトで構成されます。 これには、サブメニュー項目を表す他の <xref:System.Windows.Forms.MenuItem> オブジェクトを含めることができます。 <xref:System.Windows.Forms.MenuItem> オブジェクトは <xref:System.Windows.Forms.MainMenu> に格納して、ショートカットメニューを表示するために使用されるフォームまたは <xref:System.Windows.Forms.ContextMenu> のメニュー構造全体として表示できます。 このクラスは、すべてのメニュークラスに共通の機能を提供します。  
  
 多くの基底クラスとは異なり、<xref:System.Windows.Forms.Menu> クラスはその派生クラスを使用してそのプロパティの多くを定義します。 マルチドキュメントインターフェイス (MDI) アプリケーションでメニューを使用している場合は、<xref:System.Windows.Forms.Menu.MdiListItem%2A> プロパティを使用して、アプリケーションで開いている MDI 子フォームの一覧を表示する <xref:System.Windows.Forms.MenuItem> を指定できます。 <xref:System.Windows.Forms.Menu.MenuItems%2A> プロパティには、メニュークラスに格納されている <xref:System.Windows.Forms.MenuItem> オブジェクトの一覧が含まれています。 <xref:System.Windows.Forms.MainMenu> または <xref:System.Windows.Forms.ContextMenu>の場合、このプロパティには、表示されるすべての <xref:System.Windows.Forms.MenuItem> オブジェクトが格納されます。 <xref:System.Windows.Forms.MenuItem>の場合、<xref:System.Windows.Forms.Menu.MenuItems%2A> プロパティは、関連付けられているサブメニュー項目を表します。  
  
 <xref:System.Windows.Forms.Menu> クラスには、すべての派生メニュークラスに用意されているプロパティに加えて、<xref:System.Windows.Forms.Menu.CloneMenu%2A> や <xref:System.Windows.Forms.Menu.MergeMenu%2A>などのメソッドも用意されています。このメソッドを使用すると、既存のメニューから新しいメニューを作成したり、2つのメニュー構造を結合したりすることができます。  
  
 <xref:System.Windows.Forms.Menu> クラスは、入れ子になったクラス <xref:System.Windows.Forms.Menu.MenuItemCollection>も定義します。 このクラスは、<xref:System.Windows.Forms.Menu.MenuItems%2A> プロパティによって使用される <xref:System.Windows.Forms.MenuItem> オブジェクトのコレクションを定義します。 <xref:System.Windows.Forms.Menu.MenuItemCollection> クラスのメソッドを使用して、<xref:System.Windows.Forms.MainMenu>、<xref:System.Windows.Forms.ContextMenu>、または <xref:System.Windows.Forms.MenuItem>のメニュー項目を追加および削除できます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.MenuItem>の派生クラスを使用して、フォームのメニュー構造を作成します。 このコード例では、トップレベルメニュー項目を表す <xref:System.Windows.Forms.MenuItem> を追加し、フォントサイズを選択するためにサブメニュー項目を追加して、アプリケーションで大文字と小文字のフォントの選択を表す2つのサブメニュー項目をメニュー項目に追加します。 この例では、`mainMenu1` という名前の <xref:System.Windows.Forms.MainMenu> オブジェクトと、`menuItem1`、`menuItem2`、`menuItem3`、`menuItem4`という名前の4つの <xref:System.Windows.Forms.MenuItem> オブジェクトが必要です。  
  
 [!code-cpp[Classic Menu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu Example/CS/source.cs#1)]
 [!code-vb[Classic Menu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MainMenu" />
    <altmember cref="T:System.Windows.Forms.ContextMenu" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Menu (System.Windows.Forms.MenuItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.MenuItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.#ctor(System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (items As MenuItem())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Menu(cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Menu : System.Windows.Forms.MenuItem[] -&gt; System.Windows.Forms.Menu" Usage="new System.Windows.Forms.Menu items" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="items">メニューに追加するオブジェクトを格納している <see cref="T:System.Windows.Forms.MenuItem" /> 型の配列。</param>
        <summary><see cref="T:System.Windows.Forms.Menu" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Menu> は抽象クラスであるため、継承されたクラスのみがメニューコンストラクターを呼び出すことができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneMenu">
      <MemberSignature Language="C#" Value="protected internal void CloneMenu (System.Windows.Forms.Menu menuSrc);" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CloneMenu(class System.Windows.Forms.Menu menuSrc) cil managed" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.CloneMenu(System.Windows.Forms.Menu)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CloneMenu (menuSrc As Menu)" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void CloneMenu(System::Windows::Forms::Menu ^ menuSrc);" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.CloneMenu : System.Windows.Forms.Menu -&gt; unit" Usage="menu.CloneMenu menuSrc" />
      <MemberSignature Language="C#" Value="protected void CloneMenu (System.Windows.Forms.Menu menuSrc);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CloneMenu(class System.Windows.Forms.Menu menuSrc) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CloneMenu (menuSrc As Menu)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CloneMenu(System::Windows::Forms::Menu ^ menuSrc);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuSrc" Type="System.Windows.Forms.Menu" />
      </Parameters>
      <Docs>
        <param name="menuSrc">コピーする <see cref="T:System.Windows.Forms.Menu" />。</param>
        <summary>現在の <see cref="T:System.Windows.Forms.Menu" /> にパラメーターとして渡された <see cref="T:System.Windows.Forms.Menu" /> をコピーします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、`menuSrc`に渡された <xref:System.Windows.Forms.Menu> に格納されている <xref:System.Windows.Forms.MenuItem> オブジェクトのリスト全体を現在のメニューにコピーします。 派生クラスでこのメソッドを使用すると、<xref:System.Windows.Forms.MenuItem> オブジェクトを複製できます。 その後、<xref:System.Windows.Forms.MainMenu>、<xref:System.Windows.Forms.ContextMenu>、<xref:System.Windows.Forms.MenuItem>など、<xref:System.Windows.Forms.Menu>から派生した他のクラスで再利用できます。  
  
   
  
## Examples  
 この例では、`File`、`Edit`、および `View`の3つのメニュー項目を使用して、メインメニュー `mainMenu1`を作成します。 次に、<xref:System.Windows.Forms.Menu.CloneMenu%2A> メソッドを使用して `mainMenu1` を `mainMenu2`にコピーします。 その後、複製されたメニューがフォームに割り当てられ、表示されます。 このプログラムでは、`Form1`という名前の <xref:System.Windows.Forms.Form> が既に作成されている必要があります。  
  
 [!code-cpp[CloneMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/CloneMenu/CPP/form1.cpp#1)]
 [!code-csharp[CloneMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/CloneMenu/CS/form1.cs#1)]
 [!code-vb[CloneMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CloneMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.MainMenu" />
      </Docs>
    </Member>
    <Member MemberName="CreateMenuHandle">
      <MemberSignature Language="C#" Value="protected virtual IntPtr CreateMenuHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance native int CreateMenuHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.CreateMenuHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateMenuHandle () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IntPtr CreateMenuHandle();" />
      <MemberSignature Language="F#" Value="abstract member CreateMenuHandle : unit -&gt; nativeint&#xA;override this.CreateMenuHandle : unit -&gt; nativeint" Usage="menu.CreateMenuHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.Menu" /> への新しいハンドルを作成します。</summary>
        <returns>メソッドが正常に実行された場合はメニューへのハンドル。それ以外の場合は <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージコードを操作するために使用します。 関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="menu.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
        <summary><see cref="T:System.Windows.Forms.Menu" /> によって使用されているリソース (メモリを除く) を解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Menu.Dispose%2A> を使い終わったら、<xref:System.Windows.Forms.Menu>を呼び出します。 <xref:System.Windows.Forms.Menu.Dispose%2A>メソッドによって、<xref:System.Windows.Forms.Menu> は使用不可の状態になります。 <xref:System.Windows.Forms.Menu.Dispose%2A>を呼び出した後、使用していたメモリがガベージコレクションによって回収されるように、<xref:System.Windows.Forms.Menu> へのすべての参照を解放する必要があります。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Menu.Dispose%2A>への最後の参照を解放する前に、必ず<xref:System.Windows.Forms.Menu>を呼び出してください。 それ以外の場合、<xref:System.Windows.Forms.Menu> が使用しているリソースは、ガベージコレクションが <xref:System.Windows.Forms.Menu> オブジェクトのデストラクターを呼び出すまで解放されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindHandle">
      <MemberSignature Language="C#" Value="public const int FindHandle = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 FindHandle = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.Menu.FindHandle" />
      <MemberSignature Language="VB.NET" Value="Public Const FindHandle As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int FindHandle = 0;" />
      <MemberSignature Language="F#" Value="val mutable FindHandle : int" Usage="System.Windows.Forms.Menu.FindHandle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><see cref="M:System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)" /> メソッドでハンドルを検索するよう指定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMenuItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MenuItem FindMenuItem (int type, IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.MenuItem FindMenuItem(int32 type, native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMenuItem (type As Integer, value As IntPtr) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::MenuItem ^ FindMenuItem(int type, IntPtr value);" />
      <MemberSignature Language="F#" Value="member this.FindMenuItem : int * nativeint -&gt; System.Windows.Forms.MenuItem" Usage="menu.FindMenuItem (type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Int32" />
        <Parameter Name="value" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Windows.Forms.MenuItem" /> の検索に使用する項目の型。</param>
        <param name="value"><see cref="T:System.Windows.Forms.MenuItem" /> の検索に使用する項目。</param>
        <summary>指定した値を含む <see cref="T:System.Windows.Forms.MenuItem" /> を取得します。</summary>
        <returns>指定した値と一致する <see cref="T:System.Windows.Forms.MenuItem" />。検出されない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ハンドルを使用して <xref:System.Windows.Forms.MenuItem> を検索するには、<xref:System.Windows.Forms.Menu.FindHandle> フィールドを型として渡し、検索対象の <xref:System.Windows.Forms.MenuItem> のハンドルを値として渡します。  
  
 ショートカットを使用して <xref:System.Windows.Forms.MenuItem> を検索するには、<xref:System.Windows.Forms.Menu.FindShortcut> フィールドを型として渡し、検索する <xref:System.Windows.Forms.MenuItem> のショートカット値を値として渡します。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">このメソッドを呼び出すコントロールの。 関連付けられた列挙型: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FindMergePosition">
      <MemberSignature Language="C#" Value="protected int FindMergePosition (int mergeOrder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance int32 FindMergePosition(int32 mergeOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.FindMergePosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Function FindMergePosition (mergeOrder As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; int FindMergePosition(int mergeOrder);" />
      <MemberSignature Language="F#" Value="member this.FindMergePosition : int -&gt; int" Usage="menu.FindMergePosition mergeOrder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOrder" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mergeOrder">マージするメニュー項目のマージ順序位置。</param>
        <summary>メニューにおけるメニュー項目の追加位置を返します。</summary>
        <returns>メニューにおけるメニュー項目の追加位置。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メニュー項目のマージ順序は、このメニュー項目が、<xref:System.Windows.Forms.MenuItem> が含まれているメニュー構造が別の構造体と結合されている場合に想定する相対位置を指定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindShortcut">
      <MemberSignature Language="C#" Value="public const int FindShortcut = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 FindShortcut = (1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.Menu.FindShortcut" />
      <MemberSignature Language="VB.NET" Value="Public Const FindShortcut As Integer  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: int FindShortcut = 1;" />
      <MemberSignature Language="F#" Value="val mutable FindShortcut : int" Usage="System.Windows.Forms.Menu.FindShortcut" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><see cref="M:System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)" /> メソッドでショートカットを検索するよう指定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContextMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ContextMenu GetContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ContextMenu GetContextMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.GetContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextMenu () As ContextMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ContextMenu ^ GetContextMenu();" />
      <MemberSignature Language="F#" Value="member this.GetContextMenu : unit -&gt; System.Windows.Forms.ContextMenu" Usage="menu.GetContextMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenu</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>メニューを格納している <see cref="T:System.Windows.Forms.ContextMenu" /> を取得します。</summary>
        <returns>メニューを格納している <see cref="T:System.Windows.Forms.ContextMenu" />。 既定値は、<see langword="null" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用すると、このメニューが含まれている <xref:System.Windows.Forms.ContextMenu> への参照を取得できます。 このプロパティは、メニューが <xref:System.Windows.Forms.ContextMenu>に含まれていない場合に `null` を返します。 これは、メニューが <xref:System.Windows.Forms.MenuItem> または <xref:System.Windows.Forms.MainMenu>に含まれている場合、またはメニューがメニューに含まれていない場合に発生する可能性があります。 このプロパティを使用して、メニューが現在使用されているかどうかを判断し、場所を決定することもできます。  
  
   
  
## Examples  
 この例では、<xref:System.Windows.Forms.Menu.GetContextMenu%2A> メソッドを使用して、`menuItem1` または `menuItem2`を含むショートカットメニューへの参照を取得し、ショートカットメニューの情報をメッセージボックスに表示します。 プログラムを使用して、`New` と `Open`の2つの項目を含むショートカットメニューを作成します。 次に、適切なイベントハンドラーを作成して、これらの項目に機能を追加します。 この例を実行すると、ショートカットメニューを表示するためにフォームを右クリックするように求めるメッセージボックスが表示されます。 次に、メニュー項目をクリックすると、クリックされた項目を示す別のメッセージが表示され、含まれているショートカットメニューに情報が表示されます。 この例では、`Form1`という名前の <xref:System.Windows.Forms.Form> が既に作成されている必要があります。  
  
 [!code-cpp[GetContextMenu2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetContextMenu2/CPP/form1.cpp#1)]
 [!code-csharp[GetContextMenu2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetContextMenu2/CS/form1.cs#1)]
 [!code-vb[GetContextMenu2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetContextMenu2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Menu.GetMainMenu" />
      </Docs>
    </Member>
    <Member MemberName="GetMainMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MainMenu GetMainMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.MainMenu GetMainMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.GetMainMenu" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMainMenu () As MainMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::MainMenu ^ GetMainMenu();" />
      <MemberSignature Language="F#" Value="member this.GetMainMenu : unit -&gt; System.Windows.Forms.MainMenu" Usage="menu.GetMainMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MainMenu</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>メニューを格納している <see cref="T:System.Windows.Forms.MainMenu" /> を取得します。</summary>
        <returns>メニューを格納している <see cref="T:System.Windows.Forms.MainMenu" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用すると、このメニューが現在格納されている <xref:System.Windows.Forms.MainMenu> への参照を取得できます。 このプロパティは、メニューが <xref:System.Windows.Forms.MainMenu>に含まれていない場合に `null` を返します。 これは、メニューが <xref:System.Windows.Forms.MenuItem> または <xref:System.Windows.Forms.ContextMenu>に含まれている場合、またはメニューがメニューに含まれていない場合に発生する可能性があります。 このプロパティを使用して、メニューが現在使用されているかどうかを判断し、場所を決定することもできます。  
  
   
  
## Examples  
 この例では、<xref:System.Windows.Forms.MainMenu>、`mainMenu1`、および4つのメニュー項目、`menuItem1`、`menuItem2`、`menuItem3`、および `menuItem4`を宣言します。 表示のために `mainMenu1` に追加されるのは、最初の3つのメニュー項目だけです。 次に、プログラムは `menuItem3` が使用されているかどうかを確認し、`true`して、使用されているフォームを判断します。 ラベルテキストは、<xref:System.Windows.Forms.MainMenu>をホストするフォームの名前を表示するために使用されます。 `menuItem4`するようにテストされているメニュー項目を変更すると、`menuItem4` がまったく使用されていないため、条件が `false` に評価されます。 この例では、`label1`という名前の <xref:System.Windows.Forms.Label> を含む `MyForm` という名前の <xref:System.Windows.Forms.Form> を作成しておく必要があります。  
  
 [!code-cpp[GetMainMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetMainMenu/CPP/form1.cpp#1)]
 [!code-csharp[GetMainMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetMainMenu/CS/form1.cs#1)]
 [!code-vb[GetMainMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetMainMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Menu.GetContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.Menu.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニューのウィンドウ ハンドルを表している値を取得します。</summary>
        <value>メニューの HMENU 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用すると、メニューへのハンドルを取得して、このクラスまたはその派生クラスによって提供される機能の外部のメニューに対する特別な操作を実行できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsParent">
      <MemberSignature Language="C#" Value="public virtual bool IsParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.IsParent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsParent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsParent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsParent : bool" Usage="System.Windows.Forms.Menu.IsParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメニューにメニュー項目が格納されているかどうかを示す値を取得します。 このプロパティは読み取り専用です。</summary>
        <value>このメニューに <see langword="true" /> オブジェクトが含まれている場合は <see cref="T:System.Windows.Forms.MenuItem" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用すると、このメニューに <xref:System.Windows.Forms.MenuItem> オブジェクトが割り当てられているかどうかを判断できます。 これは、<xref:System.Windows.Forms.Menu.MenuItems%2A> プロパティの `null` をチェックすることと同じです。  
  
   
  
## Examples  
 次のコード例では、2つの <xref:System.Windows.Forms.MenuItem> オブジェクトを持つ <xref:System.Windows.Forms.MainMenu> を作成します。 次に、<xref:System.Windows.Forms.Menu.IsParent%2A> プロパティを使用して、`mainMenu1` にメニュー項目が含まれているかどうかを判断します。 条件によって `true`が評価された場合、<xref:System.Windows.Forms.MainMenu.RightToLeft%2A> プロパティが `true` に設定され、メインメニューが <xref:System.Windows.Forms.Form>にバインドされます。 この例では、`Form1`という名前の <xref:System.Windows.Forms.Form> を作成する必要があります。  
  
 [!code-cpp[IsParent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IsParent/CPP/form1.cpp#1)]
 [!code-csharp[IsParent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IsParent/CS/form1.cs#1)]
 [!code-vb[IsParent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IsParent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージコードを操作するために使用します。 関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="P:System.Windows.Forms.Menu.MenuItems" />
      </Docs>
    </Member>
    <Member MemberName="MdiListItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MenuItem MdiListItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MenuItem MdiListItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MdiListItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MdiListItem As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MenuItem ^ MdiListItem { System::Windows::Forms::MenuItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MdiListItem : System.Windows.Forms.MenuItem" Usage="System.Windows.Forms.Menu.MdiListItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マルチ ドキュメント インターフェイス (MDI) 子フォームの一覧を表示するために使用される <see cref="T:System.Windows.Forms.MenuItem" /> を示す値を取得します。</summary>
        <value>アプリケーションで開かれている MDI 子フォームのリストを表示しているメニュー項目を表す <see cref="T:System.Windows.Forms.MenuItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用すると、MDI アプリケーションで開いている子ウィンドウの一覧を表示するために <xref:System.Windows.Forms.MenuItem> が指定されているかどうかを判断できます。 特定の <xref:System.Windows.Forms.MenuItem> を MDI リストとして使用するには、使用する <xref:System.Windows.Forms.MenuItem> の <xref:System.Windows.Forms.MenuItem.MdiList%2A> プロパティを設定します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MdiList" />
      </Docs>
    </Member>
    <Member MemberName="MenuItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Menu.MenuItemCollection MenuItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Menu/MenuItemCollection MenuItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MenuItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MenuItems As Menu.MenuItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Menu::MenuItemCollection ^ MenuItems { System::Windows::Forms::Menu::MenuItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MenuItems : System.Windows.Forms.Menu.MenuItemCollection" Usage="System.Windows.Forms.Menu.MenuItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Menu+MenuItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニューに関連付けられている <see cref="T:System.Windows.Forms.MenuItem" /> オブジェクトのコレクションを示す値を取得します。</summary>
        <value>メニューに格納された <see cref="T:System.Windows.Forms.Menu.MenuItemCollection" /> オブジェクトのリストを表す <see cref="T:System.Windows.Forms.MenuItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用すると、メニューに現在格納されているメニュー項目のリストへの参照を取得できます。 <xref:System.Windows.Forms.MainMenu> オブジェクトと <xref:System.Windows.Forms.ContextMenu> オブジェクトの場合、<xref:System.Windows.Forms.Menu.MenuItems%2A> プロパティには、コントロール内のメニュー構造全体が含まれます。 <xref:System.Windows.Forms.MenuItem> クラスの場合、<xref:System.Windows.Forms.Menu.MenuItems%2A> プロパティには、<xref:System.Windows.Forms.MenuItem>に関連付けられているサブメニュー項目の一覧が含まれます。 メニュー項目のコレクション (このプロパティによって提供される) のコレクションへの参照を使用して、メニュー項目の追加と削除、メニュー項目の合計数の決定、およびコレクションからのメニュー項目の一覧のクリアを行うことができます。 メニュー項目のコレクションを維持する方法の詳細については、<xref:System.Windows.Forms.Menu.MenuItemCollection?displayProperty=nameWithType> のドキュメントを参照してください。  
  
   
  
## Examples  
 次のコード例では、派生クラスのインスタンスを作成し、<xref:System.Windows.Forms.MainMenu>して、<xref:System.Windows.Forms.MenuItem> オブジェクトを <xref:System.Windows.Forms.MenuItem> オブジェクトのコレクションに追加します。 この例では、この例で定義されているメソッドがフォームのクラス内にあり、そのフォームクラスのメソッドによって呼び出されている必要があります。  
  
 [!code-cpp[Classic Menu.MenuItems Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu.MenuItems Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu.MenuItems Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu.MenuItems Example/CS/source.cs#1)]
 [!code-vb[Classic Menu.MenuItems Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu.MenuItems Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MainMenu" />
        <altmember cref="T:System.Windows.Forms.ContextMenu" />
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.Menu.MenuItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="MergeMenu">
      <MemberSignature Language="C#" Value="public virtual void MergeMenu (System.Windows.Forms.Menu menuSrc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MergeMenu(class System.Windows.Forms.Menu menuSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MergeMenu(System.Windows.Forms.Menu)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MergeMenu (menuSrc As Menu)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MergeMenu(System::Windows::Forms::Menu ^ menuSrc);" />
      <MemberSignature Language="F#" Value="abstract member MergeMenu : System.Windows.Forms.Menu -&gt; unit&#xA;override this.MergeMenu : System.Windows.Forms.Menu -&gt; unit" Usage="menu.MergeMenu menuSrc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuSrc" Type="System.Windows.Forms.Menu" />
      </Parameters>
      <Docs>
        <param name="menuSrc">現在のメニューのメニュー項目にメニュー項目がマージされている <see cref="T:System.Windows.Forms.Menu" />。</param>
        <summary>1 つのメニューの <see cref="T:System.Windows.Forms.MenuItem" /> オブジェクトを現在のメニューにマージします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、1つのメニューから <xref:System.Windows.Forms.MenuItem> オブジェクトを現在のメニューにマージします。 <xref:System.Windows.Forms.MenuItem> オブジェクトは、<xref:System.Windows.Forms.MenuItem.MergeType%2A?displayProperty=nameWithType> プロパティと <xref:System.Windows.Forms.MenuItem.MergeOrder%2A?displayProperty=nameWithType> プロパティの値に従ってマージされます。  
  
 メニューのマージは、通常、マルチドキュメントインターフェイス (MDI) 親フォームのメニューと、アクティブな MDI 子フォームのメニューをマージするために行われます。 これは、.NET Framework 共通言語ランタイムによって自動的に実行されます。 たとえば、MDI 親フォームにファイルを処理するための一連のメニューが含まれており、MDI 子フォームにファイル関連のメニュー項目がある場合、子フォームが MDI 親フォームに表示されるときに、メニューセットが自動的に1つのファイルメニューセットにマージされます。  
  
 MDI アプリケーションに含まれていない2つのメニュー構造をマージする場合は、<xref:System.Windows.Forms.Menu.MergeMenu%2A> メソッドを使用できます。 この実装は、<xref:System.Windows.Forms.Menu>から派生する2つ以上のオブジェクトをマージするために、<xref:System.Windows.Forms.MainMenu> クラスまたは <xref:System.Windows.Forms.ContextMenu> クラスによって呼び出すことができます。  
  
 2つの <xref:System.Windows.Forms.MenuItem> オブジェクトをマージするには、<xref:System.Windows.Forms.MenuItem.MergeMenu%2A?displayProperty=nameWithType> メソッドを使用します。  
  
   
  
## Examples  
 この例では、`mainMenu1` と `mainMenu2`の2つのメニューを作成します。 最初のメニューには、1つの <xref:System.Windows.Forms.MenuItem>、`File`が含まれ、2番目のメニューには1つの <xref:System.Windows.Forms.MenuItem>、`Edit`が含まれています。 <xref:System.Windows.Forms.Menu.MergeMenu%2A> メソッドを使用すると、`mainMenu2` は `mainMenu1`にマージされます。 表示されると、`mainMenu1` には、`File` と `Edit`の2つのメニュー項目が含まれます。 この例では、`Form1`という名前の <xref:System.Windows.Forms.Form> を作成しておく必要があります。  
  
 [!code-cpp[MergeMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MergeMenu/CPP/form1.cpp#1)]
 [!code-csharp[MergeMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MergeMenu/CS/form1.cs#1)]
 [!code-vb[MergeMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MergeMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">メニューをそのメニュー自身にマージしようとしました。</exception>
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeType" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeOrder" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.Menu.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.Menu" /> の名前を取得または設定します。</summary>
        <value>名前を表す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 デザイン時に、このプロパティは、コントロールのプログラム id に設定されます。 ただし、このプロパティは、実行時にコントロールには影響を与えません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCmdKey : Message * System.Windows.Forms.Keys -&gt; bool&#xA;override this.ProcessCmdKey : Message * System.Windows.Forms.Keys -&gt; bool" Usage="menu.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg">処理するウィンドウ メッセージを表す、参照渡しされた <see cref="T:System.Windows.Forms.Message" />。</param>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値の 1 つ。</param>
        <summary>コマンド キーを処理します。</summary>
        <returns>文字がコントロールによって処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.Menu.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールに関連付けられたユーザー定義のデータを取得または設定します。</summary>
        <value>データを表すオブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="menu.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.String" /> コントロールを表す <see cref="T:System.Windows.Forms.Menu" /> を返します。</summary>
        <returns>現在の <see cref="T:System.String" /> を表す <see cref="T:System.Windows.Forms.Menu" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Menu.ToString%2A> メソッドは、コントロールの <xref:System.Windows.Forms.Menu.MenuItems%2A> プロパティの型と項目数を含む <xref:System.String> を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
