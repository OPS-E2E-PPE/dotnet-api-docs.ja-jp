<Type Name="KeyEventArgs" FullName="System.Windows.Forms.KeyEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e55fb45913bff251106f2b106d9d171146ec3109" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83969320" /></Metadata><TypeSignature Language="C#" Value="public class KeyEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeyEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type KeyEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b5145-101"><see cref="E:System.Windows.Forms.Control.KeyDown" /> イベントまたは <see cref="E:System.Windows.Forms.Control.KeyUp" /> イベントのデータを提供します。</span><span class="sxs-lookup"><span data-stu-id="b5145-101">Provides data for the <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5145-102"><xref:System.Windows.Forms.KeyEventArgs>は、ユーザーが押したキーと、任意の修飾子キー (CTRL、ALT、および SHIFT) が同時に押されたかどうかを指定し、各 <xref:System.Windows.Forms.Control.KeyDown> または <xref:System.Windows.Forms.Control.KeyUp> イベントと共に渡されます。</span><span class="sxs-lookup"><span data-stu-id="b5145-102">A <xref:System.Windows.Forms.KeyEventArgs>, which specifies the key the user pressed and whether any modifier keys (CTRL, ALT, and SHIFT) were pressed at the same time, is passed with each <xref:System.Windows.Forms.Control.KeyDown> or <xref:System.Windows.Forms.Control.KeyUp> event.</span></span>  
  
 <span data-ttu-id="b5145-103"><xref:System.Windows.Forms.Control.KeyDown> イベントは、ユーザーが任意のキーを押したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b5145-103">The <xref:System.Windows.Forms.Control.KeyDown> event occurs when the user presses any key.</span></span> <span data-ttu-id="b5145-104"><xref:System.Windows.Forms.Control.KeyUp> イベントは、ユーザーがキーを離したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b5145-104">The <xref:System.Windows.Forms.Control.KeyUp> event occurs when the user releases the key.</span></span> <span data-ttu-id="b5145-105">キーが押されている場合、キーが繰り返されるたびに重複する <xref:System.Windows.Forms.Control.KeyDown> イベントが発生しますが、ユーザーがキーを離したときに生成される <xref:System.Windows.Forms.Control.KeyUp> イベントは1つだけです。</span><span class="sxs-lookup"><span data-stu-id="b5145-105">Duplicate <xref:System.Windows.Forms.Control.KeyDown> events occur each time the key repeats, if the key is held down, but only one <xref:System.Windows.Forms.Control.KeyUp> event is generated when the user releases the key.</span></span>  
  
 <span data-ttu-id="b5145-106"><xref:System.Windows.Forms.Control.KeyPress> イベントは、キーが押されたときにも発生します。</span><span class="sxs-lookup"><span data-stu-id="b5145-106">The <xref:System.Windows.Forms.Control.KeyPress> event also occurs when a key is pressed.</span></span> <span data-ttu-id="b5145-107">各 <xref:System.Windows.Forms.Control.KeyPress> イベントと共に <xref:System.Windows.Forms.KeyPressEventArgs> が渡され、各キー押下の結果として構成された文字が指定されます。</span><span class="sxs-lookup"><span data-stu-id="b5145-107">A <xref:System.Windows.Forms.KeyPressEventArgs> is passed with each <xref:System.Windows.Forms.Control.KeyPress> event, and specifies the character that was composed as a result of each key press.</span></span>  
  
 <span data-ttu-id="b5145-108">イベントモデルの詳細については、「[イベントの処理と発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5145-108">For information about the event model, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5145-109">次のコード例は、キー押下の状態を検出する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5145-109">The following code examples demonstrate how to detect the state of a key press.</span></span>  
  
 <span data-ttu-id="b5145-110">**例 1**</span><span class="sxs-lookup"><span data-stu-id="b5145-110">**Example 1**</span></span>  
  
 <span data-ttu-id="b5145-111">次のコード例は、<xref:System.Windows.Forms.Help> クラスで <xref:System.Windows.Forms.Control.KeyDown> イベントを使用して、アプリケーションのユーザーにポップアップスタイルのヘルプを表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5145-111">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="b5145-112">この例では、イベントハンドラーメソッドに渡される <xref:System.Windows.Forms.KeyEventArgs> のプロパティを使用して、修飾子キーで F1 キーを押すすべてのバリエーションをフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="b5145-112">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="b5145-113">ユーザーが任意のキーボード修飾子を含む F1 キーを押すと、<xref:System.Windows.Forms.Help> クラスによって、コントロールの近くに <xref:System.Windows.Forms.ToolTip>のようなポップアップウィンドウが表示されます。</span><span class="sxs-lookup"><span data-stu-id="b5145-113">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="b5145-114">ユーザーが ALT + F2 キーを押すと、別のヘルプポップアップが表示され、追加情報が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b5145-114">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="b5145-115">**例 2**</span><span class="sxs-lookup"><span data-stu-id="b5145-115">**Example 2**</span></span>  
  
 <span data-ttu-id="b5145-116">次の例では、ユーザーが ALT + E キーを押したかどうかを確認します。マウスポインターが <xref:System.Windows.Forms.TreeNode>上にある場合は、ユーザーがその <xref:System.Windows.Forms.TreeNode>を編集できるようにします。</span><span class="sxs-lookup"><span data-stu-id="b5145-116">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 <span data-ttu-id="b5145-117">**例 3**</span><span class="sxs-lookup"><span data-stu-id="b5145-117">**Example 3**</span></span>  
  
 <span data-ttu-id="b5145-118">次の例では、ユーザーが数値以外のキーを押したかどうかを確認し、存在する場合は、<xref:System.Windows.Forms.KeyEventArgs.Handled%2A> プロパティを使用して <xref:System.Windows.Forms.Control.KeyPress> イベントをキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="b5145-118">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
    <altmember cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
    <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
    <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyEventArgs (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyData As Keys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyEventArgs(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.KeyEventArgs : System.Windows.Forms.Keys -&gt; System.Windows.Forms.KeyEventArgs" Usage="new System.Windows.Forms.KeyEventArgs keyData" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="b5145-119">押されたキーを表す <see cref="T:System.Windows.Forms.Keys" />。これには、同時に押されたキーが Ctrl キー、Shift キー、Alt キーのいずれであるかを示す修飾フラグが組み合わされます。</span><span class="sxs-lookup"><span data-stu-id="b5145-119">A <see cref="T:System.Windows.Forms.Keys" /> representing the key that was pressed, combined with any modifier flags that indicate which CTRL, SHIFT, and ALT keys were pressed at the same time.</span></span> <span data-ttu-id="b5145-120">この値は、<see cref="T:System.Windows.Forms.Keys" /> 列挙体の定数にビット単位の OR (|) 演算を適用した値になります。</span><span class="sxs-lookup"><span data-stu-id="b5145-120">Possible values are obtained by applying the bitwise OR (|) operator to constants from the <see cref="T:System.Windows.Forms.Keys" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="b5145-121"><see cref="T:System.Windows.Forms.KeyEventArgs" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b5145-121">Initializes a new instance of the <see cref="T:System.Windows.Forms.KeyEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Alt">
      <MemberSignature Language="C#" Value="public virtual bool Alt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Alt" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Alt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Alt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Alt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Alt : bool" Usage="System.Windows.Forms.KeyEventArgs.Alt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5145-122">Alt キーが押されたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5145-122">Gets a value indicating whether the ALT key was pressed.</span></span></summary>
        <value><span data-ttu-id="b5145-123">Alt キーが押された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5145-123"><see langword="true" /> if the ALT key was pressed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b5145-124">**例 1**</span><span class="sxs-lookup"><span data-stu-id="b5145-124">**Example 1**</span></span>  
  
 <span data-ttu-id="b5145-125">次のコード例は、<xref:System.Windows.Forms.Help> クラスで <xref:System.Windows.Forms.Control.KeyDown> イベントを使用して、アプリケーションのユーザーにポップアップスタイルのヘルプを表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5145-125">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="b5145-126">この例では、イベントハンドラーメソッドに渡される <xref:System.Windows.Forms.KeyEventArgs> のプロパティを使用して、修飾子キーで F1 キーを押すすべてのバリエーションをフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="b5145-126">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="b5145-127">ユーザーが任意のキーボード修飾子を含む F1 キーを押すと、<xref:System.Windows.Forms.Help> クラスによって、コントロールの近くに <xref:System.Windows.Forms.ToolTip>のようなポップアップウィンドウが表示されます。</span><span class="sxs-lookup"><span data-stu-id="b5145-127">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="b5145-128">ユーザーが ALT + F2 キーを押すと、別のヘルプポップアップが表示され、追加情報が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b5145-128">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="b5145-129">**例 2**</span><span class="sxs-lookup"><span data-stu-id="b5145-129">**Example 2**</span></span>  
  
 <span data-ttu-id="b5145-130">次の例では、ユーザーが ALT + E キーを押したかどうかを確認します。マウスポインターが <xref:System.Windows.Forms.TreeNode>上にある場合は、ユーザーがその <xref:System.Windows.Forms.TreeNode>を編集できるようにします。</span><span class="sxs-lookup"><span data-stu-id="b5145-130">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public bool Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Control" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Control As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Control { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : bool" Usage="System.Windows.Forms.KeyEventArgs.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5145-131">Ctrl キーが押されたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5145-131">Gets a value indicating whether the CTRL key was pressed.</span></span></summary>
        <value><span data-ttu-id="b5145-132">Ctrl キーが押された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5145-132"><see langword="true" /> if the CTRL key was pressed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b5145-133">次のコード例は、<xref:System.Windows.Forms.Help> クラスで <xref:System.Windows.Forms.Control.KeyDown> イベントを使用して、アプリケーションのユーザーにポップアップスタイルのヘルプを表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5145-133">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="b5145-134">この例では、イベントハンドラーメソッドに渡される <xref:System.Windows.Forms.KeyEventArgs> のプロパティを使用して、修飾子キーで F1 キーを押すすべてのバリエーションをフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="b5145-134">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="b5145-135">ユーザーが任意のキーボード修飾子を含む F1 キーを押すと、<xref:System.Windows.Forms.Help> クラスによって、コントロールの近くに <xref:System.Windows.Forms.ToolTip>のようなポップアップウィンドウが表示されます。</span><span class="sxs-lookup"><span data-stu-id="b5145-135">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="b5145-136">ユーザーが ALT + F2 キーを押すと、別のヘルプポップアップが表示され、追加情報が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b5145-136">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Windows.Forms.KeyEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5145-137">イベントが処理されたかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5145-137">Gets or sets a value indicating whether the event was handled.</span></span></summary>
        <value><span data-ttu-id="b5145-138">コントロールの既定の処理を省略する場合は <see langword="true" />。コントロールの既定の処理と共にイベントも渡す場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5145-138"><see langword="true" /> to bypass the control's default handling; otherwise, <see langword="false" /> to also pass the event along to the default control handler.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5145-139"><xref:System.Windows.Forms.KeyEventArgs.Handled%2A> は、Windows フォーム内のさまざまなコントロールによって異なる方法で実装されます。</span><span class="sxs-lookup"><span data-stu-id="b5145-139"><xref:System.Windows.Forms.KeyEventArgs.Handled%2A> is implemented differently by different controls within Windows Forms.</span></span> <span data-ttu-id="b5145-140">ネイティブ Win32 コントロールをサブクラス化する <xref:System.Windows.Forms.TextBox> などのコントロールでは、キーメッセージを基になるネイティブコントロールに渡さないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="b5145-140">For controls like <xref:System.Windows.Forms.TextBox> which subclass native Win32 controls, it is interpreted to mean that the key message should not be passed to the underlying native control.</span></span> <span data-ttu-id="b5145-141"><xref:System.Windows.Forms.TextBox>で `Handled` を true に設定した場合、そのコントロールは、キーを押した `events` を基になる Win32 テキストボックスコントロールに渡しませんが、ユーザーが入力した文字は引き続き表示されます。</span><span class="sxs-lookup"><span data-stu-id="b5145-141">If you set `Handled` to true on a <xref:System.Windows.Forms.TextBox>, that control will not pass the key press `events` to the underlying Win32 text box control, but it will still display the characters that the user typed.</span></span>  
  
 <span data-ttu-id="b5145-142">現在のコントロールがキー押下を受信しないようにするには、<xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5145-142">If you want to prevent the current control from receiving a key press, use the <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5145-143">次の例では、ユーザーが数値以外のキーを押したかどうかを確認し、存在する場合は、<xref:System.Windows.Forms.KeyEventArgs.Handled%2A> プロパティを使用して <xref:System.Windows.Forms.Control.KeyPress> イベントをキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="b5145-143">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyCode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys KeyCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys KeyCode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyCode As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys KeyCode { System::Windows::Forms::Keys get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyCode : System.Windows.Forms.Keys" Usage="System.Windows.Forms.KeyEventArgs.KeyCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5145-144"><see cref="E:System.Windows.Forms.Control.KeyDown" /> イベントまたは <see cref="E:System.Windows.Forms.Control.KeyUp" /> イベントのキーボード コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="b5145-144">Gets the keyboard code for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span></span></summary>
        <value><span data-ttu-id="b5145-145">イベントのキー コードを示す <see cref="T:System.Windows.Forms.Keys" /> の値。</span><span class="sxs-lookup"><span data-stu-id="b5145-145">A <see cref="T:System.Windows.Forms.Keys" /> value that is the key code for the event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b5145-146">次のコード例は、<xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A> プロパティを使用して、どのキーが押されたかを判断する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5145-146">The following code examples show how to use the <xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A> property to determine which key was pressed.</span></span>  
  
 <span data-ttu-id="b5145-147">**例 1**</span><span class="sxs-lookup"><span data-stu-id="b5145-147">**Example 1**</span></span>  
  
 <span data-ttu-id="b5145-148">次のコード例は、<xref:System.Windows.Forms.Help> クラスで <xref:System.Windows.Forms.Control.KeyDown> イベントを使用して、アプリケーションのユーザーにポップアップスタイルのヘルプを表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5145-148">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="b5145-149">この例では、イベントハンドラーメソッドに渡される <xref:System.Windows.Forms.KeyEventArgs> のプロパティを使用して、修飾子キーで F1 キーを押すすべてのバリエーションをフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="b5145-149">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="b5145-150">ユーザーが任意のキーボード修飾子を含む F1 キーを押すと、<xref:System.Windows.Forms.Help> クラスによって、コントロールの近くに <xref:System.Windows.Forms.ToolTip>のようなポップアップウィンドウが表示されます。</span><span class="sxs-lookup"><span data-stu-id="b5145-150">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="b5145-151">ユーザーが ALT + F2 キーを押すと、別のヘルプポップアップが表示され、追加情報が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b5145-151">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="b5145-152">**例 2**</span><span class="sxs-lookup"><span data-stu-id="b5145-152">**Example 2**</span></span>  
  
 <span data-ttu-id="b5145-153">次の例では、ユーザーが ALT + E キーを押したかどうかを確認します。マウスポインターが <xref:System.Windows.Forms.TreeNode>上にある場合は、ユーザーがその <xref:System.Windows.Forms.TreeNode>を編集できるようにします。</span><span class="sxs-lookup"><span data-stu-id="b5145-153">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 <span data-ttu-id="b5145-154">**例 3**</span><span class="sxs-lookup"><span data-stu-id="b5145-154">**Example 3**</span></span>  
  
 <span data-ttu-id="b5145-155">次の例では、ユーザーが数値以外のキーを押したかどうかを確認し、存在する場合は、<xref:System.Windows.Forms.KeyEventArgs.Handled%2A> プロパティを使用して <xref:System.Windows.Forms.Control.KeyPress> イベントをキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="b5145-155">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyData" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      </Docs>
    </Member>
    <Member MemberName="KeyData">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys KeyData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys KeyData" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyData As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys KeyData { System::Windows::Forms::Keys get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyData : System.Windows.Forms.Keys" Usage="System.Windows.Forms.KeyEventArgs.KeyData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5145-156"><see cref="E:System.Windows.Forms.Control.KeyDown" /> イベントまたは <see cref="E:System.Windows.Forms.Control.KeyUp" /> イベントのキー データを取得します。</span><span class="sxs-lookup"><span data-stu-id="b5145-156">Gets the key data for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span></span></summary>
        <value><span data-ttu-id="b5145-157">押されたキーのキー コードを表す <see cref="T:System.Windows.Forms.Keys" />。これには、同時に押されたキーが Ctrl キー、Shift キー、および Alt キーのどの組み合わせであるのかを示す修飾フラグが組み合わされます。</span><span class="sxs-lookup"><span data-stu-id="b5145-157">A <see cref="T:System.Windows.Forms.Keys" /> representing the key code for the key that was pressed, combined with modifier flags that indicate which combination of CTRL, SHIFT, and ALT keys was pressed at the same time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5145-158"><xref:System.Windows.Forms.Keys> の定数を使用すると、<xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> プロパティから情報を抽出できます。</span><span class="sxs-lookup"><span data-stu-id="b5145-158">You can use constants from <xref:System.Windows.Forms.Keys> to extract information from the <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> property.</span></span> <span data-ttu-id="b5145-159"><xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> によって返されたデータを <xref:System.Windows.Forms.Keys> の定数と比較して、ユーザーが押したキーに関する情報を取得するには、ビットごとの AND 演算子を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5145-159">Use the bitwise AND operator to compare data returned by <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> with constants in <xref:System.Windows.Forms.Keys> to obtain information about which keys the user pressed.</span></span> <span data-ttu-id="b5145-160">特定の修飾子キーが押されたかどうかを確認するには、<xref:System.Windows.Forms.KeyEventArgs.Control%2A>、<xref:System.Windows.Forms.KeyEventArgs.Shift%2A>、および <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> の各プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5145-160">To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5145-161">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="b5145-161">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="b5145-162">この例では、イベントハンドラーは、<xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="b5145-162">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="b5145-163">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="b5145-163">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="b5145-164">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="b5145-164">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="b5145-165">コード例を実行するには、<xref:System.Windows.Forms.Button> や <xref:System.Windows.Forms.ComboBox>などの <xref:System.Windows.Forms.Control>から継承する型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="b5145-165">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="b5145-166">次に、インスタンスに `Control1` という名前を付け、イベントハンドラーが <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="b5145-166">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#48)]
 [!code-vb[System.Windows.Forms.EventExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      </Docs>
    </Member>
    <Member MemberName="KeyValue">
      <MemberSignature Language="C#" Value="public int KeyValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyValue { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyValue : int" Usage="System.Windows.Forms.KeyEventArgs.KeyValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5145-167"><see cref="E:System.Windows.Forms.Control.KeyDown" /> イベントまたは <see cref="E:System.Windows.Forms.Control.KeyUp" /> イベントのキーボード値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5145-167">Gets the keyboard value for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span></span></summary>
        <value><span data-ttu-id="b5145-168"><see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" /> プロパティの整数表現。</span><span class="sxs-lookup"><span data-stu-id="b5145-168">The integer representation of the <see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b5145-169">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="b5145-169">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="b5145-170">この例では、イベントハンドラーは、<xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="b5145-170">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="b5145-171">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="b5145-171">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="b5145-172">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="b5145-172">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="b5145-173">コード例を実行するには、<xref:System.Windows.Forms.Button> や <xref:System.Windows.Forms.ComboBox>などの <xref:System.Windows.Forms.Control>から継承する型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="b5145-173">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="b5145-174">次に、インスタンスに `Control1` という名前を付け、イベントハンドラーが <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="b5145-174">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#48)]
 [!code-vb[System.Windows.Forms.EventExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyData" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys Modifiers { System::Windows::Forms::Keys get(); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Forms.Keys" Usage="System.Windows.Forms.KeyEventArgs.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5145-175"><see cref="E:System.Windows.Forms.Control.KeyDown" /> イベントまたは <see cref="E:System.Windows.Forms.Control.KeyUp" /> イベントの修飾フラグを取得します。</span><span class="sxs-lookup"><span data-stu-id="b5145-175">Gets the modifier flags for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span></span> <span data-ttu-id="b5145-176">このフラグは、Ctrl キー、Shift キー、および Alt キーのどの組み合わせが押されたのかを示します。</span><span class="sxs-lookup"><span data-stu-id="b5145-176">The flags indicate which combination of CTRL, SHIFT, and ALT keys was pressed.</span></span></summary>
        <value><span data-ttu-id="b5145-177">1 つ以上の修飾フラグを表す <see cref="T:System.Windows.Forms.Keys" /> の値。</span><span class="sxs-lookup"><span data-stu-id="b5145-177">A <see cref="T:System.Windows.Forms.Keys" /> value representing one or more modifier flags.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5145-178">特定の修飾子キーが押されたかどうかを確認するには、<xref:System.Windows.Forms.KeyEventArgs.Control%2A>、<xref:System.Windows.Forms.KeyEventArgs.Shift%2A>、および <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> の各プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5145-178">To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.</span></span> <span data-ttu-id="b5145-179">修飾子フラグは、ビットごとの OR と組み合わせることができます。</span><span class="sxs-lookup"><span data-stu-id="b5145-179">Modifier flags can be combined with bitwise OR.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5145-180">次のコード例では、<xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A> プロパティを使用して、主キーと共にどの修飾子キーが押されたかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b5145-180">The following code example shows how to use the <xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A> property to determine which modifier keys were pressed along with the primary key.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
      </Docs>
    </Member>
    <Member MemberName="Shift">
      <MemberSignature Language="C#" Value="public virtual bool Shift { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shift" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Shift" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Shift As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Shift { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Shift : bool" Usage="System.Windows.Forms.KeyEventArgs.Shift" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5145-181">Shift キーが押されたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5145-181">Gets a value indicating whether the SHIFT key was pressed.</span></span></summary>
        <value><span data-ttu-id="b5145-182">Shift キーが押された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5145-182"><see langword="true" /> if the SHIFT key was pressed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b5145-183">次の例では、ユーザーが F1 キーを押して Shift キーを押したかどうかを確認し、存在する場合はヘルプを表示します。</span><span class="sxs-lookup"><span data-stu-id="b5145-183">The following example determines whether the user pressed the Shift key with the F1 key, and if so, displays help.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="SuppressKeyPress">
      <MemberSignature Language="C#" Value="public bool SuppressKeyPress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressKeyPress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressKeyPress As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressKeyPress { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressKeyPress : bool with get, set" Usage="System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5145-184">キー イベントを基になるコントロールに渡すかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5145-184">Gets or sets a value indicating whether the key event should be passed on to the underlying control.</span></span></summary>
        <value><span data-ttu-id="b5145-185">キー イベントをコントロールに渡さない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5145-185"><see langword="true" /> if the key event should not be sent to the control; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5145-186">ユーザーの入力を防ぐために、<xref:System.Windows.Forms.Control.KeyDown> などのイベントハンドラーでこのプロパティに `true` を割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="b5145-186">You can assign `true` to this property in an event handler such as <xref:System.Windows.Forms.Control.KeyDown> in order to prevent user input.</span></span>  
  
 <span data-ttu-id="b5145-187"><xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> を `true` に設定すると、<xref:System.Windows.Forms.KeyEventArgs.Handled%2A> も `true`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b5145-187">Setting <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> to `true` also sets <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5145-188">次のコード例では、数値キーストロークが `textBox1`という名前の <xref:System.Windows.Forms.TextBox> コントロールに到達しないようにします。</span><span class="sxs-lookup"><span data-stu-id="b5145-188">The following code example prevents numeric keystrokes from reaching the <xref:System.Windows.Forms.TextBox> control named `textBox1`.</span></span>  
  
 [!code-csharp[KeyEventArgs.SuppressKeyPress#1](~/samples/snippets/csharp/VS_Snippets_Winforms/keyeventargs.suppresskeypress/cs/form1.cs#1)]
 [!code-vb[KeyEventArgs.SuppressKeyPress#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/keyeventargs.suppresskeypress/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Handled" />
      </Docs>
    </Member>
  </Members>
</Type>
