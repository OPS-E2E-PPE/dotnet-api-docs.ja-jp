<Type Name="KeyPressEventArgs" FullName="System.Windows.Forms.KeyPressEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a9109c15e656e96d502b9f4674f1351460216671" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82484360" /></Metadata><TypeSignature Language="C#" Value="public class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyPressEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeyPressEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyPressEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type KeyPressEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="E:System.Windows.Forms.Control.KeyPress" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザーがキーを押したときに構成される文字を指定する <xref:System.Windows.Forms.KeyPressEventArgs>。 たとえば、ユーザーが SHIFT + K キーを押した場合、<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> プロパティは大文字の K を返します。  
  
 <xref:System.Windows.Forms.Control.KeyPress> イベントは、ユーザーがキーを押したときに発生します。 <xref:System.Windows.Forms.Control.KeyPress> イベントに密接に関連する2つのイベントが <xref:System.Windows.Forms.Control.KeyUp> と <xref:System.Windows.Forms.Control.KeyDown>ます。 <xref:System.Windows.Forms.Control.KeyDown> イベントは、ユーザーがキーを押したときに各 <xref:System.Windows.Forms.Control.KeyPress> イベントの前に発生し、ユーザーがキーを離したときに <xref:System.Windows.Forms.Control.KeyUp> イベントが発生します。 ユーザーがキーを押したときに、重複する <xref:System.Windows.Forms.Control.KeyDown> と <xref:System.Windows.Forms.Control.KeyPress> イベントは、文字が繰り返されるたびに発生します。 リリース時に1つの <xref:System.Windows.Forms.Control.KeyUp> イベントが生成されます。  
  
 各 <xref:System.Windows.Forms.Control.KeyPress> イベントには、<xref:System.Windows.Forms.KeyPressEventArgs> が渡されます。 各 <xref:System.Windows.Forms.Control.KeyDown> および <xref:System.Windows.Forms.Control.KeyUp> イベントと共に <xref:System.Windows.Forms.KeyEventArgs> が渡されます。 修飾子キー (CTRL、SHIFT、または ALT) を別のキーと共に押したかどうかを指定 <xref:System.Windows.Forms.KeyEventArgs>。 (この修飾子情報は、<xref:System.Windows.Forms.Control> クラスの <xref:System.Windows.Forms.Control.ModifierKeys%2A> プロパティを使用して取得することもできます)。  
  
 `KeyPress` イベントを取り消すには、<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> を `true` に設定します。 これにより、コントロールはキー押下を処理し続けます。  
  
> [!NOTE]
>  一部のコントロールでは、<xref:System.Windows.Forms.Control.KeyDown>で特定のキーストロークを処理します。 たとえば、<xref:System.Windows.Forms.RichTextBox> は、<xref:System.Windows.Forms.Control.KeyPress> が呼び出される前に Enter キーを処理します。 このような場合は、<xref:System.Windows.Forms.Control.KeyPress> イベントをキャンセルすることはできません。代わりに <xref:System.Windows.Forms.Control.KeyDown> からキーストロークを取り消す必要があります。  
  
 イベントモデルの詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Forms.KeyPressEventArgs> を使用してキーをカウントし、キーを押すたびに結果を表示する方法を示します。 次に、<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> を true に設定して、オペレーティングシステムがキーをさらに処理しないようにします。 この例では、フォームに <xref:System.Windows.Forms.TextBox> が配置されていることを前提としています。  
  
 [!code-cpp[Classic KeyPressEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic KeyPressEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic KeyPressEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source.vb#1)]  
  
 このクラスの新しいインスタンスを作成する必要があります。 また、イベントハンドラーも設定する必要があります。 これは、クラスのコンストラクターで行うことができます。  
  
 [!code-cpp[Classic KeyPressEventArgs Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic KeyPressEventArgs Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source2.cs#2)]
 [!code-vb[Classic KeyPressEventArgs Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source2.vb#2)]  
  
 コントロールで指定されたイベントが発生すると、添付されたメソッドが呼び出され、アプリケーションはイベントに応答してコードを実行できます。  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
    <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
    <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
    <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
    <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyPressEventArgs (char keyChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char keyChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyPressEventArgs(char keyChar);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.KeyPressEventArgs : char -&gt; System.Windows.Forms.KeyPressEventArgs" Usage="new System.Windows.Forms.KeyPressEventArgs keyChar" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="keyChar">ユーザーの押したキーに対応する ASCII 文字。</param>
        <summary><see cref="T:System.Windows.Forms.KeyPressEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=nameWithType> プロパティを使用して、修飾子キーの現在の状態を取得します。  
  
   
  
## Examples  
 次の例では、SHIFT キーの現在の状態を示すメッセージボックスを表示します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="E:System.Windows.Forms.Control.KeyPress" /> イベントが処理されたかどうかを示す値を取得または設定します。</summary>
        <value>イベントが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントが処理されない場合は、既定の処理のためにオペレーティングシステムに送信されます。 `KeyPress` イベントを取り消すには、<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> を `true` に設定します。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Forms.TextBox> コントロールを作成します。 `keypressed` メソッドは、<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> プロパティを使用して、ENTER キーが押されているかどうかを確認します。 ENTER キーが押されている場合、<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> プロパティは `true`に設定されます。これは、イベントが処理されることを示します。  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyChar">
      <MemberSignature Language="C#" Value="public char KeyChar { get; set; }" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance char KeyChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.KeyChar" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyChar As Char" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char KeyChar { char get(); void set(char value); };" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.KeyChar : char with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.KeyChar" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public char KeyChar { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyChar As Char" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char KeyChar { char get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.KeyChar : char" Usage="System.Windows.Forms.KeyPressEventArgs.KeyChar" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>押されたキーに対応する文字を取得または設定します。</summary>
        <value>作成される ASCII 文字。 たとえば、ユーザーが Shift キーを押しながら K キーを押した場合、このプロパティは大文字の K を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 実行時にキーストロークをサンプリングし、特殊な実行時の状況でキーストロークを変更するには、<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> プロパティを使用します。 たとえば、<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> を使用すると、ユーザーが郵便番号を入力したときに数値以外の keypresses を無効にしたり、データ入力フィールドでアルファベットの keypresses をすべて大文字に変更したり、キーボードなどのキー入力デバイスで特定のキーの組み合わせを監視したりできます。  
  
 次のキーを取得または設定できます。  
  
-   a-z、a-z。  
  
-   +.  
  
-   句読点。  
  
-   キーボードの上部とテンキーの両方で、数字キー。  
  
-   を入力し.  
  
 次のキーを取得または設定することはできません。  
  
-   Tab キー。  
  
-   挿入と削除。  
  
-   出張.  
  
-   終わり。  
  
-   Pageup と pagedown。  
  
-   F1 + F2  
  
-   押し.  
  
-   方向キー  
  
> [!NOTE]
>  上記の文字以外のキーを検出する方法の詳細については、<xref:System.Windows.Forms.KeyEventArgs> クラスを参照してください。  
  
## Examples  
 次の例では、<xref:System.Windows.Forms.TextBox> コントロールを作成します。 `keypressed` メソッドは、<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> プロパティを使用して、ENTER キーが押されたかどうかを確認します。 ENTER キーが押されている場合、<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> プロパティは `true`に設定されます。これは、イベントが処理されることを示します。  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
      </Docs>
    </Member>
  </Members>
</Type>
