<Type Name="KeyPressEventArgs" FullName="System.Windows.Forms.KeyPressEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="99f867445175902813055b3424cca7ea77ff2e1d" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83533812" /></Metadata><TypeSignature Language="C#" Value="public class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyPressEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeyPressEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyPressEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type KeyPressEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c033c-101"><see cref="E:System.Windows.Forms.Control.KeyPress" /> イベントのデータを提供します。</span><span class="sxs-lookup"><span data-stu-id="c033c-101">Provides data for the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c033c-102">ユーザーがキーを押したときに構成される文字を指定する <xref:System.Windows.Forms.KeyPressEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="c033c-102">A <xref:System.Windows.Forms.KeyPressEventArgs> specifies the character that is composed when the user presses a key.</span></span> <span data-ttu-id="c033c-103">たとえば、ユーザーが SHIFT + K キーを押した場合、<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> プロパティは大文字の K を返します。</span><span class="sxs-lookup"><span data-stu-id="c033c-103">For example, when the user presses SHIFT + K, the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property returns an uppercase K.</span></span>  
  
 <span data-ttu-id="c033c-104"><xref:System.Windows.Forms.Control.KeyPress> イベントは、ユーザーがキーを押したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c033c-104">A <xref:System.Windows.Forms.Control.KeyPress> event occurs when the user presses a key.</span></span> <span data-ttu-id="c033c-105"><xref:System.Windows.Forms.Control.KeyPress> イベントに密接に関連する2つのイベントが <xref:System.Windows.Forms.Control.KeyUp> と <xref:System.Windows.Forms.Control.KeyDown>ます。</span><span class="sxs-lookup"><span data-stu-id="c033c-105">Two events that are closely related to the <xref:System.Windows.Forms.Control.KeyPress> event are <xref:System.Windows.Forms.Control.KeyUp> and <xref:System.Windows.Forms.Control.KeyDown>.</span></span> <span data-ttu-id="c033c-106"><xref:System.Windows.Forms.Control.KeyDown> イベントは、ユーザーがキーを押したときに各 <xref:System.Windows.Forms.Control.KeyPress> イベントの前に発生し、ユーザーがキーを離したときに <xref:System.Windows.Forms.Control.KeyUp> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="c033c-106">The <xref:System.Windows.Forms.Control.KeyDown> event precedes each <xref:System.Windows.Forms.Control.KeyPress> event when the user presses a key, and a <xref:System.Windows.Forms.Control.KeyUp> event occurs when the user releases a key.</span></span> <span data-ttu-id="c033c-107">ユーザーがキーを押したときに、重複する <xref:System.Windows.Forms.Control.KeyDown> と <xref:System.Windows.Forms.Control.KeyPress> イベントは、文字が繰り返されるたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="c033c-107">When the user holds down a key, duplicate <xref:System.Windows.Forms.Control.KeyDown> and <xref:System.Windows.Forms.Control.KeyPress> events occur each time the character repeats.</span></span> <span data-ttu-id="c033c-108">リリース時に1つの <xref:System.Windows.Forms.Control.KeyUp> イベントが生成されます。</span><span class="sxs-lookup"><span data-stu-id="c033c-108">One <xref:System.Windows.Forms.Control.KeyUp> event is generated upon release.</span></span>  
  
 <span data-ttu-id="c033c-109">各 <xref:System.Windows.Forms.Control.KeyPress> イベントには、<xref:System.Windows.Forms.KeyPressEventArgs> が渡されます。</span><span class="sxs-lookup"><span data-stu-id="c033c-109">With each <xref:System.Windows.Forms.Control.KeyPress> event, a <xref:System.Windows.Forms.KeyPressEventArgs> is passed.</span></span> <span data-ttu-id="c033c-110">各 <xref:System.Windows.Forms.Control.KeyDown> および <xref:System.Windows.Forms.Control.KeyUp> イベントと共に <xref:System.Windows.Forms.KeyEventArgs> が渡されます。</span><span class="sxs-lookup"><span data-stu-id="c033c-110">A <xref:System.Windows.Forms.KeyEventArgs> is passed with each <xref:System.Windows.Forms.Control.KeyDown> and <xref:System.Windows.Forms.Control.KeyUp> event.</span></span> <span data-ttu-id="c033c-111">修飾子キー (CTRL、SHIFT、または ALT) を別のキーと共に押したかどうかを指定 <xref:System.Windows.Forms.KeyEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="c033c-111">A <xref:System.Windows.Forms.KeyEventArgs> specifies whether any modifier keys (CTRL, SHIFT, or ALT) were pressed along with another key.</span></span> <span data-ttu-id="c033c-112">(この修飾子情報は、<xref:System.Windows.Forms.Control> クラスの <xref:System.Windows.Forms.Control.ModifierKeys%2A> プロパティを使用して取得することもできます)。</span><span class="sxs-lookup"><span data-stu-id="c033c-112">(This modifier information can also be obtained through the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property of the <xref:System.Windows.Forms.Control> class.)</span></span>  
  
 <span data-ttu-id="c033c-113">`KeyPress` イベントを取り消すには、<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> を `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="c033c-113">Set <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> to `true` to cancel the `KeyPress` event.</span></span> <span data-ttu-id="c033c-114">これにより、コントロールはキー押下を処理し続けます。</span><span class="sxs-lookup"><span data-stu-id="c033c-114">This keeps the control from processing the key press.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c033c-115">一部のコントロールでは、<xref:System.Windows.Forms.Control.KeyDown>で特定のキーストロークを処理します。</span><span class="sxs-lookup"><span data-stu-id="c033c-115">Some controls will process certain key strokes on <xref:System.Windows.Forms.Control.KeyDown>.</span></span> <span data-ttu-id="c033c-116">たとえば、<xref:System.Windows.Forms.RichTextBox> は、<xref:System.Windows.Forms.Control.KeyPress> が呼び出される前に Enter キーを処理します。</span><span class="sxs-lookup"><span data-stu-id="c033c-116">For example, <xref:System.Windows.Forms.RichTextBox> processes the Enter key before <xref:System.Windows.Forms.Control.KeyPress> is called.</span></span> <span data-ttu-id="c033c-117">このような場合は、<xref:System.Windows.Forms.Control.KeyPress> イベントをキャンセルすることはできません。代わりに <xref:System.Windows.Forms.Control.KeyDown> からキーストロークを取り消す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c033c-117">In such cases, you cannot cancel the <xref:System.Windows.Forms.Control.KeyPress> event, and must cancel the key stroke from <xref:System.Windows.Forms.Control.KeyDown> instead.</span></span>  
  
 <span data-ttu-id="c033c-118">イベントモデルの詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c033c-118">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c033c-119">次の例では、<xref:System.Windows.Forms.KeyPressEventArgs> を使用してキーをカウントし、キーを押すたびに結果を表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c033c-119">The following example illustrates using the <xref:System.Windows.Forms.KeyPressEventArgs> to count keys as they are pressed and to display the results after each key press.</span></span> <span data-ttu-id="c033c-120">次に、<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> を true に設定して、オペレーティングシステムがキーをさらに処理しないようにします。</span><span class="sxs-lookup"><span data-stu-id="c033c-120"><xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> is then set to true to keep the operating system from further processing the key.</span></span> <span data-ttu-id="c033c-121">この例では、フォームに <xref:System.Windows.Forms.TextBox> が配置されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="c033c-121">The example assumes a form with a <xref:System.Windows.Forms.TextBox> placed on it.</span></span>  
  
 [!code-cpp[Classic KeyPressEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic KeyPressEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic KeyPressEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c033c-122">このクラスの新しいインスタンスを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c033c-122">You must create a new instance of this class.</span></span> <span data-ttu-id="c033c-123">また、イベントハンドラーも設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c033c-123">You must also set the event handler.</span></span> <span data-ttu-id="c033c-124">これは、クラスのコンストラクターで行うことができます。</span><span class="sxs-lookup"><span data-stu-id="c033c-124">You can do this in the constructor for your class.</span></span>  
  
 [!code-cpp[Classic KeyPressEventArgs Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic KeyPressEventArgs Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source2.cs#2)]
 [!code-vb[Classic KeyPressEventArgs Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="c033c-125">コントロールで指定されたイベントが発生すると、添付されたメソッドが呼び出され、アプリケーションはイベントに応答してコードを実行できます。</span><span class="sxs-lookup"><span data-stu-id="c033c-125">When the specified event is raised in the control, the attached method is called and the application can execute code in response to the event.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
    <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
    <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
    <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
    <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyPressEventArgs (char keyChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char keyChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyPressEventArgs(char keyChar);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.KeyPressEventArgs : char -&gt; System.Windows.Forms.KeyPressEventArgs" Usage="new System.Windows.Forms.KeyPressEventArgs keyChar" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="keyChar"><span data-ttu-id="c033c-126">ユーザーの押したキーに対応する ASCII 文字。</span><span class="sxs-lookup"><span data-stu-id="c033c-126">The ASCII character corresponding to the key the user pressed.</span></span></param>
        <summary><span data-ttu-id="c033c-127"><see cref="T:System.Windows.Forms.KeyPressEventArgs" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c033c-127">Initializes a new instance of the <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c033c-128"><xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=nameWithType> プロパティを使用して、修飾子キーの現在の状態を取得します。</span><span class="sxs-lookup"><span data-stu-id="c033c-128">Use the <xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=nameWithType> property to get the current state of the modifier keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c033c-129">次の例では、SHIFT キーの現在の状態を示すメッセージボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="c033c-129">The following example displays a message box that shows the current state of the SHIFT key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c033c-130"><see cref="E:System.Windows.Forms.Control.KeyPress" /> イベントが処理されたかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c033c-130">Gets or sets a value indicating whether the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event was handled.</span></span></summary>
        <value><span data-ttu-id="c033c-131">イベントが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c033c-131"><see langword="true" /> if the event is handled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c033c-132">イベントが処理されない場合は、既定の処理のためにオペレーティングシステムに送信されます。</span><span class="sxs-lookup"><span data-stu-id="c033c-132">If the event is not handled, it will be sent to the operating system for default processing.</span></span> <span data-ttu-id="c033c-133">`KeyPress` イベントを取り消すには、<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> を `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="c033c-133">Set <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> to `true` to cancel the `KeyPress` event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c033c-134">次の例では、<xref:System.Windows.Forms.TextBox> コントロールを作成します。</span><span class="sxs-lookup"><span data-stu-id="c033c-134">The following example creates a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="c033c-135">`keypressed` メソッドは、<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> プロパティを使用して、ENTER キーが押されているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="c033c-135">The `keypressed` method uses the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to check whether the ENTER key is pressed.</span></span> <span data-ttu-id="c033c-136">ENTER キーが押されている場合、<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> プロパティは `true`に設定されます。これは、イベントが処理されることを示します。</span><span class="sxs-lookup"><span data-stu-id="c033c-136">If the ENTER key is pressed, the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property is set to `true`, which indicates the event is handled.</span></span>  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyChar">
      <MemberSignature Language="C#" Value="public char KeyChar { get; set; }" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance char KeyChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.KeyChar" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyChar As Char" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char KeyChar { char get(); void set(char value); };" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.KeyChar : char with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.KeyChar" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public char KeyChar { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyChar As Char" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char KeyChar { char get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.KeyChar : char" Usage="System.Windows.Forms.KeyPressEventArgs.KeyChar" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c033c-137">押されたキーに対応する文字を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c033c-137">Gets or sets the character corresponding to the key pressed.</span></span></summary>
        <value><span data-ttu-id="c033c-138">作成される ASCII 文字。</span><span class="sxs-lookup"><span data-stu-id="c033c-138">The ASCII character that is composed.</span></span> <span data-ttu-id="c033c-139">たとえば、ユーザーが Shift キーを押しながら K キーを押した場合、このプロパティは大文字の K を返します。</span><span class="sxs-lookup"><span data-stu-id="c033c-139">For example, if the user presses SHIFT + K, this property returns an uppercase K.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c033c-140">実行時にキーストロークをサンプリングし、特殊な実行時の状況でキーストロークを変更するには、<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c033c-140">Use the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to sample keystrokes at run time and to modify keystrokes under special run-time circumstances.</span></span> <span data-ttu-id="c033c-141">たとえば、<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> を使用すると、ユーザーが郵便番号を入力したときに数値以外の keypresses を無効にしたり、データ入力フィールドでアルファベットの keypresses をすべて大文字に変更したり、キーボードなどのキー入力デバイスで特定のキーの組み合わせを監視したりできます。</span><span class="sxs-lookup"><span data-stu-id="c033c-141">For example, you can use <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> to disable non-numeric keypresses when the user enters a ZIP code, change all alphabetical keypresses to uppercase in a data entry field, or monitor the keyboard or other key input device for specific key combinations.</span></span>  
  
 <span data-ttu-id="c033c-142">次のキーを取得または設定できます。</span><span class="sxs-lookup"><span data-stu-id="c033c-142">You can get or set the following keys:</span></span>  
  
-   <span data-ttu-id="c033c-143">a-z、a-z。</span><span class="sxs-lookup"><span data-stu-id="c033c-143">a-z, A-Z.</span></span>  
  
-   <span data-ttu-id="c033c-144">+.</span><span class="sxs-lookup"><span data-stu-id="c033c-144">CTRL.</span></span>  
  
-   <span data-ttu-id="c033c-145">句読点。</span><span class="sxs-lookup"><span data-stu-id="c033c-145">Punctuation marks.</span></span>  
  
-   <span data-ttu-id="c033c-146">キーボードの上部とテンキーの両方で、数字キー。</span><span class="sxs-lookup"><span data-stu-id="c033c-146">Number keys, both across the top of the keyboard and on the numeric keypad.</span></span>  
  
-   <span data-ttu-id="c033c-147">を入力し.</span><span class="sxs-lookup"><span data-stu-id="c033c-147">ENTER.</span></span>  
  
 <span data-ttu-id="c033c-148">次のキーを取得または設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="c033c-148">You cannot get or set the following keys:</span></span>  
  
-   <span data-ttu-id="c033c-149">Tab キー。</span><span class="sxs-lookup"><span data-stu-id="c033c-149">The TAB key.</span></span>  
  
-   <span data-ttu-id="c033c-150">挿入と削除。</span><span class="sxs-lookup"><span data-stu-id="c033c-150">INSERT and DELETE.</span></span>  
  
-   <span data-ttu-id="c033c-151">出張.</span><span class="sxs-lookup"><span data-stu-id="c033c-151">HOME.</span></span>  
  
-   <span data-ttu-id="c033c-152">終わり。</span><span class="sxs-lookup"><span data-stu-id="c033c-152">END.</span></span>  
  
-   <span data-ttu-id="c033c-153">Pageup と pagedown。</span><span class="sxs-lookup"><span data-stu-id="c033c-153">PAGE UP and PAGE DOWN.</span></span>  
  
-   <span data-ttu-id="c033c-154">F1 + F2</span><span class="sxs-lookup"><span data-stu-id="c033c-154">F1-F2.</span></span>  
  
-   <span data-ttu-id="c033c-155">押し.</span><span class="sxs-lookup"><span data-stu-id="c033c-155">ALT.</span></span>  
  
-   <span data-ttu-id="c033c-156">方向キー</span><span class="sxs-lookup"><span data-stu-id="c033c-156">Arrow keys.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c033c-157">上記の文字以外のキーを検出する方法の詳細については、<xref:System.Windows.Forms.KeyEventArgs> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c033c-157">For information about how to detect any of the non-character keys mentioned above, see the <xref:System.Windows.Forms.KeyEventArgs> class.</span></span>  
  
## Examples  
 <span data-ttu-id="c033c-158">次の例では、<xref:System.Windows.Forms.TextBox> コントロールを作成します。</span><span class="sxs-lookup"><span data-stu-id="c033c-158">The following example creates a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="c033c-159">`keypressed` メソッドは、<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> プロパティを使用して、ENTER キーが押されたかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="c033c-159">The `keypressed` method uses the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to check whether the ENTER key pressed.</span></span> <span data-ttu-id="c033c-160">ENTER キーが押されている場合、<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> プロパティは `true`に設定されます。これは、イベントが処理されることを示します。</span><span class="sxs-lookup"><span data-stu-id="c033c-160">If the ENTER key is pressed, the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property is set to `true`, which indicates the event is handled.</span></span>  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
      </Docs>
    </Member>
  </Members>
</Type>
