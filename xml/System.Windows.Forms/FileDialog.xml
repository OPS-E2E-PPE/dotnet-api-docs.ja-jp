<Type Name="FileDialog" FullName="System.Windows.Forms.FileDialog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6138a0243ab959452909f0ab4c0512043b0a1684" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75179331" /></Metadata><TypeSignature Language="C#" Value="public abstract class FileDialog : System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FileDialog extends System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.FileDialog" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FileDialog&#xA;Inherits CommonDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileDialog abstract : System::Windows::Forms::CommonDialog" />
  <TypeSignature Language="F#" Value="type FileDialog = class&#xA;    inherit CommonDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.CommonDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("FileOk")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("FileName")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e1686-101">ユーザーがファイルを選択するダイアログ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="e1686-101">Displays a dialog box from which the user can select a file.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1686-102"><xref:System.Windows.Forms.FileDialog> は、<xref:System.Windows.Forms.OpenFileDialog> クラスと <xref:System.Windows.Forms.SaveFileDialog> クラスの一般的な動作を含む抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="e1686-102"><xref:System.Windows.Forms.FileDialog> is an abstract class that contains common behavior for the <xref:System.Windows.Forms.OpenFileDialog> and <xref:System.Windows.Forms.SaveFileDialog> classes.</span></span> <span data-ttu-id="e1686-103">直接使用するためのものではありませんが、これら2つのクラスに共通の動作が含まれています。</span><span class="sxs-lookup"><span data-stu-id="e1686-103">It is not intended to be used directly but contains common behavior for those two classes.</span></span> <span data-ttu-id="e1686-104"><xref:System.Windows.Forms.FileDialog>のインスタンスを作成することはできません。</span><span class="sxs-lookup"><span data-stu-id="e1686-104">You cannot create an instance of <xref:System.Windows.Forms.FileDialog>.</span></span> <span data-ttu-id="e1686-105">クラスは public として宣言されていますが、内部抽象メソッドが含まれているため、このクラスから継承することはできません。</span><span class="sxs-lookup"><span data-stu-id="e1686-105">Although the class is declared public, you cannot inherit from it, as it contains internal abstract methods.</span></span> <span data-ttu-id="e1686-106">ファイルを選択または保存するためのダイアログボックスを作成するには、<xref:System.Windows.Forms.OpenFileDialog> または <xref:System.Windows.Forms.SaveFileDialog>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e1686-106">To create a dialog box to select or save a file, use <xref:System.Windows.Forms.OpenFileDialog> or <xref:System.Windows.Forms.SaveFileDialog>.</span></span>  
  
 <span data-ttu-id="e1686-107"><xref:System.Windows.Forms.FileDialog> はモーダルダイアログボックスです。したがって、表示されると、ユーザーがファイルを選択するまで、アプリケーションの残りの部分はブロックされます。</span><span class="sxs-lookup"><span data-stu-id="e1686-107"><xref:System.Windows.Forms.FileDialog> is a modal dialog box; therefore, when shown, it blocks the rest of the application until the user has chosen a file.</span></span> <span data-ttu-id="e1686-108">ダイアログボックスがモーダルで表示されている場合、ダイアログボックスのオブジェクト以外の入力 (キーボードまたはマウスクリック) は発生しません。</span><span class="sxs-lookup"><span data-stu-id="e1686-108">When a dialog box is displayed modally, no input (keyboard or mouse click) can occur except to objects on the dialog box.</span></span> <span data-ttu-id="e1686-109">プログラムは、呼び出し元のプログラムへの入力が発生する前に、ダイアログボックスを非表示にするか (通常は一部のユーザー操作に応答して) 閉じる必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1686-109">The program must hide or close the dialog box (usually in response to some user action) before input to the calling program can occur.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e1686-110"><xref:System.Windows.Forms.OpenFileDialog> や <xref:System.Windows.Forms.SaveFileDialog>などの <xref:System.Windows.Forms.FileDialog>から派生したクラスを使用する場合は、絶対パスを含む文字列リテラルを使用しないようにしてください。</span><span class="sxs-lookup"><span data-stu-id="e1686-110">When you use classes derived from <xref:System.Windows.Forms.FileDialog>, such as <xref:System.Windows.Forms.OpenFileDialog> and <xref:System.Windows.Forms.SaveFileDialog>, avoid using string literals containing absolute paths.</span></span> <span data-ttu-id="e1686-111">代わりに、次の表で説明する1つ以上の方法を使用して、パスを動的に取得します。</span><span class="sxs-lookup"><span data-stu-id="e1686-111">Instead, dynamically obtain the path using one or more of the techniques described in the following table.</span></span>  
  
 <span data-ttu-id="e1686-112">ユーザーがファイルではなくフォルダーを選択できるようにするには、<xref:System.Windows.Forms.FolderBrowserDialog>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e1686-112">If you want to enable users to select a folder instead of a file, use the <xref:System.Windows.Forms.FolderBrowserDialog>.</span></span>  
  
 <span data-ttu-id="e1686-113">アプリケーションの種類、アプリケーションに関連付けられたデータの保存方法、およびファイルシステムへのアクセスの理由に応じて、ディレクトリパスを作成するためのさまざまな方法が考えられます。</span><span class="sxs-lookup"><span data-stu-id="e1686-113">Depending upon the type of application, how data associated with the application is stored, and the reason for accessing the file system, there are many possible ways in which you can create a directory path.</span></span> <span data-ttu-id="e1686-114">次の表は、パスを動的に作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e1686-114">The following table shows the techniques for creating paths dynamically.</span></span>  
  
|<span data-ttu-id="e1686-115">パスまたはプログラムのカテゴリ</span><span class="sxs-lookup"><span data-stu-id="e1686-115">Path or program category</span></span>|<span data-ttu-id="e1686-116">使用するクラスとメンバー</span><span class="sxs-lookup"><span data-stu-id="e1686-116">Class and members to use</span></span>|  
|------------------------------|------------------------------|  
|<span data-ttu-id="e1686-117">Program Files、マイドキュメント、Desktop などの標準の Windows パス</span><span class="sxs-lookup"><span data-stu-id="e1686-117">Standard Windows paths, such as Program Files, MyDocuments, the Desktop and so on</span></span>|<span data-ttu-id="e1686-118"><xref:System.Environment?displayProperty=nameWithType> クラスは、<xref:System.Environment.SystemDirectory%2A>などの静的メソッドを使用して、または <xref:System.Environment.SpecialFolder> 列挙値のいずれかを使用して <xref:System.Environment.GetFolderPath%2A> メソッドを使用して、これらの最も完全なソースです。</span><span class="sxs-lookup"><span data-stu-id="e1686-118">The <xref:System.Environment?displayProperty=nameWithType> class is the most complete source for these, either through its static methods, such as <xref:System.Environment.SystemDirectory%2A>, or through the <xref:System.Environment.GetFolderPath%2A> method, using one of the <xref:System.Environment.SpecialFolder> enumerated values.</span></span>|  
|<span data-ttu-id="e1686-119">現在のアプリケーションに関連するパス</span><span class="sxs-lookup"><span data-stu-id="e1686-119">Paths related to the current application</span></span>|<span data-ttu-id="e1686-120"><xref:System.Windows.Forms.Application> クラスには、<xref:System.Windows.Forms.Application.StartupPath%2A>、<xref:System.Windows.Forms.Application.ExecutablePath%2A>、<xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A>、<xref:System.Windows.Forms.Application.CommonAppDataPath%2A>などの特定のパスを取得するための静的メンバーがあります。</span><span class="sxs-lookup"><span data-stu-id="e1686-120">The <xref:System.Windows.Forms.Application> class has static members to obtain certain paths, such as <xref:System.Windows.Forms.Application.StartupPath%2A>, <xref:System.Windows.Forms.Application.ExecutablePath%2A>, <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A>, and <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>.</span></span><br /><br /> <span data-ttu-id="e1686-121"><xref:System.IO.Path?displayProperty=nameWithType> の <xref:System.IO.Path.GetTempPath%2A> メソッドは、一時フォルダーのパスを返します。</span><span class="sxs-lookup"><span data-stu-id="e1686-121">The <xref:System.IO.Path.GetTempPath%2A> method of the <xref:System.IO.Path?displayProperty=nameWithType> returns the path of the temporary folder.</span></span><br /><br /> <span data-ttu-id="e1686-122"><xref:System.IO.Directory?displayProperty=nameWithType> クラスの <xref:System.IO.Directory.GetCurrentDirectory%2A> メソッドは、アプリケーションの現在実行中のディレクトリを返します。</span><span class="sxs-lookup"><span data-stu-id="e1686-122">The <xref:System.IO.Directory.GetCurrentDirectory%2A> method of the <xref:System.IO.Directory?displayProperty=nameWithType> class returns the application's current executing directory.</span></span><br /><br /> <span data-ttu-id="e1686-123"><xref:System.IO.DriveInfo> クラスの <xref:System.IO.DriveInfo.RootDirectory%2A> プロパティは、指定されたドライブのルートディレクトリを表します。</span><span class="sxs-lookup"><span data-stu-id="e1686-123">The <xref:System.IO.DriveInfo.RootDirectory%2A> property of the <xref:System.IO.DriveInfo> class represents the specified drive's root directory.</span></span>|  
|<span data-ttu-id="e1686-124">アプリケーション設定として格納されるパス</span><span class="sxs-lookup"><span data-stu-id="e1686-124">Paths stored as application settings</span></span>|<span data-ttu-id="e1686-125"><xref:System.Configuration.ApplicationSettingsBase>から派生したラッパークラスの対応するアプリケーション設定プロパティにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="e1686-125">Access the corresponding applications settings property of the wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="e1686-126">詳細については、「 [Windows フォームのアプリケーション設定](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e1686-126">For more information, see [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).</span></span>|  
|<span data-ttu-id="e1686-127">レジストリストレージ</span><span class="sxs-lookup"><span data-stu-id="e1686-127">Registry storage</span></span>|<span data-ttu-id="e1686-128">一部のアプリケーションでは、ディレクトリ情報がレジストリに格納されます。</span><span class="sxs-lookup"><span data-stu-id="e1686-128">Some applications store directory information in the registry.</span></span> <span data-ttu-id="e1686-129"><xref:System.Windows.Forms.Application> クラスには、<xref:Microsoft.Win32.RegistryKey> 値に解決される <xref:System.Windows.Forms.Application.CommonAppDataPath%2A> と <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A> のプロパティがあります。</span><span class="sxs-lookup"><span data-stu-id="e1686-129">The <xref:System.Windows.Forms.Application> class has the <xref:System.Windows.Forms.Application.CommonAppDataPath%2A> and <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A> properties that resolve to a <xref:Microsoft.Win32.RegistryKey> value.</span></span>|  
|<span data-ttu-id="e1686-130">ClickOnce アプリケーション</span><span class="sxs-lookup"><span data-stu-id="e1686-130">ClickOnce applications</span></span>|<span data-ttu-id="e1686-131">ClickOnce アプリケーションの場合は、ClickOnce データディレクトリへのポインターを返す <xref:System.Windows.Forms.Application.UserAppDataPath%2A>などの <xref:System.Windows.Forms.Application> クラスメンバーを使用します。</span><span class="sxs-lookup"><span data-stu-id="e1686-131">For ClickOnce applications, use <xref:System.Windows.Forms.Application> class members such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A>, which will return a pointer to the ClickOnce data directory.</span></span> <span data-ttu-id="e1686-132">詳細については、[ローカルへのアクセスとリモート データには、ClickOnce アプリケーション](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e1686-132">For more information, see [Accessing Local and Remote Data in ClickOnce Applications](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).</span></span>|  
|<span data-ttu-id="e1686-133">国際対応アプリケーション</span><span class="sxs-lookup"><span data-stu-id="e1686-133">International applications</span></span>|<span data-ttu-id="e1686-134">国際対応アプリケーションの場合は、<xref:System.Resources.ResourceReader?displayProperty=nameWithType> クラスを使用して、アプリケーションの文字列リソースから相対パス部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="e1686-134">For international applications, retrieve the relative path portion from a string resource in your application by using the <xref:System.Resources.ResourceReader?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="e1686-135">グローバリゼーションとローカリゼーションの詳細については、「[グローバリゼーションとローカリゼーション](~/docs/standard/globalization-localization/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e1686-135">For more information about globalization and localization, see the topic [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</span></span>|  
  
 <span data-ttu-id="e1686-136">説明されている方法の1つ以上を使用して完全なパスを構築できることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="e1686-136">Notice that a full path may be built up using one or more of the described techniques.</span></span> <span data-ttu-id="e1686-137">たとえば、<xref:System.Environment.GetFolderPath%2A> メソッドを使用してマイドキュメント フォルダーへのパスを取得した後、アプリケーション設定を使用して、相対サブディレクトリ部分を追加することができます。</span><span class="sxs-lookup"><span data-stu-id="e1686-137">For example, the <xref:System.Environment.GetFolderPath%2A> method might be used to obtain the path to the MyDocuments folder, then an application setting may be used to add a relative subdirectory portion.</span></span>  
  
 <span data-ttu-id="e1686-138"><xref:System.IO.Path?displayProperty=nameWithType> クラスには、絶対パス文字列と相対パス文字列の操作を支援する静的メンバーが含まれています。一方、<xref:System.IO.File?displayProperty=nameWithType> クラスと <xref:System.IO.Directory?displayProperty=nameWithType> クラスには、ファイルとディレクトリを実際に操作する静的メンバーがあります。</span><span class="sxs-lookup"><span data-stu-id="e1686-138">The <xref:System.IO.Path?displayProperty=nameWithType> class contains static members to assist in manipulating absolute and relative path strings, whereas the <xref:System.IO.File?displayProperty=nameWithType> and <xref:System.IO.Directory?displayProperty=nameWithType> classes have static members that actually manipulate files and directories, respectively.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e1686-139">アプリケーションのユーザーが <xref:System.Windows.Forms.FileDialog>のフォルダーを変更した場合、アプリケーションの現在の作業ディレクトリは、<xref:System.Windows.Forms.FileDialog>で指定された場所に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e1686-139">If the user of your application changes the folder in the <xref:System.Windows.Forms.FileDialog>, then the current working directory for your application is set to the location specified in the <xref:System.Windows.Forms.FileDialog>.</span></span> <span data-ttu-id="e1686-140">これを回避するには、<xref:System.Windows.Forms.FileDialog.RestoreDirectory%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-140">To prevent this, set the <xref:System.Windows.Forms.FileDialog.RestoreDirectory%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1686-141">次のコード例では、<xref:System.Windows.Forms.FileDialog> の <xref:System.Windows.Forms.OpenFileDialog> 実装を使用し、プロパティの作成、設定、およびダイアログボックスの表示について説明します。</span><span class="sxs-lookup"><span data-stu-id="e1686-141">The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box.</span></span> <span data-ttu-id="e1686-142">この例では、<xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> メソッドを使用してダイアログボックスを表示し、<xref:System.Windows.Forms.DialogResult>を返します。</span><span class="sxs-lookup"><span data-stu-id="e1686-142">The example uses the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> method to display the dialog box and return the <xref:System.Windows.Forms.DialogResult>.</span></span> <span data-ttu-id="e1686-143">この例では、フォームに <xref:System.Windows.Forms.Button> が配置され、<xref:System.IO> 名前空間が追加されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1686-143">The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.CommonDialog" />
    <altmember cref="T:System.Windows.Forms.OpenFileDialog" />
    <altmember cref="T:System.Windows.Forms.SaveFileDialog" />
    <altmember cref="T:System.Windows.Forms.FolderBrowserDialog" />
    <altmember cref="T:System.IO.Path" />
    <altmember cref="T:System.IO.File" />
    <altmember cref="T:System.IO.Directory" />
    <altmember cref="T:System.Environment" />
    <altmember cref="T:System.Windows.Forms.Application" />
    <altmember cref="T:Microsoft.Win32.Registry" />
    <altmember cref="T:System.Resources.ResourceReader" />
  </Docs>
  <Members>
    <Member MemberName="AddExtension">
      <MemberSignature Language="C#" Value="public bool AddExtension { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AddExtension" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FileDialog.AddExtension" />
      <MemberSignature Language="VB.NET" Value="Public Property AddExtension As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AddExtension { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AddExtension : bool with get, set" Usage="System.Windows.Forms.FileDialog.AddExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-144">ユーザーが拡張子を指定しない場合、ダイアログ ボックスがファイル名に自動的に拡張子を付けるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-144">Gets or sets a value indicating whether the dialog box automatically adds an extension to a file name if the user omits the extension.</span></span></summary>
        <value><span data-ttu-id="e1686-145">ユーザーが拡張子を指定しない場合、ダイアログ ボックスがファイル名に拡張子を付ける場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1686-145"><see langword="true" /> if the dialog box adds an extension to a file name if the user omits the extension; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e1686-146">既定値は <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="e1686-146">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1686-147">ファイル名に追加される拡張子は、現在選択されているファイルフィルターと <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> プロパティの値によって異なります。</span><span class="sxs-lookup"><span data-stu-id="e1686-147">The extension added to a file name depends on the currently selected file filter and the value of the <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> property.</span></span>  
  
 <span data-ttu-id="e1686-148"><xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> プロパティが `true`の場合、ダイアログボックスには、既存のファイルに一致する現在のファイルフィルターの最初の拡張機能が追加されます。</span><span class="sxs-lookup"><span data-stu-id="e1686-148">If the <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> property is `true`, the dialog box adds the first extension from the current file filter that matches an existing file.</span></span> <span data-ttu-id="e1686-149">現在のファイルフィルターに一致するファイルがない場合、ダイアログボックスには、<xref:System.Windows.Forms.FileDialog.DefaultExt%2A> プロパティで指定された拡張機能が追加されます。</span><span class="sxs-lookup"><span data-stu-id="e1686-149">If no files match the current file filter, the dialog box adds the extension specified in the <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> property.</span></span>  
  
 <span data-ttu-id="e1686-150"><xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> プロパティが `false`場合、ダイアログボックスでは、現在のファイルフィルターから有効な最初のファイル名拡張子が追加されます。</span><span class="sxs-lookup"><span data-stu-id="e1686-150">If the <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> property is `false`, the dialog box adds the first valid file name extension from the current file filter.</span></span> <span data-ttu-id="e1686-151">現在のファイルフィルターに有効なファイル名拡張子が含まれていない場合は、[<xref:System.Windows.Forms.FileDialog.DefaultExt%2A>] プロパティで指定した拡張子がダイアログボックスに追加されます。</span><span class="sxs-lookup"><span data-stu-id="e1686-151">If the current file filter contains no valid file name extensions, the dialog box adds the extension specified in the <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="e1686-152">ユーザーが拡張機能を省略した場合は、追加します。</span><span class="sxs-lookup"><span data-stu-id="e1686-152">for adding an extension if the user omits it.</span></span> <span data-ttu-id="e1686-153"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="e1686-153">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="P:System.Windows.Forms.FileDialog.Filter" />
        <altmember cref="P:System.Windows.Forms.FileDialog.FilterIndex" />
      </Docs>
    </Member>
    <Member MemberName="AutoUpgradeEnabled">
      <MemberSignature Language="C#" Value="public bool AutoUpgradeEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoUpgradeEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FileDialog.AutoUpgradeEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoUpgradeEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoUpgradeEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoUpgradeEnabled : bool with get, set" Usage="System.Windows.Forms.FileDialog.AutoUpgradeEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-154">この <see cref="T:System.Windows.Forms.FileDialog" /> インスタンスを [!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)] で実行する場合に、外観と動作を自動的にアップグレードするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-154">Gets or sets a value indicating whether this <see cref="T:System.Windows.Forms.FileDialog" /> instance should automatically upgrade appearance and behavior when running on [!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)].</span></span></summary>
        <value><span data-ttu-id="e1686-155">この <see langword="true" /> インスタンスを <see cref="T:System.Windows.Forms.FileDialog" /> で実行する場合に、外観と動作を自動的にアップグレードする場合は [!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)]。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1686-155"><see langword="true" /> if this <see cref="T:System.Windows.Forms.FileDialog" /> instance should automatically upgrade appearance and behavior when running on [!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)]; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e1686-156">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="e1686-156">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1686-157">このプロパティが `false`場合、<xref:System.Windows.Forms.FileDialog> クラスは [!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)]で [!INCLUDE[winxp](~/includes/winxp-md.md)]スタイルの外観と動作を持ちます。</span><span class="sxs-lookup"><span data-stu-id="e1686-157">If this property is `false`, the <xref:System.Windows.Forms.FileDialog> class will have a [!INCLUDE[winxp](~/includes/winxp-md.md)]-style appearance and behavior on [!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)].</span></span>  
  
 <span data-ttu-id="e1686-158">[!INCLUDE[winxp](~/includes/winxp-md.md)]では、このプロパティは何の効果もありません。</span><span class="sxs-lookup"><span data-stu-id="e1686-158">On [!INCLUDE[winxp](~/includes/winxp-md.md)], this property does not have any effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckFileExists">
      <MemberSignature Language="C#" Value="public virtual bool CheckFileExists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckFileExists" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FileDialog.CheckFileExists" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CheckFileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckFileExists { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckFileExists : bool with get, set" Usage="System.Windows.Forms.FileDialog.CheckFileExists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-159">存在しないファイルの名前をユーザーが指定した場合に、ダイアログ ボックスが警告を表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-159">Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.</span></span></summary>
        <value><span data-ttu-id="e1686-160">存在しないファイル名をユーザーが指定したときに、ダイアログ ボックスが警告を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1686-160"><see langword="true" /> if the dialog box displays a warning if the user specifies a file name that does not exist; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e1686-161">既定値は <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="e1686-161">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1686-162">既定値は、継承 <xref:System.Windows.Forms.OpenFileDialog> の場合は `true`、継承 <xref:System.Windows.Forms.SaveFileDialog>の場合は `false` です。</span><span class="sxs-lookup"><span data-stu-id="e1686-162">The default value is `true` for an inheriting <xref:System.Windows.Forms.OpenFileDialog> and `false` for an inheriting <xref:System.Windows.Forms.SaveFileDialog>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="e1686-163">ファイルが既に存在する場合に警告を表示します。</span><span class="sxs-lookup"><span data-stu-id="e1686-163">to display a warning if the file already exists.</span></span> <span data-ttu-id="e1686-164"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="e1686-164">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="P:System.Windows.Forms.FileDialog.CheckPathExists" />
      </Docs>
    </Member>
    <Member MemberName="CheckPathExists">
      <MemberSignature Language="C#" Value="public bool CheckPathExists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckPathExists" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FileDialog.CheckPathExists" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckPathExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckPathExists { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckPathExists : bool with get, set" Usage="System.Windows.Forms.FileDialog.CheckPathExists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-165">存在しないパスをユーザーが指定したときに、ダイアログ ボックスに警告を表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-165">Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a path that does not exist.</span></span></summary>
        <value><span data-ttu-id="e1686-166">存在しないパスをユーザーが指定したときに、ダイアログ ボックスに警告が表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1686-166"><see langword="true" /> if the dialog box displays a warning when the user specifies a path that does not exist; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e1686-167">既定値は <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="e1686-167">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="e1686-168">既に存在するパスをユーザーが指定した場合に警告を表示します。</span><span class="sxs-lookup"><span data-stu-id="e1686-168">to display a warning if the user specifies a path that already exists.</span></span> <span data-ttu-id="e1686-169"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="e1686-169">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="P:System.Windows.Forms.FileDialog.CheckFileExists" />
      </Docs>
    </Member>
    <Member MemberName="CustomPlaces">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FileDialogCustomPlacesCollection CustomPlaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.FileDialogCustomPlacesCollection CustomPlaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FileDialog.CustomPlaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomPlaces As FileDialogCustomPlacesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FileDialogCustomPlacesCollection ^ CustomPlaces { System::Windows::Forms::FileDialogCustomPlacesCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomPlaces : System.Windows.Forms.FileDialogCustomPlacesCollection" Usage="System.Windows.Forms.FileDialog.CustomPlaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FileDialogCustomPlacesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-170">この <see cref="T:System.Windows.Forms.FileDialog" /> インスタンスに対するカスタム プレイスのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="e1686-170">Gets the custom places collection for this <see cref="T:System.Windows.Forms.FileDialog" /> instance.</span></span></summary>
        <value><span data-ttu-id="e1686-171">この <see cref="T:System.Windows.Forms.FileDialog" /> インスタンスに対するカスタム プレイスのコレクション。</span><span class="sxs-lookup"><span data-stu-id="e1686-171">The custom places collection for this <see cref="T:System.Windows.Forms.FileDialog" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1686-172">[!INCLUDE[winxp](~/includes/winxp-md.md)]では、このプロパティは何の効果もありません。</span><span class="sxs-lookup"><span data-stu-id="e1686-172">On [!INCLUDE[winxp](~/includes/winxp-md.md)], this property does not have any effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1686-173">次のコード例は、<xref:System.Windows.Forms.FileDialog.CustomPlaces%2A> コレクションの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e1686-173">The following code example demonstrates how to use the <xref:System.Windows.Forms.FileDialog.CustomPlaces%2A> collection.</span></span> <span data-ttu-id="e1686-174">この例を実行するには、次のコードを Windows フォームに貼り付け、フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベント処理メソッドから `InitializeDialogAndButton` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e1686-174">To run this example, paste the following code into a Windows Form and call `InitializeDialogAndButton` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.FileDialogCommonPlaces#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FileDialogCommonPlaces/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.FileDialogCommonPlaces#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FileDialogCommonPlaces/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultExt">
      <MemberSignature Language="C#" Value="public string DefaultExt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultExt" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FileDialog.DefaultExt" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultExt As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultExt { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultExt : string with get, set" Usage="System.Windows.Forms.FileDialog.DefaultExt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-175">既定のファイル名の拡張子を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-175">Gets or sets the default file name extension.</span></span></summary>
        <value><span data-ttu-id="e1686-176">既定のファイル名の拡張子です。</span><span class="sxs-lookup"><span data-stu-id="e1686-176">The default file name extension.</span></span> <span data-ttu-id="e1686-177">返される文字列にはピリオドが含まれません。</span><span class="sxs-lookup"><span data-stu-id="e1686-177">The returned string does not include the period.</span></span> <span data-ttu-id="e1686-178">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="e1686-178">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1686-179">アプリケーションのユーザーが拡張子のないファイル名を指定すると、<xref:System.Windows.Forms.FileDialog> によってファイル名に拡張子が追加されます。</span><span class="sxs-lookup"><span data-stu-id="e1686-179">When the user of your application specifies a file name without an extension, the <xref:System.Windows.Forms.FileDialog> appends an extension to the file name.</span></span> <span data-ttu-id="e1686-180">使用される拡張機能は、<xref:System.Windows.Forms.FileDialog.Filter%2A> プロパティと <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> プロパティによって決まります。</span><span class="sxs-lookup"><span data-stu-id="e1686-180">The extension that is used is determined by the <xref:System.Windows.Forms.FileDialog.Filter%2A> and <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> properties.</span></span> <span data-ttu-id="e1686-181"><xref:System.Windows.Forms.FileDialog> でフィルターが選択されていて、フィルターによって拡張機能が指定されている場合は、その拡張機能が使用されます。</span><span class="sxs-lookup"><span data-stu-id="e1686-181">If a filter is selected in the <xref:System.Windows.Forms.FileDialog> and the filter specifies an extension, then that extension is used.</span></span> <span data-ttu-id="e1686-182">選択したフィルターが拡張機能の代わりにワイルドカードを使用している場合は、<xref:System.Windows.Forms.FileDialog.DefaultExt%2A> プロパティで指定された拡張機能が使用されます。</span><span class="sxs-lookup"><span data-stu-id="e1686-182">If the filter selected uses a wildcard in place of the extension, then the extension specified in the <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> property is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1686-183">次のコード例では、ストリームで <xref:System.Windows.Forms.RichTextBox.SaveFile%2A?displayProperty=nameWithType> および <xref:System.Windows.Forms.RichTextBox.LoadFile%2A?displayProperty=nameWithType> メソッドを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e1686-183">The following code example demonstrates using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.RichTextBox.LoadFile%2A?displayProperty=nameWithType> methods with streams.</span></span> <span data-ttu-id="e1686-184">また、<xref:System.Windows.Forms.FileDialog.FileName%2A>、<xref:System.Windows.Forms.FileDialog.DefaultExt%2A>、<xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A?displayProperty=nameWithType>、および <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A?displayProperty=nameWithType> のメンバーの使用方法も示します。</span><span class="sxs-lookup"><span data-stu-id="e1686-184">It also demonstrates using the <xref:System.Windows.Forms.FileDialog.FileName%2A>, <xref:System.Windows.Forms.FileDialog.DefaultExt%2A>, <xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A?displayProperty=nameWithType>, and <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A?displayProperty=nameWithType> members.</span></span>  
  
 <span data-ttu-id="e1686-185">これは、プロジェクトにコピーするときに実行する準備が整った完全な例です。</span><span class="sxs-lookup"><span data-stu-id="e1686-185">This is a complete example that is ready to run when you copy it to your project.</span></span>  
  
 [!code-cpp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DereferenceLinks">
      <MemberSignature Language="C#" Value="public bool DereferenceLinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DereferenceLinks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FileDialog.DereferenceLinks" />
      <MemberSignature Language="VB.NET" Value="Public Property DereferenceLinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DereferenceLinks { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DereferenceLinks : bool with get, set" Usage="System.Windows.Forms.FileDialog.DereferenceLinks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-186">ダイアログ ボックスが、ショートカットで参照されたファイルの場所を返すかどうか、またはショートカットの場所 (.lnk) を返すかどうかを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-186">Gets or sets a value indicating whether the dialog box returns the location of the file referenced by the shortcut or whether it returns the location of the shortcut (.lnk).</span></span></summary>
        <value><span data-ttu-id="e1686-187">ダイアログ ボックスがショートカットで参照されたファイルの場所を返す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1686-187"><see langword="true" /> if the dialog box returns the location of the file referenced by the shortcut; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e1686-188">既定値は <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="e1686-188">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="e1686-189">プロパティを設定する場合は。</span><span class="sxs-lookup"><span data-stu-id="e1686-189">to set the property.</span></span> <span data-ttu-id="e1686-190"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="e1686-190">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="EventFileOk">
      <MemberSignature Language="C#" Value="protected static readonly object EventFileOk;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly object EventFileOk" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.FileDialog.EventFileOk" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly EventFileOk As Object " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Object ^ EventFileOk;" />
      <MemberSignature Language="F#" Value=" staticval mutable EventFileOk : obj" Usage="System.Windows.Forms.FileDialog.EventFileOk" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-191"><see cref="E:System.Windows.Forms.FileDialog.FileOk" /> イベントを所有しています。</span><span class="sxs-lookup"><span data-stu-id="e1686-191">Owns the <see cref="E:System.Windows.Forms.FileDialog.FileOk" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FileDialog.FileName" />
      <MemberSignature Language="VB.NET" Value="Public Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string with get, set" Usage="System.Windows.Forms.FileDialog.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-192">ファイル ダイアログ ボックスで選択されたファイル名を含む文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-192">Gets or sets a string containing the file name selected in the file dialog box.</span></span></summary>
        <value><span data-ttu-id="e1686-193">ファイル ダイアログ ボックスで選択されたファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="e1686-193">The file name selected in the file dialog box.</span></span> <span data-ttu-id="e1686-194">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="e1686-194">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1686-195">ファイル名には、ファイルパスと拡張子の両方が含まれます。</span><span class="sxs-lookup"><span data-stu-id="e1686-195">The file name includes both the file path and the extension.</span></span> <span data-ttu-id="e1686-196">ファイルが選択されていない場合、このメソッドは空の文字列 ("") を返します。</span><span class="sxs-lookup"><span data-stu-id="e1686-196">If no files are selected, this method returns an empty string ("").</span></span>  
  
 <span data-ttu-id="e1686-197"><xref:System.Windows.Forms.SaveFileDialog> クラスから使用する場合、このプロパティは保存されているファイルを表します。<xref:System.Windows.Forms.OpenFileDialog> クラスから使用する場合は、開いているファイルを表します。</span><span class="sxs-lookup"><span data-stu-id="e1686-197">When used from the <xref:System.Windows.Forms.SaveFileDialog> class, this property represents the file being saved; when used from the <xref:System.Windows.Forms.OpenFileDialog> class, it represents the file being opened.</span></span>  
  
 <span data-ttu-id="e1686-198">このプロパティには、選択したファイルの名前のみを指定できます。</span><span class="sxs-lookup"><span data-stu-id="e1686-198">This property can only be the name of one selected file.</span></span> <span data-ttu-id="e1686-199">複数選択のダイアログボックスで選択したすべてのファイルの名前を含む配列を取得する場合は、<xref:System.Windows.Forms.FileDialog.FileNames%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e1686-199">If you want to return an array containing the names of all selected files in a multiple-selection dialog box, use <xref:System.Windows.Forms.FileDialog.FileNames%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1686-200">次のコード例では、ストリームで <xref:System.Windows.Forms.RichTextBox.SaveFile%2A?displayProperty=nameWithType> および <xref:System.Windows.Forms.RichTextBox.LoadFile%2A?displayProperty=nameWithType> メソッドを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e1686-200">The following code example demonstrates using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.RichTextBox.LoadFile%2A?displayProperty=nameWithType> methods with streams.</span></span> <span data-ttu-id="e1686-201">また、<xref:System.Windows.Forms.FileDialog.FileName%2A>、<xref:System.Windows.Forms.FileDialog.DefaultExt%2A>、<xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A?displayProperty=nameWithType>、および <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A?displayProperty=nameWithType> のメンバーの使用方法も示します。</span><span class="sxs-lookup"><span data-stu-id="e1686-201">It also demonstrates using the <xref:System.Windows.Forms.FileDialog.FileName%2A>, <xref:System.Windows.Forms.FileDialog.DefaultExt%2A>, <xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A?displayProperty=nameWithType>, and <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A?displayProperty=nameWithType> members.</span></span>  
  
 <span data-ttu-id="e1686-202">これは、プロジェクトにコピーするときに実行する準備が整った完全な例です。</span><span class="sxs-lookup"><span data-stu-id="e1686-202">This is a complete example that is ready to run when you copy it to your project.</span></span>  
  
 [!code-cpp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="e1686-203">ファイル名を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-203">to get or set the file name.</span></span> <span data-ttu-id="e1686-204"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="e1686-204">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="P:System.Windows.Forms.FileDialog.FileNames" />
        <altmember cref="T:System.Windows.Forms.SaveFileDialog" />
        <altmember cref="T:System.Windows.Forms.OpenFileDialog" />
      </Docs>
    </Member>
    <Member MemberName="FileNames">
      <MemberSignature Language="C#" Value="public string[] FileNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] FileNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FileDialog.FileNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ FileNames { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileNames : string[]" Usage="System.Windows.Forms.FileDialog.FileNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-205">ダイアログ ボックスで選択されたすべてのファイルの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="e1686-205">Gets the file names of all selected files in the dialog box.</span></span></summary>
        <value><span data-ttu-id="e1686-206">ダイアログ ボックスで選択されたすべてのファイルの名前を含む <see cref="T:System.String" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="e1686-206">An array of type <see cref="T:System.String" />, containing the file names of all selected files in the dialog box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1686-207">各ファイル名には、ファイルパスと拡張子の両方が含まれます。</span><span class="sxs-lookup"><span data-stu-id="e1686-207">Each file name includes both the file path and the extension.</span></span> <span data-ttu-id="e1686-208">ファイルが選択されていない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="e1686-208">If no files are selected, this method returns an empty array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1686-209">次のコード例では、ユーザーが複数のイメージを選択して、フォーム上の <xref:System.Windows.Forms.PictureBox> コントロールに表示できます。</span><span class="sxs-lookup"><span data-stu-id="e1686-209">The following code example allows the user to select a number of images and display them in <xref:System.Windows.Forms.PictureBox> controls on a Form.</span></span> <span data-ttu-id="e1686-210"><xref:System.Windows.Forms.OpenFileDialog>の初期化、<xref:System.Windows.Forms.FileDialog.Title%2A> と <xref:System.Windows.Forms.FileDialog.Filter%2A> プロパティの設定、<xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> プロパティを true に設定してユーザーが複数のファイルを選択できるようにする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e1686-210">It demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the <xref:System.Windows.Forms.FileDialog.Title%2A> and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> property to true.</span></span> <span data-ttu-id="e1686-211">このコード例では、フォームに `openFileDialog1`という名前の <xref:System.Windows.Forms.OpenFileDialog> コントロール、`SelectFileButton`という名前の <xref:System.Windows.Forms.Button>、および <xref:System.Windows.Forms.FlowLayoutPanel> という名前の `flowLayoutPanel1`が既に存在することを前提としています。</span><span class="sxs-lookup"><span data-stu-id="e1686-211">This code example assumes that your form already has an <xref:System.Windows.Forms.OpenFileDialog> control named `openFileDialog1`, a <xref:System.Windows.Forms.Button> named `SelectFileButton`, and a <xref:System.Windows.Forms.FlowLayoutPanel> named `flowLayoutPanel1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="e1686-212">ファイル名を取得します。</span><span class="sxs-lookup"><span data-stu-id="e1686-212">to get the file names.</span></span> <span data-ttu-id="e1686-213"><see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="e1686-213">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" />.</span></span></permission>
        <altmember cref="P:System.Windows.Forms.FileDialog.FileName" />
      </Docs>
    </Member>
    <Member MemberName="FileOk">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler FileOk;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler FileOk" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.FileDialog.FileOk" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FileOk As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ FileOk;" />
      <MemberSignature Language="F#" Value="member this.FileOk : System.ComponentModel.CancelEventHandler " Usage="member this.FileOk : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-214">ファイル ダイアログ ボックスの **[開く]** ボタンまたは **[保存]** ボタンをユーザーがクリックすると発生します。</span><span class="sxs-lookup"><span data-stu-id="e1686-214">Occurs when the user clicks on the **Open** or **Save** button on a file dialog box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1686-215">イベントの処理の詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e1686-215">For information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1686-216">次のコード例では、<xref:System.Windows.Forms.FileDialog.FileNames%2A> プロパティを使用して、<xref:System.Windows.Forms.FileDialog.FileOk> イベントを処理し、<xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType> メソッドを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e1686-216">The following code example demonstrates using the <xref:System.Windows.Forms.FileDialog.FileNames%2A> property, handling the <xref:System.Windows.Forms.FileDialog.FileOk> event and using the <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="e1686-217">この例を実行すると、ユーザーは <xref:System.Windows.Forms.OpenFileDialog> オブジェクトからグラフィックスファイルを選択できます。</span><span class="sxs-lookup"><span data-stu-id="e1686-217">When the example runs, a user can select graphics files from an <xref:System.Windows.Forms.OpenFileDialog> object.</span></span> <span data-ttu-id="e1686-218">選択したファイルがフォームに表示されます。</span><span class="sxs-lookup"><span data-stu-id="e1686-218">The selected files are displayed in the form.</span></span> <span data-ttu-id="e1686-219"><xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType> メソッドは、開かれた各グラフィックスファイルに対してフォームを強制的に再描画します。</span><span class="sxs-lookup"><span data-stu-id="e1686-219">The <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType> method forces a repaint of the form for each graphics file opened.</span></span> <span data-ttu-id="e1686-220">この例を実行するには、`PictureBox1`という名前の <xref:System.Windows.Forms.PictureBox>、`OpenFileDialog1`という名前の <xref:System.Windows.Forms.OpenFileDialog>、および <xref:System.Windows.Forms.Button> という名前の `fileButton`を含むフォームに次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="e1686-220">To run this example paste the following code in a form containing a <xref:System.Windows.Forms.PictureBox> named `PictureBox1`, an <xref:System.Windows.Forms.OpenFileDialog> named `OpenFileDialog1`, and a <xref:System.Windows.Forms.Button> named `fileButton`.</span></span> <span data-ttu-id="e1686-221">フォームのコンストラクターまたは `Load` メソッドから `InitializePictureBox` および `InitializeOpenFileDialog` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e1686-221">Call the `InitializePictureBox` and `InitializeOpenFileDialog` methods from the form's constructor or `Load` method.</span></span> <span data-ttu-id="e1686-222">この例が実行されている場合は、ボタンをクリックしてダイアログボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="e1686-222">When the example is running, display the dialog box by clicking the button.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FileDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CPP/filedialogform.cpp#1)]
 [!code-csharp[System.Windows.Forms.FileDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CS/filedialogform.cs#1)]
 [!code-vb[System.Windows.Forms.FileDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/VB/filedialogform.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FileDialog.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string with get, set" Usage="System.Windows.Forms.FileDialog.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-223">ダイアログ ボックスの [保存先ファイルの種類] または [ファイルの種類] ボックスに表示される選択肢を決定する、現在のファイル名のフィルター文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-223">Gets or sets the current file name filter string, which determines the choices that appear in the "Save as file type" or "Files of type" box in the dialog box.</span></span></summary>
        <value><span data-ttu-id="e1686-224">ダイアログ ボックスで使用できるファイル フィルター処理オプション。</span><span class="sxs-lookup"><span data-stu-id="e1686-224">The file filtering options available in the dialog box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1686-225">フィルター処理の各オプションについて、フィルター文字列には、フィルターの説明と、その後&#124;に縦棒 () とフィルターパターンが含まれています。</span><span class="sxs-lookup"><span data-stu-id="e1686-225">For each filtering option, the filter string contains a description of the filter, followed by the vertical bar (&#124;) and the filter pattern.</span></span> <span data-ttu-id="e1686-226">異なるフィルター オプションの文字列は、縦棒で区切ります。</span><span class="sxs-lookup"><span data-stu-id="e1686-226">The strings for different filtering options are separated by the vertical bar.</span></span>  
  
 <span data-ttu-id="e1686-227">フィルター文字列の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="e1686-227">The following is an example of a filter string:</span></span>  
  
 `Text files (*.txt)|*.txt|All files (*.*)|*.*`  
  
 <span data-ttu-id="e1686-228">複数のフィルターパターンをフィルターに追加するには、ファイルの種類をセミコロンで区切ります。たとえば、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="e1686-228">You can add several filter patterns to a filter by separating the file types with semicolons, for example:</span></span>  
  
 `Image Files(*.BMP;*.JPG;*.GIF)|*.BMP;*.JPG;*.GIF|All files (*.*)|*.*`  
  
 <span data-ttu-id="e1686-229"><xref:System.Windows.Forms.FileDialog.FilterIndex%2A> プロパティを使用して、ユーザーに対して最初に表示されるフィルター処理オプションを設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-229">Use the <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> property to set which filtering option is shown first to the user.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1686-230">次のコード例では、<xref:System.Windows.Forms.FileDialog> の <xref:System.Windows.Forms.OpenFileDialog> 実装を使用し、プロパティの作成、設定、およびダイアログボックスの表示について説明します。</span><span class="sxs-lookup"><span data-stu-id="e1686-230">The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box.</span></span> <span data-ttu-id="e1686-231">この例では、<xref:System.Windows.Forms.FileDialog.Filter%2A> プロパティと <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> プロパティを使用して、ユーザーのフィルターの一覧を提供します。</span><span class="sxs-lookup"><span data-stu-id="e1686-231">The example uses the <xref:System.Windows.Forms.FileDialog.Filter%2A> and <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> properties to provide a list of filters for the user.</span></span> <span data-ttu-id="e1686-232">この例では、フォームに <xref:System.Windows.Forms.Button> が配置され、<xref:System.IO> 名前空間が追加されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1686-232">The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1686-233"><paramref name="Filter" /> の形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="e1686-233"><paramref name="Filter" /> format is invalid.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.FileDialog.CheckFileExists" />
        <altmember cref="P:System.Windows.Forms.FileDialog.FilterIndex" />
      </Docs>
    </Member>
    <Member MemberName="FilterIndex">
      <MemberSignature Language="C#" Value="public int FilterIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FilterIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FileDialog.FilterIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FilterIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.FilterIndex : int with get, set" Usage="System.Windows.Forms.FileDialog.FilterIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-234">ファイル ダイアログ ボックスで現在選択されているフィルターのインデックスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-234">Gets or sets the index of the filter currently selected in the file dialog box.</span></span></summary>
        <value><span data-ttu-id="e1686-235">ファイル ダイアログ ボックスで現在選択されているフィルターのインデックスを含む値。</span><span class="sxs-lookup"><span data-stu-id="e1686-235">A value containing the index of the filter currently selected in the file dialog box.</span></span> <span data-ttu-id="e1686-236">既定値は 1 です。</span><span class="sxs-lookup"><span data-stu-id="e1686-236">The default value is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1686-237"><xref:System.Windows.Forms.FileDialog.FilterIndex%2A> プロパティを使用して、ユーザーに対して最初に表示されるフィルター処理オプションを設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-237">Use the <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> property to set which filtering option is shown first to the user.</span></span> <span data-ttu-id="e1686-238">また、選択したフィルターに応じて特別なファイル操作を実行するためのファイルダイアログを表示した後に、<xref:System.Windows.Forms.FileDialog.FilterIndex%2A> の値を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="e1686-238">You can also use the value of <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> after showing the file dialog to perform special file operations depending upon the filter chosen.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e1686-239">最初のフィルターエントリのインデックス値は1です。</span><span class="sxs-lookup"><span data-stu-id="e1686-239">The index value of the first filter entry is 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1686-240">次のコード例では、<xref:System.Windows.Forms.FileDialog> の <xref:System.Windows.Forms.OpenFileDialog> 実装を使用し、プロパティの作成、設定、およびダイアログボックスの表示について説明します。</span><span class="sxs-lookup"><span data-stu-id="e1686-240">The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box.</span></span> <span data-ttu-id="e1686-241">この例では、<xref:System.Windows.Forms.FileDialog.Filter%2A> プロパティと <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> プロパティを使用して、ユーザーのフィルターの一覧を提供します。</span><span class="sxs-lookup"><span data-stu-id="e1686-241">The example uses the <xref:System.Windows.Forms.FileDialog.Filter%2A> and <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> properties to provide a list of filters for the user.</span></span> <span data-ttu-id="e1686-242">この例では、フォームに <xref:System.Windows.Forms.Button> が配置され、<xref:System.IO> 名前空間が追加されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1686-242">The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FileDialog.CheckFileExists" />
        <altmember cref="P:System.Windows.Forms.FileDialog.Filter" />
      </Docs>
    </Member>
    <Member MemberName="HookProc">
      <MemberSignature Language="C#" Value="protected override IntPtr HookProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance native int HookProc(native int hWnd, int32 msg, native int wparam, native int lparam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HookProc (hWnd As IntPtr, msg As Integer, wparam As IntPtr, lparam As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IntPtr HookProc(IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="F#" Value="override this.HookProc : nativeint * int * nativeint * nativeint -&gt; nativeint" Usage="fileDialog.HookProc (hWnd, msg, wparam, lparam)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWnd" Type="System.IntPtr" />
        <Parameter Name="msg" Type="System.Int32" />
        <Parameter Name="wparam" Type="System.IntPtr" />
        <Parameter Name="lparam" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWnd"><span data-ttu-id="e1686-243">ダイアログ ボックス ウィンドウを識別するハンドル。</span><span class="sxs-lookup"><span data-stu-id="e1686-243">The handle to the dialog box window.</span></span></param>
        <param name="msg"><span data-ttu-id="e1686-244">ダイアログ ボックスが受け取ったメッセージ。</span><span class="sxs-lookup"><span data-stu-id="e1686-244">The message received by the dialog box.</span></span></param>
        <param name="wparam"><span data-ttu-id="e1686-245">メッセージについての追加情報。</span><span class="sxs-lookup"><span data-stu-id="e1686-245">Additional information about the message.</span></span></param>
        <param name="lparam"><span data-ttu-id="e1686-246">メッセージについての追加情報。</span><span class="sxs-lookup"><span data-stu-id="e1686-246">Additional information about the message.</span></span></param>
        <summary><span data-ttu-id="e1686-247">ファイル ダイアログ ボックスに特定の機能を追加するためにオーバーライドされる、コモン ダイアログ ボックスのフック プロシージャを定義します。</span><span class="sxs-lookup"><span data-stu-id="e1686-247">Defines the common dialog box hook procedure that is overridden to add specific functionality to the file dialog box.</span></span></summary>
        <returns><span data-ttu-id="e1686-248">既定のダイアログ ボックス プロシージャがメッセージを処理する場合は 0 を返します。既定のダイアログ ボックス プロシージャがメッセージを無視する場合は 0 以外の値を返します。</span><span class="sxs-lookup"><span data-stu-id="e1686-248">Returns zero if the default dialog box procedure processes the message; returns a nonzero value if the default dialog box procedure ignores the message.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1686-249">フックプロシージャを使用すると、機能をデバッグまたは拡張するために、ルーチンまたはアプリケーションに他のルーチンを接続したり挿入したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="e1686-249">A hook procedure allows the user to connect or insert other routines into a routine or application for the purpose of debugging or enhancing functionality.</span></span>  
  
 <span data-ttu-id="e1686-250">既定では、フックプロシージャによって、WM_INITDIALOG メッセージに応答してダイアログボックスが画面上に中央揃えで表示されます。</span><span class="sxs-lookup"><span data-stu-id="e1686-250">By default, the hook procedure centers the dialog box on the screen in response to a WM_INITDIALOG message.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e1686-251">派生クラスで <see cref="M:System.Windows.Forms.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="e1686-251">When overriding <see cref="M:System.Windows.Forms.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="InitialDirectory">
      <MemberSignature Language="C#" Value="public string InitialDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InitialDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FileDialog.InitialDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InitialDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InitialDirectory : string with get, set" Usage="System.Windows.Forms.FileDialog.InitialDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-252">ファイル ダイアログ ボックスに表示される起動ディレクトリを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-252">Gets or sets the initial directory displayed by the file dialog box.</span></span></summary>
        <value><span data-ttu-id="e1686-253">ファイル ダイアログ ボックスに表示される起動ディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="e1686-253">The initial directory displayed by the file dialog box.</span></span> <span data-ttu-id="e1686-254">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="e1686-254">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1686-255"><xref:System.Windows.Forms.FileDialog.InitialDirectory%2A> プロパティは、通常、次のソースのいずれかを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="e1686-255">The <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A> property is typically set using one of the following sources:</span></span>  
  
-   <span data-ttu-id="e1686-256">以前にプログラムで使用されていたパス。最後のディレクトリまたはファイルの操作から保持されている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e1686-256">A path that was previously used in the program, perhaps retained from the last directory or file operation.</span></span>  
  
-   <span data-ttu-id="e1686-257">アプリケーション設定、<xref:Microsoft.Win32.Registry>、アプリケーションの文字列リソースなど、永続的なソースから読み取られたパス。</span><span class="sxs-lookup"><span data-stu-id="e1686-257">A path read from a persistent source, such as an application setting, a <xref:Microsoft.Win32.Registry> or a string resource in the application.</span></span>  
  
-   <span data-ttu-id="e1686-258">Windows の標準のシステムパスとユーザーパス (Program Files、マイドキュメント、MyMusic など) (<xref:System.Environment.GetFolderPath%2A> メソッドを使用して取得可能)</span><span class="sxs-lookup"><span data-stu-id="e1686-258">Standard Windows system and user paths, such as Program Files, MyDocuments, MyMusic, and so on (which you can obtain using the <xref:System.Environment.GetFolderPath%2A> method)</span></span>  
  
-   <span data-ttu-id="e1686-259">スタートアップディレクトリなど、現在のアプリケーションに関連するパス。これは、<xref:System.Windows.Forms.Application> オブジェクトのプロパティを使用して取得できます。</span><span class="sxs-lookup"><span data-stu-id="e1686-259">A path related to the current application, such as its startup directory (which you can obtain using properties on the <xref:System.Windows.Forms.Application> object).</span></span>  
  
 <span data-ttu-id="e1686-260">動的パスの作成の詳細については、「<xref:System.Windows.Forms.FileDialog> クラスの概要」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e1686-260">For more information about creating dynamic paths, see the <xref:System.Windows.Forms.FileDialog> class overview.</span></span>  
  
 <span data-ttu-id="e1686-261">[!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)]では、<xref:System.Windows.Forms.FileDialog.InitialDirectory%2A> がディレクトリパスだけではなく完全なファイル名に設定されている場合、最初のディレクトリは、アプリケーションパス、またはユーザーが最後にファイルを選択したディレクトリのいずれかに既定で設定されます。</span><span class="sxs-lookup"><span data-stu-id="e1686-261">On [!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)], if <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A> is set to a full file name instead of just a directory path, the initial directory will default either to the application path, or to the directory from which the user last selected a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1686-262">次のコード例では、<xref:System.Windows.Forms.FileDialog> の <xref:System.Windows.Forms.OpenFileDialog> 実装を使用し、プロパティの作成、設定、およびダイアログボックスの表示について説明します。</span><span class="sxs-lookup"><span data-stu-id="e1686-262">The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box.</span></span> <span data-ttu-id="e1686-263">この例では、<xref:System.Windows.Forms.FileDialog.InitialDirectory%2A> プロパティを使用して、ダイアログボックスがユーザーに表示されるときの初期ディレクトリを設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-263">The example uses the <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A> property to set what the initial directory is when the dialog box is displayed to the user.</span></span> <span data-ttu-id="e1686-264">この例では、フォームに <xref:System.Windows.Forms.Button> が配置され、<xref:System.IO> 名前空間が追加されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1686-264">The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="e1686-265">初期ディレクトリを設定するために必要です。</span><span class="sxs-lookup"><span data-stu-id="e1686-265">Required to set the initial directory.</span></span> <span data-ttu-id="e1686-266"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="e1686-266">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="P:System.Windows.Forms.FileDialog.RestoreDirectory" />
        <altmember cref="T:Microsoft.Win32.Registry" />
        <altmember cref="T:System.Windows.Forms.Application" />
        <altmember cref="T:System.Environment" />
        <altmember cref="T:System.IO.Path" />
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="protected virtual IntPtr Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Instance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FileDialog.Instance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Instance As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr Instance { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : nativeint" Usage="System.Windows.Forms.FileDialog.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-267">アプリケーションの Win32 インスタンス ハンドルを取得します。</span><span class="sxs-lookup"><span data-stu-id="e1686-267">Gets the Win32 instance handle for the application.</span></span></summary>
        <value><span data-ttu-id="e1686-268">アプリケーションの Win32 インスタンス ハンドル。</span><span class="sxs-lookup"><span data-stu-id="e1686-268">A Win32 instance handle for the application.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFileOk">
      <MemberSignature Language="C#" Value="protected void OnFileOk (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnFileOk(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnFileOk (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnFileOk(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnFileOk : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="fileDialog.OnFileOk e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e1686-269">イベント データを格納している <see cref="T:System.ComponentModel.CancelEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="e1686-269">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="e1686-270"><see cref="E:System.Windows.Forms.FileDialog.FileOk" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="e1686-270">Raises the <see cref="E:System.Windows.Forms.FileDialog.FileOk" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.FileDialog.FileOk" />
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="protected int Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Options" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FileDialog.Options" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Options As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int Options { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : int" Usage="System.Windows.Forms.FileDialog.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-271"><see cref="T:System.Windows.Forms.FileDialog" /> を初期化するための値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e1686-271">Gets values to initialize the <see cref="T:System.Windows.Forms.FileDialog" />.</span></span></summary>
        <value><span data-ttu-id="e1686-272"><see cref="T:System.Windows.Forms.FileDialog" /> を初期化する内部値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="e1686-272">A bitwise combination of internal values that initializes the <see cref="T:System.Windows.Forms.FileDialog" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1686-273"><xref:System.Windows.Forms.FileDialog.Options%2A> プロパティは、Win32 を使用してファイルダイアログボックスを初期化するために使用されるフラグに対応します。</span><span class="sxs-lookup"><span data-stu-id="e1686-273">The <xref:System.Windows.Forms.FileDialog.Options%2A> property corresponds to the flags used to initialize a file dialog box using Win32.</span></span> <span data-ttu-id="e1686-274"><xref:System.Windows.Forms.FileDialog> クラスのプロパティを使用して、オプションを取得および設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-274">Use the properties of the <xref:System.Windows.Forms.FileDialog> class to get and set the options.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FileDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="fileDialog.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1686-275">すべてのプロパティを既定値にリセットします。</span><span class="sxs-lookup"><span data-stu-id="e1686-275">Resets all properties to their default values.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e1686-276">派生クラスで <see cref="M:System.Windows.Forms.FileDialog.Reset" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Windows.Forms.CommonDialog.Reset" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="e1686-276">When overriding <see cref="M:System.Windows.Forms.FileDialog.Reset" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.CommonDialog.Reset" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RestoreDirectory">
      <MemberSignature Language="C#" Value="public bool RestoreDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RestoreDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FileDialog.RestoreDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property RestoreDirectory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RestoreDirectory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RestoreDirectory : bool with get, set" Usage="System.Windows.Forms.FileDialog.RestoreDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-277">ダイアログ ボックスを閉じる前に、ディレクトリを以前選択されていたディレクトリに復元するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-277">Gets or sets a value indicating whether the dialog box restores the directory to the previously selected directory before closing.</span></span></summary>
        <value><span data-ttu-id="e1686-278">ファイルの検索中にユーザーがディレクトリを変更したときに、ダイアログ ボックスが現在のディレクトリを以前選択されていたディレクトリに復元する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1686-278"><see langword="true" /> if the dialog box restores the current directory to the previously selected directory if the user changed the directory while searching for files; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e1686-279">既定値は <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="e1686-279">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e1686-280">次のコード例では、<xref:System.Windows.Forms.FileDialog> の <xref:System.Windows.Forms.OpenFileDialog> 実装を使用し、プロパティの作成、設定、およびダイアログボックスの表示について説明します。</span><span class="sxs-lookup"><span data-stu-id="e1686-280">The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box.</span></span> <span data-ttu-id="e1686-281">この例では、[<xref:System.Windows.Forms.FileDialog.RestoreDirectory%2A>] プロパティを使用して、ダイアログボックスを閉じたときに、以前に選択したディレクトリが復元されるようにします。</span><span class="sxs-lookup"><span data-stu-id="e1686-281">The example uses the <xref:System.Windows.Forms.FileDialog.RestoreDirectory%2A> property to ensure that the previously selected directory is restored when the dialog box is closed.</span></span> <span data-ttu-id="e1686-282">この例では、フォームに <xref:System.Windows.Forms.Button> が配置され、<xref:System.IO> 名前空間が追加されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1686-282">The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="e1686-283">プロパティを設定する場合は。</span><span class="sxs-lookup"><span data-stu-id="e1686-283">to set the property.</span></span> <span data-ttu-id="e1686-284"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="e1686-284">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="P:System.Windows.Forms.FileDialog.InitialDirectory" />
      </Docs>
    </Member>
    <Member MemberName="RunDialog">
      <MemberSignature Language="C#" Value="protected override bool RunDialog (IntPtr hWndOwner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool RunDialog(native int hWndOwner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FileDialog.RunDialog(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RunDialog (hWndOwner As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool RunDialog(IntPtr hWndOwner);" />
      <MemberSignature Language="F#" Value="override this.RunDialog : nativeint -&gt; bool" Usage="fileDialog.RunDialog hWndOwner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWndOwner" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWndOwner"><span data-ttu-id="e1686-285">コモン ダイアログ ボックスのオーナー ウィンドウのウィンドウ ハンドルを表す値。</span><span class="sxs-lookup"><span data-stu-id="e1686-285">A value that represents the window handle of the owner window for the common dialog box.</span></span></param>
        <summary><span data-ttu-id="e1686-286">コモン ダイアログ ボックスを指定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-286">Specifies a common dialog box.</span></span></summary>
        <returns><span data-ttu-id="e1686-287">ファイルを開くことができた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1686-287"><see langword="true" /> if the file could be opened; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1686-288">このメソッドは、<xref:System.Windows.Forms.CommonDialog.RunDialog%2A>の実装を提供し、ファイルダイアログのユーザーが <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>を呼び出すと呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e1686-288">This method provides an implementation of <xref:System.Windows.Forms.CommonDialog.RunDialog%2A>, and is invoked when the user of a file dialog invokes <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="e1686-289">派生クラスで <xref:System.Windows.Forms.OpenFileDialog> および <xref:System.Windows.Forms.SaveFileDialog> 無効なファイル名 <xref:System.Exception> 発生させることができます。</span><span class="sxs-lookup"><span data-stu-id="e1686-289">In the derived classes <xref:System.Windows.Forms.OpenFileDialog> and <xref:System.Windows.Forms.SaveFileDialog> an invalid file name <xref:System.Exception> can be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowHelp">
      <MemberSignature Language="C#" Value="public bool ShowHelp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHelp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FileDialog.ShowHelp" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowHelp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowHelp { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowHelp : bool with get, set" Usage="System.Windows.Forms.FileDialog.ShowHelp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-290">ファイル ダイアログ ボックスに **[ヘルプ]** ボタンを表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-290">Gets or sets a value indicating whether the **Help** button is displayed in the file dialog box.</span></span></summary>
        <value><span data-ttu-id="e1686-291">ダイアログ ボックスにヘルプ ボタンを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1686-291"><see langword="true" /> if the dialog box includes a help button; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e1686-292">既定値は <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="e1686-292">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1686-293"><xref:System.Windows.Forms.Control.HelpRequested> イベントは、ユーザーが **[ヘルプ]** ボタンをクリックしたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="e1686-293">A <xref:System.Windows.Forms.Control.HelpRequested> event is raised when the user clicks the **Help** button.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportMultiDottedExtensions">
      <MemberSignature Language="C#" Value="public bool SupportMultiDottedExtensions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportMultiDottedExtensions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FileDialog.SupportMultiDottedExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportMultiDottedExtensions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportMultiDottedExtensions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SupportMultiDottedExtensions : bool with get, set" Usage="System.Windows.Forms.FileDialog.SupportMultiDottedExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-294">複数のファイル名拡張子を持つファイルの表示および保存をダイアログ ボックスがサポートするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-294">Gets or sets whether the dialog box supports displaying and saving files that have multiple file name extensions.</span></span></summary>
        <value><span data-ttu-id="e1686-295">ダイアログ ボックスが複数のファイル名拡張子をサポートする場合は <see langword="true" />、サポートしない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1686-295"><see langword="true" /> if the dialog box supports multiple file name extensions; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e1686-296">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="e1686-296">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1686-297">場合によっては、複数のファイル名拡張子を使用するファイルを開いて保存する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1686-297">Sometimes users must open and save files that use multiple file name extensions.</span></span> <span data-ttu-id="e1686-298">たとえば、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 配置テクノロジによって使用されるアプリケーションマニフェストファイルは、複合ファイル名拡張子 ".exe. manifest" で終了します。</span><span class="sxs-lookup"><span data-stu-id="e1686-298">For example, the application manifest files used by the [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] deployment technology end in the complex file name extension ".exe.manifest".</span></span> <span data-ttu-id="e1686-299">このプロパティを `true` に設定すると、<xref:System.Windows.Forms.FileDialog.Filter%2A> プロパティを複数のドットで区切った拡張機能に設定できます。</span><span class="sxs-lookup"><span data-stu-id="e1686-299">Setting this property to `true` enables you to set the <xref:System.Windows.Forms.FileDialog.Filter%2A> property to a multi-dotted extension.</span></span>  
  
 <span data-ttu-id="e1686-300"><xref:System.Windows.Forms.FileDialog.SupportMultiDottedExtensions%2A> が `false`で、複数の点線の拡張を <xref:System.Windows.Forms.FileDialog.Filter%2A>に割り当てた場合、<xref:System.Windows.Forms.SaveFileDialog> などの派生コントロールは、文字列の最後の拡張機能のみを使用します。</span><span class="sxs-lookup"><span data-stu-id="e1686-300">If <xref:System.Windows.Forms.FileDialog.SupportMultiDottedExtensions%2A> is `false`, and you assign a multi-dotted extension to <xref:System.Windows.Forms.FileDialog.Filter%2A>, derived controls such as <xref:System.Windows.Forms.SaveFileDialog> will only use the last extension in the string.</span></span> <span data-ttu-id="e1686-301">たとえば、".manifest" の代わりに ".manifest" が使用されます。</span><span class="sxs-lookup"><span data-stu-id="e1686-301">For example, ".manifest" will be used instead of ".exe.manifest".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1686-302">次のコード例では、拡張子が ".txt" のファイルを保存します。</span><span class="sxs-lookup"><span data-stu-id="e1686-302">The following code example saves files with the extension ".data.txt".</span></span> <span data-ttu-id="e1686-303">このコード例では、アプリケーションが `saveFileDialog1` という名前の <xref:System.Windows.Forms.SaveFileDialog> と `button1`という名前の <xref:System.Windows.Forms.Button> をホストする必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1686-303">This code example requires that your application host a <xref:System.Windows.Forms.SaveFileDialog> named `saveFileDialog1` and a <xref:System.Windows.Forms.Button> named `button1`.</span></span>  
  
 [!code-csharp[SupportMultiDottedExtensions#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SupportMultiDottedExtensions/CS/Form1.cs#1)]
 [!code-vb[SupportMultiDottedExtensions#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SupportMultiDottedExtensions/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FileDialog.Filter" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FileDialog.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Windows.Forms.FileDialog.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-304">ファイル ダイアログ ボックスのタイトルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-304">Gets or sets the file dialog box title.</span></span></summary>
        <value><span data-ttu-id="e1686-305">ファイル ダイアログ ボックスのタイトル。</span><span class="sxs-lookup"><span data-stu-id="e1686-305">The file dialog box title.</span></span> <span data-ttu-id="e1686-306">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="e1686-306">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1686-307">この文字列は、ダイアログボックスのタイトルバーに配置されます。</span><span class="sxs-lookup"><span data-stu-id="e1686-307">The string is placed in the title bar of the dialog box.</span></span> <span data-ttu-id="e1686-308">タイトルが空の文字列の場合は、既定のタイトル ([名前を付けて保存] または [開く]) が使用されます。</span><span class="sxs-lookup"><span data-stu-id="e1686-308">If the title is an empty string, the system uses a default title, which is either "Save As" or "Open".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1686-309">次のコード例では、<xref:System.Windows.Forms.OpenFileDialog>の初期化、<xref:System.Windows.Forms.FileDialog.Title%2A> と <xref:System.Windows.Forms.FileDialog.Filter%2A> プロパティの設定、<xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A?displayProperty=nameWithType> プロパティを true に設定してユーザーが複数のファイルを選択できるようにする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e1686-309">The following code example demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the <xref:System.Windows.Forms.FileDialog.Title%2A> and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A?displayProperty=nameWithType> property to true.</span></span> <span data-ttu-id="e1686-310">この例を実行するには、`OpenFileDialog1` という名前の <xref:System.Windows.Forms.OpenFileDialog> と `fileButton`という名前の <xref:System.Windows.Forms.Button> を含むフォームに次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="e1686-310">To run this example, paste the following code in a form containing an <xref:System.Windows.Forms.OpenFileDialog> named `OpenFileDialog1` and a <xref:System.Windows.Forms.Button> named `fileButton`.</span></span> <span data-ttu-id="e1686-311">フォームのコンストラクターまたは `Load` メソッドで `InitializeOpenFileDialog` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e1686-311">Call the `InitializeOpenFileDialog` method in the form's constructor or `Load` method.</span></span> <span data-ttu-id="e1686-312">また、この例では、`Button` コントロールの `Click` イベントが、この例で定義されているイベントハンドラーに接続されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1686-312">The example also requires that the `Click` event of the `Button` control is connected to the event handler defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FileDialog#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CPP/filedialogform.cpp#6)]
 [!code-csharp[System.Windows.Forms.FileDialog#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CS/filedialogform.cs#6)]
 [!code-vb[System.Windows.Forms.FileDialog#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/VB/filedialogform.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="e1686-313">を選択すると、ファイルのダイアログボックスのタイトルが設定されます。</span><span class="sxs-lookup"><span data-stu-id="e1686-313">to set the file dialog box title.</span></span> <span data-ttu-id="e1686-314"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="e1686-314">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FileDialog.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="fileDialog.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1686-315">このオブジェクトの文字列形式を示します。</span><span class="sxs-lookup"><span data-stu-id="e1686-315">Provides a string version of this object.</span></span></summary>
        <returns><span data-ttu-id="e1686-316">このオブジェクトの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="e1686-316">A string version of this object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateNames">
      <MemberSignature Language="C#" Value="public bool ValidateNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FileDialog.ValidateNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateNames { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateNames : bool with get, set" Usage="System.Windows.Forms.FileDialog.ValidateNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1686-317">ダイアログ ボックスが有効な Win32 ファイル名だけを受け入れるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1686-317">Gets or sets a value indicating whether the dialog box accepts only valid Win32 file names.</span></span></summary>
        <value><span data-ttu-id="e1686-318">ダイアログ ボックスが有効な Win32 ファイル名だけを受け入れる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1686-318"><see langword="true" /> if the dialog box accepts only valid Win32 file names; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e1686-319">既定値は <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="e1686-319">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1686-320">ユーザーが **[OK]** をクリックしたときに、編集コントロールにスペースが含まれていても、そのファイル名が有効であるかどうかに関係なく、このダイアログボックスにはファイル名が返されます。</span><span class="sxs-lookup"><span data-stu-id="e1686-320">If the edit control contains anything but spaces when the user clicks **OK**, the dialog box returns the file name, whether it is valid or not.</span></span> <span data-ttu-id="e1686-321">既定の拡張子はテキストに追加されません。</span><span class="sxs-lookup"><span data-stu-id="e1686-321">No default extension is added to the text.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="e1686-322">プロパティを設定する場合は。</span><span class="sxs-lookup"><span data-stu-id="e1686-322">to set the property.</span></span> <span data-ttu-id="e1686-323"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="e1686-323">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>
