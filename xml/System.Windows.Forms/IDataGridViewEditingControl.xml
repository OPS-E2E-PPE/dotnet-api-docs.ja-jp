<Type Name="IDataGridViewEditingControl" FullName="System.Windows.Forms.IDataGridViewEditingControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a1b0edde4c94c1e3616f83428b462ec42059493c" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83903952" /></Metadata><TypeSignature Language="C#" Value="public interface IDataGridViewEditingControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataGridViewEditingControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IDataGridViewEditingControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataGridViewEditingControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataGridViewEditingControl" />
  <TypeSignature Language="F#" Value="type IDataGridViewEditingControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="34daa-101"><see cref="T:System.Windows.Forms.DataGridView" /> のセル内にホストされるコントロールの共通する機能を定義します。</span><span class="sxs-lookup"><span data-stu-id="34daa-101">Defines common functionality for controls that are hosted within cells of a <see cref="T:System.Windows.Forms.DataGridView" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34daa-102">このインターフェイスは、<xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> や <xref:System.Windows.Forms.DataGridViewTextBoxEditingControl>などのコントロールによって実装されます。これらのコントロールは、編集モードのときに <xref:System.Windows.Forms.DataGridViewComboBoxCell> や <xref:System.Windows.Forms.DataGridViewTextBoxCell>などの対応する <xref:System.Windows.Forms.DataGridView> セルによってホストされます。</span><span class="sxs-lookup"><span data-stu-id="34daa-102">This interface is implemented by controls, such as <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> and <xref:System.Windows.Forms.DataGridViewTextBoxEditingControl>, that are hosted by corresponding <xref:System.Windows.Forms.DataGridView> cells, such as <xref:System.Windows.Forms.DataGridViewComboBoxCell> and <xref:System.Windows.Forms.DataGridViewTextBoxCell>, when they are in edit mode.</span></span>  
  
 <span data-ttu-id="34daa-103">編集コントロールをホストできるセル型は、その <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> プロパティを編集コントロール型を表す <xref:System.Type> に設定します。</span><span class="sxs-lookup"><span data-stu-id="34daa-103">Cell types that can host editing controls set their <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> property to a <xref:System.Type> representing the editing control type.</span></span> <span data-ttu-id="34daa-104">セルが編集モードに切り替わると、次の手順が実行されます。</span><span class="sxs-lookup"><span data-stu-id="34daa-104">When the cell enters edit mode, the following steps are performed:</span></span>  
  
1.  <span data-ttu-id="34daa-105"><xref:System.Windows.Forms.DataGridView> コントロールは、編集コントロール型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="34daa-105">The <xref:System.Windows.Forms.DataGridView> control creates an instance of the editing control type.</span></span>  
  
2.  <span data-ttu-id="34daa-106"><xref:System.Windows.Forms.DataGridView> コントロールは、セル <xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="34daa-106">The <xref:System.Windows.Forms.DataGridView> control calls the cell <xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A> method.</span></span> <span data-ttu-id="34daa-107">このメソッドをオーバーライドすると、セルの値を編集コントロールに転送できます。</span><span class="sxs-lookup"><span data-stu-id="34daa-107">You can override this method to transfer the cell value to the editing control.</span></span>  
  
3.  <span data-ttu-id="34daa-108"><xref:System.Windows.Forms.DataGridView> コントロールは、編集コントロール <xref:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl%2A> メソッドを呼び出し、セルの現在のスタイルを渡します。</span><span class="sxs-lookup"><span data-stu-id="34daa-108">The <xref:System.Windows.Forms.DataGridView> control calls the editing control <xref:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl%2A> method and passes in the cell's current style.</span></span> <span data-ttu-id="34daa-109">このメソッドを実装すると、編集コントロールの外観を初期化して、セルの外観に一致させることができます。</span><span class="sxs-lookup"><span data-stu-id="34daa-109">You can implement this method to initialize the appearance of the editing control so that it matches the appearance of the cell.</span></span>  
  
4.  <span data-ttu-id="34daa-110"><xref:System.Windows.Forms.DataGridView> コントロールは、編集コントロール <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="34daa-110">The <xref:System.Windows.Forms.DataGridView> control calls the editing control <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> method.</span></span> <span data-ttu-id="34daa-111">このメソッドを実装すると、コントロールの値を選択するなど、編集コントロールに最終的な調整を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="34daa-111">You can implement this method to make final adjustments to the editing control, such as selecting the control value.</span></span>  
  
 <span data-ttu-id="34daa-112"><xref:System.Windows.Forms.IDataGridViewEditingControl>の実装の詳細については、「[方法: Windows フォーム DataGridView セルのコントロールをホストする](/dotnet/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="34daa-112">For more information about implementing <xref:System.Windows.Forms.IDataGridViewEditingControl>, see [How to: Host Controls in Windows Forms DataGridView Cells](/dotnet/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells).</span></span>  
  
 <span data-ttu-id="34daa-113">編集コントロールをホストせずに値を指定するためのユーザーインターフェイス (UI) を提供する <xref:System.Windows.Forms.DataGridViewCheckBoxCell> などのセルの種類は、<xref:System.Windows.Forms.IDataGridViewEditingCell> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="34daa-113">Cell types such as <xref:System.Windows.Forms.DataGridViewCheckBoxCell> that provide a user interface (UI) for specifying values without hosting an editing control implement the <xref:System.Windows.Forms.IDataGridViewEditingCell> interface.</span></span> <span data-ttu-id="34daa-114">この場合の UI は、セルが編集モードかどうかに関係なく表示されます。</span><span class="sxs-lookup"><span data-stu-id="34daa-114">The UI in this case is displayed regardless of whether the cell is in edit mode.</span></span>  
  
 <span data-ttu-id="34daa-115"><xref:System.Windows.Forms.DataGridViewButtonCell>など、他のセルの種類には UI が用意されていますが、ユーザーが指定した値は格納されません。</span><span class="sxs-lookup"><span data-stu-id="34daa-115">Other cell types, such as <xref:System.Windows.Forms.DataGridViewButtonCell>, provide a UI but do not store user-specified values.</span></span> <span data-ttu-id="34daa-116">この場合、セルの種類は <xref:System.Windows.Forms.IDataGridViewEditingCell> を実装したり、編集コントロールをホストしたりしません。</span><span class="sxs-lookup"><span data-stu-id="34daa-116">In this case, the cell type does not implement <xref:System.Windows.Forms.IDataGridViewEditingCell> or host an editing control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34daa-117">次のコード例では、<xref:System.Windows.Forms.DateTimePicker>から派生するこのインターフェイスの実装を示します。</span><span class="sxs-lookup"><span data-stu-id="34daa-117">The following code example provides an implementation of this interface that derives from <xref:System.Windows.Forms.DateTimePicker>.</span></span> <span data-ttu-id="34daa-118">この例は、 [「方法: Windows フォーム DataGridView セル内のコントロールをホストする](/dotnet/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells)」で使用できる大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="34daa-118">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](/dotnet/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#300](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#300)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#300](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#300)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
    <altmember cref="T:System.Windows.Forms.IDataGridViewEditingCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxCell" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.EditType" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/e79a9d4e-64ec-41f5-93ec-f5492633cbb2"><span data-ttu-id="34daa-119">方法 : Windows フォーム DataGridView Cells でコントロールをホストする</span><span class="sxs-lookup"><span data-stu-id="34daa-119">How to: Host Controls in Windows Forms DataGridView Cells</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="ApplyCellStyleToEditingControl">
      <MemberSignature Language="C#" Value="public void ApplyCellStyleToEditingControl (System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyCellStyleToEditingControl(class System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyCellStyleToEditingControl (dataGridViewCellStyle As DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyCellStyleToEditingControl(System::Windows::Forms::DataGridViewCellStyle ^ dataGridViewCellStyle);" />
      <MemberSignature Language="F#" Value="abstract member ApplyCellStyleToEditingControl : System.Windows.Forms.DataGridViewCellStyle -&gt; unit" Usage="iDataGridViewEditingControl.ApplyCellStyleToEditingControl dataGridViewCellStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCellStyle"><span data-ttu-id="34daa-120">UI のモデルとして使用する <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</span><span class="sxs-lookup"><span data-stu-id="34daa-120">The <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> to use as the model for the UI.</span></span></param>
        <summary><span data-ttu-id="34daa-121">指定されたセル スタイルと矛盾しないように、コントロールのユーザー インターフェイス (UI) を変更します。</span><span class="sxs-lookup"><span data-stu-id="34daa-121">Changes the control's user interface (UI) to be consistent with the specified cell style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34daa-122">通常、このメソッドを実装すると、フォント、背景色、前景色などの編集コントロールの UI プロパティが、コントロールをホストしているセルに使用されるスタイルである `dataGridViewCellStyle`の対応するプロパティの値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="34daa-122">Typically, an implementation of this method will set UI properties for the editing control, such as font, background color, and foreground color, to the values of corresponding properties in the `dataGridViewCellStyle`, which is the style used for the cell hosting the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34daa-123">このメンバーを実装するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="34daa-123">The following code example provides an implementation of this member.</span></span> <span data-ttu-id="34daa-124">この例は、 [「方法: Windows フォーム DataGridView セル内のコントロールをホストする](/dotnet/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells)」で使用できる大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="34daa-124">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](/dotnet/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#303](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#303)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#303](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#303)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlDataGridView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridView EditingControlDataGridView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridView EditingControlDataGridView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlDataGridView As DataGridView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridView ^ EditingControlDataGridView { System::Windows::Forms::DataGridView ^ get(); void set(System::Windows::Forms::DataGridView ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlDataGridView : System.Windows.Forms.DataGridView with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="34daa-125">セルを格納する <see cref="T:System.Windows.Forms.DataGridView" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="34daa-125">Gets or sets the <see cref="T:System.Windows.Forms.DataGridView" /> that contains the cell.</span></span></summary>
        <value><span data-ttu-id="34daa-126">編集対象の <see cref="T:System.Windows.Forms.DataGridView" /> を格納する <see cref="T:System.Windows.Forms.DataGridViewCell" />。関連付けられた <see cref="T:System.Windows.Forms.DataGridView" /> がない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="34daa-126">The <see cref="T:System.Windows.Forms.DataGridView" /> that contains the <see cref="T:System.Windows.Forms.DataGridViewCell" /> that is being edited; <see langword="null" /> if there is no associated <see cref="T:System.Windows.Forms.DataGridView" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlFormattedValue">
      <MemberSignature Language="C#" Value="public object EditingControlFormattedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EditingControlFormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlFormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EditingControlFormattedValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlFormattedValue : obj with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="34daa-127">エディターによって変更されるセルの書式設定された値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="34daa-127">Gets or sets the formatted value of the cell being modified by the editor.</span></span></summary>
        <value><span data-ttu-id="34daa-128">セルの書式設定された値を表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="34daa-128">An <see cref="T:System.Object" /> that represents the formatted value of the cell.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34daa-129">書式設定された値は、コントロールのユーザーインターフェイスに表示される値を表します。</span><span class="sxs-lookup"><span data-stu-id="34daa-129">The formatted value represents the value as it is displayed in the control's user interface.</span></span> <span data-ttu-id="34daa-130">書式設定された値は、絶対値と、コントロールに含まれている実際の値のデータ型で異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="34daa-130">The formatted value may be different in absolute value and even data type from the actual value contained in the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34daa-131">このメンバーを実装するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="34daa-131">The following code example provides an implementation of this member.</span></span> <span data-ttu-id="34daa-132">この例は、 [「方法: Windows フォーム DataGridView セル内のコントロールをホストする](/dotnet/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells)」で使用できる大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="34daa-132">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](/dotnet/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#301](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#301)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#301](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#301)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlRowIndex">
      <MemberSignature Language="C#" Value="public int EditingControlRowIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditingControlRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EditingControlRowIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlRowIndex : int with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="34daa-133">ホストしているセルの親行のインデックスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="34daa-133">Gets or sets the index of the hosting cell's parent row.</span></span></summary>
        <value><span data-ttu-id="34daa-134">セルを含む行のインデックス。親行がない場合は-1。</span><span class="sxs-lookup"><span data-stu-id="34daa-134">The index of the row that contains the cell, or -1 if there is no parent row.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34daa-135"><xref:System.Windows.Forms.IDataGridViewEditingControl> インターフェイスは、対応する `ColumnIndex` プロパティを定義していません。</span><span class="sxs-lookup"><span data-stu-id="34daa-135">The <xref:System.Windows.Forms.IDataGridViewEditingControl> interface does not define a corresponding `ColumnIndex` property.</span></span> <span data-ttu-id="34daa-136"><xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView%2A> プロパティを使用して親 <xref:System.Windows.Forms.DataGridView> コントロールを取得し、<xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A?displayProperty=nameWithType> プロパティを使用して、アクティブセルの行インデックスと列インデックスを決定できます。</span><span class="sxs-lookup"><span data-stu-id="34daa-136">You can use the <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView%2A> property to retrieve the parent <xref:System.Windows.Forms.DataGridView> control and use the <xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A?displayProperty=nameWithType> property to determine the row and column indexes of the active cell.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlValueChanged">
      <MemberSignature Language="C#" Value="public bool EditingControlValueChanged { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditingControlValueChanged" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlValueChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditingControlValueChanged { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlValueChanged : bool with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="34daa-137">編集コントロールの値と、そのコントロールをホストしているセルの値とが異なるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="34daa-137">Gets or sets a value indicating whether the value of the editing control differs from the value of the hosting cell.</span></span></summary>
        <value><span data-ttu-id="34daa-138">コントロールの値と、セルの値が異なる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="34daa-138"><see langword="true" /> if the value of the control differs from the cell value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34daa-139"><xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged%2A> プロパティは `true` に設定され、ホストしているセルの状態が変更され、そのユーザーインターフェイス (UI) を更新して、この値の変更を反映する必要があることを示します。</span><span class="sxs-lookup"><span data-stu-id="34daa-139">The <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged%2A> property is set to `true` to indicate that the hosting cell's state has changed and its user interface (UI) needs to be updated to reflect this change in value.</span></span> <span data-ttu-id="34daa-140">このプロパティは、所有しているセルまたはテーブルによって、更新後に `false` にリセットされます。</span><span class="sxs-lookup"><span data-stu-id="34daa-140">The owning cell or table will reset this property to `false` after an update.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="34daa-141">このプロパティの実装で <see langword="true" /> を返すと、表示される値が自動的に変更されることはありません。</span><span class="sxs-lookup"><span data-stu-id="34daa-141">Returning <see langword="true" /> in your implementation of this property does not automatically change the displayed value.</span></span> <span data-ttu-id="34daa-142">編集コントロールの値が変更された場合は、<see langword="true" /> を <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> メソッドに渡すことによって、変更の <see cref="T:System.Windows.Forms.DataGridView" /> に通知する必要があります。</span><span class="sxs-lookup"><span data-stu-id="34daa-142">When the value changes in the editing control, you must notify the <see cref="T:System.Windows.Forms.DataGridView" /> of the change by passing <see langword="true" /> to the <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> method.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlWantsInputKey">
      <MemberSignature Language="C#" Value="public bool EditingControlWantsInputKey (System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EditingControlWantsInputKey(valuetype System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function EditingControlWantsInputKey (keyData As Keys, dataGridViewWantsInputKey As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EditingControlWantsInputKey(System::Windows::Forms::Keys keyData, bool dataGridViewWantsInputKey);" />
      <MemberSignature Language="F#" Value="abstract member EditingControlWantsInputKey : System.Windows.Forms.Keys * bool -&gt; bool" Usage="iDataGridViewEditingControl.EditingControlWantsInputKey (keyData, dataGridViewWantsInputKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
        <Parameter Name="dataGridViewWantsInputKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="34daa-143">押されたキーを表す <see cref="T:System.Windows.Forms.Keys" />。</span><span class="sxs-lookup"><span data-stu-id="34daa-143">A <see cref="T:System.Windows.Forms.Keys" /> that represents the key that was pressed.</span></span></param>
        <param name="dataGridViewWantsInputKey"><span data-ttu-id="34daa-144"><paramref name="keyData" /> に格納された <see cref="T:System.Windows.Forms.DataGridView" /> を、<see cref="T:System.Windows.Forms.Keys" /> に処理させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="34daa-144"><see langword="true" /> when the <see cref="T:System.Windows.Forms.DataGridView" /> wants to process the <see cref="T:System.Windows.Forms.Keys" /> in <paramref name="keyData" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="34daa-145">指定されたキーが、編集コントロールによって処理される通常の入力キーか、<see cref="T:System.Windows.Forms.DataGridView" /> によって処理される特殊なキーであるかを確認します。</span><span class="sxs-lookup"><span data-stu-id="34daa-145">Determines whether the specified key is a regular input key that the editing control should process or a special key that the <see cref="T:System.Windows.Forms.DataGridView" /> should process.</span></span></summary>
        <returns><span data-ttu-id="34daa-146">指定されたキーが編集コントロールによって処理される通常の入力キーの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="34daa-146"><see langword="true" /> if the specified key is a regular input key that should be handled by the editing control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34daa-147">編集コントロールは、このメソッドを実装して、コントロールによって処理される入力キーと、<xref:System.Windows.Forms.DataGridView>によって処理される入力キーを決定します。</span><span class="sxs-lookup"><span data-stu-id="34daa-147">An editing control implements this method to determine which input keys should be processed by the control, and which input keys should be processed by the <xref:System.Windows.Forms.DataGridView>.</span></span>  
  
 <span data-ttu-id="34daa-148"><xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> メソッドは、<xref:System.Windows.Forms.DataGridView>によって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="34daa-148">The <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> method is called by the <xref:System.Windows.Forms.DataGridView>.</span></span> <span data-ttu-id="34daa-149"><xref:System.Windows.Forms.DataGridView> は、`keyData`を処理できるときに `dataGridViewWantsInputKey` の `true` に渡されます。</span><span class="sxs-lookup"><span data-stu-id="34daa-149">The <xref:System.Windows.Forms.DataGridView> will pass in `true` for `dataGridViewWantsInputKey` when it can process the `keyData`.</span></span> <span data-ttu-id="34daa-150">編集コントロールで、<xref:System.Windows.Forms.DataGridView> が `keyData`を処理できる場合、<xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> は `dataGridViewWantsInputKey` が `true`されたときに `false` を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="34daa-150">If the editing control can let the <xref:System.Windows.Forms.DataGridView> handle the `keyData`, <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> should return `false` when `dataGridViewWantsInputKey` is `true`.</span></span> <span data-ttu-id="34daa-151"><xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> の他の実装では、`true` の `dataGridViewWantsInputKey` 値を無視して、編集コントロールの `keyData` を処理できます。</span><span class="sxs-lookup"><span data-stu-id="34daa-151">Other implementations of <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> may ignore a `dataGridViewWantsInputKey` value of `true` and handle the `keyData` in the editing control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34daa-152">このメンバーを実装するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="34daa-152">The following code example provides an implementation of this member.</span></span> <span data-ttu-id="34daa-153">この例は、 [「方法: Windows フォーム DataGridView セル内のコントロールをホストする](/dotnet/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells)」で使用できる大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="34daa-153">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](/dotnet/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#305](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#305)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#305](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#305)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditingPanelCursor">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Cursor EditingPanelCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor EditingPanelCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditingPanelCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Cursor ^ EditingPanelCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditingPanelCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="34daa-154">マウス ポインターが編集コントロールの上ではなく、<see cref="P:System.Windows.Forms.DataGridView.EditingPanel" /> の上にあるときに使用されるカーソルを取得します。</span><span class="sxs-lookup"><span data-stu-id="34daa-154">Gets the cursor used when the mouse pointer is over the <see cref="P:System.Windows.Forms.DataGridView.EditingPanel" /> but not over the editing control.</span></span></summary>
        <value><span data-ttu-id="34daa-155">編集パネルに使用されるマウス ポインターを表す <see cref="T:System.Windows.Forms.Cursor" />。</span><span class="sxs-lookup"><span data-stu-id="34daa-155">A <see cref="T:System.Windows.Forms.Cursor" /> that represents the mouse pointer used for the editing panel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34daa-156">編集パネルは、<xref:System.Windows.Forms.DataGridView> コントロールが編集モードのときに編集コントロールをホストする <xref:System.Windows.Forms.Panel> です。</span><span class="sxs-lookup"><span data-stu-id="34daa-156">The editing panel is the <xref:System.Windows.Forms.Panel> that hosts the editing control when the <xref:System.Windows.Forms.DataGridView> control is in edit mode.</span></span> <span data-ttu-id="34daa-157">実際の編集コントロールは、編集パネルの領域全体をカバーしていない場合があります。</span><span class="sxs-lookup"><span data-stu-id="34daa-157">The actual editing control may not cover the entire area of the editing panel.</span></span> <span data-ttu-id="34daa-158">この場合、<xref:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor%2A> の実装は、マウスポインターがコントロール上ではなくパネル上にあるときに使用するカーソルを返します。</span><span class="sxs-lookup"><span data-stu-id="34daa-158">In this case, the <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor%2A> implementation should return the cursor to use when the mouse pointer is over the panel but not over the control.</span></span> <span data-ttu-id="34daa-159">通常は、コントロールが使用するのと同じカーソルを返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="34daa-159">Typically, you will want to return the same cursor that the control uses.</span></span> <span data-ttu-id="34daa-160">ポインターがコントロールの上にあるときに表示されるカーソルを変更する場合は、<xref:System.Windows.Forms.Control.Cursor%2A> プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="34daa-160">If you want to change the cursor that appears when the pointer is over the control, you must set the <xref:System.Windows.Forms.Control.Cursor%2A> property.</span></span> <span data-ttu-id="34daa-161">これは <xref:System.Windows.Forms.IDataGridViewEditingControl> 実装のコンストラクターで設定することも、<xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> の実装で設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="34daa-161">You can set this in the constructor of the <xref:System.Windows.Forms.IDataGridViewEditingControl> implementation, or you can set it in the <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34daa-162">このメンバーを実装するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="34daa-162">The following code example provides an implementation of this member.</span></span> <span data-ttu-id="34daa-163">この例は、 [「方法: Windows フォーム DataGridView セル内のコントロールをホストする](/dotnet/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells)」で使用できる大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="34daa-163">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](/dotnet/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#311](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#311)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#311](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#311)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.Panel" />
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetEditingControlFormattedValue">
      <MemberSignature Language="C#" Value="public object GetEditingControlFormattedValue (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditingControlFormattedValue(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEditingControlFormattedValue (context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetEditingControlFormattedValue(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="abstract member GetEditingControlFormattedValue : System.Windows.Forms.DataGridViewDataErrorContexts -&gt; obj" Usage="iDataGridViewEditingControl.GetEditingControlFormattedValue context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="34daa-164">データが必要なコンテキストを指定する <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="34daa-164">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> values that specifies the context in which the data is needed.</span></span></param>
        <summary><span data-ttu-id="34daa-165">セルの書式設定された値を取得します。</span><span class="sxs-lookup"><span data-stu-id="34daa-165">Retrieves the formatted value of the cell.</span></span></summary>
        <returns><span data-ttu-id="34daa-166">セルの内容の書式設定されたバージョンを表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="34daa-166">An <see cref="T:System.Object" /> that represents the formatted version of the cell contents.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34daa-167">書式設定された値は、コントロールのユーザーインターフェイスに表示される値を表します。</span><span class="sxs-lookup"><span data-stu-id="34daa-167">The formatted value represents the value as it is displayed in the control's user interface.</span></span> <span data-ttu-id="34daa-168">書式設定された値は、絶対値と、コントロールに含まれている実際の値のデータ型で異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="34daa-168">The formatted value may be different in absolute value and even data type from the actual value contained in the control.</span></span>  
  
 <span data-ttu-id="34daa-169">コントロールの書式設定された値を設定するには、<xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="34daa-169">To set the formatted value of the control, use the <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="34daa-170">このメソッドの実装で戻り値を変更しても、表示される値は自動的には変更されません。</span><span class="sxs-lookup"><span data-stu-id="34daa-170">Changing the return value in your implementation of this method does not automatically change the displayed value.</span></span> <span data-ttu-id="34daa-171">編集コントロールの値が変更された場合は、<see langword="true" /> を <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> メソッドに渡すことによって、変更の <see cref="T:System.Windows.Forms.DataGridView" /> に通知する必要があります。</span><span class="sxs-lookup"><span data-stu-id="34daa-171">When the value changes in the editing control, you must notify the <see cref="T:System.Windows.Forms.DataGridView" /> of the change by passing <see langword="true" /> to the <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> method.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="PrepareEditingControlForEdit">
      <MemberSignature Language="C#" Value="public void PrepareEditingControlForEdit (bool selectAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrepareEditingControlForEdit(bool selectAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrepareEditingControlForEdit (selectAll As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrepareEditingControlForEdit(bool selectAll);" />
      <MemberSignature Language="F#" Value="abstract member PrepareEditingControlForEdit : bool -&gt; unit" Usage="iDataGridViewEditingControl.PrepareEditingControlForEdit selectAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selectAll"><span data-ttu-id="34daa-172">セルの内容をすべて選択する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="34daa-172"><see langword="true" /> to select all of the cell's content; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="34daa-173">現在選択されているセルの編集を準備します。</span><span class="sxs-lookup"><span data-stu-id="34daa-173">Prepares the currently selected cell for editing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34daa-174">このメソッドの目的は、コントロールとその内容を編集用に準備することです。</span><span class="sxs-lookup"><span data-stu-id="34daa-174">The purpose of this method is to prepare the control and its contents for editing.</span></span> <span data-ttu-id="34daa-175">たとえば、コンテンツの末尾に挿入ポイントを配置したり、コンテンツの配置方法を変更したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="34daa-175">For example, you might want to put the insertion point at the end of the contents, or change how the contents are aligned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="RepositionEditingControlOnValueChange">
      <MemberSignature Language="C#" Value="public bool RepositionEditingControlOnValueChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RepositionEditingControlOnValueChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RepositionEditingControlOnValueChange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RepositionEditingControlOnValueChange { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RepositionEditingControlOnValueChange : bool" Usage="System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="34daa-176">値が変更されるたびに、セルの内容の位置を変更する必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="34daa-176">Gets or sets a value indicating whether the cell contents need to be repositioned whenever the value changes.</span></span></summary>
        <value><span data-ttu-id="34daa-177">内容の位置を変更する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="34daa-177"><see langword="true" /> if the contents need to be repositioned; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34daa-178">場合によっては、値が変更されたときにセルの内容を再配置する必要があります。</span><span class="sxs-lookup"><span data-stu-id="34daa-178">Some situations require that cell contents reposition when the value changes.</span></span> <span data-ttu-id="34daa-179">たとえば、セルの内容がテキストを折り返し、内容が大きくなると、セルの内容を再配置する必要がある場合があります。</span><span class="sxs-lookup"><span data-stu-id="34daa-179">For example, cell contents may need to reposition when a cell wraps text and the contents become larger.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
  </Members>
</Type>
