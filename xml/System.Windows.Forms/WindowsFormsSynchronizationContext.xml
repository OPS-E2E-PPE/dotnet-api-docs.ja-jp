<Type Name="WindowsFormsSynchronizationContext" FullName="System.Windows.Forms.WindowsFormsSynchronizationContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="92add3b6cd15dce53398c65e0d2fbd44aa554229" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83969138" /></Metadata><TypeSignature Language="C#" Value="public sealed class WindowsFormsSynchronizationContext : System.Threading.SynchronizationContext, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WindowsFormsSynchronizationContext extends System.Threading.SynchronizationContext implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.WindowsFormsSynchronizationContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WindowsFormsSynchronizationContext&#xA;Inherits SynchronizationContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsFormsSynchronizationContext sealed : System::Threading::SynchronizationContext, IDisposable" />
  <TypeSignature Language="F#" Value="type WindowsFormsSynchronizationContext = class&#xA;    inherit SynchronizationContext&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Threading.SynchronizationContext</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="20d3f-101">Windows フォーム アプリケーション モデルに同期コンテキストを提供します。</span><span class="sxs-lookup"><span data-stu-id="20d3f-101">Provides a synchronization context for the Windows Forms application model.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Threading.SynchronizationContext" />
    <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="20d3f-102">イベントベースの非同期パターンの概要</span><span class="sxs-lookup"><span data-stu-id="20d3f-102">Event-based Asynchronous Pattern Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsFormsSynchronizationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsFormsSynchronizationContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20d3f-103"><see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="20d3f-103">Initializes a new instance of the <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Threading.SynchronizationContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="20d3f-104">イベントベースの非同期パターンの概要</span><span class="sxs-lookup"><span data-stu-id="20d3f-104">Event-based Asynchronous Pattern Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AutoInstall">
      <MemberSignature Language="C#" Value="public static bool AutoInstall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoInstall" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WindowsFormsSynchronizationContext.AutoInstall" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoInstall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoInstall { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoInstall : bool with get, set" Usage="System.Windows.Forms.WindowsFormsSynchronizationContext.AutoInstall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20d3f-105">コントロールの作成時に、<see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> をインストールするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="20d3f-105">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> is installed when a control is created.</span></span></summary>
        <value><span data-ttu-id="20d3f-106"><see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> をインストールする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="20d3f-106"><see langword="true" /> if the <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> is installed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="20d3f-107">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="20d3f-107">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d3f-108"><xref:System.Windows.Forms.WindowsFormsSynchronizationContext.AutoInstall%2A> プロパティは、コントロールが作成されたとき、またはメッセージループが開始されたときに <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> をインストールするかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="20d3f-108">The <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.AutoInstall%2A> property determines whether the <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> is installed when a control is created, or when a message loop is started.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.SynchronizationContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="20d3f-109">イベントベースの非同期パターンの概要</span><span class="sxs-lookup"><span data-stu-id="20d3f-109">Event-based Asynchronous Pattern Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public override System.Threading.SynchronizationContext CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.SynchronizationContext CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateCopy () As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::SynchronizationContext ^ CreateCopy();" />
      <MemberSignature Language="F#" Value="override this.CreateCopy : unit -&gt; System.Threading.SynchronizationContext" Usage="windowsFormsSynchronizationContext.CreateCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20d3f-110">同期コンテキストをコピーします。</span><span class="sxs-lookup"><span data-stu-id="20d3f-110">Copies the synchronization context.</span></span></summary>
        <returns><span data-ttu-id="20d3f-111">同期コンテキストのコピー。</span><span class="sxs-lookup"><span data-stu-id="20d3f-111">A copy of the synchronization context.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Threading.SynchronizationContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="20d3f-112">イベントベースの非同期パターンの概要</span><span class="sxs-lookup"><span data-stu-id="20d3f-112">Event-based Asynchronous Pattern Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="windowsFormsSynchronizationContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20d3f-113"><see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> で使用されるすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="20d3f-113">Releases all resources used by the <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d3f-114"><xref:System.Windows.Forms.WindowsFormsSynchronizationContext> を使い終わったら、<xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="20d3f-114">Call <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A> when you are finished using the <xref:System.Windows.Forms.WindowsFormsSynchronizationContext>.</span></span> <span data-ttu-id="20d3f-115"><xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A>メソッドによって、<xref:System.Windows.Forms.WindowsFormsSynchronizationContext> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="20d3f-115">The <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A> method leaves the <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> in an unusable state.</span></span> <span data-ttu-id="20d3f-116"><xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A>呼び出し後は、<xref:System.Windows.Forms.WindowsFormsSynchronizationContext>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.Windows.Forms.WindowsFormsSynchronizationContext> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="20d3f-116">After calling <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A>, you must release all references to the <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> so the garbage collector can reclaim the memory that the <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> was occupying.</span></span> <span data-ttu-id="20d3f-117">詳細については、[アンマネージ リソースのクリーンアップ](/dotnet/standard/garbage-collection/unmanaged)および[Dispose メソッドの実装](/dotnet/standard/garbage-collection/implementing-dispose)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="20d3f-117">For more information, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="20d3f-118"><xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A> への最後の参照を解放する前に、必ず <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="20d3f-118">Always call <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A> before you release your last reference to the <xref:System.Windows.Forms.WindowsFormsSynchronizationContext>.</span></span> <span data-ttu-id="20d3f-119">そうしないと、ガベージ コレクターが <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="20d3f-119">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public override void Post (System.Threading.SendOrPostCallback d, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Post(class System.Threading.SendOrPostCallback d, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Post (d As SendOrPostCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Post(System::Threading::SendOrPostCallback ^ d, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.Post : System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="windowsFormsSynchronizationContext.Post (d, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="20d3f-120">呼び出す <see cref="T:System.Threading.SendOrPostCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="20d3f-120">The <see cref="T:System.Threading.SendOrPostCallback" /> delegate to call.</span></span></param>
        <param name="state"><span data-ttu-id="20d3f-121">デリゲートに渡されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="20d3f-121">The object passed to the delegate.</span></span></param>
        <summary><span data-ttu-id="20d3f-122">非同期メッセージを同期コンテキストにディスパッチします。</span><span class="sxs-lookup"><span data-stu-id="20d3f-122">Dispatches an asynchronous message to a synchronization context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d3f-123"><xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Post%2A> メソッドは、メッセージを投稿するための非同期要求を開始します。</span><span class="sxs-lookup"><span data-stu-id="20d3f-123">The <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Post%2A> method starts an asynchronous request to post a message.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.SynchronizationContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="20d3f-124">イベントベースの非同期パターンの概要</span><span class="sxs-lookup"><span data-stu-id="20d3f-124">Event-based Asynchronous Pattern Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public override void Send (System.Threading.SendOrPostCallback d, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Send(class System.Threading.SendOrPostCallback d, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Send (d As SendOrPostCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Send(System::Threading::SendOrPostCallback ^ d, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.Send : System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="windowsFormsSynchronizationContext.Send (d, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="20d3f-125">呼び出す <see cref="T:System.Threading.SendOrPostCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="20d3f-125">The <see cref="T:System.Threading.SendOrPostCallback" /> delegate to call.</span></span></param>
        <param name="state"><span data-ttu-id="20d3f-126">デリゲートに渡されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="20d3f-126">The object passed to the delegate.</span></span></param>
        <summary><span data-ttu-id="20d3f-127">同期メッセージを同期コンテキストにディスパッチします。</span><span class="sxs-lookup"><span data-stu-id="20d3f-127">Dispatches a synchronous message to a synchronization context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d3f-128">対象のスレッドが存在しなくなった場合、またはその <xref:System.Threading.Thread.IsAlive%2A?displayProperty=nameWithType> プロパティの値が `false`場合、<xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Send%2A> メソッドによって <xref:System.ComponentModel.InvalidAsynchronousStateException>が発生します。</span><span class="sxs-lookup"><span data-stu-id="20d3f-128">If the destination thread no longer exists or the value of its <xref:System.Threading.Thread.IsAlive%2A?displayProperty=nameWithType> property is `false`, the <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Send%2A> method raises an <xref:System.ComponentModel.InvalidAsynchronousStateException>.</span></span> <span data-ttu-id="20d3f-129">どのようなアクションを実行するかは、呼び出し元によって決定されます。</span><span class="sxs-lookup"><span data-stu-id="20d3f-129">It is up to the caller to determine what further action to take.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidAsynchronousStateException"><span data-ttu-id="20d3f-130">あて先のスレッドは存在しません。</span><span class="sxs-lookup"><span data-stu-id="20d3f-130">The destination thread no longer exists.</span></span></exception>
        <altmember cref="T:System.Threading.SynchronizationContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="20d3f-131">イベントベースの非同期パターンの概要</span><span class="sxs-lookup"><span data-stu-id="20d3f-131">Event-based Asynchronous Pattern Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public static void Uninstall ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uninstall() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.Uninstall" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Uninstall ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Uninstall();" />
      <MemberSignature Language="F#" Value="static member Uninstall : unit -&gt; unit" Usage="System.Windows.Forms.WindowsFormsSynchronizationContext.Uninstall " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20d3f-132">現在インストールされている <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> をアンインストールし、以前インストールされていたコンテキストと置き換えます。</span><span class="sxs-lookup"><span data-stu-id="20d3f-132">Uninstalls the currently installed <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> and replaces it with the previously installed context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d3f-133">以前にインストールされた <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> が `null`場合、現在のコンテキストは `null`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="20d3f-133">If the previously installed <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> is `null`, the current context is set to `null`.</span></span>  
  
 <span data-ttu-id="20d3f-134">現在インストールされている同期コンテキストが <xref:System.Windows.Forms.WindowsFormsSynchronizationContext>でない場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="20d3f-134">If the currently installed synchronization context is not a <xref:System.Windows.Forms.WindowsFormsSynchronizationContext>, this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.SynchronizationContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="20d3f-135">イベントベースの非同期パターンの概要</span><span class="sxs-lookup"><span data-stu-id="20d3f-135">Event-based Asynchronous Pattern Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
