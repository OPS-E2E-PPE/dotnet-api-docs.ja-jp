<Type Name="ConvertEventArgs" FullName="System.Windows.Forms.ConvertEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b432c33e6760fc360d71acc0d3d58d597bbb88a" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83969620" /></Metadata><TypeSignature Language="C#" Value="public class ConvertEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConvertEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ConvertEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConvertEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ConvertEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Windows.Forms.Binding.Format" /> イベントおよび <see cref="E:System.Windows.Forms.Binding.Parse" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ConvertEventArgs> は、<xref:System.Windows.Forms.Binding> オブジェクトを介してデータにバインドされている Windows フォームコントロールによって表示される値の書式設定と unformat に使用されます。 <xref:System.Windows.Forms.Binding.Format> イベントは、コントロールプロパティが値にバインドされ、バインドされた値が変更されるたびに <xref:System.Windows.Forms.Binding.Parse> イベントが発生するたびに発生します。  
  
 <xref:System.Windows.Forms.Binding.Format> イベントと <xref:System.Windows.Forms.Binding.Parse> イベントを使用すると、データを表示するためのカスタム形式を作成できます。 たとえば、テーブル内のデータが <xref:System.Decimal>型である場合、<xref:System.Windows.Forms.ConvertEventArgs> の <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> プロパティを <xref:System.Windows.Forms.Binding.Format> イベントの書式設定された値に設定することによって、データをローカルの通貨形式で表示するように指定できます。 その結果、<xref:System.Windows.Forms.Binding.Parse> イベントに表示されている値を unformat する必要があります。  
  
 イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.Binding>を作成し、<xref:System.Windows.Forms.ConvertEventHandler> デリゲートを <xref:System.Windows.Forms.Binding.Parse> イベントと <xref:System.Windows.Forms.Binding.Format> イベントの両方に追加し、<xref:System.Windows.Forms.Control.DataBindings%2A> プロパティを使用して <xref:System.Windows.Forms.Binding> コントロールの <xref:System.Windows.Forms.BindingsCollection> に <xref:System.Windows.Forms.TextBox> を追加します。 <xref:System.Windows.Forms.Binding.Format> イベントに追加される `DecimalToCurrencyString` イベントデリゲートは、<xref:System.Decimal.ToString%2A> メソッドを使用して、バインドされた値 (<xref:System.Decimal> 型) を通貨として書式設定します。 <xref:System.Windows.Forms.Binding.Parse> イベントに追加される `CurrencyStringToDecimal` イベントデリゲートは、コントロールによって表示される値を <xref:System.Decimal> 型に変換します。  
  
 [!code-cpp[Classic ConvertEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Binding" />
    <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
    <altmember cref="T:System.Windows.Forms.BindingsCollection" />
    <altmember cref="P:System.Windows.Forms.Control.DataBindings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConvertEventArgs (object value, Type desiredType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value, class System.Type desiredType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ConvertEventArgs.#ctor(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object, desiredType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConvertEventArgs(System::Object ^ value, Type ^ desiredType);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ConvertEventArgs : obj * Type -&gt; System.Windows.Forms.ConvertEventArgs" Usage="new System.Windows.Forms.ConvertEventArgs (value, desiredType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="desiredType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">現在のプロパティの値を格納する <see cref="T:System.Object" />。</param>
        <param name="desiredType">値の <see cref="T:System.Type" />。</param>
        <summary><see cref="T:System.Windows.Forms.ConvertEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredType">
      <MemberSignature Language="C#" Value="public Type DesiredType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DesiredType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ConvertEventArgs.DesiredType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesiredType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DesiredType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesiredType : Type" Usage="System.Windows.Forms.ConvertEventArgs.DesiredType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>必要な値のデータ型を取得します。</summary>
        <value>必要な値の <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> プロパティを使用すると、値が変換されるプロパティの型を確認できます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> プロパティを使用して、ある型から別の型への変換を続行できるかどうかを判断します。 `DecimalToCurrencyString` メソッドは、<xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> が文字列であるかどうかをテストします。 それ以外の場合、コードはメソッドを終了します。 同様に、`CurrencyStringToDecimal` メソッドは、<xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> が <xref:System.Decimal>であるかどうかをテストし、`true`されていない場合は終了します。  
  
 [!code-cpp[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ConvertEventArgs.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.Forms.ConvertEventArgs.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ConvertEventArgs" /> の値を取得します。値の設定も可能です。</summary>
        <value><see cref="T:System.Windows.Forms.ConvertEventArgs" /> の値です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> プロパティに含まれる値は、<xref:System.Windows.Forms.ConvertEventArgs> が返されるイベントによって異なります。 <xref:System.Windows.Forms.ConvertEventArgs> は、<xref:System.Windows.Forms.Binding.Format> イベントまたは <xref:System.Windows.Forms.Binding.Parse> イベントのどちらかで返すことができます。  
  
 <xref:System.Windows.Forms.Binding.Format> イベントで <xref:System.Windows.Forms.ConvertEventArgs> が返されると、<xref:System.Windows.Forms.ConvertEventArgs.Value%2A> プロパティには、データソースの書式設定されていないプロパティ値が含まれます。 <xref:System.Windows.Forms.Binding.Format> イベント内では、プロパティの値を読み取り、値の書式を設定し、<xref:System.Windows.Forms.ConvertEventArgs.Value%2A> プロパティを新しい (書式設定された) 値にリセットして、データバインドコントロールに表示される値を設定できます。  
  
 <xref:System.Windows.Forms.Binding.Parse> イベントで <xref:System.Windows.Forms.ConvertEventArgs> が返されると、プロパティには、データバインドコントロールのカスタム形式の値が格納されます。 <xref:System.Windows.Forms.Binding.Parse> イベント内では、書式設定された値を読み取って解析し、データソースと同じデータ型に変換し直す必要があります。 その後、<xref:System.Windows.Forms.ConvertEventArgs.Value%2A> プロパティを書式設定されていない値にリセットし、データソースの値を設定できます。 データソースの種類を確認するには、<xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> プロパティの値を調べます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.Binding>を作成し、<xref:System.Windows.Forms.ConvertEventHandler> デリゲートを <xref:System.Windows.Forms.Binding.Parse> イベントと <xref:System.Windows.Forms.Binding.Format> イベントの両方に追加し、<xref:System.Windows.Forms.Control.DataBindings%2A> プロパティを使用して <xref:System.Windows.Forms.Binding> コントロールの <xref:System.Windows.Forms.BindingsCollection> に <xref:System.Windows.Forms.TextBox> を追加します。 <xref:System.Windows.Forms.Binding.Format> イベントに追加される `DecimalToCurrencyString` イベントデリゲートは、<xref:System.Decimal.ToString%2A> メソッドを使用して、バインドされた値 (<xref:System.Decimal> 型) を通貨として書式設定します。 <xref:System.Windows.Forms.Binding.Parse> イベントに追加される `CurrencyStringToDecimal` イベントデリゲートは、コントロールによって表示される値を <xref:System.Decimal> 型に変換します。  
  
 [!code-cpp[Classic ConvertEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Binding" />
      </Docs>
    </Member>
  </Members>
</Type>
