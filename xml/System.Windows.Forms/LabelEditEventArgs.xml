<Type Name="LabelEditEventArgs" FullName="System.Windows.Forms.LabelEditEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9063051227635569cee9a899d55b881fb7ec6eb1" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82427940" /></Metadata><TypeSignature Language="C#" Value="public class LabelEditEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LabelEditEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.LabelEditEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LabelEditEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LabelEditEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type LabelEditEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" /> イベントおよび <see cref="E:System.Windows.Forms.ListView.AfterLabelEdit" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザーによって編集された後の <xref:System.Windows.Forms.ListViewItem> とキャプションのインデックスとキャプションを指定 <xref:System.Windows.Forms.LabelEditEventArgs>。 このクラスには、<xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> プロパティも用意されています。 このプロパティを <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> イベントハンドラーで使用して、ユーザーがラベルを編集できないようにすることができます。 また、<xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> イベントハンドラーで使用して変更を元の値に戻すこともできます。 これは、変更をコミットする前にユーザー入力を検証する場合に便利です。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> イベントはラベルの編集がコミットされる前に行われるため、このイベントのハンドラーで <xref:System.Windows.Forms.ListView.Sort%2A?displayProperty=nameWithType> メソッドを呼び出すと、元の値を使用して項目が並べ替えられます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> イベントの処理と、<xref:System.Windows.Forms.LabelEditEventArgs.Item%2A> プロパティと <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> プロパティの使用方法を示しています。 この例を実行するには、`ListView1` という名前の <xref:System.Windows.Forms.ListView> コントロールを含むフォームに次のコードを貼り付け、3つ以上の項目を設定します。 すべてのイベントがイベント処理メソッドに関連付けられていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
    <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.LabelEditEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LabelEditEventArgs (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LabelEditEventArgs.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LabelEditEventArgs(int item);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.LabelEditEventArgs : int -&gt; System.Windows.Forms.LabelEditEventArgs" Usage="new System.Windows.Forms.LabelEditEventArgs item" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">編集するラベルを保持している <see cref="T:System.Windows.Forms.ListViewItem" /> の 0 から始まるインデックス番号。</param>
        <summary>編集対象の <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> への指定したインデックスを使用して、<see cref="T:System.Windows.Forms.ListViewItem" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは、実行時に <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> イベントまたは <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> イベントを発生させて、編集する <xref:System.Windows.Forms.ListView> 内の特定のリスト項目を指定する場合に使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LabelEditEventArgs (int item, string label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 item, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LabelEditEventArgs.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item As Integer, label As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LabelEditEventArgs(int item, System::String ^ label);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.LabelEditEventArgs : int * string -&gt; System.Windows.Forms.LabelEditEventArgs" Usage="new System.Windows.Forms.LabelEditEventArgs (item, label)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">編集するラベルを保持している <see cref="T:System.Windows.Forms.ListViewItem" /> の 0 から始まるインデックス番号。</param>
        <param name="label"><see cref="T:System.Windows.Forms.ListViewItem" /> のラベルに割り当てられた新しいテキスト。</param>
        <summary>編集中の <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> の指定したインデックスと、<see cref="T:System.Windows.Forms.ListViewItem" /> のラベルに表示する新しいテキストを使用して、<see cref="T:System.Windows.Forms.ListViewItem" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは、実行時に <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> イベントまたは <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> イベントを発生させて、編集する <xref:System.Windows.Forms.ListView> 内のリスト項目を指定する場合に使用できます。 コンストラクターを使用すると、<xref:System.Windows.Forms.ListViewItem>のラベルに関連付けられた新しいテキストを指定することもできます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LabelEditEventArgs.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : bool with get, set" Usage="System.Windows.Forms.LabelEditEventArgs.CancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ListViewItem" /> のラベルの変更をキャンセルするかどうかを示す値を取得または設定します。</summary>
        <value><see langword="true" /> のラベルの編集をキャンセルする場合は <see cref="T:System.Windows.Forms.ListViewItem" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、<xref:System.Windows.Forms.ListViewItem> のラベルに加えられた変更を取り消し、元のテキストに戻すことができます。 このプロパティを使用して、アプリケーションの要件を満たさない値に項目のキャプションが変更されないようにします。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> イベントの処理と、<xref:System.Windows.Forms.LabelEditEventArgs.Item%2A> プロパティと <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> プロパティの使用方法を示しています。 この例を実行するには、ListView1 という名前の ListView コントロールを含むフォームに次のコードを貼り付け、3つ以上の項目を設定します。 すべてのイベントがイベント処理メソッドに関連付けられていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LabelEditEventArgs.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Item { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : int" Usage="System.Windows.Forms.LabelEditEventArgs.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>編集対象のラベルを保持している <see cref="T:System.Windows.Forms.ListViewItem" /> の 0 から始まるインデックス番号を取得します。</summary>
        <value><see cref="T:System.Windows.Forms.ListViewItem" /> の 0 から始まるインデックス番号。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、<xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> イベントの処理と、<xref:System.Windows.Forms.LabelEditEventArgs.Item%2A> プロパティと <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> プロパティの使用方法を示しています。 この例を実行するには、ListView1 という名前の ListView コントロールを含むフォームに次のコードを貼り付け、3つ以上の項目を設定します。 すべてのイベントがイベント処理メソッドに関連付けられていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LabelEditEventArgs.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Label : string" Usage="System.Windows.Forms.LabelEditEventArgs.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ListViewItem" /> のラベルに割り当てられた新しいテキストを取得します。</summary>
        <value><see cref="T:System.Windows.Forms.ListViewItem" /> と関連付ける新しいテキスト。テキストが変更されない場合は <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 このメンバーの使用例を次のコード例に示します。 この例では、イベントハンドラーは、<xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> イベントの発生を報告します。 このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。 複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。  
  
 コード例を実行するには、`ListView1`という <xref:System.Windows.Forms.ListView> 型のインスタンスを含むプロジェクトに貼り付けます。 次に、イベントハンドラーが <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> イベントに関連付けられていることを確認します。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#463](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#463)]
 [!code-vb[System.Windows.Forms.EventExamples#463](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#463)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
