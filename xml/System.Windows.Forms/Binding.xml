<Type Name="Binding" FullName="System.Windows.Forms.Binding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d5725007f0d3770ffc918317c748bc3f7b627f3c" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82436871" /></Metadata><TypeSignature Language="C#" Value="public class Binding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Binding extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Binding" />
  <TypeSignature Language="VB.NET" Value="Public Class Binding" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binding" />
  <TypeSignature Language="F#" Value="type Binding = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ListBindingConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>オブジェクトのプロパティ値とコントロールのプロパティ値との間の簡易バインドを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Binding> クラスを使用して、コントロールのプロパティとオブジェクトのプロパティの間、またはオブジェクトのリスト内の現在のオブジェクトのプロパティとの間の単純なバインドを作成および維持します。  
  
 最初の例として、<xref:System.Windows.Forms.TextBox> コントロールの <xref:System.Windows.Forms.Control.Text%2A> プロパティを `Customer` オブジェクトの `FirstName` プロパティにバインドすることができます。 2番目のケースの例として、<xref:System.Windows.Forms.TextBox> コントロールの <xref:System.Windows.Forms.Control.Text%2A> プロパティを、顧客を含む <xref:System.Data.DataTable> の `FirstName` プロパティにバインドできます。  
  
 <xref:System.Windows.Forms.Binding> クラスを使用すると、<xref:System.Windows.Forms.Binding.Format> イベントを使用して表示する値の書式を設定したり、<xref:System.Windows.Forms.Binding.Parse> イベントを使用して書式設定された値を取得したりすることもできます。  
  
 <xref:System.Windows.Forms.Binding.%23ctor%2A> コンストラクターを使用して <xref:System.Windows.Forms.Binding> インスタンスを構築する場合は、次の3つの項目を指定する必要があります。  
  
-   バインド先のコントロールプロパティの名前。  
  
-   データ ソース。  
  
-   データソース内のリストまたはプロパティに解決されるナビゲーションパス。 ナビゲーションパスは、オブジェクトの <xref:System.Windows.Forms.Binding.BindingMemberInfo%2A> プロパティを作成するためにも使用されます。  
  
 最初に、データのバインド先のコントロールプロパティの名前を指定する必要があります。 たとえば、<xref:System.Windows.Forms.TextBox> コントロールにデータを表示するには、<xref:System.Windows.Forms.TextBoxBase.Text%2A> プロパティを指定します。  
  
 2つ目は、次の表に示すいずれかのクラスのインスタンスをデータソースとして指定する方法です。  
  
|説明|C# の例|  
|-----------------|-----------------|  
|<xref:System.ComponentModel.IBindingList> または <xref:System.ComponentModel.ITypedList>を実装する任意のクラス。 次のようなものがあります: <xref:System.Data.DataSet>、<xref:System.Data.DataTable>、<xref:System.Data.DataView>、または <xref:System.Data.DataViewManager>。|`DataSet ds = new DataSet("myDataSet");`|  
|オブジェクトのインデックス付きコレクションを作成するために <xref:System.Collections.IList> を実装する任意のクラス。 <xref:System.Windows.Forms.Binding>を作成する前に、コレクションを作成して入力する必要があります。 リスト内のオブジェクトはすべて同じ型である必要があります。それ以外の場合は、例外がスローされます。|`ArrayList ar1 = new ArrayList;  Customer1 cust1 = new Customer("Louis");  ar1.Add(cust1);`|  
|厳密に型指定されたオブジェクトの厳密に型指定された <xref:System.Collections.IList>|`Customer [] custList = new Customer[3];`|  
  
 3番目の方法として、ナビゲーションパスを指定する必要があります。これは、空の文字列 ("")、単一のプロパティ名、またはピリオドで区切られた名前の階層です。 ナビゲーションパスを空の文字列に設定すると、基になるデータソースオブジェクトで <xref:System.Object.ToString%2A> メソッドが呼び出されます。  
  
 データソースが <xref:System.Data.DataTable>で、複数の <xref:System.Data.DataColumn> オブジェクトを含むことができる場合は、ナビゲーションパスを使用して特定の列を解決する必要があります。  
  
> [!NOTE]
>  データソースが <xref:System.Data.DataSet>、<xref:System.Data.DataViewManager>、または <xref:System.Data.DataTable>の場合、実際には <xref:System.Data.DataView>にバインドされます。 その結果、バインドされた行は実際にはオブジェクト <xref:System.Data.DataRowView> ます。  
  
 データソースが複数の <xref:System.Data.DataTable> オブジェクト (<xref:System.Data.DataSet> や <xref:System.Data.DataViewManager>など) を含むオブジェクトに設定されている場合は、ピリオドで区切られたナビゲーションパスが必要です。 また、プロパティが他のオブジェクト (他のクラスオブジェクトを返すプロパティを持つクラスなど) への参照を返すオブジェクトにバインドするときに、ピリオド区切りのナビゲーションパスを使用することもできます。 たとえば、次のナビゲーションパスはすべて、有効なデータフィールドを表します。  
  
-   "Size.Height"  
  
-   "仕入先. CompanyName"  
  
-   "Regions.regionsToCustomers.CustomerFirstName"  
  
-   "Regions.regionsToCustomers.customersToOrders.ordersToDetails.Quantity"  
  
 パスの各メンバーは、1つの値に解決されるプロパティ (整数など)、または値のリスト (文字列の配列など) のいずれかを返すことができます。 パス内の各メンバーはリストまたはプロパティにすることができますが、最終的なメンバーはプロパティに解決される必要があります。 各メンバーは前のメンバーでビルドされます。 "Size. Height" は、現在の <xref:System.Drawing.Size>の <xref:System.Drawing.Size.Height%2A> プロパティに解決されます。"Region. regionsToCustomers. 顧客名" は、現在の顧客の最初の名前に解決されます。ここでは、顧客は現在の地域の顧客の1つです。  
  
 <xref:System.Data.DataRelation> は、1つの <xref:System.Data.DataTable> を <xref:System.Data.DataSet>内の2番目の <xref:System.Data.DataTable> にリンクすることによって値の一覧を返します。 <xref:System.Data.DataSet> に <xref:System.Data.DataRelation> オブジェクトが含まれている場合は、データメンバーを <xref:System.Data.DataTable.TableName%2A> として指定し、その後に <xref:System.Data.DataRelation.RelationName%2A>を入力し、次に <xref:System.Data.DataColumn.ColumnName%2A>することができます。 たとえば、"仕入先" という名前の <xref:System.Data.DataTable> に "suppliers2products" という名前の <xref:System.Data.DataRelation> が含まれている場合、データメンバーは "suppliers2products" になります。  
  
 データソースは、関連する一連のクラスで構成できます。 たとえば、太陽のシステムをカタログ化するクラスのセットがあるとします。 `System` という名前のクラスには、`Star` オブジェクトのコレクションを返す `Stars` という名前のプロパティが含まれています。 各 `Star` オブジェクトには、`Name` プロパティと `Mass` プロパティのほか、`Planet` オブジェクトのコレクションを返す `Planets` プロパティがあります。 このシステムでは、各地球にも `Mass` および `Name` のプロパティがあります。 さらに、各 `Planet` オブジェクトには、`Moon` オブジェクトのコレクションを返す `Moons` プロパティがあります。各オブジェクトには `Name` および `Mass` プロパティもあります。 データソースとして `System` オブジェクトを指定する場合は、次のいずれかをデータメンバーとして指定できます。  
  
-   "Stars.Name"  
  
-   "Stars.Mass"  
  
-   "Stars.Planets.Name"  
  
-   "Stars.Planets.Mass"  
  
-   "Stars.Planets.Moons.Name"  
  
-   "Stars.Planets.Moons.Mass"  
  
 単純にバインドできるコントロールは、<xref:System.Windows.Forms.ControlBindingsCollection>内の <xref:System.Windows.Forms.Binding> オブジェクトのコレクションであり、コントロールの <xref:System.Windows.Forms.Control.DataBindings%2A> プロパティを通じてアクセスできます。 <xref:System.Windows.Forms.Binding> をコレクションに追加するには、<xref:System.Windows.Forms.ControlBindingsCollection.Add%2A> メソッドを呼び出します。これにより、コントロールのプロパティをオブジェクトのプロパティ (またはリスト内の現在のオブジェクトのプロパティ) にバインドします。  
  
 次の Windows コントロールなど、<xref:System.Windows.Forms.Control?displayProperty=nameWithType> クラスから派生した任意のオブジェクトに単純にバインドできます。  
  
-   <xref:System.Windows.Forms.Button>  
  
-   <xref:System.Windows.Forms.CheckBox>  
  
-   <xref:System.Windows.Forms.CheckedListBox>  
  
-   <xref:System.Windows.Forms.ComboBox>  
  
-   <xref:System.Windows.Forms.DateTimePicker>  
  
-   <xref:System.Windows.Forms.DomainUpDown>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.HScrollBar>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <xref:System.Windows.Forms.LinkLabel>  
  
-   <xref:System.Windows.Forms.ListBox>  
  
-   <xref:System.Windows.Forms.ListView>  
  
-   <xref:System.Windows.Forms.MonthCalendar>  
  
-   <xref:System.Windows.Forms.NumericUpDown>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.RadioButton>  
  
-   <xref:System.Windows.Forms.RichTextBox>  
  
-   <xref:System.Windows.Forms.ScrollBar>  
  
-   <xref:System.Windows.Forms.StatusBar>  
  
-   <xref:System.Windows.Forms.TextBox>  
  
-   <xref:System.Windows.Forms.TreeView>  
  
-   <xref:System.Windows.Forms.VScrollBar>  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ComboBox>、<xref:System.Windows.Forms.CheckedListBox>、および <xref:System.Windows.Forms.ListBox> コントロールの <xref:System.Windows.Forms.ListControl.SelectedValue%2A> プロパティのみが単純にバインドされます。  
  
 <xref:System.Windows.Forms.BindingManagerBase> クラスは、特定のデータソースおよびデータメンバーのすべての <xref:System.Windows.Forms.Binding> オブジェクトを管理する抽象クラスです。 <xref:System.Windows.Forms.BindingManagerBase> から派生するクラスは、<xref:System.Windows.Forms.CurrencyManager> と <xref:System.Windows.Forms.PropertyManager> クラスです。 <xref:System.Windows.Forms.Binding> がどのように管理されるかは、<xref:System.Windows.Forms.Binding> がリストバインディングであるか、プロパティバインドであるかによって異なります。 たとえば、リストバインドである場合は、<xref:System.Windows.Forms.BindingManagerBase> を使用してリスト内の <xref:System.Windows.Forms.BindingManagerBase.Position%2A> を指定できます。したがって、<xref:System.Windows.Forms.BindingManagerBase.Position%2A>は、リスト内のすべての項目のうち、どの項目がコントロールに実際にバインドされているかを判断します。 適切な <xref:System.Windows.Forms.BindingManagerBase>を返すには、<xref:System.Windows.Forms.BindingContext>を使用します。  
  
 同じ <xref:System.Windows.Forms.Binding.DataSource%2A>にバインドされたコントロールのセットに新しい行を追加するには、<xref:System.Windows.Forms.BindingManagerBase> クラスの <xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> メソッドを使用します。 <xref:System.Windows.Forms.BindingContext> クラスの <xref:System.Windows.Forms.BindingContext.Item%2A> プロパティを使用して、適切な <xref:System.Windows.Forms.CurrencyManager>を返します。 新しい行の追加をエスケープするには、<xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> メソッドを使用します。  
  
   
  
## Examples  
 次のコード例では、単純なデータバインディングを示すいくつかのコントロールを含む Windows フォームを作成します。 この例では、`Customers` と `Orders`という名前の2つのテーブルと、`custToOrders`という名前の <xref:System.Data.DataRelation> を持つ <xref:System.Data.DataSet> を作成します。 4つのコントロール (<xref:System.Windows.Forms.DateTimePicker> と3つの <xref:System.Windows.Forms.TextBox> コントロール) は、テーブルの列にデータバインドされます。 この例では、コントロールごとに、<xref:System.Windows.Forms.Control.DataBindings%2A> プロパティを使用して <xref:System.Windows.Forms.Binding> を作成し、コントロールに追加します。 この例では、フォームの <xref:System.Windows.Forms.BindingContext>を通じて各テーブルの <xref:System.Windows.Forms.BindingManagerBase> を返します。 4つの <xref:System.Windows.Forms.Button> コントロールは、<xref:System.Windows.Forms.BindingManagerBase> オブジェクトの <xref:System.Windows.Forms.BindingManagerBase.Position%2A> プロパティをインクリメントまたはデクリメントします。  
  
 [!code-cpp[Classic Binding Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding Example/CS/source.cs#1)]
 [!code-vb[Classic Binding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding Example/VB/source.vb#1)]  
 
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingContext" />
    <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
    <altmember cref="T:System.Windows.Forms.ComboBox" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.Binding" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, dataSource As Object, dataMember As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">バインドするコントロール プロパティの名前。</param>
        <param name="dataSource">データ ソースを表す <see cref="T:System.Object" />。</param>
        <param name="dataMember">バインド先のプロパティまたはリスト。</param>
        <summary>データ ソースの指定したデータ メンバーに、指定したコントロール プロパティを単純バインドする、<see cref="T:System.Windows.Forms.Binding" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データソースには、次のいずれかのクラスのインスタンスを指定できます。  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   <xref:System.Collections.IList> インターフェイスを実装する任意のクラス  
  
-   任意のクラス  
  
 `dataMember` 文字列の作成の詳細については、<xref:System.Windows.Forms.Binding> クラスを参照してください。  
  
 コントロールのプロパティへのバインドを作成すると、新しい <xref:System.Windows.Forms.Binding> によって、バインドされたコントロールによって公開されるイベントが検査され、次の2つのイベントにアタッチされます。  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>  
  
-   *PropertyName*`Changed` という名前のイベント (<xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType>など)  
  
 存在しないプロパティにバインドしようとすると、コントロールの <xref:System.Windows.Forms.Control.DataBindings%2A?displayProperty=nameWithType> コレクションに <xref:System.Windows.Forms.Binding> が追加されると <xref:System.ArgumentException> がスローされます。  
  
   
  
## Examples  
 次のコード例では、`myDataSet`という名前の <xref:System.Data.DataSet> のテーブル列に <xref:System.Windows.Forms.TextBox> コントロールをバインドします。 この例では、モジュールの宣言セクションで `myDataSet` を宣言している必要があります。  
  
 [!code-cpp[Classic Binding.Binding Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.Binding Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.Binding Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.Binding Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.Binding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.Binding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><paramref name="propertyName" /> が、コントロールの有効なプロパティでも、空の文字列 ("") でもありません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="propertyName" /> で指定されたプロパティがコントロールに存在しません。</exception>
        <altmember cref="T:System.Windows.Forms.BindingsCollection" />
        <altmember cref="T:System.Windows.Forms.CurrencyManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, dataSource As Object, dataMember As String, formattingEnabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataMember" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName">バインドするコントロール プロパティの名前。</param>
        <param name="dataSource">データ ソースを表す <see cref="T:System.Object" />。</param>
        <param name="dataMember">バインド先のプロパティまたはリスト。</param>
        <param name="formattingEnabled">表示されるデータの書式を指定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>データ ソースの指定したデータ メンバーに、指定したコントロール プロパティをバインドし、オプションで書式設定を適用できるようにする、<see cref="T:System.Windows.Forms.Binding" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="propertyName" /> で指定されたプロパティがコントロールに存在しません。  
  
または 
指定されたプロパティは読み取り専用です。</exception>
        <exception cref="T:System.Exception">書式が無効である場合、<paramref name="propertyName" /> は、コントロールの有効なプロパティでも、空の文字列 ("") でもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled, valuetype System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, dataSource As Object, dataMember As String, formattingEnabled As Boolean, dataSourceUpdateMode As DataSourceUpdateMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled, System::Windows::Forms::DataSourceUpdateMode dataSourceUpdateMode);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool * System.Windows.Forms.DataSourceUpdateMode -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataMember" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSourceUpdateMode" Type="System.Windows.Forms.DataSourceUpdateMode" Index="4" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName">バインドするコントロール プロパティの名前。</param>
        <param name="dataSource">データ ソースを表す <see cref="T:System.Object" />。</param>
        <param name="dataMember">バインド先のプロパティまたはリスト。</param>
        <param name="formattingEnabled">表示されるデータの書式を指定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="dataSourceUpdateMode"><see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> 値のいずれか 1 つです。</param>
        <summary>指定したデータ ソースの指定したデータ メンバーに、指定したコントロール プロパティをバインドする、<see cref="T:System.Windows.Forms.Binding" /> クラスの新しいインスタンスを初期化します。 オプションで書式を有効にしたり、特定の更新設定に基づいてデータ ソースに値を反映したりできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データソースには、次のいずれかのクラスのインスタンスを指定できます。  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   <xref:System.Collections.IList> インターフェイスを実装する任意のクラス  
  
-   任意のクラス  
  
 `dataMember` 文字列の作成の詳細については、<xref:System.Windows.Forms.Binding> クラスを参照してください。  
  
 コントロールのプロパティへのバインドを作成すると、新しい <xref:System.Windows.Forms.Binding> によって、バインドされたコントロールによって公開されるイベントが検査され、次の2つのイベントにアタッチされます。  
  
-   [https://login.microsoftonline.com/consumers/](<xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>)  
  
-   *PropertyName*`Changed` という名前のイベント (<xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType>など)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="propertyName" /> で指定されたプロパティがコントロールに存在しません。  
  
または 
指定されたデータ ソース/データ メンバーまたはコントロール プロパティは、コレクションの別のバインディングに関連付けられています。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled, valuetype System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, dataSource As Object, dataMember As String, formattingEnabled As Boolean, dataSourceUpdateMode As DataSourceUpdateMode, nullValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled, System::Windows::Forms::DataSourceUpdateMode dataSourceUpdateMode, System::Object ^ nullValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool * System.Windows.Forms.DataSourceUpdateMode * obj -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode, nullValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataMember" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSourceUpdateMode" Type="System.Windows.Forms.DataSourceUpdateMode" Index="4" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="nullValue" Type="System.Object" Index="5" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName">バインドするコントロール プロパティの名前。</param>
        <param name="dataSource">データ ソースを表す <see cref="T:System.Object" />。</param>
        <param name="dataMember">バインド先のプロパティまたはリスト。</param>
        <param name="formattingEnabled">表示されるデータの書式を指定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="dataSourceUpdateMode"><see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> 値のいずれか 1 つです。</param>
        <param name="nullValue">データ ソースの値が <see cref="T:System.Object" /> である場合に、バインドされたコントロール プロパティに適用される <see cref="T:System.DBNull" />。</param>
        <summary>指定したデータ ソースの指定したデータ メンバーに、指定したコントロール プロパティをバインドする <see cref="T:System.Windows.Forms.Binding" /> クラスの新しいインスタンスを初期化します。 オプションで書式を有効にしたり、特定の更新設定に基づいてデータ ソースに値を反映したりできる以外に、データ ソースから <see cref="T:System.DBNull" /> が返された場合に使用されるプロパティ値を指定することもできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データソースには、次のいずれかのクラスのインスタンスを指定できます。  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   <xref:System.Collections.IList> インターフェイスを実装する任意のクラス  
  
-   任意のクラス  
  
 `dataMember` 文字列の作成の詳細については、<xref:System.Windows.Forms.Binding> クラスを参照してください。  
  
 コントロールのプロパティへのバインドを作成すると、新しい <xref:System.Windows.Forms.Binding> によって、バインドされたコントロールによって公開されるイベントが検査され、次の2つのイベントにアタッチされます。  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>  
  
-   *PropertyName*`Changed` という名前のイベント (<xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType>など)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="propertyName" /> で指定されたプロパティがコントロールに存在しません。  
  
または 
指定されたデータ ソース/データ メンバーまたはコントロール プロパティは、コレクションの別のバインディングに関連付けられています。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled, valuetype System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, dataSource As Object, dataMember As String, formattingEnabled As Boolean, dataSourceUpdateMode As DataSourceUpdateMode, nullValue As Object, formatString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled, System::Windows::Forms::DataSourceUpdateMode dataSourceUpdateMode, System::Object ^ nullValue, System::String ^ formatString);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool * System.Windows.Forms.DataSourceUpdateMode * obj * string -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode, nullValue, formatString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataMember" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSourceUpdateMode" Type="System.Windows.Forms.DataSourceUpdateMode" Index="4" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="nullValue" Type="System.Object" Index="5" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formatString" Type="System.String" Index="6" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName">バインドするコントロール プロパティの名前。</param>
        <param name="dataSource">データ ソースを表す <see cref="T:System.Object" />。</param>
        <param name="dataMember">バインド先のプロパティまたはリスト。</param>
        <param name="formattingEnabled">表示されるデータの書式を指定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="dataSourceUpdateMode"><see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> 値のいずれか 1 つです。</param>
        <param name="nullValue">データ ソースの値が <see cref="T:System.Object" /> である場合に、バインドされたコントロール プロパティに適用される <see cref="T:System.DBNull" />。</param>
        <param name="formatString">値の表示方法を示す 1 つ以上の書式指定子文字。</param>
        <summary>指定したデータ ソースの指定したデータ メンバーに、指定したコントロール プロパティをバインドする、<see cref="T:System.Windows.Forms.Binding" /> クラスの新しいインスタンスを初期化します。 オプションとして、指定した書式指定文字列を含む書式を有効にしたり、指定した更新設定に基づいてデータ ソースに値を反映したりできます。また、<see cref="T:System.DBNull" /> がデータ ソースから返された場合に、指定した値をプロパティに設定することもできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データソースには、次のいずれかのクラスのインスタンスを指定できます。  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   <xref:System.Collections.IList> インターフェイスを実装する任意のクラス  
  
-   任意のクラス  
  
 `dataMember` 文字列の作成の詳細については、<xref:System.Windows.Forms.Binding> クラスを参照してください。  
  
 コントロールのプロパティへのバインドを作成すると、新しい <xref:System.Windows.Forms.Binding> によって、バインドされたコントロールによって公開されるイベントが検査され、次の2つのイベントにアタッチされます。  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>  
  
-   *PropertyName*`Changed` という名前のイベント (<xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType>など)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="propertyName" /> で指定されたプロパティがコントロールに存在しません。  
  
または 
指定されたデータ ソース/データ メンバーまたはコントロール プロパティは、コレクションの別のバインディングに関連付けられています。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString, IFormatProvider formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled, valuetype System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString, class System.IFormatProvider formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object,System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, dataSource As Object, dataMember As String, formattingEnabled As Boolean, dataSourceUpdateMode As DataSourceUpdateMode, nullValue As Object, formatString As String, formatInfo As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled, System::Windows::Forms::DataSourceUpdateMode dataSourceUpdateMode, System::Object ^ nullValue, System::String ^ formatString, IFormatProvider ^ formatInfo);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool * System.Windows.Forms.DataSourceUpdateMode * obj * string * IFormatProvider -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode, nullValue, formatString, formatInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataMember" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSourceUpdateMode" Type="System.Windows.Forms.DataSourceUpdateMode" Index="4" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="nullValue" Type="System.Object" Index="5" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formatString" Type="System.String" Index="6" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formatInfo" Type="System.IFormatProvider" Index="7" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName">バインドするコントロール プロパティの名前。</param>
        <param name="dataSource">データ ソースを表す <see cref="T:System.Object" />。</param>
        <param name="dataMember">バインド先のプロパティまたはリスト。</param>
        <param name="formattingEnabled">表示されるデータの書式を指定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="dataSourceUpdateMode"><see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> 値のいずれか 1 つです。</param>
        <param name="nullValue">データ ソースの値が <see cref="T:System.Object" /> である場合に、バインドされたコントロール プロパティに適用される <see cref="T:System.DBNull" />。</param>
        <param name="formatString">値の表示方法を示す 1 つ以上の書式指定子文字。</param>
        <param name="formatInfo">既定の書式指定動作をオーバーライドする <see cref="T:System.IFormatProvider" /> の実装。</param>
        <summary>指定したデータ ソースの指定したデータ メンバーに、指定したコントロール プロパティをバインドする、<see cref="T:System.Windows.Forms.Binding" /> クラスの新しいインスタンスを初期化します。 オプションで、指定した書式指定文字列で書式を有効にしたり、特定の更新設定に基づいてデータ ソースに値を反映したりできる以外に、データ ソースから <see cref="T:System.DBNull" /> が返された場合に使用されるプロパティ値を指定したり、書式プロバイダーを指定することもできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データソースには、次のいずれかのクラスのインスタンスを指定できます。  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   <xref:System.Collections.IList> インターフェイスを実装する任意のクラス  
  
-   任意のクラス  
  
 `dataMember` 文字列の作成の詳細については、<xref:System.Windows.Forms.Binding> クラスを参照してください。  
  
 コントロールのプロパティへのバインドを作成すると、新しい <xref:System.Windows.Forms.Binding> によって、バインドされたコントロールによって公開されるイベントが検査され、次の2つのイベントにアタッチされます。  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>  
  
-   *PropertyName*`Changed` という名前のイベント (<xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType>など)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="propertyName" /> で指定されたプロパティがコントロールに存在しません。  
  
または 
指定されたデータ ソース/データ メンバーまたはコントロール プロパティは、コレクションの別のバインディングに関連付けられています。</exception>
      </Docs>
    </Member>
    <Member MemberName="BindableComponent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IBindableComponent BindableComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IBindableComponent BindableComponent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.BindableComponent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindableComponent As IBindableComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IBindableComponent ^ BindableComponent { System::Windows::Forms::IBindableComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindableComponent : System.Windows.Forms.IBindableComponent" Usage="System.Windows.Forms.Binding.BindableComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IBindableComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.Binding" /> が関連付けられているコントロールを取得します。</summary>
        <value><see cref="T:System.Windows.Forms.IBindableComponent" /> が関連付けられている <see cref="T:System.Windows.Forms.Binding" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingCompleteEventHandler BindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Binding.BindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingComplete As BindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingCompleteEventHandler ^ BindingComplete;" />
      <MemberSignature Language="F#" Value="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " Usage="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データがコントロールからデータ ソースにプッシュされた場合、またはその逆の場合などに、<see cref="P:System.Windows.Forms.Binding.FormattingEnabled" /> プロパティが <see langword="true" /> に設定され、バインディング操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、<xref:System.Windows.Forms.Binding.FormattingEnabled%2A> が `true`場合に、次のいずれかの状況で発生します。  
  
-   データソースからのデータは、コントロールのプロパティにプッシュされます。  
  
-   コントロールプロパティのデータは、データソースにプッシュされます。  
  
 このイベントは、完了ステータスとは関係なく、これらの操作の完了時に発生します。 たとえば、バインド操作が <xref:System.Windows.Forms.DateTimePicker.Value%2A> プロパティに null 値をバインドすると、例外がスローされますが、<xref:System.Windows.Forms.Binding.BindingComplete> イベントが発生します。 このイベントのハンドラーは、バインドプロセスの成功、エラー、または例外に基づいて、適切なアクションを実行できます。そのためには、<xref:System.Windows.Forms.BindingCompleteEventArgs> パラメーターの <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> プロパティを調べます。  
  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Windows.Forms.Binding.BindingComplete> イベントの処理方法を示しています。  
  
 [!code-cpp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Binding.FormattingEnabled" />
        <altmember cref="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BindingManagerBase">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingManagerBase BindingManagerBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingManagerBase BindingManagerBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.BindingManagerBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingManagerBase As BindingManagerBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingManagerBase ^ BindingManagerBase { System::Windows::Forms::BindingManagerBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingManagerBase : System.Windows.Forms.BindingManagerBase" Usage="System.Windows.Forms.Binding.BindingManagerBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Forms.BindingManagerBase" /> の <see cref="T:System.Windows.Forms.Binding" /> を取得します。</summary>
        <value><see cref="T:System.Windows.Forms.BindingManagerBase" /> を管理する <see cref="T:System.Windows.Forms.Binding" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingManagerBase> を使用して、<xref:System.Windows.Forms.BindingManagerBase.Position%2A> プロパティをインクリメントまたはデクリメントして、データバインドリストを反復処理します。 <xref:System.Windows.Forms.BindingManagerBase> クラスは abstract です。 データバインドリストを管理する <xref:System.Windows.Forms.CurrencyManager> クラスは、<xref:System.Windows.Forms.BindingManagerBase> クラスから継承されます。  
  
   
  
## Examples  
 次のコード例では、フォーム上のすべての <xref:System.Windows.Forms.Binding> の <xref:System.Windows.Forms.BindingManagerBase> を取得し、各 <xref:System.Windows.Forms.BindingManagerBase>の <xref:System.Windows.Forms.BindingManagerBase.Position%2A> プロパティを出力します。  
  
 [!code-cpp[Classic Binding.BindingManagerBase Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.BindingManagerBase Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.BindingManagerBase Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.BindingManagerBase Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.BindingManagerBase Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.BindingManagerBase Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingMemberInfo">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingMemberInfo BindingMemberInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BindingMemberInfo BindingMemberInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.BindingMemberInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingMemberInfo As BindingMemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingMemberInfo BindingMemberInfo { System::Windows::Forms::BindingMemberInfo get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingMemberInfo : System.Windows.Forms.BindingMemberInfo" Usage="System.Windows.Forms.Binding.BindingMemberInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingMemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><paramref name="dataMember" /> コンストラクターの <see cref="Overload:System.Windows.Forms.Binding.#ctor" /> パラメーターに基づいて、バインディングに関する情報を格納しているオブジェクトを取得します。</summary>
        <value><see cref="T:System.Windows.Forms.BindingMemberInfo" /> に関する情報を格納している <see cref="T:System.Windows.Forms.Binding" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingMemberInfo> は、<xref:System.Windows.Forms.Binding.%23ctor%2A> コンストラクターに渡される `dataMember` 文字列から作成されます。  
  
   
  
## Examples  
 次のコード例では、フォーム上の各 <xref:System.Windows.Forms.Binding> の <xref:System.Windows.Forms.BindingMemberInfo> を取得し、その <xref:System.Windows.Forms.BindingMemberInfo.BindingMember%2A> の <xref:System.Windows.Forms.BindingMemberInfo.BindingPath%2A>、<xref:System.Windows.Forms.BindingMemberInfo.BindingField%2A>、および <xref:System.Windows.Forms.Binding>の各プロパティ値を出力します。  
  
 [!code-cpp[Classic Binding.BindingMemberInfo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.BindingMemberInfo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.BindingMemberInfo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.BindingMemberInfo Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.BindingMemberInfo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.BindingMemberInfo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingsCollection" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.Control" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Control As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ Control { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : System.Windows.Forms.Control" Usage="System.Windows.Forms.Binding.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バインディングが属するコントロールを取得します。</summary>
        <value>バインディングが属する <see cref="T:System.Windows.Forms.Control" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、特定のデータソースの <xref:System.Windows.Forms.BindingManagerBase> を取得し、データソースにバインドされている各 <xref:System.Windows.Forms.Binding.Control%2A> プロパティに関する情報を出力します。 この例では、<xref:System.Windows.Forms.BindingManagerBase> の <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> プロパティを使用して、すべてのコントロールを取得します。  
  
 [!code-cpp[Classic Binding.Control Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.Control Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.Control Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.Control Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.Control Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.Control Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlUpdateMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ControlUpdateMode ControlUpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ControlUpdateMode ControlUpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.ControlUpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlUpdateMode As ControlUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ControlUpdateMode ControlUpdateMode { System::Windows::Forms::ControlUpdateMode get(); void set(System::Windows::Forms::ControlUpdateMode value); };" />
      <MemberSignature Language="F#" Value="member this.ControlUpdateMode : System.Windows.Forms.ControlUpdateMode with get, set" Usage="System.Windows.Forms.Binding.ControlUpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースの変更が、バインドされたコントロール プロパティにいつ反映されるかを取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.ControlUpdateMode" /> 値のいずれか 1 つです。 既定では、 <see cref="F:System.Windows.Forms.ControlUpdateMode.OnPropertyChanged" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj" Usage="System.Windows.Forms.Binding.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このバインディングのデータ ソースを取得します。</summary>
        <value>データ ソースを表す <see cref="T:System.Object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用できるデータソースは次のとおりです。  
  
-   <xref:System.Data.DataSet> 変数  
  
-   <xref:System.Data.DataTable> 変数  
  
-   <xref:System.Data.DataView> 変数  
  
-   <xref:System.Data.DataViewManager> 変数  
  
-   <xref:System.Collections.IList> インターフェイスを実装する任意のオブジェクト  
  
-   任意のオブジェクト  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.Binding.DataSource%2A> プロパティを使用して <xref:System.Data.DataSet>を返します。  
  
 [!code-cpp[Classic Binding.DataSource Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.DataSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSourceNullValue">
      <MemberSignature Language="C#" Value="public object DataSourceNullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSourceNullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.DataSourceNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceNullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSourceNullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceNullValue : obj with get, set" Usage="System.Windows.Forms.Binding.DataSourceNullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの値が <see langword="null" /> または空の場合にデータ ソースに格納される値を取得または設定します。</summary>
        <value>コントロールのプロパティが空または <see cref="T:System.Object" /> の場合にデータ ソースに格納される <see langword="null" />。 既定値は、値型の場合は <see cref="T:System.DBNull" />、値型以外の場合は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データソースに <xref:System.DBNull>が含まれている場合は、<xref:System.Windows.Forms.Binding.NullValue%2A> プロパティを使用して、バインドされたコントロールに表示される値を指定できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Binding.NullValue" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceUpdateMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataSourceUpdateMode DataSourceUpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataSourceUpdateMode DataSourceUpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.DataSourceUpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceUpdateMode As DataSourceUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataSourceUpdateMode DataSourceUpdateMode { System::Windows::Forms::DataSourceUpdateMode get(); void set(System::Windows::Forms::DataSourceUpdateMode value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceUpdateMode : System.Windows.Forms.DataSourceUpdateMode with get, set" Usage="System.Windows.Forms.Binding.DataSourceUpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataSourceUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バインドされたコントロール プロパティの変更がデータ ソースにいつ反映されるかを示す値を取得または設定します。</summary>
        <value>変更が反映されたことを示す値。 既定では、 <see cref="F:System.Windows.Forms.DataSourceUpdateMode.OnValidation" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティが <xref:System.Windows.Forms.DataSourceUpdateMode.Never>に設定されている場合でも、最初に確立されたときに、バインドが少なくとも1回更新されることに注意してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ConvertEventHandler Format;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ConvertEventHandler Format" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Binding.Format" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Format As ConvertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ConvertEventHandler ^ Format;" />
      <MemberSignature Language="F#" Value="member this.Format : System.Windows.Forms.ConvertEventHandler " Usage="member this.Format : System.Windows.Forms.ConvertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ConvertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのプロパティをデータ値にバインドすると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Binding.Format> イベントは、データがデータソースからコントロールにプッシュされるときに発生します。 <xref:System.Windows.Forms.Binding.Format> イベントを処理して、書式設定されていないデータをデータソースから書式設定されたデータに変換して表示できるようにすることができます。 データがコントロールからデータソースにプルされると、<xref:System.Windows.Forms.Binding.Parse> イベントが発生して、表示される値が unformat され、<xref:System.Windows.Forms.Binding.Format> イベントが発生して、表示するデータが再フォーマットされます。 これにより、ユーザーがコントロールに書式設定されたデータを入力したかどうかに関係なく、バインドされたコントロールに正しく書式設定されたデータが表示されます。  
  
 <xref:System.Windows.Forms.Binding.Format> イベントと <xref:System.Windows.Forms.Binding.Parse> イベントを使用すると、データを表示するためのカスタム形式を作成できます。 たとえば、テーブル内のデータが <xref:System.Decimal>型である場合、<xref:System.Windows.Forms.ConvertEventArgs> の <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> プロパティを <xref:System.Windows.Forms.Binding.Format> イベントの書式設定された値に設定することにより、データをローカルの通貨形式で表示できます。 その結果、<xref:System.Windows.Forms.Binding.Parse> イベントに表示されている値を unformat する必要があります。  
  
 <xref:System.Windows.Forms.Binding.Format> イベントは、<xref:System.Windows.Forms.BindingManagerBase> の <xref:System.Windows.Forms.BindingManagerBase.Current%2A> の値が変更されるたびに発生します。これには次のものが含まれます。  
  
-   プロパティが最初にバインドされたとき。  
  
-   <xref:System.Windows.Forms.BindingManagerBase.Position%2A> が変更されたとき。  
  
-   データバインドリストの並べ替えまたはフィルター処理が行われるたびに、<xref:System.Data.DataView> がリストを提供するときに実行されます。  
  
 <xref:System.Windows.Forms.Binding.Format> イベントは、<xref:System.Windows.Forms.Binding.Parse> イベントの後にも発生します。 たとえば、コントロールがフォーカスを失った場合は、その内容が解析されます。 その後すぐに、新しいデータがコントロールにプッシュされると、<xref:System.Windows.Forms.Binding.Format> イベントが発生し、新しいコンテンツの書式設定が可能になります。  
  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.Binding>を作成し、<xref:System.Windows.Forms.ConvertEventHandler> デリゲートを <xref:System.Windows.Forms.Binding.Parse> イベントと <xref:System.Windows.Forms.Binding.Format> イベントの両方に追加し、<xref:System.Windows.Forms.Binding> プロパティを使用して <xref:System.Windows.Forms.BindingsCollection> コントロールの <xref:System.Windows.Forms.TextBox> に <xref:System.Windows.Forms.Control.DataBindings%2A> を追加します。 <xref:System.Windows.Forms.Binding.Format> イベントに追加された `DecimalToCurrencyString` イベントデリゲートは、<xref:System.Decimal.ToString%2A> メソッドを使用して、バインドされた値 (<xref:System.Decimal> 型) を通貨として書式設定します。 <xref:System.Windows.Forms.Binding.Parse> イベントに追加された `CurrencyStringToDecimal` イベントデリゲートは、コントロールによって表示される値を <xref:System.Decimal> の型に変換します。  
  
 この例では、`ds`という名前の <xref:System.Data.DataSet> が存在することを前提としています。  
  
 [!code-cpp[Classic Binding.Format Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.Format Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.Format Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.Format Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.Format Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.Format Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Binding.Parse" />
        <altmember cref="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="FormatInfo">
      <MemberSignature Language="C#" Value="public IFormatProvider FormatInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IFormatProvider FormatInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.FormatInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatInfo As IFormatProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IFormatProvider ^ FormatInfo { IFormatProvider ^ get(); void set(IFormatProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormatInfo : IFormatProvider with get, set" Usage="System.Windows.Forms.Binding.FormatInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IFormatProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カスタムの書式設定動作を定義する <see cref="T:System.IFormatProvider" /> を取得または設定します。</summary>
        <value>カスタムの書式設定動作を定義する <see cref="T:System.IFormatProvider" /> の実装。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを設定すると、<xref:System.Windows.Forms.Application.CurrentCulture%2A?displayProperty=nameWithType> プロパティの設定を使用する既定の書式設定動作がオーバーライドされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatString">
      <MemberSignature Language="C#" Value="public string FormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormatString" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.FormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormatString : string with get, set" Usage="System.Windows.Forms.Binding.FormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>値の表示方法を示す書式指定子文字を取得または設定します。</summary>
        <value>値の表示方法を示す書式指定子文字の文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用される書式指定文字列は、標準 .NET Framework 形式の仕様に従う必要があります。 詳細については、「 [.NET Framework の型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormattingEnabled">
      <MemberSignature Language="C#" Value="public bool FormattingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FormattingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.FormattingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property FormattingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FormattingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FormattingEnabled : bool with get, set" Usage="System.Windows.Forms.Binding.FormattingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロール プロパティ データに型変換および書式指定が適用されるかどうかを示す値を取得または設定します。</summary>
        <value>コントロール プロパティ データの型変換および書式指定が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを `true` に設定すると、エラー処理の動作も有効になり、<xref:System.Windows.Forms.Binding.BindingComplete> イベントが発生します。 このイベントのハンドラーは、バインドプロセスの成功、エラー、または例外に基づいて、適切なアクションを実行できます。そのためには、<xref:System.Windows.Forms.BindingCompleteEventArgs> パラメーターの <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> プロパティを調べます。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Binding.BindingComplete" />
        <altmember cref="T:System.Windows.Forms.BindingCompleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="IsBinding">
      <MemberSignature Language="C#" Value="public bool IsBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBinding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.IsBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBinding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBinding : bool" Usage="System.Windows.Forms.Binding.IsBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バインディングがアクティブかどうかを示す値を取得します。</summary>
        <value>バインディングがアクティブな場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 バインドは、次の条件を満たしている場合にアクティブになります。  
  
-   すべてのプロパティが設定されます。  
  
-   ユーザーは、<xref:System.Windows.Forms.Binding> が属している <xref:System.Windows.Forms.BindingManagerBase> で <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> または <xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> を呼び出しませんでした。  
  
-   <xref:System.Windows.Forms.Binding> が属するコントロールが作成されました。  
  
   
  
## Examples  
 次のコード例では、フォーム上の各 <xref:System.Windows.Forms.Binding> の <xref:System.Windows.Forms.Binding.PropertyName%2A> と <xref:System.Windows.Forms.Binding.IsBinding%2A> の値を出力します。  
  
 [!code-cpp[Classic Binding.IsBinding Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.IsBinding Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.IsBinding Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.IsBinding Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.IsBinding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.IsBinding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NullValue">
      <MemberSignature Language="C#" Value="public object NullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.NullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property NullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullValue : obj with get, set" Usage="System.Windows.Forms.Binding.NullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースに <see cref="T:System.Object" /> 値が格納されている場合にコントロール プロパティとして設定される <see cref="T:System.DBNull" /> を取得または設定します。</summary>
        <value>データ ソースに <see cref="T:System.Object" /> 値が格納されている場合にコントロール プロパティとして設定される <see cref="T:System.DBNull" />。 既定では、 <see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Binding.NullValue%2A> プロパティを正しく適用するには、データソースに <xref:System.DBNull> が含まれている必要があります。 データソースの種類が文字列や整数などの型である場合、<xref:System.Windows.Forms.Binding.NullValue%2A> プロパティの値は無視されます。 また、`null`に設定されている場合、<xref:System.Windows.Forms.Binding.NullValue%2A> プロパティは無視されます。  
  
 コントロールプロパティが <xref:System.Windows.Forms.Binding.NullValue%2A>のオブジェクトに設定されている場合、null 値がデータソースに追加されます。 <xref:System.Windows.Forms.Binding.NullValue%2A> が文字列値に設定されている場合、比較では大文字と小文字が区別されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBindingComplete(class System.Windows.Forms.BindingCompleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBindingComplete (e As BindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBindingComplete(System::Windows::Forms::BindingCompleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit&#xA;override this.OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit" Usage="binding.OnBindingComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.BindingCompleteEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> です。</param>
        <summary><see cref="E:System.Windows.Forms.Binding.BindingComplete" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。  
  
 <xref:System.Windows.Forms.Binding.OnBindingComplete%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> メソッドを呼び出してください。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnFormat">
      <MemberSignature Language="C#" Value="protected virtual void OnFormat (System.Windows.Forms.ConvertEventArgs cevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormat(class System.Windows.Forms.ConvertEventArgs cevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormat (cevent As ConvertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormat(System::Windows::Forms::ConvertEventArgs ^ cevent);" />
      <MemberSignature Language="F#" Value="abstract member OnFormat : System.Windows.Forms.ConvertEventArgs -&gt; unit&#xA;override this.OnFormat : System.Windows.Forms.ConvertEventArgs -&gt; unit" Usage="binding.OnFormat cevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cevent" Type="System.Windows.Forms.ConvertEventArgs" />
      </Parameters>
      <Docs>
        <param name="cevent">イベント データを含んでいる <see cref="T:System.Windows.Forms.ConvertEventArgs" /> です。</param>
        <summary><see cref="E:System.Windows.Forms.Binding.Format" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。  
  
 <xref:System.Windows.Forms.Binding.OnFormat%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Windows.Forms.Binding.Format" />
        <altmember cref="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Binding.Parse" />
      </Docs>
    </Member>
    <Member MemberName="OnParse">
      <MemberSignature Language="C#" Value="protected virtual void OnParse (System.Windows.Forms.ConvertEventArgs cevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParse(class System.Windows.Forms.ConvertEventArgs cevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParse (cevent As ConvertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParse(System::Windows::Forms::ConvertEventArgs ^ cevent);" />
      <MemberSignature Language="F#" Value="abstract member OnParse : System.Windows.Forms.ConvertEventArgs -&gt; unit&#xA;override this.OnParse : System.Windows.Forms.ConvertEventArgs -&gt; unit" Usage="binding.OnParse cevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cevent" Type="System.Windows.Forms.ConvertEventArgs" />
      </Parameters>
      <Docs>
        <param name="cevent">イベント データを含んでいる <see cref="T:System.Windows.Forms.ConvertEventArgs" /> です。</param>
        <summary><see cref="E:System.Windows.Forms.Binding.Parse" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。  
  
 <xref:System.Windows.Forms.Binding.OnParse%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Windows.Forms.Binding.Format" />
        <altmember cref="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Binding.Parse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ConvertEventHandler Parse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ConvertEventHandler Parse" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Binding.Parse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Parse As ConvertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ConvertEventHandler ^ Parse;" />
      <MemberSignature Language="F#" Value="member this.Parse : System.Windows.Forms.ConvertEventHandler " Usage="member this.Parse : System.Windows.Forms.ConvertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ConvertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ連結コントロールの値が変更されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Binding.Format> イベントと <xref:System.Windows.Forms.Binding.Parse> イベントを使用すると、データを表示するためのカスタム形式を作成できます。 たとえば、テーブル内のデータが <xref:System.Decimal>型である場合、<xref:System.Windows.Forms.ConvertEventArgs> の <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> プロパティを <xref:System.Windows.Forms.Binding.Format> イベントの書式設定された値に設定することにより、データをローカルの通貨形式で表示できます。 その結果、<xref:System.Windows.Forms.Binding.Parse> イベントに表示されている値を unformat する必要があります。  
  
 <xref:System.Windows.Forms.Binding.Parse> イベントは、次の条件で発生します。  
  
-   <xref:System.Windows.Forms.Control> の <xref:System.Windows.Forms.Control.Validated> イベントが発生した後。  
  
-   <xref:System.Windows.Forms.BindingManagerBase> の <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> メソッドが呼び出されたとき。  
  
-   <xref:System.Windows.Forms.BindingManagerBase> の <xref:System.Windows.Forms.BindingManagerBase.Current%2A> が変更された場合 (つまり、<xref:System.Windows.Forms.BindingManagerBase.Position%2A> が変更された場合)。  
  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.Binding>を作成し、<xref:System.Windows.Forms.ConvertEventHandler> デリゲートを <xref:System.Windows.Forms.Binding.Parse> イベントと <xref:System.Windows.Forms.Binding.Format> イベントの両方に追加し、<xref:System.Windows.Forms.Binding> プロパティを使用して <xref:System.Windows.Forms.BindingsCollection> コントロールの <xref:System.Windows.Forms.TextBox> に <xref:System.Windows.Forms.Control.DataBindings%2A> を追加します。 <xref:System.Windows.Forms.Binding.Format> イベントに追加された `DecimalToCurrencyString` イベントデリゲートは、<xref:System.Decimal.ToString%2A> メソッドを使用して、バインドされた値 (<xref:System.Decimal> 型) を通貨として書式設定します。 <xref:System.Windows.Forms.Binding.Parse> イベントに追加された `CurrencyStringToDecimal` イベントデリゲートは、コントロールによって表示される値を <xref:System.Decimal> の型に変換します。  
  
 [!code-cpp[Classic Binding.Parse Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.Parse Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.Parse Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.Parse Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.Parse Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.Parse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Binding.Format" />
        <altmember cref="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string PropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyName : string" Usage="System.Windows.Forms.Binding.PropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのデータ バインドされたプロパティの名前を取得します。</summary>
        <value>バインド先のコントロール プロパティの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データソース内のリストにバインドするコントロールプロパティを指定するには、<xref:System.Windows.Forms.Binding.PropertyName%2A> を使用します。 通常、<xref:System.Windows.Forms.TextBox> コントロールの <xref:System.Windows.Forms.Control.Text%2A> プロパティなどの表示プロパティをバインドします。 ただし、コントロールの任意のプロパティをバインドできるため、データベースのデータを使用して、プログラムで実行時にコントロールを作成できます。  
  
   
  
## Examples  
 次のコード例では、フォーム上の各コントロールについて、各 <xref:System.Windows.Forms.Binding> の <xref:System.Windows.Forms.Binding.PropertyName%2A> 値を出力します。  
  
 [!code-cpp[Classic Binding.PropertyName Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.PropertyName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.PropertyName Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.PropertyName Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.PropertyName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.PropertyName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadValue">
      <MemberSignature Language="C#" Value="public void ReadValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.ReadValue" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadValue ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadValue();" />
      <MemberSignature Language="F#" Value="member this.ReadValue : unit -&gt; unit" Usage="binding.ReadValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロール プロパティをデータ ソースから読み取った値に設定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public void WriteValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.WriteValue" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteValue ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteValue();" />
      <MemberSignature Language="F#" Value="member this.WriteValue : unit -&gt; unit" Usage="binding.WriteValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロール プロパティから現在の値を読み取って、データ ソースに書き込みます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
