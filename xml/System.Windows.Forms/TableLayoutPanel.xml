<Type Name="TableLayoutPanel" FullName="System.Windows.Forms.TableLayoutPanel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b1dc5d05de7a34e71834619f54da76a28de5a01d" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75177792" /></Metadata><TypeSignature Language="C#" Value="public class TableLayoutPanel : System.Windows.Forms.Panel, System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TableLayoutPanel extends System.Windows.Forms.Panel implements class System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TableLayoutPanel" />
  <TypeSignature Language="VB.NET" Value="Public Class TableLayoutPanel&#xA;Inherits Panel&#xA;Implements IExtenderProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableLayoutPanel : System::Windows::Forms::Panel, System::ComponentModel::IExtenderProvider" />
  <TypeSignature Language="F#" Value="type TableLayoutPanel = class&#xA;    inherit Panel&#xA;    interface IExtenderProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Panel</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IExtenderProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("ColumnCount")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.TableLayoutPanelCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TableLayoutPanelDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("ColumnSpan", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("RowSpan", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("Row", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("Column", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("CellPosition", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Never)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.TableLayoutPanelCodeDomSerializer, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TableLayoutPanelDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>内容を行と列から成るグリッドに動的にレイアウトするパネルを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TableLayoutPanel> コントロールは、その内容をグリッド内に配置します。 レイアウトはデザイン時と実行時の両方で行われるため、アプリケーション環境の変更に合わせて動的に変更できます。 また、パネル内のコントロールが適切にサイズ変更されるため、親コントロールのサイズ変更や、ローカリゼーションに伴うテキスト長の変更に対応できます。  
  
 Windows フォーム コントロールは、<xref:System.Windows.Forms.TableLayoutPanel> の他のインスタンスを含めて、<xref:System.Windows.Forms.TableLayoutPanel> コントロールの子にすることができます。 これにより、実行時の変更に適応する高度なレイアウトを作成できます。  
  
 <xref:System.Windows.Forms.TableLayoutPanel>、<xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A>、および <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> プロパティの値に応じて、<xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> コントロールを追加するときに新しいコントロールに合わせて拡張できます。 <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> プロパティまたは <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> プロパティのいずれかを 0 の値に設定すると、<xref:System.Windows.Forms.TableLayoutPanel> が対応する方向にバインド解除されます。  
  
 <xref:System.Windows.Forms.TableLayoutPanel> コントロールが完全に子コントロールになった後で、(水平または垂直の) 展開の方向を制御することもできます。 既定では、<xref:System.Windows.Forms.TableLayoutPanel> コントロールは行を追加することで下方向に拡張します。  
  
 既定の動作とは異なる方法で行と列を動作させる場合は、<xref:System.Windows.Forms.TableLayoutPanel.RowStyles%2A> プロパティと <xref:System.Windows.Forms.TableLayoutPanel.ColumnStyles%2A> プロパティを使用して、行と列のプロパティを制御できます。 行または列のプロパティを個別に設定することができます。  
  
 <xref:System.Windows.Forms.TableLayoutPanel> コントロールは、その子コントロールに `Cell`、`Column`、`Row`、`ColumnSpan`、および `RowSpan` の各プロパティを追加します。  
  
 子コントロールで <xref:System.Windows.Forms.TableLayoutPanel> プロパティまたは `ColumnSpan` プロパティを設定することで、`RowSpan` コントロールのセルをマージできます。  
  
> [!NOTE]
>  実行時に `Cell`、`Column`、`Row`、`ColumnSpan`、および `RowSpan` の各プロパティを設定するには、<xref:System.Windows.Forms.TableLayoutPanel.SetCellPosition%2A>、<xref:System.Windows.Forms.TableLayoutPanel.SetColumn%2A>、<xref:System.Windows.Forms.TableLayoutPanel.SetRow%2A>、<xref:System.Windows.Forms.TableLayoutPanel.SetColumnSpan%2A>、および <xref:System.Windows.Forms.TableLayoutPanel.SetRowSpan%2A> の各メソッドを使用します。  
>   
>  実行時に `Cell`、`Column`、`Row`、`ColumnSpan`、および `RowSpan` の各プロパティを読み取るには、<xref:System.Windows.Forms.TableLayoutPanel.GetCellPosition%2A>、<xref:System.Windows.Forms.TableLayoutPanel.GetColumn%2A>、<xref:System.Windows.Forms.TableLayoutPanel.GetRow%2A>、<xref:System.Windows.Forms.TableLayoutPanel.GetColumnSpan%2A>、および <xref:System.Windows.Forms.TableLayoutPanel.GetRowSpan%2A> の各メソッドを使用します。  
  
 子コントロールのドッキング動作は、他のコンテナーコントロールと同じです。  
  
 <xref:System.Windows.Forms.TableLayoutPanel> 内の子コントロールの固定動作は、他のコンテナーコントロールの動作とは異なります。 子コントロールの <xref:System.Windows.Forms.Control.Anchor%2A> プロパティの値が <xref:System.Windows.Forms.AnchorStyles.Left> または <xref:System.Windows.Forms.AnchorStyles.Right>に設定されている場合、コントロールはセルの左または右の境界線に対して配置され、コントロールの <xref:System.Windows.Forms.Control.Margin%2A> プロパティとパネルの <xref:System.Windows.Forms.Control.Padding%2A> プロパティの合計と同じ距離になります。 <xref:System.Windows.Forms.AnchorStyles.Left> と <xref:System.Windows.Forms.AnchorStyles.Right> の両方の値が設定されている場合、コントロールのサイズはセルの幅に合わせて調整され、<xref:System.Windows.Forms.Control.Margin%2A> と <xref:System.Windows.Forms.Control.Padding%2A> の値が考慮されます。 <xref:System.Windows.Forms.AnchorStyles.Top> と <xref:System.Windows.Forms.AnchorStyles.Bottom> アンカーの動作は似ています。 詳細については、「[方法: TableLayoutPanel コントロールで子コントロールを固定およびドッキング](~/docs/framework/winforms/controls/how-to-anchor-and-dock-child-controls-in-a-tablelayoutpanel-control.md)する」を参照してください。  
  
 他のコンテナーコントロールで既定のアンカー動作を模倣する子コントロールが必要な場合は、<xref:System.Windows.Forms.Control.Margin%2A> と <xref:System.Windows.Forms.Control.Padding%2A> のプロパティを調整して、コントロールの境界線とセルの境界線の間の一定の距離を維持することができます。  
  
 子コントロールの `Column` プロパティと `Row` プロパティの両方の値を-1 に設定すると、コントロールが <xref:System.Windows.Forms.TableLayoutPanel> コントロールの最初の空のセルに移動します。 左から右、上から下に移動する検索では、空のセルが選択されます。 この順序はカルチャに依存するので、右から左 (RTL) のレイアウトで正しく動作します。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Control.Visible%2A> プロパティがに設定されているコントロールのみが、<xref:System.Windows.Forms.TableLayoutPanel> コントロールのレイアウト計算に参加 `true` ます。  
  
 また、  
  
-   [方法: TableLayoutPanel コントロール内でコントロールを配置して伸縮する](~/docs/framework/winforms/controls/how-to-align-and-stretch-a-control-in-a-tablelayoutpanel-control.md)  
  
-   [方法: TableLayoutPanel コントロールの行と列を拡大する](~/docs/framework/winforms/controls/how-to-span-rows-and-columns-in-a-tablelayoutpanel-control.md)  
  
-   [方法: TableLayoutPanel コントロールの列と行を編集する](~/docs/framework/winforms/controls/how-to-edit-columns-and-rows-in-a-tablelayoutpanel-control.md)  
  
-   [チュートリアル: TableLayoutPanel を使用した Windows フォーム上のコントロールの配置](~/docs/framework/winforms/controls/walkthrough-arranging-controls-on-windows-forms-using-a-tablelayoutpanel.md)  
  
   
  
## Examples  
 次のコード例は、<xref:System.Windows.Forms.TableLayoutPanel.OnCellPaint%2A> メソッドをオーバーライドして、セルのカスタム外観を作成する方法を示しています。  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#100)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#100)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.FlowLayoutPanel" />
    <altmember cref="T:System.Windows.Forms.TableLayoutSettings" />
    <related type="Article" href="https://msdn.microsoft.com/library/b6706efb-d7a4-45ec-8cf4-08fa993e3afb">TableLayoutPanel コントロールの推奨される手順</related>
    <related type="Article" href="https://msdn.microsoft.com/library/9233e0c3-2fa6-405e-8701-959479b1250e">TableLayoutPanel コントロールにおける AutoSize 動作</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0d267c35-25f1-49b8-8976-c64e8f0ddc0b">方法 : TableLayoutPanel コントロールで子コントロールを固定およびドッキングする</related>
    <related type="Article" href="https://msdn.microsoft.com/library/d13eff2d-701c-4b6e-8838-3885cbfb7223">方法 : ローカリゼーションに対応した Windows フォーム レイアウトをデザインする</related>
    <related type="Article" href="https://msdn.microsoft.com/library/babdf198-404c-485d-a914-ed370c6ecd99">方法 : データ入力用のサイズ変更可能な Windows フォームを作成する</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableLayoutPanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TableLayoutPanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.TableLayoutPanel" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは、<xref:System.Windows.Forms.TableLayoutPanel.BorderStyle%2A>、<xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A>、<xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A>、および <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> の各プロパティを既定値に設定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.TableLayoutPanel.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パネルの境界線スタイルを取得または設定します。</summary>
        <value>パネルの境界線のスタイルを示す <see cref="T:System.Windows.Forms.BorderStyle" /> 値の 1 つ。 既定値は、<see cref="F:System.Windows.Forms.BorderStyle.None" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutPanelCellBorderStyle CellBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TableLayoutPanelCellBorderStyle CellBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.CellBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CellBorderStyle As TableLayoutPanelCellBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TableLayoutPanelCellBorderStyle CellBorderStyle { System::Windows::Forms::TableLayoutPanelCellBorderStyle get(); void set(System::Windows::Forms::TableLayoutPanelCellBorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.CellBorderStyle : System.Windows.Forms.TableLayoutPanelCellBorderStyle with get, set" Usage="System.Windows.Forms.TableLayoutPanel.CellBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutPanelCellBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セル境界線のスタイルを取得または設定します。</summary>
        <value>テーブル内のすべてのセル境界線のスタイルを示す <see cref="T:System.Windows.Forms.TableLayoutPanelCellBorderStyle" /> 値の 1 つ。 既定値は、<see cref="F:System.Windows.Forms.TableLayoutPanelCellBorderStyle.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この値を設定すると、パネル自体とその内容が再描画されます。  
  
   
  
## Examples  
 次のコード例では、選択した <xref:System.Windows.Forms.RadioButton>に応じて、<xref:System.Windows.Forms.TableLayoutPanel.BorderStyle%2A> プロパティの値を設定します。  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.BorderStyle" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnStyles" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.RowStyles" />
      </Docs>
    </Member>
    <Member MemberName="CellPaint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TableLayoutCellPaintEventHandler CellPaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TableLayoutCellPaintEventHandler CellPaint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TableLayoutPanel.CellPaint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellPaint As TableLayoutCellPaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TableLayoutCellPaintEventHandler ^ CellPaint;" />
      <MemberSignature Language="F#" Value="member this.CellPaint : System.Windows.Forms.TableLayoutCellPaintEventHandler " Usage="member this.CellPaint : System.Windows.Forms.TableLayoutCellPaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutCellPaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルが再描画されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 このメンバーの使用例を次のコード例に示します。 この例では、イベントハンドラーは、<xref:System.Windows.Forms.TableLayoutPanel.CellPaint> イベントの発生を報告します。 このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。  
  
 コード例を実行するには、`TableLayoutPanel1`という <xref:System.Windows.Forms.TableLayoutPanel> 型のインスタンスを含むプロジェクトに貼り付けます。 次に、イベントハンドラーが <xref:System.Windows.Forms.TableLayoutPanel.CellPaint> イベントに関連付けられていることを確認します。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#561](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#561)]
 [!code-vb[System.Windows.Forms.EventExamples#561](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#561)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public int ColumnCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnCount : int with get, set" Usage="System.Windows.Forms.TableLayoutPanel.ColumnCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テーブル内の列の数を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.TableLayoutPanel" /> コントロール内の列の数。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既知の固定数のセルを含むレイアウトの <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> と <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> の両方のプロパティを指定できます。 また、1つのプロパティを指定することもできます。また、レイアウト内のセルの数が増加すると予想される場合は、<xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> プロパティによってこのような拡張が可能であると想定します。 <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> の値が0の場合、パネルは行を追加することによって拡張されます。 <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> の値が0の場合は、列を追加することによってパネルが拡張されます。 ただし、<xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> プロパティを使用してパネルの拡大を指定する場合は、<xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> または <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> を0に設定することをお勧めします。  
  
 コントロールは、<xref:System.Windows.Forms.TableLayoutPanel.Controls%2A> プロパティを使用してテーブルから追加または削除できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.GrowStyle" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.RowCount" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.Controls" />
      </Docs>
    </Member>
    <Member MemberName="ColumnStyles">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutColumnStyleCollection ColumnStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TableLayoutColumnStyleCollection ColumnStyles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.ColumnStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnStyles As TableLayoutColumnStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TableLayoutColumnStyleCollection ^ ColumnStyles { System::Windows::Forms::TableLayoutColumnStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnStyles : System.Windows.Forms.TableLayoutColumnStyleCollection" Usage="System.Windows.Forms.TableLayoutPanel.ColumnStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Columns")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutColumnStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.TableLayoutPanel" /> の列スタイルのコレクションを取得します。</summary>
        <value><see cref="T:System.Windows.Forms.TableLayoutColumnStyleCollection" /> コントロール内の各列の <see cref="T:System.Windows.Forms.ColumnStyle" /> を格納している <see cref="T:System.Windows.Forms.TableLayoutPanel" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 特定の列のスタイルプロパティにアクセスするには、<xref:System.Windows.Forms.TableLayoutPanel.ColumnStyles%2A> プロパティを使用します。 <xref:System.Windows.Forms.ColumnStyle> クラスのメンバーを使用すると、テーブル内の個々の列の特性を設定できます。  
  
 <xref:System.Windows.Forms.TableLayoutPanel> コントロールが列を配置すると、次の順序で各 <xref:System.Windows.Forms.ColumnStyle> に優先順位が割り当てられます。  
  
1.  <xref:System.Windows.Forms.ColumnStyle> が <xref:System.Windows.Forms.SizeType.Absolute> に設定されている列は、最初に考慮され、固定幅が割り当てられます。  
  
2.  <xref:System.Windows.Forms.ColumnStyle> が <xref:System.Windows.Forms.SizeType.AutoSize> に設定されている列は、その内容に合わせてサイズが変更されます。  
  
3.  残りの領域は、<xref:System.Windows.Forms.ColumnStyle> が <xref:System.Windows.Forms.SizeType.Percent>に設定された列の間で分割されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.Button> をクリックしたときに各列の <xref:System.Windows.Forms.ColumnStyle> プロパティを設定します。  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnStyle" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.RowStyles" />
        <related type="Article" href="https://msdn.microsoft.com/library/9233e0c3-2fa6-405e-8701-959479b1250e">TableLayoutPanel コントロールにおける AutoSize 動作</related>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TableLayoutControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.Controls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Controls As TableLayoutControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TableLayoutControlCollection ^ Controls { System::Windows::Forms::TableLayoutControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Windows.Forms.TableLayoutControlCollection" Usage="System.Windows.Forms.TableLayoutPanel.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.TableLayoutPanel" /> 内に格納されているコントロールのコレクションを取得します。</summary>
        <value>現在の <see cref="T:System.Windows.Forms.TableLayoutControlCollection" /> に関連付けられているコントロールを格納している <see cref="T:System.Windows.Forms.TableLayoutPanel" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TableLayoutPanel.Controls%2A> プロパティには、テーブルに関連付けられているすべてのコントロールが含まれます。 <xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A>、<xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A>、または <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> の制限のために現在表示されていないコントロールも含まれます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.TableLayoutPanel>内のすべての子コントロールを列挙します。  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="T:System.Windows.Forms.TableLayoutControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlsInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.Control/ControlCollection CreateControlsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.CreateControlsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlsInstance () As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::Control::ControlCollection ^ CreateControlsInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateControlsInstance : unit -&gt; System.Windows.Forms.Control.ControlCollection" Usage="tableLayoutPanel.CreateControlsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのコントロール コレクションの新しいインスタンスを作成します。</summary>
        <returns>コントロールに割り当てられた <see cref="T:System.Windows.Forms.Control.ControlCollection" /> の新しいインスタンス。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCellPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutPanelCellPosition GetCellPosition (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.TableLayoutPanelCellPosition GetCellPosition(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetCellPosition(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::TableLayoutPanelCellPosition GetCellPosition(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetCellPosition : System.Windows.Forms.Control -&gt; System.Windows.Forms.TableLayoutPanelCellPosition" Usage="tableLayoutPanel.GetCellPosition control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.TableLayoutPanelCellPosition), "-1,-1")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Cell")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutPanelCellPosition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">セルに含まれるコントロール。</param>
        <summary>セルの行と列を表す <see cref="T:System.Windows.Forms.TableLayoutPanelCellPosition" /> を取得します。</summary>
        <returns>セルの位置を表す <see cref="T:System.Windows.Forms.TableLayoutPanelCellPosition" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumn">
      <MemberSignature Language="C#" Value="public int GetColumn (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetColumn(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetColumn(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetColumn : System.Windows.Forms.Control -&gt; int" Usage="tableLayoutPanel.GetColumn control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Column")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control"><see cref="T:System.Windows.Forms.TableLayoutPanel" /> の子コントロール。</param>
        <summary>指定した子コントロールの列の位置を返します。</summary>
        <returns>指定した子コントロールの列の位置。<paramref name="control" /> の位置が <see cref="P:System.Windows.Forms.TableLayoutPanel.LayoutEngine" /> によって決定される場合は -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `control` が2つ以上の列にまたがる場合、<xref:System.Windows.Forms.TableLayoutPanel.GetColumn%2A> メソッドは最も小さい列インデックスを返します。  
  
 列の位置の値は0から始まるので、<xref:System.Windows.Forms.TableLayoutPanel.GetColumnWidths%2A>によって返される配列のインデックスとして使用できます。  
  
 このメソッドは `Column` プロパティによって呼び出されます。このプロパティは、デザイン時にパネルによって子コントロールに追加されます。  
  
 位置が <xref:System.Windows.Forms.TableLayoutPanel.LayoutEngine%2A>によって決定された場合でも、`control`の実際の位置を取得するには、<xref:System.Windows.Forms.TableLayoutPanel.GetPositionFromControl%2A> メソッドを呼び出します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.TableLayoutPanel> 内のすべての子コントロールを列挙し、<xref:System.Windows.Forms.TableLayoutPanel.GetColumn%2A> メソッドを使用して各コントロールの列インデックスを検索します。  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="control" /> が、この <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> によって配置できる型ではありません。</exception>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumnWidths" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetControlFromPosition(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnSpan">
      <MemberSignature Language="C#" Value="public int GetColumnSpan (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetColumnSpan(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetColumnSpan(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetColumnSpan(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetColumnSpan : System.Windows.Forms.Control -&gt; int" Usage="tableLayoutPanel.GetColumnSpan control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("ColumnSpan")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control"><see cref="T:System.Windows.Forms.TableLayoutPanel" /> の子コントロール。</param>
        <summary>指定した子コントロールがまたがる列の数を返します。</summary>
        <returns>子コントロールがまたがる列の数。 既定値は 1 です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 多くの場合、列のスパニングは、そのピアよりもかなり幅の広いコントロールを配置する場合に便利です。  
  
 このメソッドは `ColumnSpan` プロパティによって呼び出されます。このプロパティは、デザイン時にパネルによって子コントロールに追加されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.TableLayoutPanel.GetColumnSpan%2A> および <xref:System.Windows.Forms.TableLayoutPanel.SetColumnSpan%2A> メソッドを使用して、<xref:System.Windows.Forms.TableLayoutPanel>内の <xref:System.Windows.Forms.Button> コントロールの幅を設定します。  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#11)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.SetColumnSpan(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRowSpan(System.Windows.Forms.Control)" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnWidths">
      <MemberSignature Language="C#" Value="public int[] GetColumnWidths ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetColumnWidths() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetColumnWidths" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnWidths () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetColumnWidths();" />
      <MemberSignature Language="F#" Value="member this.GetColumnWidths : unit -&gt; int[]" Usage="tableLayoutPanel.GetColumnWidths " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.TableLayoutPanel" /> 内の列の幅をピクセル単位で表す配列を返します。</summary>
        <returns><see cref="T:System.Int32" /> 内の列の幅をピクセル単位で格納する <see cref="T:System.Windows.Forms.TableLayoutPanel" /> 型の配列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlFromPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control GetControlFromPosition (int column, int row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control GetControlFromPosition(int32 column, int32 row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetControlFromPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetControlFromPosition (column As Integer, row As Integer) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Control ^ GetControlFromPosition(int column, int row);" />
      <MemberSignature Language="F#" Value="member this.GetControlFromPosition : int * int -&gt; System.Windows.Forms.Control" Usage="tableLayoutPanel.GetControlFromPosition (column, row)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Int32" />
        <Parameter Name="row" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="column">取得するコントロールの列の位置。</param>
        <param name="row">取得するコントロールの行の位置。</param>
        <summary>指定した位置を占有している子コントロールを返します。</summary>
        <returns>指定したセルを占有している子コントロール。それ以外の場合 (コントロールが指定した列および行に存在しない場合やコントロールの <see langword="null" /> プロパティが <see cref="P:System.Windows.Forms.Control.Visible" /> に設定されている場合) は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 列と行の位置の値は0から始まります。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> と <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A>によって指定された列と行をループ処理し、<xref:System.Windows.Forms.TableLayoutPanel.GetControlFromPosition%2A> メソッドを呼び出して各セルのコントロールを取得することによって、<xref:System.Windows.Forms.TableLayoutPanel> 内のすべてのセル位置を列挙します。  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="column" /> または <paramref name="row" /> (あるいはその両方) が 0 未満です。</exception>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutPanelCellPosition GetPositionFromControl (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.TableLayoutPanelCellPosition GetPositionFromControl(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetPositionFromControl(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::TableLayoutPanelCellPosition GetPositionFromControl(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetPositionFromControl : System.Windows.Forms.Control -&gt; System.Windows.Forms.TableLayoutPanelCellPosition" Usage="tableLayoutPanel.GetPositionFromControl control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutPanelCellPosition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">セルに含まれるコントロール。</param>
        <summary>コントロールを格納するセルの行と列を表す <see cref="T:System.Windows.Forms.TableLayoutPanelCellPosition" /> を取得します。</summary>
        <returns>セルの位置を表す <see cref="T:System.Windows.Forms.TableLayoutPanelCellPosition" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TableLayoutPanel.GetPositionFromControl%2A> メソッドは、位置が <xref:System.Windows.Forms.TableLayoutPanel.LayoutEngine%2A>によって決定された場合でも、`control`の実際の現在位置を返します。 このメソッドでは、列または行のスパニング、<xref:System.Windows.Forms.TableLayoutPanel.LayoutEngine%2A> がその `Column` および `Row` プロパティを-1 に設定してコントロールを配置したときなど、<xref:System.Windows.Forms.TableLayoutPanel> コントロールの状態全体が考慮されます。 これは、<xref:System.Windows.Forms.TableLayoutPanel.GetColumn%2A> と <xref:System.Windows.Forms.TableLayoutPanel.GetRow%2A> が-1 を返す状況と同じです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRow">
      <MemberSignature Language="C#" Value="public int GetRow (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRow(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRow(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetRow : System.Windows.Forms.Control -&gt; int" Usage="tableLayoutPanel.GetRow control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Row")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control"><see cref="T:System.Windows.Forms.TableLayoutPanel" /> の子コントロール。</param>
        <summary>指定した子コントロールの行の位置を返します。</summary>
        <returns><paramref name="control" /> の行の位置。<paramref name="control" /> の位置が <see cref="P:System.Windows.Forms.TableLayoutPanel.LayoutEngine" /> によって決定される場合は -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `control` が2つ以上の行にまたがる場合、<xref:System.Windows.Forms.TableLayoutPanel.GetRow%2A> メソッドは最も小さい行インデックスを返します。  
  
 行位置の値は0から始まるので、<xref:System.Windows.Forms.TableLayoutPanel.GetRowHeights%2A>によって返される配列のインデックスとして使用できます。  
  
 このメソッドは `Row` プロパティによって呼び出されます。このプロパティは、デザイン時にパネルによって子コントロールに追加されます。  
  
 位置が <xref:System.Windows.Forms.TableLayoutPanel.LayoutEngine%2A>によって決定された場合でも、`control`の実際の位置を取得するには、<xref:System.Windows.Forms.TableLayoutPanel.GetPositionFromControl%2A> メソッドを呼び出します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.TableLayoutPanel> 内のすべての子コントロールを列挙し、<xref:System.Windows.Forms.TableLayoutPanel.GetRow%2A> メソッドを使用してそれぞれの行インデックスを検索します。  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="control" /> が、この <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> によって配置できる型ではありません。</exception>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRowHeights" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetControlFromPosition(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetRowHeights">
      <MemberSignature Language="C#" Value="public int[] GetRowHeights ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetRowHeights() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetRowHeights" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowHeights () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetRowHeights();" />
      <MemberSignature Language="F#" Value="member this.GetRowHeights : unit -&gt; int[]" Usage="tableLayoutPanel.GetRowHeights " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.TableLayoutPanel" /> 内の行の高さをピクセル単位で表す配列を返します。</summary>
        <returns><see cref="T:System.Int32" /> 内の行の高さをピクセル単位で格納する <see cref="T:System.Windows.Forms.TableLayoutPanel" /> 型の配列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowSpan">
      <MemberSignature Language="C#" Value="public int GetRowSpan (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRowSpan(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.GetRowSpan(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRowSpan(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetRowSpan : System.Windows.Forms.Control -&gt; int" Usage="tableLayoutPanel.GetRowSpan control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("RowSpan")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control"><see cref="T:System.Windows.Forms.TableLayoutPanel" /> の子コントロール。</param>
        <summary>指定した子コントロールがまたがる行の数を返します。</summary>
        <returns>子コントロールがまたがる行の数。 既定値は 1 です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 多くの場合、行のスパニングは、そのピアよりも高さがかなり高いコントロールを配置する場合に便利です。  
  
 このメソッドは `RowSpan` プロパティによって呼び出されます。このプロパティは、デザイン時にパネルによって子コントロールに追加されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.TableLayoutPanel.GetRowSpan%2A> および <xref:System.Windows.Forms.TableLayoutPanel.SetRowSpan%2A> メソッドを使用して、<xref:System.Windows.Forms.TableLayoutPanel>内の <xref:System.Windows.Forms.Button> コントロールの幅を設定します。  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#11)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.SetRowSpan(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumnSpan(System.Windows.Forms.Control)" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GrowStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutPanelGrowStyle GrowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TableLayoutPanelGrowStyle GrowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.GrowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property GrowStyle As TableLayoutPanelGrowStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TableLayoutPanelGrowStyle GrowStyle { System::Windows::Forms::TableLayoutPanelGrowStyle get(); void set(System::Windows::Forms::TableLayoutPanelGrowStyle value); };" />
      <MemberSignature Language="F#" Value="member this.GrowStyle : System.Windows.Forms.TableLayoutPanelGrowStyle with get, set" Usage="System.Windows.Forms.TableLayoutPanel.GrowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutPanelGrowStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>既存のセルがすべて占有されている場合に、新しいセルを追加できるように <see cref="T:System.Windows.Forms.TableLayoutPanel" /> コントロールを拡張するかどうかを示す値を取得または設定します。</summary>
        <value>拡張スキームを示す <see cref="T:System.Windows.Forms.TableLayoutPanelGrowStyle" />。 既定値は、<see cref="F:System.Windows.Forms.TableLayoutPanelGrowStyle.AddRows" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、<xref:System.Windows.Forms.TableLayoutPanel> コントロールは行を追加することで下方向に拡張します。  
  
> [!NOTE]
>  コントロールをフル <xref:System.Windows.Forms.TableLayoutPanel> コントロールに追加しようとしたときに、<xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> の値が <xref:System.Windows.Forms.TableLayoutPanelGrowStyle.FixedSize>場合は、<xref:System.ArgumentException> がスローされます。  
  
   
  
## Examples  
 次のコード例では、選択した <xref:System.Windows.Forms.RadioButton>に応じて、<xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> プロパティの値を設定します。 実行時に、**テスト GrowStyle**というラベルが付いたボタンをユーザーがクリックすると、<xref:System.Windows.Forms.Button> コントロールが <xref:System.Windows.Forms.TableLayoutPanel> コントロールに追加されます。 <xref:System.Windows.Forms.TableLayoutPanel> コントロールがいっぱいの場合は、行または列を追加することによって展開されるか、<xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A>の値に応じて例外が発生します。  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Windows.Forms.TableLayoutPanelGrowStyle" /> 列挙体のプロパティ値が無効です。</exception>
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.RowCount" />
      </Docs>
    </Member>
    <Member MemberName="LayoutEngine">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.Layout.LayoutEngine LayoutEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Layout.LayoutEngine LayoutEngine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.LayoutEngine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LayoutEngine As LayoutEngine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Layout::LayoutEngine ^ LayoutEngine { System::Windows::Forms::Layout::LayoutEngine ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LayoutEngine : System.Windows.Forms.Layout.LayoutEngine" Usage="System.Windows.Forms.TableLayoutPanel.LayoutEngine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Layout.LayoutEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パネルのレイアウト エンジンのキャッシュされたインスタンスを取得します。</summary>
        <value>パネルの内容の <see cref="T:System.Windows.Forms.Layout.LayoutEngine" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutSettings">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutSettings LayoutSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TableLayoutSettings LayoutSettings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.LayoutSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property LayoutSettings As TableLayoutSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TableLayoutSettings ^ LayoutSettings { System::Windows::Forms::TableLayoutSettings ^ get(); void set(System::Windows::Forms::TableLayoutSettings ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LayoutSettings : System.Windows.Forms.TableLayoutSettings with get, set" Usage="System.Windows.Forms.TableLayoutPanel.LayoutSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テーブル レイアウトの設定を表す値を取得または設定します。</summary>
        <value>テーブル レイアウトの設定を格納している <see cref="T:System.Windows.Forms.TableLayoutSettings" />。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">プロパティ値が <see langword="null" /> です。または、<see cref="T:System.Windows.Forms.TableLayoutSettings" /> を直接設定しようとしましたが、これはサポートされていません。代わりに個別のプロパティを設定してください。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnCellPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnCellPaint (System.Windows.Forms.TableLayoutCellPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellPaint(class System.Windows.Forms.TableLayoutCellPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.OnCellPaint(System.Windows.Forms.TableLayoutCellPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellPaint (e As TableLayoutCellPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellPaint(System::Windows::Forms::TableLayoutCellPaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellPaint : System.Windows.Forms.TableLayoutCellPaintEventArgs -&gt; unit&#xA;override this.OnCellPaint : System.Windows.Forms.TableLayoutCellPaintEventArgs -&gt; unit" Usage="tableLayoutPanel.OnCellPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TableLayoutCellPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.TableLayoutCellPaintEventArgs" />。</param>
        <summary>セルを更新する必要があるときに呼び出しを受け取ります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、<xref:System.Windows.Forms.TableLayoutPanel.OnCellPaint%2A> メソッドをオーバーライドして、セルのカスタム外観を作成する方法を示しています。  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#100)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs levent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs levent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayout (levent As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ levent);" />
      <MemberSignature Language="F#" Value="override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="tableLayoutPanel.OnLayout levent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levent" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="levent">イベント データを格納している <see cref="T:System.Windows.Forms.LayoutEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.Layout" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaintBackground">
      <MemberSignature Language="C#" Value="protected override void OnPaintBackground (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaintBackground(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaintBackground (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaintBackground(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaintBackground : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="tableLayoutPanel.OnPaintBackground e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">描画するパネルに関する情報を格納する <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
        <summary>パネルの背景を描画します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowCount">
      <MemberSignature Language="C#" Value="public int RowCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.RowCount" />
      <MemberSignature Language="VB.NET" Value="Public Property RowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RowCount : int with get, set" Usage="System.Windows.Forms.TableLayoutPanel.RowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テーブル内の行の数を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.TableLayoutPanel" /> コントロール内の行の数。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既知の固定数のセルを含むレイアウトの <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> と <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> の両方のプロパティを指定できます。 また、1つのプロパティを指定することもできます。また、レイアウト内のセルの数が増加すると予想される場合は、<xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> プロパティによってこのような拡張が可能であると想定します。 <xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> の値が0の場合、パネルは行を追加することによって拡張されます。 <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> の値が0の場合は、列を追加することによってパネルが拡張されます。 ただし、<xref:System.Windows.Forms.TableLayoutPanel.GrowStyle%2A> プロパティを使用してパネルの拡大を指定する場合は、<xref:System.Windows.Forms.TableLayoutPanel.RowCount%2A> または <xref:System.Windows.Forms.TableLayoutPanel.ColumnCount%2A> を0に設定することをお勧めします。  
  
 コントロールは、<xref:System.Windows.Forms.TableLayoutPanel.Controls%2A> プロパティを使用してテーブルから追加または削除できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.GrowStyle" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.Controls" />
      </Docs>
    </Member>
    <Member MemberName="RowStyles">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TableLayoutRowStyleCollection RowStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TableLayoutRowStyleCollection RowStyles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TableLayoutPanel.RowStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowStyles As TableLayoutRowStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TableLayoutRowStyleCollection ^ RowStyles { System::Windows::Forms::TableLayoutRowStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RowStyles : System.Windows.Forms.TableLayoutRowStyleCollection" Usage="System.Windows.Forms.TableLayoutPanel.RowStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Rows")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TableLayoutRowStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.TableLayoutPanel" /> の行スタイルのコレクションを取得します。</summary>
        <value><see cref="T:System.Windows.Forms.TableLayoutRowStyleCollection" /> コントロール内の各行の <see cref="T:System.Windows.Forms.RowStyle" /> を格納している <see cref="T:System.Windows.Forms.TableLayoutPanel" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 特定の行のスタイルプロパティにアクセスするには、<xref:System.Windows.Forms.TableLayoutPanel.RowStyles%2A> プロパティを使用します。 <xref:System.Windows.Forms.RowStyle> クラスのメンバーを使用すると、テーブル内の個々の行の特性を設定できます。  
  
 <xref:System.Windows.Forms.TableLayoutPanel> コントロールが行を配置すると、次の順序で各 <xref:System.Windows.Forms.RowStyle> に優先順位が割り当てられます。  
  
1.  <xref:System.Windows.Forms.RowStyle> が <xref:System.Windows.Forms.SizeType.Absolute> に設定された行は最初に見なされ、その固定された高さが割り当てられます。  
  
2.  <xref:System.Windows.Forms.RowStyle> が <xref:System.Windows.Forms.SizeType.AutoSize> に設定されている行は、その内容に合わせてサイズが変更されます。  
  
3.  残りの領域は、<xref:System.Windows.Forms.RowStyle> が <xref:System.Windows.Forms.SizeType.Percent>に設定された行の間で分割されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.Button> をクリックしたときに各行の <xref:System.Windows.Forms.RowStyle> プロパティを設定します。  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.RowStyle" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnStyles" />
        <related type="Article" href="https://msdn.microsoft.com/library/9233e0c3-2fa6-405e-8701-959479b1250e">TableLayoutPanel コントロールにおける AutoSize 動作</related>
      </Docs>
    </Member>
    <Member MemberName="ScaleControl">
      <MemberSignature Language="C#" Value="protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleControl(valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleControl (factor As SizeF, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleControl(System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.ScaleControl : System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="tableLayoutPanel.ScaleControl (factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="factor">コントロールの境界の高さおよび幅。</param>
        <param name="specified">コントロールのサイズと位置を定義するときに使用するコントロールの境界を指定する <see cref="T:System.Windows.Forms.BoundsSpecified" /> の値の 1 つ。</param>
        <summary>コントロールの位置、サイズ、埋め込み、およびマージンのスケールを設定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleCore">
      <MemberSignature Language="C#" Value="protected override void ScaleCore (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleCore(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.ScaleCore(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleCore (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleCore(float dx, float dy);" />
      <MemberSignature Language="F#" Value="override this.ScaleCore : single * single -&gt; unit" Usage="tableLayoutPanel.ScaleCore (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">コントロールのスケールを水平方向に設定する比率。</param>
        <param name="dy">コントロールのスケールを垂直方向に設定する比率。</param>
        <summary>パネル全体および子コントロールのスケール設定作業を実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TableLayoutPanel.ScaleCore%2A> メソッドでは、`dx` と `dy` パラメーター値を使用して、パネルの高さと幅の両方を個別に拡大縮小します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCellPosition">
      <MemberSignature Language="C#" Value="public void SetCellPosition (System.Windows.Forms.Control control, System.Windows.Forms.TableLayoutPanelCellPosition position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCellPosition(class System.Windows.Forms.Control control, valuetype System.Windows.Forms.TableLayoutPanelCellPosition position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.SetCellPosition(System.Windows.Forms.Control,System.Windows.Forms.TableLayoutPanelCellPosition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCellPosition(System::Windows::Forms::Control ^ control, System::Windows::Forms::TableLayoutPanelCellPosition position);" />
      <MemberSignature Language="F#" Value="member this.SetCellPosition : System.Windows.Forms.Control * System.Windows.Forms.TableLayoutPanelCellPosition -&gt; unit" Usage="tableLayoutPanel.SetCellPosition (control, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="position" Type="System.Windows.Forms.TableLayoutPanelCellPosition" />
      </Parameters>
      <Docs>
        <param name="control">セルに含まれるコントロール。</param>
        <param name="position">セルの行と列を表す <see cref="T:System.Windows.Forms.TableLayoutPanelCellPosition" />。</param>
        <summary>セルの行と列を表す <see cref="T:System.Windows.Forms.TableLayoutPanelCellPosition" /> を設定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColumn">
      <MemberSignature Language="C#" Value="public void SetColumn (System.Windows.Forms.Control control, int column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumn(class System.Windows.Forms.Control control, int32 column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.SetColumn(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumn(System::Windows::Forms::Control ^ control, int column);" />
      <MemberSignature Language="F#" Value="member this.SetColumn : System.Windows.Forms.Control * int -&gt; unit" Usage="tableLayoutPanel.SetColumn (control, column)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="column" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control">別の列に移動するコントロール。</param>
        <param name="column"><paramref name="control" /> の移動後の列。</param>
        <summary>指定した子コントロールの列の位置を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TableLayoutPanel.SetColumn%2A> メソッドは、コントロールを <xref:System.Windows.Forms.TableLayoutPanel>内の別の列に移動します。 列および行には、0から始まるインデックスがあります。 列の位置を-1 に設定すると、コントロールは最初の空のセルにフローします。  
  
 このメソッドは、テーブルのレイアウトを <xref:System.Windows.Forms.TableLayoutPanel>内のすべてのコントロールに再適用します。  
  
 このメソッドは `Column` プロパティによって呼び出されます。このプロパティは、デザイン時にパネルによって子コントロールに追加されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.TableLayoutPanel.SetColumn%2A> メソッドを使用して、<xref:System.Windows.Forms.TableLayoutPanel> コントロール内に含まれる2つのコントロールをスワップします。 この例では、<xref:System.Windows.Forms.TableLayoutPanel> コントロールに少なくとも2つの行があることを前提としています。  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#12)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.SetRow(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnSpan">
      <MemberSignature Language="C#" Value="public void SetColumnSpan (System.Windows.Forms.Control control, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnSpan(class System.Windows.Forms.Control control, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.SetColumnSpan(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnSpan(System::Windows::Forms::Control ^ control, int value);" />
      <MemberSignature Language="F#" Value="member this.SetColumnSpan : System.Windows.Forms.Control * int -&gt; unit" Usage="tableLayoutPanel.SetColumnSpan (control, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control"><see cref="T:System.Windows.Forms.TableLayoutPanel" /> の子コントロール。</param>
        <param name="value">またがる列数。</param>
        <summary>子コントロールがまたがる列の数を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 多くの場合、列のスパニングは、そのピアよりもかなり幅の広いコントロールを配置する場合に便利です。  
  
 このメソッドは `ColumnSpan` プロパティによって呼び出されます。このプロパティは、デザイン時にパネルによって子コントロールに追加されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.TableLayoutPanel.GetColumnSpan%2A> および <xref:System.Windows.Forms.TableLayoutPanel.SetColumnSpan%2A> メソッドを使用して、<xref:System.Windows.Forms.TableLayoutPanel>内の <xref:System.Windows.Forms.Button> コントロールの幅を設定します。  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#11)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="value" /> が 1 未満です。</exception>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumnSpan(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.SetRowSpan(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="SetRow">
      <MemberSignature Language="C#" Value="public void SetRow (System.Windows.Forms.Control control, int row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRow(class System.Windows.Forms.Control control, int32 row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.SetRow(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRow(System::Windows::Forms::Control ^ control, int row);" />
      <MemberSignature Language="F#" Value="member this.SetRow : System.Windows.Forms.Control * int -&gt; unit" Usage="tableLayoutPanel.SetRow (control, row)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="row" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control">別の行に移動するコントロール。</param>
        <param name="row"><paramref name="control" /> の移動後の行。</param>
        <summary>指定した子コントロールの行の位置を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TableLayoutPanel.SetRow%2A> メソッドは、コントロールを <xref:System.Windows.Forms.TableLayoutPanel> コントロール内の別の行に移動します。 列および行には、0から始まるインデックスがあります。 行の位置を-1 に設定すると、コントロールは最初の空のセルにフローします。  
  
 このメソッドは、テーブルのレイアウトを <xref:System.Windows.Forms.TableLayoutPanel>内のすべてのコントロールに再適用します。  
  
 このメソッドは `Row` プロパティによって呼び出されます。このプロパティは、デザイン時にパネルによって子コントロールに追加されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.TableLayoutPanel.SetColumn%2A> メソッドを使用して、<xref:System.Windows.Forms.TableLayoutPanel> コントロール内に含まれる2つのコントロールをスワップします。 この例では、<xref:System.Windows.Forms.TableLayoutPanel> コントロールに少なくとも2つの行があることを前提としています。  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#13)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.SetRow(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
      </Docs>
    </Member>
    <Member MemberName="SetRowSpan">
      <MemberSignature Language="C#" Value="public void SetRowSpan (System.Windows.Forms.Control control, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRowSpan(class System.Windows.Forms.Control control, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.SetRowSpan(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRowSpan(System::Windows::Forms::Control ^ control, int value);" />
      <MemberSignature Language="F#" Value="member this.SetRowSpan : System.Windows.Forms.Control * int -&gt; unit" Usage="tableLayoutPanel.SetRowSpan (control, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control"><see cref="T:System.Windows.Forms.TableLayoutPanel" /> の子コントロール。</param>
        <param name="value">またがる行数。</param>
        <summary>子コントロールがまたがる行の数を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 多くの場合、行のスパニングは、そのピアよりも高さがかなり高いコントロールを配置する場合に便利です。  
  
 このメソッドは `RowSpan` プロパティによって呼び出されます。このプロパティは、デザイン時にパネルによって子コントロールに追加されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.TableLayoutPanel.GetRowSpan%2A> および <xref:System.Windows.Forms.TableLayoutPanel.SetRowSpan%2A> メソッドを使用して、<xref:System.Windows.Forms.TableLayoutPanel>内の <xref:System.Windows.Forms.Button> コントロールの幅を設定します。  
  
 [!code-csharp[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/CS/form1.cs#11)]
 [!code-vb[System.Windows.Forms.TableLayoutPanel#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TableLayoutPanel/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="value" /> が 1 未満です。</exception>
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRowSpan(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.SetColumnSpan(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
        <altmember cref="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IExtenderProvider.CanExtend">
      <MemberSignature Language="C#" Value="bool IExtenderProvider.CanExtend (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.ComponentModel.IExtenderProvider.CanExtend(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TableLayoutPanel.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CanExtend (obj As Object) As Boolean Implements IExtenderProvider.CanExtend" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.ComponentModel.IExtenderProvider.CanExtend(System::Object ^ obj) = System::ComponentModel::IExtenderProvider::CanExtend;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">エクステンダー プロパティを受け取る <see cref="T:System.Object" />。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />」をご覧ください。</summary>
        <returns>オブジェクトが、指定したオブジェクトに対してエクステンダー プロパティを提供できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.Forms.TableLayoutPanel> のインスタンスが <xref:System.ComponentModel.IExtenderProvider> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
