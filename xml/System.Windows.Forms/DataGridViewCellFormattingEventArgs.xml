<Type Name="DataGridViewCellFormattingEventArgs" FullName="System.Windows.Forms.DataGridViewCellFormattingEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="623ae4b0174d04863c222341e474d752f6bdd6c8" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83974479" /></Metadata><TypeSignature Language="C#" Value="public class DataGridViewCellFormattingEventArgs : System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewCellFormattingEventArgs extends System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewCellFormattingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewCellFormattingEventArgs&#xA;Inherits ConvertEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewCellFormattingEventArgs : System::Windows::Forms::ConvertEventArgs" />
  <TypeSignature Language="F#" Value="type DataGridViewCellFormattingEventArgs = class&#xA;    inherit ConvertEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ConvertEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Windows.Forms.DataGridView.CellFormatting" /> の <see cref="T:System.Windows.Forms.DataGridView" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.CellFormatting> イベントを処理して、セル値の変換を、表示に適した形式にカスタマイズしたり、状態または値に応じてセルの外観をカスタマイズしたりします。  
  
 <xref:System.Windows.Forms.DataGridView.CellFormatting> イベントは、各セルが描画されるたびに発生するため、このイベントを処理するときは、時間のかかる処理を避ける必要があります。 このイベントは、セル <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> が取得されたとき、またはその <xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A> メソッドが呼び出されたときにも発生します。  
  
 <xref:System.Windows.Forms.DataGridView.CellFormatting> イベントを処理すると、<xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> プロパティがセル値で初期化されます。 セル値から表示値へのカスタム変換を指定する場合は、<xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> プロパティを変換後の値に設定し、新しい値が cell <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> プロパティによって指定された型であることを確認します。 それ以上の値の書式設定が不要であることを示すには、<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType> プロパティを `true`に設定します。  
  
 イベントハンドラーが完了すると、<xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> が `null` か、または適切な型ではない場合、または <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType> プロパティが `false`場合は、<xref:System.Windows.Forms.ConvertEventArgs.Value%2A> プロパティによって返されるセルスタイルの <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A>、<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>、<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>、および <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> の各プロパティを使用して、<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=nameWithType> が書式設定されます。<xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>  
  
 <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType> プロパティの値に関係なく、<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=nameWithType> プロパティによって返されたオブジェクトの表示プロパティを使用して、セルが表示されます。  
  
 <xref:System.Windows.Forms.DataGridView.CellFormatting> イベントを使用したカスタム書式設定の詳細については、「[方法: Windows フォーム DataGridView コントロールでデータの書式設定をカスタマイズする](/dotnet/framework/winforms/controls/how-to-customize-data-formatting-in-the-windows-forms-datagridview-control)」を参照してください。  
  
 このイベントを処理するときにパフォーマンスが低下しないようにするには、セルに直接アクセスするのではなく、イベントハンドラーのパラメーターを使用してセルにアクセスします。  
  
 書式設定されたユーザー指定の値から実際のセル値への変換をカスタマイズするには、<xref:System.Windows.Forms.DataGridView.CellParsing> イベントを処理します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Windows.Forms.DataGridView.CellFormatting>を処理する方法を示しています。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
    <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
    <altmember cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
    <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCellFormattingEventHandler" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle" />
    <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
    <related type="Article" href="/dotnet/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
    <related type="Article" href="/dotnet/framework/winforms/controls/how-to-customize-data-formatting-in-the-windows-forms-datagridview-control">方法 : Windows フォーム DataGridView コントロールのデータの書式設定をカスタマイズする</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewCellFormattingEventArgs (int columnIndex, int rowIndex, object value, Type desiredType, System.Windows.Forms.DataGridViewCellStyle cellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 columnIndex, int32 rowIndex, object value, class System.Type desiredType, class System.Windows.Forms.DataGridViewCellStyle cellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellFormattingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnIndex As Integer, rowIndex As Integer, value As Object, desiredType As Type, cellStyle As DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewCellFormattingEventArgs(int columnIndex, int rowIndex, System::Object ^ value, Type ^ desiredType, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataGridViewCellFormattingEventArgs : int * int * obj * Type * System.Windows.Forms.DataGridViewCellStyle -&gt; System.Windows.Forms.DataGridViewCellFormattingEventArgs" Usage="new System.Windows.Forms.DataGridViewCellFormattingEventArgs (columnIndex, rowIndex, value, desiredType, cellStyle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="desiredType" Type="System.Type" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="columnIndex">イベントが発生したセルの列インデックス。</param>
        <param name="rowIndex">イベントが発生したセルの行インデックス。</param>
        <param name="value">セルの内容。</param>
        <param name="desiredType">変換後の <paramref name="value" /> の型。</param>
        <param name="cellStyle">イベントが発生したセルのスタイル。</param>
        <summary><see cref="T:System.Windows.Forms.DataGridViewCellFormattingEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `desiredType` パラメーターは、`value` パラメーターの変換先の型を表し、`desiredType` にはセルの <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> プロパティが割り当てられます。 たとえば、セルが画像の名前をビットマップとして書式設定している場合、`value` は画像の名前を含む <xref:System.String> であり、`desiredType` は <xref:System.Drawing.Bitmap> の種類を表す <xref:System.Type> です。  
  
 <xref:System.Windows.Forms.DataGridView.CellFormatting> イベントハンドラーで、セルに表示できる型に <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> プロパティが設定されていない場合、セルの内容は <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A>、<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>、および <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> の各プロパティを使用して書式設定されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs>を使用する方法を示しています。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> が -1 未満です 
または 
 <paramref name="rowIndex" /> が -1 未満です。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle" />
        <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
        <related type="Article" href="/dotnet/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
      </Docs>
    </Member>
    <Member MemberName="CellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle CellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle CellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ CellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>書式指定するセルのスタイルを取得または設定します。</summary>
        <value>書式指定するセルの表示スタイルを表す <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。 既定値は、セルの <see cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" /> プロパティの値です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A> プロパティによって返されるオブジェクトのプロパティを設定すると、セルとその内容の表示方法が変わります。 パフォーマンスが低下しないようにするには、このプロパティを使用してセルに直接アクセスするのではなく、セルのスタイルを変更します。  
  
 セルスタイルの詳細については、「 [Windows フォーム DataGridView コントロールのセルのスタイル](/dotnet/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A> プロパティを使用して、文字列 "ピンク" を含むセルの背景の色を <xref:System.Drawing.Color.Pink%2A>に設定する方法を示します。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <related type="Article" href="/dotnet/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnIndex">
      <MemberSignature Language="C#" Value="public int ColumnIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnIndex : int" Usage="System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>書式指定するセルの列インデックスを取得します。</summary>
        <value>書式指定するセルの列インデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>の <xref:System.Windows.Forms.DataGridView.Columns%2A> プロパティのインデックスを取得するには、<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex%2A> プロパティを使用します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex%2A> プロパティを使用して列のプロパティを取得する方法を示します。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Columns" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
      </Docs>
    </Member>
    <Member MemberName="FormattingApplied">
      <MemberSignature Language="C#" Value="public bool FormattingApplied { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FormattingApplied" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied" />
      <MemberSignature Language="VB.NET" Value="Public Property FormattingApplied As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FormattingApplied { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FormattingApplied : bool with get, set" Usage="System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セル値が正常に書式指定されたかどうかを示す値を取得または設定します。</summary>
        <value>セル値の書式指定が処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.CellFormatting> イベントを処理する場合、それ以上の値の書式設定が不要な場合は、<xref:System.Windows.Forms.ConvertEventArgs.Value%2A> プロパティを設定した後に、<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A> プロパティを `true` に設定します。 イベントハンドラーが終了したときに <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A> プロパティの値が `false` 場合、<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>プロパティによって返される <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> オブジェクトの <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A>、<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>、<xref:System.Windows.Forms.DataGridViewCellStyle>、および <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A> の各プロパティによって示される値に書式設定が適用されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A> プロパティを `true` に設定して、このセルの書式設定が完了したことを通知します。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle" />
      </Docs>
    </Member>
    <Member MemberName="RowIndex">
      <MemberSignature Language="C#" Value="public int RowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RowIndex : int" Usage="System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>書式指定するセルの行インデックスを取得します。</summary>
        <value>書式指定するセルの行インデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>の <xref:System.Windows.Forms.DataGridView.Rows%2A> プロパティのインデックスを取得するには、<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex%2A> プロパティを使用します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex%2A> プロパティを使用して、書式設定されているセルを取得する方法を示します。 次に、セル参照を使用して、セルのツールヒントテキストを設定します。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/cpp/datagridviewcell.tooltiptext.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/CS/datagridviewcell.tooltiptext.cs#1)]
 [!code-vb[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/VB/datagridviewcell.tooltiptext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
      </Docs>
    </Member>
  </Members>
</Type>
