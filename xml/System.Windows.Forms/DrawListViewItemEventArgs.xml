<Type Name="DrawListViewItemEventArgs" FullName="System.Windows.Forms.DrawListViewItemEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="95dda412b9f5a20be83c775b1cafdf11fce7b221" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78811666" /></Metadata><TypeSignature Language="C#" Value="public class DrawListViewItemEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawListViewItemEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawListViewItemEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawListViewItemEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawListViewItemEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DrawListViewItemEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Windows.Forms.ListView.DrawItem" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> イベントを使用すると、オーナー描画を使用して <xref:System.Windows.Forms.ListView> コントロールの外観をカスタマイズできます。  
  
 <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> イベントは、<xref:System.Windows.Forms.ListView.OwnerDraw%2A?displayProperty=nameWithType> プロパティが `true`に設定されている場合に <xref:System.Windows.Forms.ListView> コントロールによって発生します。 イベントハンドラーに渡される <xref:System.Windows.Forms.DrawListViewItemEventArgs> には、描画する <xref:System.Windows.Forms.ListViewItem> に関する情報が含まれています。また、項目を描画するためのメソッドも用意されています。  
  
 <xref:System.Windows.Forms.DrawListViewItemEventArgs.State%2A> または <xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> プロパティを使用して、描画する項目に関する情報を取得します。 アイテムのインデックスを取得するには、<xref:System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex%2A?displayProperty=nameWithType> プロパティを使用します。  
  
 <xref:System.Windows.Forms.DrawListViewItemEventArgs.Graphics%2A> プロパティを使用して、<xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> プロパティによって指定された領域内の実際の描画を行います。 カスタマイズを必要としない標準の <xref:System.Windows.Forms.ListView> 要素を描画するには、<xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawBackground%2A>、<xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A>、および <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawFocusRectangle%2A> の各メソッドを使用します。  
  
> [!NOTE]
>  オーナー描画時にグラフィックスがちらつく問題を回避するには、<xref:System.Windows.Forms.ListView> コントロールをオーバーライドし、<xref:System.Windows.Forms.ListView.DoubleBuffered%2A> プロパティを `true`に設定します。 この機能は、アプリケーションが <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> メソッドを呼び出すときに、Windows XP と Windows Server 2003 ファミリでのみ使用できます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Windows.Forms.ListView> コントロールにカスタム描画を提供する方法を示しています。 この例の <xref:System.Windows.Forms.ListView> コントロールには、グラデーションの背景があります。 負の値を持つサブ項目は、赤の前景と黒の背景を持ちます。  
  
 <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> イベントのハンドラーは、項目全体の背景を描画します。 <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> イベントのハンドラーは、テキスト値と、負の値を持つサブ項目のテキストと背景の両方を描画します。 <xref:System.Windows.Forms.ListView.DrawColumnHeader> イベントのハンドラーは、各列ヘッダーを描画します。  
  
 <xref:System.Windows.Forms.ContextMenu> コンポーネントを使用すると、詳細ビューとリストビューを切り替えることができます。 リストビューでは、<xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> イベントのみが発生します。 この場合、テキストと背景は両方とも <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> イベントハンドラーに描画されます。  
  
 [!code-csharp[ListViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#1)]
 [!code-vb[ListViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
    <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawListViewItemEventArgs (System.Drawing.Graphics graphics, System.Windows.Forms.ListViewItem item, System.Drawing.Rectangle bounds, int itemIndex, System.Windows.Forms.ListViewItemStates state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Windows.Forms.ListViewItem item, valuetype System.Drawing.Rectangle bounds, int32 itemIndex, valuetype System.Windows.Forms.ListViewItemStates state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.ListViewItem,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.ListViewItemStates)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (graphics As Graphics, item As ListViewItem, bounds As Rectangle, itemIndex As Integer, state As ListViewItemStates)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawListViewItemEventArgs(System::Drawing::Graphics ^ graphics, System::Windows::Forms::ListViewItem ^ item, System::Drawing::Rectangle bounds, int itemIndex, System::Windows::Forms::ListViewItemStates state);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawListViewItemEventArgs : System.Drawing.Graphics * System.Windows.Forms.ListViewItem * System.Drawing.Rectangle * int * System.Windows.Forms.ListViewItemStates -&gt; System.Windows.Forms.DrawListViewItemEventArgs" Usage="new System.Windows.Forms.DrawListViewItemEventArgs (graphics, item, bounds, itemIndex, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ListViewItemStates" />
      </Parameters>
      <Docs>
        <param name="graphics">描画が実行される <see cref="T:System.Drawing.Graphics" /> 表面。</param>
        <param name="item">描画する <see cref="T:System.Windows.Forms.ListViewItem" />。</param>
        <param name="bounds">内部を描画する <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="itemIndex"><see cref="T:System.Windows.Forms.ListViewItem" /> コレクション内の <see cref="P:System.Windows.Forms.ListView.Items" /> のインデックス。</param>
        <param name="state">描画する <see cref="T:System.Windows.Forms.ListViewItemStates" /> の現在の状態を示す <see cref="T:System.Windows.Forms.ListViewItem" /> 値のビットごとの組み合わせ。</param>
        <summary><see cref="T:System.Windows.Forms.DrawListViewItemEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>描画する <see cref="T:System.Windows.Forms.ListViewItem" /> のサイズと位置を取得します。</summary>
        <value>描画する <see cref="T:System.Drawing.Rectangle" /> の境界を表す <see cref="T:System.Windows.Forms.ListViewItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティで指定される場所は、<xref:System.Windows.Forms.ListView> コントロールの左上隅を基準とした相対位置です。  
  
 <xref:System.Windows.Forms.ListViewItem>の特定の部分の境界を取得するには、<xref:System.Windows.Forms.ListViewItem.GetBounds%2A?displayProperty=nameWithType> メソッドを使用します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Windows.Forms.ListView> コントロールのカスタム描画を提供するアプリケーションで <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> プロパティを使用する方法を示しています。 この例では、<xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> イベントのハンドラーが項目全体の背景を描画します。 詳細ビュー以外のすべてのビューでは、このハンドラーも前景テキストを描画します。 詳細ビューでは、<xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> イベントに前景テキストが描画されます。  
  
 完全な例については、「<xref:System.Windows.Forms.DrawListViewItemEventArgs> の概要」を参照してください。  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.GetBounds(System.Windows.Forms.ItemBoundsPortion)" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public void DrawBackground ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBackground() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.DrawBackground" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawBackground ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBackground();" />
      <MemberSignature Language="F#" Value="member this.DrawBackground : unit -&gt; unit" Usage="drawListViewItemEventArgs.DrawBackground " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の背景色を使用して、<see cref="T:System.Windows.Forms.ListViewItem" /> の背景を描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、<xref:System.Windows.Forms.ListViewItem.BackColor%2A?displayProperty=nameWithType> プロパティの現在の値を使用する標準の背景を描画します。 <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> プロパティによって指定された領域を埋めるための背景が描画されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="DrawDefault">
      <MemberSignature Language="C#" Value="public bool DrawDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DrawDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.DrawDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DrawDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DrawDefault : bool with get, set" Usage="System.Windows.Forms.DrawListViewItemEventArgs.DrawDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ListView" /> コントロールで <see cref="T:System.Windows.Forms.ListViewItem" /> に既定の描画が使用されるかどうかを示すプロパティを取得または設定します。</summary>
        <value>システムによって項目が描画される場合は <see langword="true" />。イベント ハンドラーによって項目が描画される場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アイテムがカスタム描画を必要としない場合は、このプロパティを `true` に設定します。 これは、選択した項目など、コントロール内の特定の項目のみをカスタマイズする必要がある場合に便利です。  
  
   
  
## Examples  
 このメンバーの使用例を次のコード例に示します。 この例では、イベントハンドラーは、<xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> イベントの発生を報告します。 このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。  
  
 コード例を実行するには、`ListView1`という <xref:System.Windows.Forms.ListView> 型のインスタンスを含むプロジェクトに貼り付けます。 次に、イベントハンドラーが <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> イベントに関連付けられていることを確認します。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#471](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#471)]
 [!code-vb[System.Windows.Forms.EventExamples#471](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#471)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public void DrawFocusRectangle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawFocusRectangle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.DrawFocusRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawFocusRectangle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawFocusRectangle();" />
      <MemberSignature Language="F#" Value="member this.DrawFocusRectangle : unit -&gt; unit" Usage="drawListViewItemEventArgs.DrawFocusRectangle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ListViewItem" /> にフォーカスがある場合、フォーカス四角形を描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、項目の周囲に標準的なフォーカスを示す四角形を描画します。 フォーカスを示す四角形は通常、<xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> プロパティによって指定された領域内に描画されます。 コントロールが詳細ビューにあり、<xref:System.Windows.Forms.ListView.FullRowSelect%2A?displayProperty=nameWithType> のプロパティ値が `false`場合は、項目の最初の列の既定のテキスト領域の周囲にフォーカスを示す四角形が描画されます。  
  
 フォーカスを示す四角形は、項目にフォーカスがある場合にのみ描画されるため、このメソッドを呼び出す前に項目のフォーカス状態を確認する必要はありません。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Windows.Forms.ListView> コントロールのカスタム描画を提供するアプリケーションで <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawFocusRectangle%2A> メソッドを使用する方法を示しています。 この例では、<xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> イベントのハンドラーが項目全体の背景を描画します。 詳細ビュー以外のすべてのビューでは、このハンドラーも前景テキストを描画します。 詳細ビューでは、<xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> イベントに前景テキストが描画されます。  
  
 完全な例については、「<xref:System.Windows.Forms.DrawListViewItemEventArgs> の概要」を参照してください。  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>現在の前景色と既定の書式を使用して、<see cref="T:System.Windows.Forms.ListViewItem" /> のテキストを描画します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.DrawText" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText();" />
      <MemberSignature Language="F#" Value="member this.DrawText : unit -&gt; unit" Usage="drawListViewItemEventArgs.DrawText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の前景色を使用して、<see cref="T:System.Windows.Forms.ListViewItem" /> のテキストを描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、<xref:System.Windows.Forms.ListViewItem.ForeColor%2A?displayProperty=nameWithType> と <xref:System.Windows.Forms.ListViewItem.Font%2A?displayProperty=nameWithType> のプロパティの現在の値を使用して、項目のテキストを描画します。 テキストは、<xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> プロパティによって指定された領域内に描画されます。 <xref:System.Windows.Forms.DrawListViewItemEventArgs.Graphics%2A> プロパティを通じて取得した <xref:System.Drawing.Graphics> を使用して、手動でテキストを描画することもできます。  
  
 <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A> メソッドは、<xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> プロパティが <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>以外の値に設定されている場合に最も役立ちます。 詳細ビューでは、このメソッドは <xref:System.Windows.Forms.ListViewItem>のテキストを描画しますが、サブ項目のテキストは描画しません。 そのため、詳細ビューでは、通常、<xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> イベントのハンドラーにすべての <xref:System.Windows.Forms.ListView> テキストを描画する方が便利です。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Windows.Forms.ListView> コントロールのカスタム描画を提供するアプリケーションで <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A> メソッドを使用する方法を示しています。 この例では、<xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> イベントのハンドラーが項目全体の背景を描画します。 詳細ビュー以外のすべてのビューでは、このハンドラーも前景テキストを描画します。 詳細ビューでは、<xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> イベントに前景テキストが描画されます。  
  
 完全な例については、「<xref:System.Windows.Forms.DrawListViewItemEventArgs> の概要」を参照してください。  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Graphics" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText (System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText(valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.DrawText(System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText (flags As TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText(System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="member this.DrawText : System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="drawListViewItemEventArgs.DrawText flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="flags"><see cref="T:System.Windows.Forms.TextFormatFlags" /> 値のビットごとの組み合わせ。</param>
        <summary>現在の前景色を使用し、指定された <see cref="T:System.Windows.Forms.ListViewItem" /> 値で書式を設定して、<see cref="T:System.Windows.Forms.TextFormatFlags" /> のテキストを描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、<xref:System.Windows.Forms.ListViewItem.ForeColor%2A?displayProperty=nameWithType> と <xref:System.Windows.Forms.ListViewItem.Font%2A?displayProperty=nameWithType> のプロパティの現在の値を使用して、項目のテキストを描画します。 `flags` パラメーターで指定された <xref:System.Windows.Forms.TextFormatFlags> 値を使用すると、テキストの配置など、ノードのラベルの書式設定プロパティを指定できます。 テキストは、<xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> プロパティによって指定された領域内に描画されます。 <xref:System.Windows.Forms.DrawListViewItemEventArgs.Graphics%2A> プロパティを通じて取得した <xref:System.Drawing.Graphics> を使用して、手動でテキストを描画することもできます。  
  
 <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A> メソッドは、<xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> プロパティが <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>以外の値に設定されている場合に最も役立ちます。 詳細ビューでは、このメソッドは <xref:System.Windows.Forms.ListViewItem>のテキストを描画しますが、サブ項目のテキストは描画しません。 そのため、詳細ビューでは、通常、<xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> イベントのハンドラーにすべての <xref:System.Windows.Forms.ListView> テキストを描画する方が便利です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Graphics" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
        <altmember cref="T:System.Windows.Forms.TextFormatFlags" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Windows.Forms.DrawListViewItemEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Drawing.Graphics" /> の描画に使用する <see cref="T:System.Windows.Forms.ListViewItem" /> を取得します。</summary>
        <value><see cref="T:System.Drawing.Graphics" /> の描画に使用する <see cref="T:System.Windows.Forms.ListViewItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Graphics> クラスには、ディスプレイデバイスでの描画に便利なプロパティとメソッドが用意されています。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Windows.Forms.ListView> コントロールのカスタム描画を提供するアプリケーションで <xref:System.Windows.Forms.DrawListViewItemEventArgs.Graphics%2A> プロパティを使用する方法を示しています。 この例では、<xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> イベントのハンドラーが項目全体の背景を描画します。 詳細ビュー以外のすべてのビューでは、このハンドラーも前景テキストを描画します。 詳細ビューでは、<xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> イベントに前景テキストが描画されます。  
  
 完全な例については、「<xref:System.Windows.Forms.DrawListViewItemEventArgs> の概要」を参照してください。  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ Item { System::Windows::Forms::ListViewItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : System.Windows.Forms.ListViewItem" Usage="System.Windows.Forms.DrawListViewItemEventArgs.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>描画する <see cref="T:System.Windows.Forms.ListViewItem" /> を取得します。</summary>
        <value>描画する <see cref="T:System.Windows.Forms.ListViewItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、描画する <xref:System.Windows.Forms.ListViewItem> にアクセスします。 これは、<xref:System.Windows.Forms.DrawListViewItemEventArgs.State%2A> プロパティがニーズを満たすのに十分な情報を提供しない場合に便利です。 <xref:System.Windows.Forms.DrawListViewItemEventArgs.State%2A> プロパティは、たとえば、項目が選択、チェック、フォーカスされているかどうかを判断するために使用できる基本状態情報のみを提供します。 一方、<xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> プロパティを使用すると、<xref:System.Windows.Forms.ListViewItem>のすべてのメンバーにアクセスできます。 項目に直接アクセスする必要があります。たとえば、<xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A> メソッドを使用するのではなく、自分で <xref:System.Windows.Forms.ListViewItem.Text%2A?displayProperty=nameWithType> 値を描画します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Windows.Forms.ListView> コントロールのカスタム描画を提供するアプリケーションで <xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> プロパティを使用する方法を示しています。 この例では、<xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> イベントのハンドラーが項目全体の背景を描画します。 詳細ビュー以外のすべてのビューでは、このハンドラーも前景テキストを描画します。 詳細ビューでは、<xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> イベントに前景テキストが描画されます。  
  
 完全な例については、「<xref:System.Windows.Forms.DrawListViewItemEventArgs> の概要」を参照してください。  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.DrawListViewItemEventArgs.DrawText" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Text" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.State" />
      </Docs>
    </Member>
    <Member MemberName="ItemIndex">
      <MemberSignature Language="C#" Value="public int ItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItemIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemIndex : int" Usage="System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ListViewItem" /> を格納する <see cref="P:System.Windows.Forms.ListView.Items" /> コレクション内における <see cref="T:System.Windows.Forms.ListView" /> のインデックスを取得します。</summary>
        <value><see cref="T:System.Windows.Forms.ListViewItem" /> コレクション内の <see cref="P:System.Windows.Forms.ListView.Items" /> のインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 このメンバーの使用例を次のコード例に示します。 この例では、イベントハンドラーは、<xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> イベントの発生を報告します。 このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。  
  
 コード例を実行するには、`ListView1`という <xref:System.Windows.Forms.ListView> 型のインスタンスを含むプロジェクトに貼り付けます。 次に、イベントハンドラーが <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> イベントに関連付けられていることを確認します。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#471](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#471)]
 [!code-vb[System.Windows.Forms.EventExamples#471](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#471)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="P:System.Windows.Forms.ListView.Items" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItemStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ListViewItemStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As ListViewItemStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItemStates State { System::Windows::Forms::ListViewItemStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.ListViewItemStates" Usage="System.Windows.Forms.DrawListViewItemEventArgs.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>描画する <see cref="T:System.Windows.Forms.ListViewItem" /> の現在の状態を取得します。</summary>
        <value><see cref="T:System.Windows.Forms.ListViewItemStates" /> の現在の状態を示す <see cref="T:System.Windows.Forms.ListViewItem" /> 値のビットごとの組み合わせ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、描画する <xref:System.Windows.Forms.ListViewItem> が特定の状態であるかどうかを確認します。 このプロパティは、項目に関する基本状態情報のみを提供します。 たとえば、このプロパティを使用して、項目が選択、チェック、またはフォーカスされているかどうかを判断できます。 詳細については、<xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> プロパティを使用して項目を取得し、そのプロパティを直接確認してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Windows.Forms.ListView> コントロールのカスタム描画を提供するアプリケーションで <xref:System.Windows.Forms.DrawListViewItemEventArgs.State%2A> プロパティを使用する方法を示しています。 この例では、<xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> イベントのハンドラーが項目全体の背景を描画します。 詳細ビュー以外のすべてのビューでは、このハンドラーも前景テキストを描画します。 詳細ビューでは、<xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> イベントに前景テキストが描画されます。  
  
 完全な例については、「<xref:System.Windows.Forms.DrawListViewItemEventArgs> の概要」を参照してください。  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Item" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItemStates" />
      </Docs>
    </Member>
  </Members>
</Type>
