<Type Name="ServiceContainer" FullName="System.ComponentModel.Design.ServiceContainer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5631eb28c42cca84bd1667cadb066de872971a6c" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78709651" /></Metadata><TypeSignature Language="C#" Value="public class ServiceContainer : IDisposable, IServiceProvider, System.ComponentModel.Design.IServiceContainer" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceContainer extends System.Object implements class System.ComponentModel.Design.IServiceContainer, class System.IDisposable, class System.IServiceProvider" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ServiceContainer" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceContainer&#xA;Implements IDisposable, IServiceContainer, IServiceProvider" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceContainer : IDisposable, IServiceProvider, System::ComponentModel::Design::IServiceContainer" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type ServiceContainer = class&#xA;    interface IServiceContainer&#xA;    interface IServiceProvider&#xA;    interface IDisposable" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public sealed class ServiceContainer : IServiceProvider, System.ComponentModel.Design.IServiceContainer" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceContainer extends System.Object implements class System.ComponentModel.Design.IServiceContainer, class System.IServiceProvider" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceContainer&#xA;Implements IServiceContainer, IServiceProvider" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceContainer sealed : IServiceProvider, System::ComponentModel::Design::IServiceContainer" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type ServiceContainer = class&#xA;    interface IServiceContainer&#xA;    interface IServiceProvider" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C#" Value="public class ServiceContainer : IDisposable, System.ComponentModel.Design.IServiceContainer" FrameworkAlternate="netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceContainer&#xA;Implements IDisposable, IServiceContainer" FrameworkAlternate="netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceContainer : IDisposable, System::ComponentModel::Design::IServiceContainer" FrameworkAlternate="netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type ServiceContainer = class&#xA;    interface IServiceContainer&#xA;    interface IDisposable&#xA;    interface IServiceProvider" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IServiceContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="179cf-101"><see cref="T:System.ComponentModel.Design.IServiceContainer" /> インターフェイスの単純な実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="179cf-101">Provides a simple implementation of the <see cref="T:System.ComponentModel.Design.IServiceContainer" /> interface.</span></span> <span data-ttu-id="179cf-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="179cf-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179cf-103"><xref:System.ComponentModel.Design.ServiceContainer> オブジェクトを使用して、サービスを格納および提供できます。</span><span class="sxs-lookup"><span data-stu-id="179cf-103">The <xref:System.ComponentModel.Design.ServiceContainer> object can be used to store and provide services.</span></span> <span data-ttu-id="179cf-104"><xref:System.ComponentModel.Design.ServiceContainer> は、<xref:System.ComponentModel.Design.IServiceContainer> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="179cf-104"><xref:System.ComponentModel.Design.ServiceContainer> implements the <xref:System.ComponentModel.Design.IServiceContainer> interface.</span></span>  
  
 <span data-ttu-id="179cf-105"><xref:System.ComponentModel.Design.ServiceContainer> オブジェクトは、親 <xref:System.ComponentModel.Design.IServiceContainer> を追加するコンストラクターを使用して作成できます。これにより、必要に応じて、直接の親 <xref:System.ComponentModel.Design.IServiceContainer>を含むすべての親 <xref:System.ComponentModel.Design.IServiceContainer> オブジェクトに対してサービスを追加または削除できます。</span><span class="sxs-lookup"><span data-stu-id="179cf-105">The <xref:System.ComponentModel.Design.ServiceContainer> object can be created using a constructor that adds a parent <xref:System.ComponentModel.Design.IServiceContainer> through which services can be optionally added to or removed from all parent <xref:System.ComponentModel.Design.IServiceContainer> objects, including the immediate parent <xref:System.ComponentModel.Design.IServiceContainer>.</span></span> <span data-ttu-id="179cf-106">この <xref:System.ComponentModel.Design.IServiceContainer> に関連付けられているすべての <xref:System.ComponentModel.Design.IServiceContainer> 実装に対して、親を通じてサービスを追加または削除するには、サービス要求を昇格するかどうかを示すブール値を受け取る <xref:System.ComponentModel.Design.ServiceContainer.AddService%2A> または <xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A> メソッドのオーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="179cf-106">To add or remove a service from all <xref:System.ComponentModel.Design.IServiceContainer> implementations that are linked to this <xref:System.ComponentModel.Design.IServiceContainer> through parenting, call the <xref:System.ComponentModel.Design.ServiceContainer.AddService%2A> or <xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A> method overload that accepts a Boolean value indicating whether to promote the service request.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="179cf-107">このクラスに適用される <xref:System.Security.Permissions.HostProtectionAttribute> 属性には、次の <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> プロパティ値があります: <xref:System.Security.Permissions.HostProtectionResource.SharedState>。</span><span class="sxs-lookup"><span data-stu-id="179cf-107">The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource.SharedState>.</span></span> <span data-ttu-id="179cf-108"><xref:System.Security.Permissions.HostProtectionAttribute> は、デスクトップ アプリケーション (通常、アイコンのダブルクリック、コマンドの入力、またはブラウザーへの URL の入力により起動されます) には影響しません。</span><span class="sxs-lookup"><span data-stu-id="179cf-108">The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser).</span></span> <span data-ttu-id="179cf-109">詳細については、「<xref:System.Security.Permissions.HostProtectionAttribute> クラス」または「 [SQL Server プログラミングとホスト保護の属性](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="179cf-109">For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="179cf-110">次のサンプルプログラムでは、サービスチェーンと、リンクされた <xref:System.ComponentModel.Design.ServiceContainer> オブジェクトのチェーンによって得られるサービスの可用性を示します。</span><span class="sxs-lookup"><span data-stu-id="179cf-110">The following example program demonstrates service chaining and the resultant service availability of a chain of linked <xref:System.ComponentModel.Design.ServiceContainer> objects.</span></span> <span data-ttu-id="179cf-111">このプログラムは、リンクされたサービスのチェーン内でサービスの可用性を確認できるユーザーインターフェイスを提供し、リンクされたサービスコンテナーだけでなく、<xref:System.ComponentModel.Design.ServiceContainer.AddService%2A>、<xref:System.ComponentModel.Design.ServiceContainer.GetService%2A>、および <xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="179cf-111">The program provides a user interface that allows you to see the availability of services within a chain of linked services, and uses the <xref:System.ComponentModel.Design.ServiceContainer.AddService%2A>, <xref:System.ComponentModel.Design.ServiceContainer.GetService%2A>, and <xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A> methods as well as linked service containers.</span></span>  
  
 [!code-cpp[ServiceArchitectureExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ServiceArchitectureExample/CPP/serviceform.cpp#1)]
 [!code-csharp[ServiceArchitectureExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ServiceArchitectureExample/CS/serviceform.cs#1)]
 [!code-vb[ServiceArchitectureExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ServiceArchitectureExample/VB/serviceform.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.ComponentModel.Design.IServiceContainer" />
    <altmember cref="T:System.ComponentModel.Design.ServiceCreatorCallback" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="179cf-112"><see cref="T:System.ComponentModel.Design.ServiceContainer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="179cf-112">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ServiceContainer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ServiceContainer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceContainer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="179cf-113"><see cref="T:System.ComponentModel.Design.ServiceContainer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="179cf-113">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ServiceContainer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceContainer (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceContainer(IServiceProvider ^ parentProvider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.ServiceContainer : IServiceProvider -&gt; System.ComponentModel.Design.ServiceContainer" Usage="new System.ComponentModel.Design.ServiceContainer parentProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider"><span data-ttu-id="179cf-114">親サービス プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="179cf-114">A parent service provider.</span></span></param>
        <summary><span data-ttu-id="179cf-115">親サービス プロバイダーを指定して、<see cref="T:System.ComponentModel.Design.ServiceContainer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="179cf-115">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ServiceContainer" /> class using the specified parent service provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179cf-116">サービスコンテナーは、このサービスオブジェクトプロバイダーを使用してサービスを取得します (コンテナーでローカルに使用できない場合)。</span><span class="sxs-lookup"><span data-stu-id="179cf-116">The service container uses this service object provider to retrieve services, if they are not available locally in the container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddService">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="179cf-117">指定したサービスをサービス コンテナーに追加します。</span><span class="sxs-lookup"><span data-stu-id="179cf-117">Adds the specified service to the service container.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddService">
      <MemberSignature Language="C#" Value="public void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddService(class System.Type serviceType, class System.ComponentModel.Design.ServiceCreatorCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddService (serviceType As Type, callback As ServiceCreatorCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddService(Type ^ serviceType, System::ComponentModel::Design::ServiceCreatorCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member AddService : Type * System.ComponentModel.Design.ServiceCreatorCallback -&gt; unit&#xA;override this.AddService : Type * System.ComponentModel.Design.ServiceCreatorCallback -&gt; unit" Usage="serviceContainer.AddService (serviceType, callback)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="callback" Type="System.ComponentModel.Design.ServiceCreatorCallback" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="179cf-118">追加するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="179cf-118">The type of service to add.</span></span></param>
        <param name="callback"><span data-ttu-id="179cf-119">サービスを作成できるコールバック オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="179cf-119">A callback object that can create the service.</span></span> <span data-ttu-id="179cf-120">これにより、サービスを使用可能として宣言できますが、オブジェクトの作成はそのサービスが要求されるまで延期されます。</span><span class="sxs-lookup"><span data-stu-id="179cf-120">This allows a service to be declared as available, but delays creation of the object until the service is requested.</span></span></param>
        <summary><span data-ttu-id="179cf-121">指定したサービスをサービス コンテナーに追加します。</span><span class="sxs-lookup"><span data-stu-id="179cf-121">Adds the specified service to the service container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="179cf-122">次の例は、サービスを <xref:System.ComponentModel.Design.ServiceContainer>に追加する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="179cf-122">The following example illustrates how to add a service to a <xref:System.ComponentModel.Design.ServiceContainer>.</span></span>  
  
 [!code-cpp[ServiceContainerExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ServiceContainerExample/CPP/form1.cpp#3)]
 [!code-csharp[ServiceContainerExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ServiceContainerExample/CS/form1.cs#3)]
 [!code-vb[ServiceContainerExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ServiceContainerExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="179cf-123"><paramref name="serviceType" /> または <paramref name="callback" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="179cf-123"><paramref name="serviceType" /> or <paramref name="callback" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="179cf-124">型のサービス <paramref name="serviceType" /> はコンテナー内に既に存在します。</span><span class="sxs-lookup"><span data-stu-id="179cf-124">A service of type <paramref name="serviceType" /> already exists in the container.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.IServiceContainer" />
      </Docs>
    </Member>
    <Member MemberName="AddService">
      <MemberSignature Language="C#" Value="public void AddService (Type serviceType, object serviceInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddService(class System.Type serviceType, object serviceInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddService (serviceType As Type, serviceInstance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddService(Type ^ serviceType, System::Object ^ serviceInstance);" />
      <MemberSignature Language="F#" Value="abstract member AddService : Type * obj -&gt; unit&#xA;override this.AddService : Type * obj -&gt; unit" Usage="serviceContainer.AddService (serviceType, serviceInstance)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="serviceInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="179cf-125">追加するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="179cf-125">The type of service to add.</span></span></param>
        <param name="serviceInstance"><span data-ttu-id="179cf-126">追加するサービスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="179cf-126">An instance of the service to add.</span></span> <span data-ttu-id="179cf-127">このオブジェクトは、<paramref name="serviceType" /> パラメーターに指定された型を実装しているか、またはその型から継承していることが必要です。</span><span class="sxs-lookup"><span data-stu-id="179cf-127">This object must implement or inherit from the type indicated by the <paramref name="serviceType" /> parameter.</span></span></param>
        <summary><span data-ttu-id="179cf-128">指定したサービスをサービス コンテナーに追加します。</span><span class="sxs-lookup"><span data-stu-id="179cf-128">Adds the specified service to the service container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="179cf-129">次の例は、サービスを <xref:System.ComponentModel.Design.ServiceContainer>に追加する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="179cf-129">The following example illustrates how to add a service to a <xref:System.ComponentModel.Design.ServiceContainer>.</span></span>  
  
 [!code-cpp[ServiceContainerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ServiceContainerExample/CPP/form1.cpp#2)]
 [!code-csharp[ServiceContainerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ServiceContainerExample/CS/form1.cs#2)]
 [!code-vb[ServiceContainerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ServiceContainerExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="179cf-130"><paramref name="serviceType" /> または <paramref name="serviceInstance" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="179cf-130"><paramref name="serviceType" /> or <paramref name="serviceInstance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="179cf-131">型のサービス <paramref name="serviceType" /> はコンテナー内に既に存在します。</span><span class="sxs-lookup"><span data-stu-id="179cf-131">A service of type <paramref name="serviceType" /> already exists in the container.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.IServiceContainer" />
      </Docs>
    </Member>
    <Member MemberName="AddService">
      <MemberSignature Language="C#" Value="public virtual void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback, bool promote);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddService(class System.Type serviceType, class System.ComponentModel.Design.ServiceCreatorCallback callback, bool promote) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddService (serviceType As Type, callback As ServiceCreatorCallback, promote As Boolean)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddService(Type ^ serviceType, System::ComponentModel::Design::ServiceCreatorCallback ^ callback, bool promote);" />
      <MemberSignature Language="F#" Value="abstract member AddService : Type * System.ComponentModel.Design.ServiceCreatorCallback * bool -&gt; unit&#xA;override this.AddService : Type * System.ComponentModel.Design.ServiceCreatorCallback * bool -&gt; unit" Usage="serviceContainer.AddService (serviceType, callback, promote)" />
      <MemberSignature Language="C#" Value="public void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback, bool promote);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddService (serviceType As Type, callback As ServiceCreatorCallback, promote As Boolean)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="callback" Type="System.ComponentModel.Design.ServiceCreatorCallback" />
        <Parameter Name="promote" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="179cf-132">追加するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="179cf-132">The type of service to add.</span></span></param>
        <param name="callback"><span data-ttu-id="179cf-133">サービスを作成できるコールバック オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="179cf-133">A callback object that can create the service.</span></span> <span data-ttu-id="179cf-134">これにより、サービスを使用可能として宣言できますが、オブジェクトの作成はそのサービスが要求されるまで延期されます。</span><span class="sxs-lookup"><span data-stu-id="179cf-134">This allows a service to be declared as available, but delays creation of the object until the service is requested.</span></span></param>
        <param name="promote"><span data-ttu-id="179cf-135">サービスを任意の親サービス コンテナーに追加する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="179cf-135"><see langword="true" /> if this service should be added to any parent service containers; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="179cf-136">指定したサービスをサービス コンテナーに追加します。</span><span class="sxs-lookup"><span data-stu-id="179cf-136">Adds the specified service to the service container.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="179cf-137"><paramref name="serviceType" /> または <paramref name="callback" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="179cf-137"><paramref name="serviceType" /> or <paramref name="callback" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="179cf-138">型のサービス <paramref name="serviceType" /> はコンテナー内に既に存在します。</span><span class="sxs-lookup"><span data-stu-id="179cf-138">A service of type <paramref name="serviceType" /> already exists in the container.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.IServiceContainer" />
      </Docs>
    </Member>
    <Member MemberName="AddService">
      <MemberSignature Language="C#" Value="public virtual void AddService (Type serviceType, object serviceInstance, bool promote);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddService(class System.Type serviceType, object serviceInstance, bool promote) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddService (serviceType As Type, serviceInstance As Object, promote As Boolean)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddService(Type ^ serviceType, System::Object ^ serviceInstance, bool promote);" />
      <MemberSignature Language="F#" Value="abstract member AddService : Type * obj * bool -&gt; unit&#xA;override this.AddService : Type * obj * bool -&gt; unit" Usage="serviceContainer.AddService (serviceType, serviceInstance, promote)" />
      <MemberSignature Language="C#" Value="public void AddService (Type serviceType, object serviceInstance, bool promote);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddService (serviceType As Type, serviceInstance As Object, promote As Boolean)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="serviceInstance" Type="System.Object" />
        <Parameter Name="promote" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="179cf-139">追加するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="179cf-139">The type of service to add.</span></span></param>
        <param name="serviceInstance"><span data-ttu-id="179cf-140">追加するサービス型のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="179cf-140">An instance of the service type to add.</span></span> <span data-ttu-id="179cf-141">このオブジェクトは、<paramref name="serviceType" /> パラメーターに指定された型を実装しているか、またはその型から継承していることが必要です。</span><span class="sxs-lookup"><span data-stu-id="179cf-141">This object must implement or inherit from the type indicated by the <paramref name="serviceType" /> parameter.</span></span></param>
        <param name="promote"><span data-ttu-id="179cf-142">サービスを任意の親サービス コンテナーに追加する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="179cf-142"><see langword="true" /> if this service should be added to any parent service containers; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="179cf-143">指定したサービスをサービス コンテナーに追加します。</span><span class="sxs-lookup"><span data-stu-id="179cf-143">Adds the specified service to the service container.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="179cf-144"><paramref name="serviceType" /> または <paramref name="serviceInstance" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="179cf-144"><paramref name="serviceType" /> or <paramref name="serviceInstance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="179cf-145">型のサービス <paramref name="serviceType" /> はコンテナー内に既に存在します。</span><span class="sxs-lookup"><span data-stu-id="179cf-145">A service of type <paramref name="serviceType" /> already exists in the container.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.IServiceContainer" />
      </Docs>
    </Member>
    <Member MemberName="DefaultServices">
      <MemberSignature Language="C#" Value="protected virtual Type[] DefaultServices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] DefaultServices" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ServiceContainer.DefaultServices" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultServices As Type()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property cli::array &lt;Type ^&gt; ^ DefaultServices { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultServices : Type[]" Usage="System.ComponentModel.Design.ServiceContainer.DefaultServices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="179cf-146"><see cref="T:System.ComponentModel.Design.ServiceContainer" /> によって直接実装されている既定のサービスを取得します。</span><span class="sxs-lookup"><span data-stu-id="179cf-146">Gets the default services implemented directly by <see cref="T:System.ComponentModel.Design.ServiceContainer" />.</span></span></summary>
        <value><span data-ttu-id="179cf-147">既定のサービス。</span><span class="sxs-lookup"><span data-stu-id="179cf-147">The default services.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179cf-148">このプロパティは、この <xref:System.ComponentModel.Design.IServiceContainer>に直接実装されている既定のサービスを返します。</span><span class="sxs-lookup"><span data-stu-id="179cf-148">This property returns the default services that are implemented directly on this <xref:System.ComponentModel.Design.IServiceContainer>.</span></span> <span data-ttu-id="179cf-149">このプロパティの既定の実装では、<xref:System.ComponentModel.Design.IServiceContainer> と <xref:System.ComponentModel.Design.ServiceContainer> 型が返されます。</span><span class="sxs-lookup"><span data-stu-id="179cf-149">the default implementation of this property is to return the <xref:System.ComponentModel.Design.IServiceContainer> and <xref:System.ComponentModel.Design.ServiceContainer> types.</span></span> <span data-ttu-id="179cf-150">このプロパティをオーバーライドして独自の型を返し、<xref:System.ComponentModel.Component.GetService%2A>の既定の動作を変更することができます。</span><span class="sxs-lookup"><span data-stu-id="179cf-150">You may override this property and return your own types, modifying the default behavior of <xref:System.ComponentModel.Component.GetService%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="179cf-151">このサービス コンテナーを破棄します。</span><span class="sxs-lookup"><span data-stu-id="179cf-151">Disposes this service container.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ServiceContainer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="serviceContainer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="179cf-152">このサービス コンテナーを破棄します。</span><span class="sxs-lookup"><span data-stu-id="179cf-152">Disposes this service container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179cf-153"><xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> は、コンテナー内のすべてのインスタンス化されたサービスをウォークし、<xref:System.IDisposable>を実装するを破棄して、サービスの一覧をクリアします。</span><span class="sxs-lookup"><span data-stu-id="179cf-153"><xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> walks all instantiated services within the container and disposes any that implement <xref:System.IDisposable>, and clears the service list.</span></span>  
  
 <span data-ttu-id="179cf-154"><xref:System.ComponentModel.Design.ServiceContainer> を使い終わったら、<xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="179cf-154">Call <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.ServiceContainer>.</span></span> <span data-ttu-id="179cf-155"><xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>メソッドによって、<xref:System.ComponentModel.Design.ServiceContainer> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="179cf-155">The <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.ServiceContainer> in an unusable state.</span></span> <span data-ttu-id="179cf-156"><xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>呼び出し後は、<xref:System.ComponentModel.Design.ServiceContainer>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.ComponentModel.Design.ServiceContainer> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="179cf-156">After calling <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.ServiceContainer> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.ServiceContainer> was occupying.</span></span> <span data-ttu-id="179cf-157">詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="179cf-157">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="179cf-158"><xref:System.ComponentModel.Design.ServiceContainer>への最後の参照を解放する前に、必ず<xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="179cf-158">Always call <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.ServiceContainer>.</span></span> <span data-ttu-id="179cf-159">そうしないと、ガベージ コレクターが <xref:System.ComponentModel.Design.ServiceContainer> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="179cf-159">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.ServiceContainer> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="serviceContainer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="179cf-160"><see cref="T:System.ComponentModel.Design.ServiceContainer" /> が破棄処理中である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="179cf-160"><see langword="true" /> if the <see cref="T:System.ComponentModel.Design.ServiceContainer" /> is in the process of being disposed of; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="179cf-161">このサービス コンテナーを破棄します。</span><span class="sxs-lookup"><span data-stu-id="179cf-161">Disposes this service container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179cf-162"><xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> は、コンテナー内のすべてのインスタンス化されたサービスをウォークし、<xref:System.IDisposable>を実装するを破棄して、サービスの一覧をクリアします。</span><span class="sxs-lookup"><span data-stu-id="179cf-162"><xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> walks all instantiated services within the container and disposes any that implement <xref:System.IDisposable>, and clears the service list.</span></span>  
  
 <span data-ttu-id="179cf-163">このメソッドは、パブリックな `Dispose()` メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="179cf-163">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="179cf-164">`Dispose()` は、`disposing` パラメーターを `true`に設定して、protected `Dispose(Boolean)` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="179cf-164">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="179cf-165"><xref:System.Object.Finalize%2A> は `disposing` を `false`に設定して `Dispose` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="179cf-165"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="179cf-166">`disposing` パラメーターが true の場合、このメソッドは、この <xref:System.ComponentModel.Design.ServiceContainer> が参照するすべてのマネージオブジェクトによって保持されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="179cf-166">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.ServiceContainer> references.</span></span> <span data-ttu-id="179cf-167">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="179cf-167">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="179cf-168">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="179cf-168">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="179cf-169">をオーバーライドする場合は <see langword="Dispose(Boolean)" /> 以前に <see langword="Dispose" />を呼び出したときに破棄されたオブジェクトを参照しないように注意してください。</span><span class="sxs-lookup"><span data-stu-id="179cf-169">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="179cf-170"><see langword="Dispose(Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="179cf-170">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="179cf-171"><see langword="Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」と「 [Finalize メソッドのオーバーライド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="179cf-171">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public virtual object GetService (Type serviceType);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ServiceContainer.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetService (serviceType As Type) As Object" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="serviceContainer.GetService serviceType" />
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="179cf-172">取得するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="179cf-172">The type of service to retrieve.</span></span></param>
        <summary><span data-ttu-id="179cf-173">要求したサービスを取得します。</span><span class="sxs-lookup"><span data-stu-id="179cf-173">Gets the requested service.</span></span></summary>
        <returns><span data-ttu-id="179cf-174">サービスが見つかった場合はそのサービスのインスタンス。サービスが見つからなかった場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="179cf-174">An instance of the service if it could be found, or <see langword="null" /> if it could not be found.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveService">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="179cf-175">指定したサービスの型をサービス コンテナーから削除します。</span><span class="sxs-lookup"><span data-stu-id="179cf-175">Removes the specified service type from the service container.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveService">
      <MemberSignature Language="C#" Value="public void RemoveService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveService (serviceType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member RemoveService : Type -&gt; unit&#xA;override this.RemoveService : Type -&gt; unit" Usage="serviceContainer.RemoveService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="179cf-176">削除するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="179cf-176">The type of service to remove.</span></span></param>
        <summary><span data-ttu-id="179cf-177">指定したサービスの型をサービス コンテナーから削除します。</span><span class="sxs-lookup"><span data-stu-id="179cf-177">Removes the specified service type from the service container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="179cf-178">次の例は、<xref:System.ComponentModel.Design.ServiceContainer>からサービスを削除する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="179cf-178">The following example illustrates how to remove a service from a <xref:System.ComponentModel.Design.ServiceContainer>.</span></span>  
  
 [!code-cpp[ServiceContainerExample#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ServiceContainerExample/CPP/form1.cpp#4)]
 [!code-csharp[ServiceContainerExample#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ServiceContainerExample/CS/form1.cs#4)]
 [!code-vb[ServiceContainerExample#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ServiceContainerExample/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="179cf-179"><paramref name="serviceType" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="179cf-179"><paramref name="serviceType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.IServiceContainer" />
      </Docs>
    </Member>
    <Member MemberName="RemoveService">
      <MemberSignature Language="C#" Value="public virtual void RemoveService (Type serviceType, bool promote);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveService(class System.Type serviceType, bool promote) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveService (serviceType As Type, promote As Boolean)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveService(Type ^ serviceType, bool promote);" />
      <MemberSignature Language="F#" Value="abstract member RemoveService : Type * bool -&gt; unit&#xA;override this.RemoveService : Type * bool -&gt; unit" Usage="serviceContainer.RemoveService (serviceType, promote)" />
      <MemberSignature Language="C#" Value="public void RemoveService (Type serviceType, bool promote);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveService (serviceType As Type, promote As Boolean)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="promote" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="179cf-180">削除するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="179cf-180">The type of service to remove.</span></span></param>
        <param name="promote"><span data-ttu-id="179cf-181">任意の親サービス コンテナーからサービスを削除する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="179cf-181"><see langword="true" /> if this service should be removed from any parent service containers; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="179cf-182">指定したサービスの型をサービス コンテナーから削除します。</span><span class="sxs-lookup"><span data-stu-id="179cf-182">Removes the specified service type from the service container.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="179cf-183"><paramref name="serviceType" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="179cf-183"><paramref name="serviceType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.IServiceContainer" />
      </Docs>
    </Member>
  </Members>
</Type>
