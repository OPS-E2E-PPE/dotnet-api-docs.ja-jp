<Type Name="ITypeDescriptorFilterService" FullName="System.ComponentModel.Design.ITypeDescriptorFilterService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a611ff3fda62b39068ea2bab340898c8b5e40de9" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75148352" /></Metadata><TypeSignature Language="C#" Value="public interface ITypeDescriptorFilterService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeDescriptorFilterService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeDescriptorFilterService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeDescriptorFilterService" />
  <TypeSignature Language="F#" Value="type ITypeDescriptorFilterService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>デザイン モードでコンポーネントの一連のメンバー記述子を変更するためのインターフェイスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> インターフェイスは、デザイン時にコンポーネントのプロパティ、イベント、およびクラスレベルの属性を変更できるようにするインターフェイスを提供します。 この変更は、コンポーネントが <xref:System.ComponentModel.TypeDescriptor>を通じて提供する一連の記述子を通じて行われます。 型記述子は、コンポーネントのサイトに対してクエリを実行し、<xref:System.ComponentModel.Design.ITypeDescriptorFilterService> サービスを検索します。存在する場合、型記述子は、このサービスに対して収集されたすべてのメタデータを渡します。 このサービスは、コンポーネントの既存の特性を追加、削除、および変更することでメタデータを変更できます。  
  
 たとえば、コンポーネントのプロパティは、<xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> メソッドを呼び出すことによって変更できます。 フィルターサービスは、<xref:System.ComponentModel.PropertyDescriptor>型のプロパティ名とそのプロパティ記述子を含むディクショナリを取得します。 変更は、次のロジックを使用して実装されます。  
  
|変更|実装|  
|------------------|--------------------|  
|満たし|ディクショナリ内の対応するエントリを削除します。|  
|加算|適切なエントリを辞書に追加します。|  
|変更|既存のプロパティ記述子メソッドを呼び出すか、関連付けられているプロパティ記述子のエントリを置き換えるか、またはディクショナリ内のプロパティのキーと値のペア全体を置き換えます。|  
  
 このプロパティのセットが固定されているかどうかは、<xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> の戻り値によって決まります。 このメソッドが `true`を返す場合、このコンポーネントの <xref:System.ComponentModel.TypeDescriptor> によって結果がキャッシュされます。 このキャッシュは、コンポーネントがガベージコレクションされるか、型記述子の <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> メソッドが呼び出されるまで保持されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.ComponentModel.Design.ITypeDescriptorFilterService> を使用して、新しいまたは既存の <xref:System.Windows.Forms.Button> の attributes コレクションをフィルター処理し、ボタンのデザイナーを読み込んだり再度読み込んだりする前に、新しいデザイナーのデザイナー属性を追加します。  
  
 この例を使用するには、コードを Windows フォームプロジェクトに追加し、コンポーネントをクラスライブラリからツールボックスに読み込みます。  
  
 「[チュートリアル: ツールボックスにカスタムコンポーネントを自動的に設定する](https://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx)」も参照してください。  
  
 いくつかのボタンをフォームに追加します。 フォームに `ButtonDesignerFilterComponent` を追加すると、コンポーネントトレイに表示されます。 `ButtonDesignerFilterComponent` によって、<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>を実装する `ButtonDesignerFilterService`がデザインモードのサービスプロバイダーとして追加されます。 フォーム上の既存または新規の <xref:System.Windows.Forms.Button> オブジェクトは、`ButtonDesignerFilterService` によって、既存および新規の各ボタンのデザイナーが `ColorCycleButtonDesigner`で置き換えられた後、カラーサイクルを開始します。 ボタンは、マウスポインターを上に移動したときに色が切り替わるようになります。また、`MouseLeave` イベントの背景色と前景色を引き続き切り替えたりリセットしたりすることもできます。 新しい <xref:System.Windows.Forms.Button> オブジェクトには、`ButtonDesignerFilterComponent` が破棄され、元の <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>が置換されるまで、読み込まれた `ButtonDesignerFilterService` の <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A> メソッドによって `ColorCycleButtonDesigner` が与えられます。 この例の `ColorCycleButton` クラスは、`ColorCycleButtonDesigner`に関連付けられている <xref:System.Windows.Forms.Button> です。  
  
 [!code-cpp[ITypeDescriptorFilterService#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CPP/source.cpp#1)]
 [!code-csharp[ITypeDescriptorFilterService#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CS/source.cs#1)]
 [!code-vb[ITypeDescriptorFilterService#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeDescriptorFilterService/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><see cref="T:System.ComponentModel.TypeDescriptor" />によって公開されるメンバー記述子をフィルター処理するには、コンポーネントにこのインターフェイスを実装し、属性、イベント、またはプロパティをフィルター処理するために、このクラスの <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />、<see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />、または <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" /> メソッドをオーバーライドします。</para></block>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Collections.IDictionary" />
  </Docs>
  <Members>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="public bool FilterAttributes (System.ComponentModel.IComponent component, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterAttributes(class System.ComponentModel.IComponent component, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterAttributes (component As IComponent, attributes As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterAttributes(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterAttributes (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">属性をフィルター処理する対象のコンポーネント。</param>
        <param name="attributes">変更できる属性のディクショナリ。</param>
        <summary><see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開する属性をフィルター処理します。</summary>
        <returns>フィルター処理した一連の属性をキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、ユーザーがコンポーネントの一連の属性を要求したときに呼び出されます。 属性は、キーとして属性 <xref:System.Attribute.TypeId%2A>、値として実際の属性と共にディクショナリに追加されます。 このサービスの実装者は、辞書内の既存の属性エントリを追加、削除、または変更できます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>型記述子フィルターサービスに対してクエリを繰り返し実行すると、パフォーマンスが低下する可能性があるため、必要な場合にのみ <see langword="false" /> を返します。</para></block>
        <altmember cref="T:System.Attribute" />
        <altmember cref="P:System.Attribute.TypeId" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterEvents">
      <MemberSignature Language="C#" Value="public bool FilterEvents (System.ComponentModel.IComponent component, System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterEvents(class System.ComponentModel.IComponent component, class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterEvents (component As IComponent, events As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterEvents(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member FilterEvents : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterEvents (component, events)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">イベントをフィルター処理する対象のコンポーネント。</param>
        <param name="events">変更できるイベントのディクショナリ。</param>
        <summary><see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開するイベントをフィルター処理します。</summary>
        <returns>フィルター処理した一連のイベントをキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、ユーザーがコンポーネントの一連のイベントを要求したときに呼び出されます。 イベントは、キーとしてのイベント名と、値として対応する <xref:System.ComponentModel.EventDescriptor> オブジェクトと共にディクショナリに追加されます。 このサービスの実装者は、ディクショナリ内のイベントエントリを追加、削除、または変更できます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>型記述子フィルターサービスに対してクエリを繰り返し実行すると、パフォーマンスが低下する可能性があるため、必要な場合にのみ <see langword="false" /> を返します。</para></block>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterProperties">
      <MemberSignature Language="C#" Value="public bool FilterProperties (System.ComponentModel.IComponent component, System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterProperties(class System.ComponentModel.IComponent component, class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterProperties (component As IComponent, properties As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterProperties(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member FilterProperties : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterProperties (component, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">プロパティをフィルター処理する対象のコンポーネント。</param>
        <param name="properties">変更できるプロパティのディクショナリ。</param>
        <summary><see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開するプロパティをフィルター処理します。</summary>
        <returns>フィルター処理した一連のプロパティをキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、ユーザーがコンポーネントの一連のプロパティを要求したときに呼び出されます。 プロパティは、プロパティ名をキーとして持ち、対応する <xref:System.ComponentModel.PropertyDescriptor> オブジェクトを値としてディクショナリに追加されます。 このサービスの実装者は、ディクショナリ内のプロパティエントリを追加、削除、または変更できます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>型記述子フィルターサービスに対してクエリを繰り返し実行すると、パフォーマンスが低下する可能性があるため、必要な場合にのみ <see langword="false" /> を返します。</para></block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
  </Members>
</Type>
