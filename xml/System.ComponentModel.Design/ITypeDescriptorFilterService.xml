<Type Name="ITypeDescriptorFilterService" FullName="System.ComponentModel.Design.ITypeDescriptorFilterService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="76e853c78972e3a6b0ab33f429871493a8fb3ece" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82313163" /></Metadata><TypeSignature Language="C#" Value="public interface ITypeDescriptorFilterService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeDescriptorFilterService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeDescriptorFilterService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeDescriptorFilterService" />
  <TypeSignature Language="F#" Value="type ITypeDescriptorFilterService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="46034-101">デザイン モードでコンポーネントの一連のメンバー記述子を変更するためのインターフェイスを提供します。</span><span class="sxs-lookup"><span data-stu-id="46034-101">Provides an interface to modify the set of member descriptors for a component in design mode.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46034-102"><xref:System.ComponentModel.Design.ITypeDescriptorFilterService> インターフェイスは、デザイン時にコンポーネントのプロパティ、イベント、およびクラスレベルの属性を変更できるようにするインターフェイスを提供します。</span><span class="sxs-lookup"><span data-stu-id="46034-102">The <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> interface provides an interface that allows modification of the properties, events, and class-level attributes of a component at design time.</span></span> <span data-ttu-id="46034-103">この変更は、コンポーネントが <xref:System.ComponentModel.TypeDescriptor>を通じて提供する一連の記述子を通じて行われます。</span><span class="sxs-lookup"><span data-stu-id="46034-103">This modification occurs through the set of descriptors that a component provides through a <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="46034-104">型記述子は、コンポーネントのサイトに対してクエリを実行し、<xref:System.ComponentModel.Design.ITypeDescriptorFilterService> サービスを検索します。存在する場合、型記述子は、このサービスに対して収集されたすべてのメタデータを渡します。</span><span class="sxs-lookup"><span data-stu-id="46034-104">The type descriptor will query a component's site for the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> service and, if it exists, the type descriptor will pass all metadata it has collected to this service.</span></span> <span data-ttu-id="46034-105">このサービスは、コンポーネントの既存の特性を追加、削除、および変更することでメタデータを変更できます。</span><span class="sxs-lookup"><span data-stu-id="46034-105">The service can then modify the metadata by adding, removing, and altering existing characteristics of the component.</span></span>  
  
 <span data-ttu-id="46034-106">たとえば、コンポーネントのプロパティは、<xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> メソッドを呼び出すことによって変更できます。</span><span class="sxs-lookup"><span data-stu-id="46034-106">For example, the properties of a component can be modified through a call to the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> method.</span></span> <span data-ttu-id="46034-107">フィルターサービスは、<xref:System.ComponentModel.PropertyDescriptor>型のプロパティ名とそのプロパティ記述子を含むディクショナリを取得します。</span><span class="sxs-lookup"><span data-stu-id="46034-107">The filter service obtains a dictionary that contains property names and their property descriptors of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="46034-108">変更は、次のロジックを使用して実装されます。</span><span class="sxs-lookup"><span data-stu-id="46034-108">The modifications are implemented using the following logic.</span></span>  
  
|<span data-ttu-id="46034-109">変更</span><span class="sxs-lookup"><span data-stu-id="46034-109">Modification</span></span>|<span data-ttu-id="46034-110">実装</span><span class="sxs-lookup"><span data-stu-id="46034-110">Implementation</span></span>|  
|------------------|--------------------|  
|<span data-ttu-id="46034-111">削除</span><span class="sxs-lookup"><span data-stu-id="46034-111">Removal</span></span>|<span data-ttu-id="46034-112">ディクショナリ内の対応するエントリを削除します。</span><span class="sxs-lookup"><span data-stu-id="46034-112">Delete the corresponding entry in the dictionary.</span></span>|  
|<span data-ttu-id="46034-113">加算</span><span class="sxs-lookup"><span data-stu-id="46034-113">Addition</span></span>|<span data-ttu-id="46034-114">適切なエントリを辞書に追加します。</span><span class="sxs-lookup"><span data-stu-id="46034-114">Add the appropriate entry to the dictionary.</span></span>|  
|<span data-ttu-id="46034-115">変更</span><span class="sxs-lookup"><span data-stu-id="46034-115">Alteration</span></span>|<span data-ttu-id="46034-116">既存のプロパティ記述子メソッドを呼び出すか、関連付けられているプロパティ記述子のエントリを置き換えるか、またはディクショナリ内のプロパティのキーと値のペア全体を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="46034-116">Call existing property descriptor methods, replace the associated property descriptor entry, or replace the entire property key/value pair in the dictionary.</span></span>|  
  
 <span data-ttu-id="46034-117">このプロパティのセットが固定されているかどうかは、<xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> の戻り値によって決まります。</span><span class="sxs-lookup"><span data-stu-id="46034-117">The return value of <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> determines if this set of properties is fixed.</span></span> <span data-ttu-id="46034-118">このメソッドが `true`を返す場合、このコンポーネントの <xref:System.ComponentModel.TypeDescriptor> によって結果がキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="46034-118">If this method returns `true`, the <xref:System.ComponentModel.TypeDescriptor> for this component can cache the results.</span></span> <span data-ttu-id="46034-119">このキャッシュは、コンポーネントがガベージコレクションされるか、型記述子の <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> メソッドが呼び出されるまで保持されます。</span><span class="sxs-lookup"><span data-stu-id="46034-119">This cache is maintained until either the component is garbage collected or the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method of the type descriptor is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46034-120">次のコード例では、<xref:System.ComponentModel.Design.ITypeDescriptorFilterService> を使用して、新しいまたは既存の <xref:System.Windows.Forms.Button> の attributes コレクションをフィルター処理し、ボタンのデザイナーを読み込んだり再度読み込んだりする前に、新しいデザイナーのデザイナー属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="46034-120">The following code example demonstrates a designer that uses the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> to filter the attributes collection of any new or existing <xref:System.Windows.Forms.Button> to add a designer attribute for a new designer before loading or reloading the designer for the button.</span></span>  
  
 <span data-ttu-id="46034-121">この例を使用するには、コードを Windows フォームプロジェクトに追加し、コンポーネントをクラスライブラリからツールボックスに読み込みます。</span><span class="sxs-lookup"><span data-stu-id="46034-121">To use the example, add the code to a Windows Forms project and load the components from the class library into the Toolbox.</span></span>  
  
 <span data-ttu-id="46034-122">「[チュートリアル: ツールボックスにカスタムコンポーネントを自動的に設定する](https://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx)」も参照してください。</span><span class="sxs-lookup"><span data-stu-id="46034-122">Also see [Walkthrough: Automatically Populating the Toolbox with Custom Components](https://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx).</span></span>  
  
 <span data-ttu-id="46034-123">いくつかのボタンをフォームに追加します。</span><span class="sxs-lookup"><span data-stu-id="46034-123">Add some buttons to your form.</span></span> <span data-ttu-id="46034-124">フォームに `ButtonDesignerFilterComponent` を追加すると、コンポーネントトレイに表示されます。</span><span class="sxs-lookup"><span data-stu-id="46034-124">Add a `ButtonDesignerFilterComponent` to your form, and it will appear in the component tray.</span></span> <span data-ttu-id="46034-125">`ButtonDesignerFilterComponent` によって、<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>を実装する `ButtonDesignerFilterService`がデザインモードのサービスプロバイダーとして追加されます。</span><span class="sxs-lookup"><span data-stu-id="46034-125">The `ButtonDesignerFilterComponent` will add a `ButtonDesignerFilterService`, which implements <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>, as a design mode service provider.</span></span> <span data-ttu-id="46034-126">フォーム上の既存または新規の <xref:System.Windows.Forms.Button> オブジェクトは、`ButtonDesignerFilterService` によって、既存および新規の各ボタンのデザイナーが `ColorCycleButtonDesigner`で置き換えられた後、カラーサイクルを開始します。</span><span class="sxs-lookup"><span data-stu-id="46034-126">Existing or new <xref:System.Windows.Forms.Button> objects on the form will begin color cycling after the `ButtonDesignerFilterService` replaces the designer for each existing and new button with a `ColorCycleButtonDesigner`.</span></span> <span data-ttu-id="46034-127">ボタンは、マウスポインターを上に移動したときに色が切り替わるようになります。また、`MouseLeave` イベントの背景色と前景色を引き続き切り替えたりリセットしたりすることもできます。</span><span class="sxs-lookup"><span data-stu-id="46034-127">The buttons will color cycle when you move the mouse pointer over them, and alternately continue cycling or reset the background and foreground colors on `MouseLeave` events.</span></span> <span data-ttu-id="46034-128">新しい <xref:System.Windows.Forms.Button> オブジェクトには、`ButtonDesignerFilterComponent` が破棄され、元の <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>が置換されるまで、読み込まれた `ButtonDesignerFilterService` の <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A> メソッドによって `ColorCycleButtonDesigner` が与えられます。</span><span class="sxs-lookup"><span data-stu-id="46034-128">New <xref:System.Windows.Forms.Button> objects will be given the `ColorCycleButtonDesigner` through the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A> method of the `ButtonDesignerFilterService` that has been loaded, until the `ButtonDesignerFilterComponent` is disposed and replaces the original <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>.</span></span> <span data-ttu-id="46034-129">この例の `ColorCycleButton` クラスは、`ColorCycleButtonDesigner`に関連付けられている <xref:System.Windows.Forms.Button> です。</span><span class="sxs-lookup"><span data-stu-id="46034-129">The `ColorCycleButton` class in this example is a <xref:System.Windows.Forms.Button> associated with a `ColorCycleButtonDesigner`.</span></span>  
  
 [!code-cpp[ITypeDescriptorFilterService#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CPP/source.cpp#1)]
 [!code-csharp[ITypeDescriptorFilterService#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CS/source.cs#1)]
 [!code-vb[ITypeDescriptorFilterService#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeDescriptorFilterService/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="46034-130"><see cref="T:System.ComponentModel.TypeDescriptor" />によって公開されるメンバー記述子をフィルター処理するには、コンポーネントにこのインターフェイスを実装し、属性、イベント、またはプロパティをフィルター処理するために、このクラスの <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />、<see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />、または <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" /> メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="46034-130">To filter the member descriptors exposed by a <see cref="T:System.ComponentModel.TypeDescriptor" />, implement this interface on a component and override the <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />, <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />, or <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" /> methods of this class to filter attributes, events, or properties, respectively.</span></span></para></block>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Collections.IDictionary" />
  </Docs>
  <Members>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="public bool FilterAttributes (System.ComponentModel.IComponent component, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterAttributes(class System.ComponentModel.IComponent component, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterAttributes (component As IComponent, attributes As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterAttributes(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterAttributes (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="46034-131">属性をフィルター処理する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="46034-131">The component to filter the attributes of.</span></span></param>
        <param name="attributes"><span data-ttu-id="46034-132">変更できる属性のディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="46034-132">A dictionary of attributes that can be modified.</span></span></param>
        <summary><span data-ttu-id="46034-133"><see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開する属性をフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="46034-133">Filters the attributes that a component exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="46034-134">フィルター処理した一連の属性をキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46034-134"><see langword="true" /> if the set of filtered attributes is to be cached; <see langword="false" /> if the filter service must query again.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46034-135">このメソッドは、ユーザーがコンポーネントの一連の属性を要求したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="46034-135">This method is called when a user requests a set of attributes for a component.</span></span> <span data-ttu-id="46034-136">属性は、キーとして属性 <xref:System.Attribute.TypeId%2A>、値として実際の属性と共にディクショナリに追加されます。</span><span class="sxs-lookup"><span data-stu-id="46034-136">The attributes are added to the dictionary with the attribute's <xref:System.Attribute.TypeId%2A> as the keys and the actual attribute as the value.</span></span> <span data-ttu-id="46034-137">このサービスの実装者は、辞書内の既存の属性エントリを追加、削除、または変更できます。</span><span class="sxs-lookup"><span data-stu-id="46034-137">Implementers of this service can add, remove, or alter existing attribute entries in the dictionary.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="46034-138">型記述子フィルターサービスに対してクエリを繰り返し実行すると、パフォーマンスが低下する可能性があるため、必要な場合にのみ <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="46034-138">Return <see langword="false" /> only when necessary, because repeated queries to the type descriptor filter service can decrease performance.</span></span></para></block>
        <altmember cref="T:System.Attribute" />
        <altmember cref="P:System.Attribute.TypeId" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterEvents">
      <MemberSignature Language="C#" Value="public bool FilterEvents (System.ComponentModel.IComponent component, System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterEvents(class System.ComponentModel.IComponent component, class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterEvents (component As IComponent, events As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterEvents(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member FilterEvents : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterEvents (component, events)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="46034-139">イベントをフィルター処理する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="46034-139">The component to filter events for.</span></span></param>
        <param name="events"><span data-ttu-id="46034-140">変更できるイベントのディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="46034-140">A dictionary of events that can be modified.</span></span></param>
        <summary><span data-ttu-id="46034-141"><see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開するイベントをフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="46034-141">Filters the events that a component exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="46034-142">フィルター処理した一連のイベントをキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46034-142"><see langword="true" /> if the set of filtered events is to be cached; <see langword="false" /> if the filter service must query again.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46034-143">このメソッドは、ユーザーがコンポーネントの一連のイベントを要求したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="46034-143">This method is called when a user requests a set of events for a component.</span></span> <span data-ttu-id="46034-144">イベントは、キーとしてのイベント名と、値として対応する <xref:System.ComponentModel.EventDescriptor> オブジェクトと共にディクショナリに追加されます。</span><span class="sxs-lookup"><span data-stu-id="46034-144">The events are added to the dictionary with the event names as the keys and the corresponding <xref:System.ComponentModel.EventDescriptor> objects as the values.</span></span> <span data-ttu-id="46034-145">このサービスの実装者は、ディクショナリ内のイベントエントリを追加、削除、または変更できます。</span><span class="sxs-lookup"><span data-stu-id="46034-145">Implementers of this service can add, remove, or alter event entries in the dictionary.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="46034-146">型記述子フィルターサービスに対してクエリを繰り返し実行すると、パフォーマンスが低下する可能性があるため、必要な場合にのみ <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="46034-146">Return <see langword="false" /> only when necessary, because repeated queries to the type descriptor filter service can decrease performance.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterProperties">
      <MemberSignature Language="C#" Value="public bool FilterProperties (System.ComponentModel.IComponent component, System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterProperties(class System.ComponentModel.IComponent component, class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterProperties (component As IComponent, properties As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterProperties(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member FilterProperties : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterProperties (component, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="46034-147">プロパティをフィルター処理する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="46034-147">The component to filter properties for.</span></span></param>
        <param name="properties"><span data-ttu-id="46034-148">変更できるプロパティのディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="46034-148">A dictionary of properties that can be modified.</span></span></param>
        <summary><span data-ttu-id="46034-149"><see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開するプロパティをフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="46034-149">Filters the properties that a component exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="46034-150">フィルター処理した一連のプロパティをキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46034-150"><see langword="true" /> if the set of filtered properties is to be cached; <see langword="false" /> if the filter service must query again.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46034-151">このメソッドは、ユーザーがコンポーネントの一連のプロパティを要求したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="46034-151">This method is called when a user requests a set of properties for a component.</span></span> <span data-ttu-id="46034-152">プロパティは、プロパティ名をキーとして持ち、対応する <xref:System.ComponentModel.PropertyDescriptor> オブジェクトを値としてディクショナリに追加されます。</span><span class="sxs-lookup"><span data-stu-id="46034-152">The properties are added to the dictionary with the property names as the keys and the corresponding <xref:System.ComponentModel.PropertyDescriptor> objects as the values.</span></span> <span data-ttu-id="46034-153">このサービスの実装者は、ディクショナリ内のプロパティエントリを追加、削除、または変更できます。</span><span class="sxs-lookup"><span data-stu-id="46034-153">Implementers of this service can add, remove, or alter property entries in the dictionary.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="46034-154">型記述子フィルターサービスに対してクエリを繰り返し実行すると、パフォーマンスが低下する可能性があるため、必要な場合にのみ <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="46034-154">Return <see langword="false" /> only when necessary, because repeated queries to the type descriptor filter service can decrease performance.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
  </Members>
</Type>
