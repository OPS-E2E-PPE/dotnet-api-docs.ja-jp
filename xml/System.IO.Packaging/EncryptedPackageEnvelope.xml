<Type Name="EncryptedPackageEnvelope" FullName="System.IO.Packaging.EncryptedPackageEnvelope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="06de6d0aa7e28a801d60552cd32c7b791973b19d" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82474285" /></Metadata><TypeSignature Language="C#" Value="public class EncryptedPackageEnvelope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedPackageEnvelope extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.EncryptedPackageEnvelope" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedPackageEnvelope&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedPackageEnvelope : IDisposable" />
  <TypeSignature Language="F#" Value="type EncryptedPackageEnvelope = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>暗号化されたパッケージを含む OLE 複合ファイルを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.EncryptedPackageEnvelope> にはパブリックコンストラクターがありません。  <xref:System.IO.Packaging.EncryptedPackageEnvelope> は、静的な <xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A>、<xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A>、または <xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A> の各メソッドを使用して作成されます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="encryptedPackageEnvelope.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>暗号化されたパッケージとそれを保持する OLE 複合ファイルを閉じます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、このメソッドを使用して <xref:System.IO.Packaging.EncryptedPackageEnvelope>を閉じる方法を示しています。  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Open" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> を作成して返します。</summary>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Create (System.IO.Stream envelopeStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Create(class System.IO.Stream envelopeStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (envelopeStream As Stream, publishLicense As PublishLicense, cryptoProvider As CryptoProvider) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Create(System::IO::Stream ^ envelopeStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Create (envelopeStream, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeStream">ファイルを作成するストリーム。</param>
        <param name="publishLicense">複合ファイルに埋め込まれている公開ライセンス。</param>
        <param name="cryptoProvider">現在のユーザーが暗号化されたコンテンツで実行できる操作を決定するオブジェクト。</param>
        <summary>指定したストリームに <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> を作成して返します。</summary>
        <returns>新しく作成された <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のユーザーには、新しいファイルへの読み取り/書き込みアクセス権があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="envelopeStream" /> が <see langword="null" />です。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="envelopeStream" /> が読み取り/書き込みアクセスを提供しません。</exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Create (string envelopeFileName, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Create(string envelopeFileName, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (envelopeFileName As String, publishLicense As PublishLicense, cryptoProvider As CryptoProvider) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Create(System::String ^ envelopeFileName, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Create (envelopeFileName, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName">OLE 複合ファイルの名前。</param>
        <param name="publishLicense">複合ファイルに埋め込まれている公開ライセンス。</param>
        <param name="cryptoProvider">現在のユーザーが暗号化されたコンテンツで実行できる操作を決定するオブジェクト。</param>
        <summary><see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> を作成して返し、指定したファイル名を割り当てます。</summary>
        <returns>新しく作成された <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定した名前のファイルが既に存在する場合は上書きされます。  
  
 現在のユーザーには、ファイルへの読み取り/書き込みアクセス権があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="envelopeFileName" /> が <see langword="null" />です。</exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateFromPackage">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>既存の暗号化されていないパッケージをコンテンツのソースとして使用する <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> を作成して返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、<xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> メソッドを使用して <xref:System.IO.Packaging.EncryptedPackageEnvelope>をインスタンス化する方法を示しています。  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage (System.IO.Stream envelopeStream, System.IO.Stream packageStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage(class System.IO.Stream envelopeStream, class System.IO.Stream packageStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromPackage (envelopeStream As Stream, packageStream As Stream, publishLicense As PublishLicense, cryptoProvider As CryptoProvider) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ CreateFromPackage(System::IO::Stream ^ envelopeStream, System::IO::Stream ^ packageStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member CreateFromPackage : System.IO.Stream * System.IO.Stream * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage (envelopeStream, packageStream, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
        <Parameter Name="packageStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeStream">ファイルを作成するストリーム。</param>
        <param name="packageStream">暗号化されていない、既存のパッケージを表すストリーム。</param>
        <param name="publishLicense">複合ファイルに埋め込まれている公開ライセンス。</param>
        <param name="cryptoProvider">現在のユーザーが暗号化されたコンテンツで実行できる操作を決定するオブジェクト。</param>
        <summary>指定した暗号化されていないパッケージをコンテンツとして使用する <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> を (指定したストリームに) 作成して返します。</summary>
        <returns>新しく作成された <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のユーザーには、新しいファイルへの読み取り/書き込みアクセス権があります。  
  
   
  
## Examples  
 次の例は、<xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> メソッドを使用して <xref:System.IO.Packaging.EncryptedPackageEnvelope>をインスタンス化する方法を示しています。  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="envelopeStream" /> または <paramref name="packageStream" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="envelopeStream" /> が読み取り/書き込みアクセスを提供しません。</exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage (string envelopeFileName, System.IO.Stream packageStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage(string envelopeFileName, class System.IO.Stream packageStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromPackage (envelopeFileName As String, packageStream As Stream, publishLicense As PublishLicense, cryptoProvider As CryptoProvider) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ CreateFromPackage(System::String ^ envelopeFileName, System::IO::Stream ^ packageStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member CreateFromPackage : string * System.IO.Stream * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage (envelopeFileName, packageStream, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="packageStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName">OLE 複合ファイルの名前。</param>
        <param name="packageStream">暗号化されていない、既存のパッケージを表すストリーム。</param>
        <param name="publishLicense">複合ファイルに埋め込まれている公開ライセンス。</param>
        <param name="cryptoProvider">現在のユーザーが暗号化されたコンテンツで実行できる操作を決定するオブジェクト。</param>
        <summary>指定した暗号化されていないパッケージをコンテンツとして使用する <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> を作成して返し、指定したファイル名を割り当てます。</summary>
        <returns>新しく作成された <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定した名前のファイルが既に存在する場合は上書きされます。  
  
 現在のユーザーには、ファイルへの読み取り/書き込みアクセス権があります。  
  
   
  
## Examples  
 次の例は、<xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> メソッドを使用して <xref:System.IO.Packaging.EncryptedPackageEnvelope>をインスタンス化する方法を示しています。  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="envelopeFileName" /> または <paramref name="packageStream" /> が <see langword="null" /> です。</exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> で使用したリソースを解放します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="encryptedPackageEnvelope.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> によって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.EncryptedPackageEnvelope>の完了時に <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> を呼び出します。 <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A>メソッドによって、<xref:System.IO.Packaging.EncryptedPackageEnvelope> は使用不可の状態になります。 <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A>呼び出し後は、<xref:System.IO.Packaging.EncryptedPackageEnvelope>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.IO.Packaging.EncryptedPackageEnvelope> へのすべての参照を解放する必要があります。 詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。  
  
> [!NOTE]
>  <xref:System.IO.Packaging.EncryptedPackageEnvelope>への最後の参照を解放する前に、必ず<xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A>を呼び出してください。 そうしないと、ガベージ コレクターが <xref:System.IO.Packaging.EncryptedPackageEnvelope> オブジェクトの <xref:System.Object.Finalize%2A> メソッドを呼び出すまで、使用されているリソースは解放されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="encryptedPackageEnvelope.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
        <summary><see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、パブリックな `Dispose()` メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。 `Dispose()` は、`disposing` パラメーターを `true`に設定して、protected `Dispose(Boolean)` メソッドを呼び出します。 <xref:System.Object.Finalize%2A> は `disposing` を `false`に設定して `Dispose` を呼び出します。  
  
 `disposing` パラメーターが true の場合、このメソッドは、この <xref:System.IO.Packaging.EncryptedPackageEnvelope> が参照するすべてのマネージオブジェクトによって保持されているすべてのリソースを解放します。 このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。 をオーバーライドする場合は <see langword="Dispose(Boolean)" /> 以前に <see langword="Dispose" />を呼び出したときに破棄されたオブジェクトを参照しないように注意してください。 <see langword="Dispose(Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。  
  
<see langword="Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」と「 [Finalize メソッドのオーバーライド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))」を参照してください。</para></block>
      </Docs>
    </Member>
    <Member MemberName="FileOpenAccess">
      <MemberSignature Language="C#" Value="public System.IO.FileAccess FileOpenAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAccess FileOpenAccess" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileOpenAccess As FileAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAccess FileOpenAccess { System::IO::FileAccess get(); };" />
      <MemberSignature Language="F#" Value="member this.FileOpenAccess : System.IO.FileAccess" Usage="System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>読み取り、書き込み、または読み書き両方のうち、どのアクセス権を使用してファイルが開かれたかを指定する値を取得します。</summary>
        <value>ファイルを開くために使用された <see cref="T:System.IO.FileAccess" /> 値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="encryptedPackageEnvelope.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> およびそのパッケージ コンテンツ両方のストリームをフラッシュします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPackage">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package GetPackage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.Package GetPackage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPackage () As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::Package ^ GetPackage();" />
      <MemberSignature Language="F#" Value="member this.GetPackage : unit -&gt; System.IO.Packaging.Package" Usage="encryptedPackageEnvelope.GetPackage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> 内部の暗号化されたパッケージを取得します。</summary>
        <returns>エンベロープ内の <see cref="T:System.IO.Packaging.Package" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsEncryptedPackageEnvelope">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ファイルが、暗号化されたパッケージ ストリームを含んだ OLE 複合ファイルかどうかを指定する値を取得します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsEncryptedPackageEnvelope">
      <MemberSignature Language="C#" Value="public static bool IsEncryptedPackageEnvelope (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEncryptedPackageEnvelope(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsEncryptedPackageEnvelope (stream As Stream) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEncryptedPackageEnvelope(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member IsEncryptedPackageEnvelope : System.IO.Stream -&gt; bool" Usage="System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">テストされるストリーム。</param>
        <summary>指定したストリームが、暗号化されたパッケージ ストリームを含む OLE 複合ファイルかどうかを指定する値を取得します。</summary>
        <returns>指定したストリームが、暗号化されたパッケージ ストリームを含む OLE 複合ファイルである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> が <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsEncryptedPackageEnvelope">
      <MemberSignature Language="C#" Value="public static bool IsEncryptedPackageEnvelope (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEncryptedPackageEnvelope(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsEncryptedPackageEnvelope (fileName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEncryptedPackageEnvelope(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member IsEncryptedPackageEnvelope : string -&gt; bool" Usage="System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">テストされるファイル。</param>
        <summary>指定したファイルが、暗号化されたパッケージ ストリームを含んだ OLE 複合ファイルかどうかを指定する値を取得します。</summary>
        <returns>指定したファイルが、暗号化されたパッケージ ストリームを含んだ OLE 複合ファイルである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、このメソッドを使用して暗号化をテストする方法を示しています。  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="fileName" /> が <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>OLE 複合ファイル内の暗号化されたパッケージを開きます。</summary>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (System.IO.Stream envelopeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(class System.IO.Stream envelopeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeStream As Stream) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::IO::Stream ^ envelopeStream);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open envelopeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="envelopeStream">暗号化されたパッケージを含むストリーム。</param>
        <summary>指定したストリーム内の暗号化されたパッケージを開きます。</summary>
        <returns>開いている <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ストリームには、暗号化されたパッケージが必要です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName);" />
      <MemberSignature Language="F#" Value="static member Open : string -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open envelopeFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName">暗号化されたパッケージを含むファイル。</param>
        <summary>読み取り専用かつ非共有として指定されたファイル内の暗号化されたパッケージを開きます。</summary>
        <returns>開いている <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ファイルには、暗号化されたパッケージが含まれている必要があります。  
  
 開いているファイルは読み取り専用で、共有されていません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String, access As FileAccess) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileAccess -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open (envelopeFileName, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName">暗号化されたパッケージを含むファイル。</param>
        <param name="access">アクセスの種類。</param>
        <summary>非共有として指定され、特定のアクセス権が必要なファイル内の暗号化されたパッケージを開きます。</summary>
        <returns>開いている <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ファイルには、暗号化されたパッケージが含まれている必要があります。  
  
 開いているファイルは共有されていません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName, System.IO.FileAccess access, System.IO.FileShare sharing);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare sharing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String, access As FileAccess, sharing As FileShare) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName, System::IO::FileAccess access, System::IO::FileShare sharing);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileAccess * System.IO.FileShare -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open (envelopeFileName, access, sharing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="sharing" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName">暗号化されたパッケージを含むファイル。</param>
        <param name="access">アクセスの種類。</param>
        <param name="sharing">共有の種類。</param>
        <summary>指定したファイル内の暗号化されたパッケージを開き、特定のアクセス権と共有を割り当てます。</summary>
        <returns>開いている <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ファイルには、暗号化されたパッケージが含まれている必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="PackageProperties">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageProperties PackageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.PackageProperties PackageProperties" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PackageProperties As PackageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::PackageProperties ^ PackageProperties { System::IO::Packaging::PackageProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PackageProperties : System.IO.Packaging.PackageProperties" Usage="System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>権限管理ドキュメントのコア パッケージ プロパティ (タイトルやサブジェクト名など) を取得します。</summary>
        <value>パッケージの <see cref="T:System.IO.Packaging.PackageProperties" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これらのコアプロパティは、標準の OLE プロパティストリームに格納されています (\ 005 の概要情報と、\ 005documentの情報)。 コアプロパティは、パッケージ自体にも格納されます。 2つのプロパティセットの同期を維持するのは、アプリケーションの役割です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightsManagementInformation">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.RightsManagementInformation RightsManagementInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.RightsManagementInformation RightsManagementInformation" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RightsManagementInformation As RightsManagementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::RightsManagementInformation ^ RightsManagementInformation { System::IO::Packaging::RightsManagementInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RightsManagementInformation : System.IO.Packaging.RightsManagementInformation" Usage="System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.RightsManagementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> に格納されている権限管理情報を取得します。主に対象となるのは、権限管理のために保護されているパッケージが組み込まれた OLE 複合ファイルに格納されている、<see cref="T:System.Security.RightsManagement.PublishLicense" /> および <see cref="T:System.Security.RightsManagement.UseLicense" /> です。</summary>
        <value>パッケージの <see cref="T:System.IO.Packaging.RightsManagementInformation" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、<xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A> プロパティを使用して、暗号化されたパッケージの <xref:System.IO.Packaging.RightsManagementInformation> を取得する方法を示します。  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageInfo">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.StorageInfo StorageInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.StorageInfo StorageInfo" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StorageInfo As StorageInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::StorageInfo ^ StorageInfo { System::IO::Packaging::StorageInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StorageInfo : System.IO.Packaging.StorageInfo" Usage="System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.StorageInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>暗号化されたパッケージの外部にある複合ファイル ストリームへアクセスするためのオブジェクトを取得します。</summary>
        <value>暗号化されたパッケージの外部にある OLE 複合ファイル内のストリームを表す <see cref="T:System.IO.Packaging.StorageInfo" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
