<Type Name="PackagePart" FullName="System.IO.Packaging.PackagePart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="efd23d4a3f57b06489379c3a4c8dc40c296e130c" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83511335" /></Metadata><TypeSignature Language="C#" Value="public abstract class PackagePart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PackagePart extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackagePart" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PackagePart" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackagePart abstract" />
  <TypeSignature Language="F#" Value="type PackagePart = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="WindowsBase" FromVersion="5.0.0.0" To="System.IO.Packaging" ToVersion="4.0.4.0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
    <TypeForwarding From="WindowsBase" FromVersion="4.0.0.0" To="System.IO.Packaging" ToVersion="4.0.4.0" FrameworkAlternate="netcore-3.0" />
    <TypeForwarding From="WindowsBase" FromVersion="4.0.0.0" To="System.IO.Packaging" ToVersion="4.0.5.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.IO.Packaging.Package" /> に格納されるパーツの基本クラスを提供します。  このクラスは抽象クラスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart> は、次の3つの基本的な要素で構成されます。  
  
|アクセス|説明|  
|------------|-----------------|  
|<xref:System.IO.Packaging.PackagePart.Uri%2A>|パーツの URI。|  
|<xref:System.IO.Packaging.PackagePart.ContentType%2A>|コンテンツストリームの [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] 型。|  
|<xref:System.IO.Packaging.PackagePart.GetStream%2A>|パーツのコンテンツ データ ストリーム。|  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.IO.Packaging.PackagePart" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [WPF におけるパッケージの URI](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)  
  
 [パッケージ規則の仕様を開く](https://go.microsoft.com/fwlink/?LinkID=71255)  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PackagePart (System.IO.Packaging.Package package, Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package, class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (package As Package, partUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PackagePart(System::IO::Packaging::Package ^ package, Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.PackagePart : System.IO.Packaging.Package * Uri -&gt; System.IO.Packaging.PackagePart" Usage="new System.IO.Packaging.PackagePart (package, partUri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="package">パーツの親 <see cref="T:System.IO.Packaging.Package" />。</param>
        <param name="partUri">親 <see cref="T:System.IO.Packaging.Package" /> ルートを基準にした、パーツの URI。</param>
        <summary>親 <see cref="P:System.IO.Packaging.PackagePart.Package" /> とパーツ URI を指定して、<see cref="T:System.IO.Packaging.PackagePart" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` は、 [RFC 3986](https://tools.ietf.org/html/rfc3986) *Uniform Resource Identifier (Uri) 汎用構文*仕様および[Open パッケージング規約](https://go.microsoft.com/fwlink/?LinkID=71255)仕様に従って形成された uri <xref:System.IO.Packaging.PackagePart> 有効である必要があります。  
  
 このコンストラクターは、パーツの <xref:System.IO.Packaging.PackagePart.ContentType%2A> がすぐにわからず、<xref:System.IO.Packaging.Package.CreatePart%2A> が呼び出されたときに後で設定される場合に使用します。  
  
 既定では、パーツの <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> プロパティは <xref:System.IO.Packaging.CompressionOption.NotCompressed>に初期化されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="package" /> または <paramref name="partUri" /> が <see langword="null" /> です。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PackagePart (System.IO.Packaging.Package package, Uri partUri, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package, class System.Uri partUri, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (package As Package, partUri As Uri, contentType As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PackagePart(System::IO::Packaging::Package ^ package, Uri ^ partUri, System::String ^ contentType);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.PackagePart : System.IO.Packaging.Package * Uri * string -&gt; System.IO.Packaging.PackagePart" Usage="new System.IO.Packaging.PackagePart (package, partUri, contentType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="package">パーツの親 <see cref="T:System.IO.Packaging.Package" />。</param>
        <param name="partUri">親 <see cref="T:System.IO.Packaging.Package" /> ルートを基準にした、パーツの URI。</param>
        <param name="contentType">パーツ データ ストリームの [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] コンテンツ タイプ。</param>
        <summary>親 <see cref="P:System.IO.Packaging.PackagePart.Package" />、パーツ URI、および [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] コンテンツ タイプを指定して、<see cref="T:System.IO.Packaging.PackagePart" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` は、 [RFC 3986](https://tools.ietf.org/html/rfc3986) *Uniform Resource Identifier (Uri) 汎用構文*仕様および[Open パッケージング規約](https://go.microsoft.com/fwlink/?LinkID=71255)仕様に従って形成された uri <xref:System.IO.Packaging.PackagePart> 有効である必要があります。  
  
 既定では、パーツの <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> プロパティは <xref:System.IO.Packaging.CompressionOption.NotCompressed>に初期化されます。  
  
 `contentType` は、 [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616.html) *ハイパーテキスト転送プロトコル (HTTP*、セクション 3.7) に従って形成された [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] 型である必要があります。  次の表は [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] ドキュメントで使用されるコンテンツ [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] の例を示しています。  
  
|説明|コンテンツの種類|  
|-----------------|------------------|  
|フォント|application/vnd. ms-opentype|  
|ICC プロファイル|application/vnd. ms-color. iccprofile|  
|JPEG イメージ|image/jpeg|  
|難読化フォント|application/vnd. ms-package. obfuscated-opentype|  
|PNG 画像|image/png|  
|PrintTicket|application/vnd. ms-printing + xml|  
|TIFF イメージ|image/tiff|  
|Windows Media の写真画像|image/vnd. ms-photo|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="package" /> または <paramref name="partUri" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> URI ではありません。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PackagePart (System.IO.Packaging.Package package, Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package, class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (package As Package, partUri As Uri, contentType As String, compressionOption As CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PackagePart(System::IO::Packaging::Package ^ package, Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.PackagePart : System.IO.Packaging.Package * Uri * string * System.IO.Packaging.CompressionOption -&gt; System.IO.Packaging.PackagePart" Usage="new System.IO.Packaging.PackagePart (package, partUri, contentType, compressionOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="package">パーツの親 <see cref="T:System.IO.Packaging.Package" />。</param>
        <param name="partUri">親 <see cref="T:System.IO.Packaging.Package" /> ルートを基準にした、パーツの URI。</param>
        <param name="contentType">パーツのデータ ストリームの [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] コンテンツ タイプ。</param>
        <param name="compressionOption">パーツ データ ストリームの圧縮オプション。</param>
        <summary>親 <see cref="P:System.IO.Packaging.PackagePart.Package" />、パーツ URI、[!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] コンテンツ タイプ、および <see cref="T:System.IO.Packaging.CompressionOption" /> を指定して、<see cref="T:System.IO.Packaging.PackagePart" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` は、 [RFC 3986](https://tools.ietf.org/html/rfc3986) *Uniform Resource Identifier (Uri) 汎用構文*仕様および[Open パッケージング規約](https://go.microsoft.com/fwlink/?LinkID=71255)仕様に従って形成された uri <xref:System.IO.Packaging.PackagePart> 有効である必要があります。  
  
 `contentType` は、 [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616.html) *ハイパーテキスト転送プロトコル (HTTP*、セクション 3.7) に従って形成された [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] 型である必要があります。  次の表は [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] ドキュメントで使用されるコンテンツ [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] の例を示しています。  
  
|説明|コンテンツの種類|  
|-----------------|------------------|  
|フォント|application/vnd. ms-opentype|  
|ICC プロファイル|application/vnd. ms-color. iccprofile|  
|JPEG イメージ|image/jpeg|  
|難読化フォント|application/vnd. ms-package. obfuscated-opentype|  
|PNG 画像|image/png|  
|PrintTicket|application/vnd. ms-printing + xml|  
|TIFF イメージ|image/tiff|  
|Windows Media の写真画像|image/vnd. ms-photo|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="package" /> または <paramref name="partUri" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> URI ではありません。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="compressionOption" /> 値が有効ではありません。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
      </Docs>
    </Member>
    <Member MemberName="CompressionOption">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.CompressionOption CompressionOption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.CompressionOption CompressionOption" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackagePart.CompressionOption" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompressionOption As CompressionOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::CompressionOption CompressionOption { System::IO::Packaging::CompressionOption get(); };" />
      <MemberSignature Language="F#" Value="member this.CompressionOption : System.IO.Packaging.CompressionOption" Usage="System.IO.Packaging.PackagePart.CompressionOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.CompressionOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パーツ コンテンツ ストリームの圧縮オプションを取得します。</summary>
        <value>パーツ コンテンツ ストリームの圧縮オプション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> は読み取り専用のプロパティであり、親 <xref:System.IO.Packaging.Package> が開いている場合にのみアクセスできます。  
  
 <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> プロパティは、<xref:System.IO.Packaging.PackagePart.%23ctor%2A> コンストラクターによって自動的に設定されます。  コンストラクターによって設定された後、<xref:System.IO.Packaging.PackagePart.CompressionOption%2A> を変更することはできません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">パーツが削除されました。  
  
または 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackagePart.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string" Usage="System.IO.Packaging.PackagePart.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテンツ ストリームの [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] タイプを取得します。</summary>
        <value>パーツのコンテンツ データ ストリームの [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] タイプ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.ContentType%2A> は読み取り専用のプロパティであり、親 <xref:System.IO.Packaging.Package> が開いている場合にのみアクセスできます。  
  
 <xref:System.IO.Packaging.PackagePart.ContentType%2A> プロパティは、<xref:System.IO.Packaging.PackagePart.%23ctor%2A> コンストラクターによって自動的に設定されます。  コンストラクターによって設定された後、<xref:System.IO.Packaging.PackagePart.ContentType%2A> を変更することはできません。  
  
 <xref:System.IO.Packaging.PackagePart.ContentType%2A> プロパティは、 [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616.html) *ハイパーテキスト転送プロトコル (HTTP*、セクション 3.7) に従って形成される [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] 型です。  次の表は [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] ドキュメントで使用されるコンテンツ [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] の例を示しています。  
  
|説明|コンテンツの種類|  
|-----------------|------------------|  
|フォント|application/vnd. ms-opentype|  
|ICC プロファイル|application/vnd. ms-color. iccprofile|  
|JPEG イメージ|image/jpeg|  
|難読化フォント|application/vnd. ms-package. obfuscated-opentype|  
|PNG 画像|image/png|  
|PrintTicket|application/vnd. ms-printing + xml|  
|TIFF イメージ|image/tiff|  
|Windows Media の写真画像|image/vnd. ms-photo|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">パーツが削除されました。  
  
または 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。  
  
または 
派生クラス <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> メソッドから返される文字列が空です。</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRelationship">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>この <see cref="T:System.IO.Packaging.PackagePart" /> と、指定のターゲット <see cref="T:System.IO.Packaging.PackagePart" /> または外部リソース間のパーツ レベル リレーションシップを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パーツレベルのリレーションシップは、このパートとターゲットパーツまたはリソースとの間の関連付けを定義します。  パーツレベルのリレーションシップには、2つの形式のいずれかを指定できます。  
  
-   ソース <xref:System.IO.Packaging.PackagePart> と <xref:System.IO.Packaging.Package>内のターゲット <xref:System.IO.Packaging.PackagePart> の間。  
  
-   ソース <xref:System.IO.Packaging.PackagePart> からパッケージ外部のターゲットリソースへの間。  
  
 パートリレーションシップでは、ソースパーツはリレーションシップの "所有者" と見なされます。  ソースパーツが削除されると、そのパーツが所有するすべてのリレーションシップも削除されます。  リレーションシップを作成または削除するプロセスでは、ターゲットのパーツやリソースが物理的に変更されることはありません。  
  
 <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> メソッドは、何らかの方法でソースパーツ、ターゲットパーツ、またはリソースを物理的には変更しません。  
  
 リレーションシップのターゲットを別のリレーションシップにすることはできません。  
  
 パッケージの関係の詳細については、<https://go.microsoft.com/fwlink/?LinkID=71255>でダウンロードできる*Open パッケージング規則 (OPC)* 仕様のセクション1.3 を参照してください。  
  
 XPS ドキュメントの詳細については、<https://go.microsoft.com/fwlink/?LinkID=67000>でダウンロードできる*OPEN XML Paper Specification (xps)* を参照してください。  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRelationship (targetUri As Uri, targetMode As TargetMode, relationshipType As String) As PackageRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType);" />
      <MemberSignature Language="F#" Value="member this.CreateRelationship : Uri * System.IO.Packaging.TargetMode * string -&gt; System.IO.Packaging.PackageRelationship" Usage="packagePart.CreateRelationship (targetUri, targetMode, relationshipType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">ターゲット パーツの URI。</param>
        <param name="targetMode">列挙値のいずれか。 たとえば、ターゲット パーツが <see cref="F:System.IO.Packaging.TargetMode.Internal" /> の内部の場合は <see cref="T:System.IO.Packaging.Package" />、ターゲットが <see cref="F:System.IO.Packaging.TargetMode.External" /> 外部のリソースの場合は <see cref="T:System.IO.Packaging.Package" /> です。</param>
        <param name="relationshipType">リレーションシップのロール。</param>
        <summary>この <see cref="T:System.IO.Packaging.PackagePart" /> と、指定のターゲット <see cref="T:System.IO.Packaging.PackagePart" /> または外部リソース間のパーツ レベル リレーションシップを作成します。</summary>
        <returns>この <see cref="T:System.IO.Packaging.PackagePart" /> およびターゲット <see cref="T:System.IO.Packaging.PackagePart" />、外部リソース間のパーツ レベル リレーションシップ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パーツレベルのリレーションシップは、このパートとターゲットパーツまたはリソースとの間の関連付けを定義します。  パーツレベルのリレーションシップには、2つの形式のいずれかを指定できます。  
  
-   ソース <xref:System.IO.Packaging.PackagePart> と <xref:System.IO.Packaging.Package>内のターゲット <xref:System.IO.Packaging.PackagePart> の間。  
  
-   ソース <xref:System.IO.Packaging.PackagePart> からパッケージ外部のターゲットリソースへの間。  
  
 パートリレーションシップでは、ソースパーツはリレーションシップの "所有者" と見なされます。  ソースパーツが削除されると、そのパーツが所有するすべてのリレーションシップも削除されます。  リレーションシップを作成または削除するプロセスでは、ターゲットのパーツやリソースが物理的に変更されることはありません。  
  
 <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> メソッドは、何らかの方法でソースパーツ、ターゲットパーツ、またはリソースを物理的には変更しません。  
  
 リレーションシップのターゲットを別のリレーションシップにすることはできません。  
  
 `targetMode` が <xref:System.IO.Packaging.TargetMode.Internal>として指定されている場合、`targetUri` は[RFC 3986](https://tools.ietf.org/html/rfc3986) *Uniform Resource Identifier (URI) 汎用構文*仕様に従って形成される相対 URI である必要があります。  内部相対 URI には、スラッシュ ("/") 文字で始まる絶対パス ("/page1.3 xaml" や "/images/picture4.jpg" など)、または "." などの相対パスを指定できます。/imagespicture1.jpg "は、パッケージルート ("/") に対してベース URI として解決されます。  
  
 `targetMode` が <xref:System.IO.Packaging.TargetMode.External>として指定されている場合、`targetUri` には、 [RFC 3986](https://tools.ietf.org/html/rfc3986) *Uniform Resource Identifier (URI) 汎用構文*仕様に従って形成された絶対 URI または相対 URI を指定できます。 外部ターゲットリソース "page2" を参照する絶対 URI の例としては、`"https://www.microsoft.com/page2.xml"` があります。  "images/picture1" は、外部ターゲットリソース "1. .jpg" も参照し、パッケージ自体の URI に対して解決される相対 URI の例です。  
  
 `relationshipType` は、 [RFC 3986](https://tools.ietf.org/html/rfc3986) *Uniform Resource Identifier (Uri) 汎用構文*仕様に従って形成された uri である必要があります。  パッケージの種類によって、さまざまなパーツレベルのリレーションシップの種類を定義できます。  *OPEN XML Paper Specification (XPS)* に準拠するドキュメントに定義されているパーツレベルの `relationshipType` uri を次の表に示します。  
  
|XPS ドキュメントパーツレベルリレーションシップ|リレーションシップの種類の URI|  
|-------------------------------------------|---------------------------|  
|デジタル署名の定義|`http://schemas.microsoft.com/xps/2005/06/signature-definitions`|  
|DiscardControl|`http://schemas.microsoft.com/xps/2005/06/discard-control`|  
|DocumentStructure|`http://schemas.microsoft.com/xps/2005/06/documentstructure`|  
|PrintTicket|`http://schemas.microsoft.com/xps/2005/06/printticket`|  
|必須のリソース|`http://schemas.microsoft.com/xps/2005/06/required-resource`|  
|制限されたフォント|`http://schemas.microsoft.com/xps/2005/06/restricted-font`|  
|スタートパート|`http://schemas.microsoft.com/xps/2005/06/fixedrepresentation`|  
|Storyfragments パーツ|`http://schemas.microsoft.com/xps/2005/06/storyfragments`|  
  
 パッケージの関係の詳細については、<https://go.microsoft.com/fwlink/?LinkID=71255>でダウンロードできる*Open パッケージング規則 (OPC)* 仕様のセクション1.3 を参照してください。  
  
 XPS ドキュメントの詳細については、 [https://go.microsoft.com/fwlink/?LinkID=67000](https://go.microsoft.com/fwlink/?LinkID=67000)でダウンロードできる*Open XML PAPER Specification (xps)* を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">パーツが削除されました。  
  
または 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetUri" /> または <paramref name="relationshipType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="targetMode" /> パラメーターが、有効な <see cref="T:System.IO.Packaging.TargetMode" /> 列挙値でありません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetUri" /> で識別されるパーツはリレーションシップです (リレーションシップのターゲットは別のリレーションシップになることができません)。  
  
または 
 <paramref name="targetMode" /> は <see cref="F:System.IO.Packaging.TargetMode.Internal" /> として指定されますが、<paramref name="targetUri" /> は外部の絶対 URI です。</exception>
        <exception cref="T:System.IO.IOException">パッケージは読み取り専用です (新しいリレーションシップを追加できません)。</exception>
        <altmember cref="Overload:System.IO.Packaging.Package.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRelationship (targetUri As Uri, targetMode As TargetMode, relationshipType As String, id As String) As PackageRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType, System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.CreateRelationship : Uri * System.IO.Packaging.TargetMode * string * string -&gt; System.IO.Packaging.PackageRelationship" Usage="packagePart.CreateRelationship (targetUri, targetMode, relationshipType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">ターゲット パーツの URI。</param>
        <param name="targetMode">列挙値のいずれか。 たとえば、ターゲット パーツが <see cref="F:System.IO.Packaging.TargetMode.Internal" /> の内部の場合は <see cref="T:System.IO.Packaging.Package" />、ターゲットが <see cref="F:System.IO.Packaging.TargetMode.External" /> 外部のリソースの場合は <see cref="T:System.IO.Packaging.Package" /> です。</param>
        <param name="relationshipType">リレーションシップのロール。</param>
        <param name="id">リレーションシップの一意の ID。</param>
        <summary>この <see cref="T:System.IO.Packaging.PackagePart" /> と、指定のターゲット <see cref="T:System.IO.Packaging.PackagePart" /> または外部リソース間のパーツ レベル リレーションシップを作成します。</summary>
        <returns>この <see cref="T:System.IO.Packaging.PackagePart" /> およびターゲット <see cref="T:System.IO.Packaging.PackagePart" />、外部リソース間のパーツ レベル リレーションシップ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パーツレベルのリレーションシップは、このパートとターゲットパーツまたはリソースとの間の関連付けを定義します。  パーツレベルのリレーションシップには、2つの形式のいずれかを指定できます。  
  
-   ソース <xref:System.IO.Packaging.PackagePart> と <xref:System.IO.Packaging.Package>内のターゲット <xref:System.IO.Packaging.PackagePart> の間。  
  
-   ソース <xref:System.IO.Packaging.PackagePart> からパッケージ外部のターゲットリソースへの間。  
  
 パートリレーションシップでは、ソースパーツはリレーションシップの "所有者" と見なされます。  ソースパーツが削除されると、そのパーツが所有するすべてのリレーションシップも削除されます。  リレーションシップを作成または削除するプロセスでは、ターゲットのパーツやリソースが物理的に変更されることはありません。  
  
 `id` 有効な XML 識別子である必要があります。  `id` 型は xsd: ID で、 *XML スキーマパート 2: データ型*の仕様に規定されている名前付け規則に従う必要があります ( [https://www.w3.org/TR/xmlschema-2/#ID](https://www.w3.org/TR/xmlschema-2/#ID)を参照してください)。  
  
 <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> メソッドは、何らかの方法でソースパーツ、ターゲットパーツ、またはリソースを物理的には変更しません。  
  
 リレーションシップのターゲットを別のリレーションシップにすることはできません。  
  
 `targetMode` が <xref:System.IO.Packaging.TargetMode.Internal>として指定されている場合、`targetUri` は[RFC 3986](https://tools.ietf.org/html/rfc3986) *Uniform Resource Identifier (URI) 汎用構文*仕様に従って形成される相対 URI である必要があります。  内部相対 URI には、スラッシュ ("/") 文字で始まる絶対パス ("/page1.3 xaml" や "/images/picture4.jpg" など)、または "." などの相対パスを指定できます。/imagespicture1.jpg "は、パッケージルート ("/") に対してベース URI として解決されます。  
  
 `targetMode` が <xref:System.IO.Packaging.TargetMode.External>として指定されている場合、`targetUri` には、 [RFC 3986](https://tools.ietf.org/html/rfc3986) *Uniform Resource Identifier (URI) 汎用構文*仕様に従って形成された絶対 URI または相対 URI を指定できます。  外部ターゲットリソース "page2" を参照する絶対 URI の例としては、"https://www.microsoft.com/page2.xml" があります。  "images/picture1" は、外部ターゲットリソース "1. .jpg" も参照し、パッケージ自体の URI に対して解決される相対 URI の例です。  
  
 `relationshipType` は、 [RFC 3986](https://tools.ietf.org/html/rfc3986) *Uniform Resource Identifier (Uri) 汎用構文*仕様に従って形成された uri である必要があります。  パッケージの種類によって、さまざまなパーツレベルのリレーションシップの種類を定義できます。  *OPEN XML Paper Specification (XPS)* に準拠するドキュメントに定義されているパーツレベルの `relationshipType` uri を次の表に示します。  
  
|XPS ドキュメントパーツレベルリレーションシップ|リレーションシップの種類の URI|  
|-------------------------------------------|---------------------------|  
|デジタル署名の定義|http://schemas.microsoft.com/xps/2005/06/signature-definitions|  
|DiscardControl|http://schemas.microsoft.com/xps/2005/06/discard-control|  
|DocumentStructure|http://schemas.microsoft.com/xps/2005/06/documentstructure|  
|PrintTicket|http://schemas.microsoft.com/xps/2005/06/printticket|  
|必須のリソース|http://schemas.microsoft.com/xps/2005/06/required-resource|  
|制限されたフォント|http://schemas.microsoft.com/xps/2005/06/restricted-font|  
|スタートパート|http://schemas.microsoft.com/xps/2005/06/fixedrepresentation|  
|Storyfragments パーツ|http://schemas.microsoft.com/xps/2005/06/storyfragments|  
  
 パッケージの関係の詳細については、<https://go.microsoft.com/fwlink/?LinkID=71255>でダウンロードできる*Open パッケージング規則 (OPC)* 仕様のセクション1.3 を参照してください。  
  
 XPS ドキュメントの詳細については、 [https://go.microsoft.com/fwlink/?LinkID=67000](https://go.microsoft.com/fwlink/?LinkID=67000)でダウンロードできる*Open XML PAPER Specification (xps)* を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">パーツが削除されました。  
  
または 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetUri" /> または <paramref name="relationshipType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="targetMode" /> パラメーターが、有効な <see cref="T:System.IO.Packaging.TargetMode" /> 列挙値でありません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetUri" /> で識別されるパーツはリレーションシップです (リレーションシップのターゲットは別のリレーションシップになることができません)。  
  
または 
 <paramref name="targetMode" /> は <see cref="F:System.IO.Packaging.TargetMode.Internal" /> として指定されますが、<paramref name="targetUri" /> は外部の絶対 URI です。</exception>
        <exception cref="T:System.IO.IOException">パッケージは読み取り専用です (新しいリレーションシップを追加できません)。</exception>
        <exception cref="T:System.Xml.XmlException"><paramref name="id" /> が有効な XML 識別子でありません。  
  
または 
指定した <paramref name="id" /> を持つパーツが既に存在します。</exception>
        <altmember cref="Overload:System.IO.Packaging.Package.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRelationship">
      <MemberSignature Language="C#" Value="public void DeleteRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteRelationship (id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteRelationship(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.DeleteRelationship : string -&gt; unit" Usage="packagePart.DeleteRelationship id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">削除するリレーションシップの <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
        <summary>指定したパーツ レベル <see cref="T:System.IO.Packaging.PackageRelationship" /> を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `id` 有効な XML 識別子である必要があります。  `id` 型は xsd: ID で、 *XML スキーマパート 2: データ型*の仕様に規定されている名前付け規則に従う必要があります ( [https://www.w3.org/TR/xmlschema-2/#ID](https://www.w3.org/TR/xmlschema-2/#ID)を参照してください)。  
  
 指定された `id` が、この部分によって所有されているリレーションシップのいずれの <xref:System.IO.Packaging.PackageRelationship.Id%2A> とも一致しない場合、リレーションシップは削除されず、例外はスローされません。  
  
 <xref:System.IO.Packaging.PackagePart.DeleteRelationship%2A> メソッドは、指定されたリレーションシップを削除する以外に、このパーツまたはターゲットパーツのいずれも物理的には変更しません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">パーツが削除されました。  
  
または 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="id" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.IO.IOException">パッケージは読み取り専用です (リレーションシップを削除できません)。</exception>
        <exception cref="T:System.Xml.XmlException"><paramref name="id" /> が有効な XML 識別子でありません。</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetContentTypeCore">
      <MemberSignature Language="C#" Value="protected virtual string GetContentTypeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetContentTypeCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetContentTypeCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetContentTypeCore () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetContentTypeCore();" />
      <MemberSignature Language="F#" Value="abstract member GetContentTypeCore : unit -&gt; string&#xA;override this.GetContentTypeCore : unit -&gt; string" Usage="packagePart.GetContentTypeCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合、パーツ コンテンツの [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] タイプを返します。</summary>
        <returns>パーツ コンテンツの [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] タイプ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.GetContentTypeCore%2A> は <xref:System.IO.Packaging.PackagePart> 抽象基本クラスの仮想メソッドです。 このメソッドを実装するのは、コンテンツの型の値を構築時に指定できない場合、またはコンテンツの種類の値の計算が非常に重要でコストの高い操作である場合のみです。 戻り値は、有効な [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] コンテンツの種類である必要があります。  
  
 派生クラスは <xref:System.IO.Packaging.PackagePart.GetContentTypeCore%2A> を呼び出して、派生クラスの <xref:System.IO.Packaging.PackagePart.ContentType%2A> プロパティを既定値に初期化できます。  <xref:System.IO.Packaging.PackagePart.ContentType%2A> プロパティが設定された後は、変更できません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">該当する派生クラスには、<see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> メソッドに必要なオーバーライド実装が用意されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship GetRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship GetRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationship (id As String) As PackageRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ GetRelationship(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.GetRelationship : string -&gt; System.IO.Packaging.PackageRelationship" Usage="packagePart.GetRelationship id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">返されるリレーションシップの <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
        <summary>指定した <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> を持つリレーションシップを返します。</summary>
        <returns>指定した <paramref name="id" /> に一致するリレーションシップ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `id` 有効な XML 識別子である必要があります。  `id` 型は xsd: ID で、 *XML スキーマパート 2: データ型*の仕様に規定されている名前付け規則に従う必要があります ( [https://www.w3.org/TR/xmlschema-2/#ID](https://www.w3.org/TR/xmlschema-2/#ID)を参照してください)。  
  
 <xref:System.IO.Packaging.PackagePart.RelationshipExists%2A> メソッドを使用して、指定した <xref:System.IO.Packaging.PackageRelationship.Id%2A> とのリレーションシップがこのパートによって所有されているかどうかを判断できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="id" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.Xml.XmlException"><paramref name="id" /> が有効な XML 識別子でありません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="relationshipType" /> が空の文字列です。</exception>
        <exception cref="T:System.InvalidOperationException">パーツが削除されました。  
  
または 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。  
  
または 
指定した <paramref name="id" /> を持つリレーションシップがパッケージ内に存在しません。</exception>
        <exception cref="T:System.IO.IOException">パッケージは書き込み専用です (リレーションシップ情報を読み取ることができません)。</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationships">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationships() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetRelationships" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationships () As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationships();" />
      <MemberSignature Language="F#" Value="member this.GetRelationships : unit -&gt; System.IO.Packaging.PackageRelationshipCollection" Usage="packagePart.GetRelationships " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このパーツによって所有されているすべてのリレーションシップのコレクションを返します。</summary>
        <returns>パーツによって所有されているすべてのリレーションシップのコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返されたコレクションは `null`ません。ただし、パーツでリレーションシップが定義されていない場合は、コレクションにゼロ要素が含まれている可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">パーツが削除されました。  
  
または 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
        <exception cref="T:System.IO.IOException">パッケージは書き込み専用です (リレーションシップ情報を読み取ることができません)。</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipsByType">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType(string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipsByType (relationshipType As String) As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationshipsByType(System::String ^ relationshipType);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipsByType : string -&gt; System.IO.Packaging.PackageRelationshipCollection" Usage="packagePart.GetRelationshipsByType relationshipType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationshipType">リレーションシップの <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />。検索を行った場合、その結果をコレクションで返します。</param>
        <summary>指定した <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> に一致するリレーションシップのコレクションを返します。</summary>
        <returns>指定した <paramref name="relationshipType" /> に一致するリレーションシップのコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返されたコレクションは `null`ません。ただし、パーツに対して定義されている指定された `relationshipType` と一致するリレーションシップがない場合は、コレクションに0個の要素が含まれている可能性があります。  
  
 `relationshipType` 文字列内の先頭または末尾のスペースは、自動的に切り捨てられます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="relationshipType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="relationshipType" /> が空の文字列です。</exception>
        <exception cref="T:System.InvalidOperationException">パーツが削除されました。  
  
または 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
        <exception cref="T:System.IO.IOException">パッケージは書き込み専用です (リレーションシップ情報を読み取ることができません)。</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStream">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>パーツのコンテンツ データ ストリームを返します。</summary>
        <block subset="none" type="usage"><para>
            <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> は、派生された <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> メソッドを内部的に呼び出して、派生クラスに実装されている物理形式に基づいてパーツデータストリームを実際に開いて返します。  
  
既定では、抽象 <see cref="T:System.IO.Packaging.PackagePart" /> クラスの <see cref="T:System.IO.Packaging.ZipPackagePart" /> サブクラス実装が提供され、使用されます。  既定の操作では、<see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> 内部で <see cref="T:System.IO.Packaging.ZipPackagePart" /> クラスの <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> を呼び出して、ZIP ファイルからパーツデータストリームを開いて返します。</para></block>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream();" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.IO.Stream" Usage="packagePart.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>パーツのコンテンツ データ ストリームを返します。</summary>
        <returns>パーツのコンテンツ データ ストリーム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.IO.FileMode.OpenOrCreate> の <xref:System.IO.FileMode> と、親 <xref:System.IO.Packaging.Package>と同じ <xref:System.IO.FileAccess> アクセス許可を持つコンテンツストリームを開きます。  
  
 オーバーロード <xref:System.IO.Packaging.PackagePart.GetStream%2A> メソッドを使用すると、特定の <xref:System.IO.FileMode>を設定できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">パーツが削除されました。  
  
または 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
        <exception cref="T:System.IO.IOException">派生サブクラスの <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> メソッドから返されるストリーム オブジェクトは <see langword="null" /> です。</exception>
        <block subset="none" type="usage"><para>
            <see cref="M:System.IO.Packaging.PackagePart.GetStream" /> は、派生された <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> メソッドを内部的に呼び出して、派生クラスに実装されている物理形式に基づいてパーツデータストリームを実際に開いて返します。  
  
既定では、抽象 <see cref="T:System.IO.Packaging.PackagePart" /> クラスの <see cref="T:System.IO.Packaging.ZipPackagePart" /> サブクラス実装が提供され、使用されます。  既定の操作では、<see cref="M:System.IO.Packaging.PackagePart.GetStream" /> 内部で <see cref="T:System.IO.Packaging.ZipPackagePart" /> クラスの <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> を呼び出して、ZIP ファイルからパーツデータストリームを開いて返します。</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream (System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream(valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (mode As FileMode) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream(System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="member this.GetStream : System.IO.FileMode -&gt; System.IO.Stream" Usage="packagePart.GetStream mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="mode">コンテンツ ストリームを開くときの I/O モード。</param>
        <summary>指定した I/O <see cref="T:System.IO.FileMode" /> で開かれているコンテンツ ストリームを返します。</summary>
        <returns>パーツのコンテンツ ストリーム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返されるコンテンツストリームの <xref:System.IO.FileAccess> アクセス許可は、親 <xref:System.IO.Packaging.Package>のアクセス許可と同じです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">パーツが削除されました。  
  
または 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> パラメーターが、有効な <see cref="T:System.IO.FileMode" /> 列挙値でありません。</exception>
        <exception cref="T:System.IO.IOException"><paramref name="mode" /> パラメーターに、パッケージおよびパーツ ストリームとの互換性がありません。  
  
または 
派生サブクラスの <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> メソッドから返されるストリーム オブジェクトは <see langword="null" /> です。</exception>
        <block subset="none" type="usage"><para>
            <see cref="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)" /> は、派生された <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> メソッドを内部的に呼び出して、派生クラスに実装されている物理形式に基づいてパーツデータストリームを実際に開いて返します。  
  
既定では、抽象 <see cref="T:System.IO.Packaging.PackagePart" /> クラスの <see cref="T:System.IO.Packaging.ZipPackagePart" /> サブクラス実装が提供され、使用されます。  既定の操作では、<see cref="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)" /> 内部で <see cref="T:System.IO.Packaging.ZipPackagePart" /> クラスの <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> を呼び出して、ZIP ファイルからパーツデータストリームを開いて返します。</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream (System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream(valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (mode As FileMode, access As FileAccess) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream(System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="member this.GetStream : System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Stream" Usage="packagePart.GetStream (mode, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="mode">コンテンツ ストリームを開くときの I/O モード。</param>
        <param name="access">コンテンツ ストリームを開くときに使用するアクセス許可。</param>
        <summary>指定した <see cref="T:System.IO.FileMode" /> と <see cref="T:System.IO.FileAccess" /> で開かれているパーツ コンテンツ ストリームを返します。</summary>
        <returns>パーツのコンテンツ ストリーム。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">パーツが削除されました。  
  
または 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> パラメーターが、有効な <see cref="T:System.IO.FileMode" /> 列挙値でありません。  
  
または 
<paramref name="access" /> パラメーターが、有効な <see cref="T:System.IO.FileAccess" /> 列挙値でありません。</exception>
        <exception cref="T:System.IO.IOException"><paramref name="mode" /> または <paramref name="access" /> パラメーターに、パッケージおよびパーツ ストリームとの互換性がありません。  
  
または 
<paramref name="access" /> パラメーターの指定が <see cref="F:System.IO.FileAccess.Read" /> になっていますが、該当する <paramref name="mode" /> パラメーターには書き込みアクセス権が必要です  (<see cref="T:System.IO.FileMode" /> の値が <see cref="F:System.IO.FileMode.Create" />、<see cref="F:System.IO.FileMode.CreateNew" />、<see cref="F:System.IO.FileMode.Truncate" />、または <see cref="F:System.IO.FileMode.Append" /> の場合は、<see cref="F:System.IO.FileAccess.Write" /> または <see cref="F:System.IO.FileAccess.ReadWrite" /> のアクセス権が必要です)。 
または 
派生サブクラスの <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> メソッドから返されるストリーム オブジェクトは <see langword="null" /> です。</exception>
        <block subset="none" type="usage"><para>
            <see cref="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)" /> は、派生された <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> メソッドを内部的に呼び出して、派生クラスに実装されている物理形式に基づいてパーツデータストリームを実際に開いて返します。  
  
既定では、抽象 <see cref="T:System.IO.Packaging.PackagePart" /> クラスの <see cref="T:System.IO.Packaging.ZipPackagePart" /> サブクラス実装が提供され、使用されます。  既定の操作では、<see cref="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)" /> 内部で <see cref="T:System.IO.Packaging.ZipPackagePart" /> クラスの <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> を呼び出して、ZIP ファイルからパーツデータストリームを開いて返します。</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetStreamCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Stream GetStreamCore (System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Stream GetStreamCore(valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetStreamCore (mode As FileMode, access As FileAccess) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Stream ^ GetStreamCore(System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="abstract member GetStreamCore : System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Stream" Usage="packagePart.GetStreamCore (mode, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="mode">コンテンツ ストリームを開くときの I/O モード。</param>
        <param name="access">コンテンツ ストリームを開くときに使用するアクセス許可。</param>
        <summary>派生クラスでオーバーライドされると、指定の <see cref="T:System.IO.FileMode" /> と <see cref="T:System.IO.FileAccess" /> で開かれているパーツ コンテンツ ストリームを返します。</summary>
        <returns>パーツのコンテンツ データ ストリーム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーションは <xref:System.IO.Packaging.PackagePart.GetStreamCore%2A> を直接呼び出すのではなく、<xref:System.IO.Packaging.PackagePart.GetStream%2A>を呼び出す必要があります。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> の実装では、それを呼び出す <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> メソッドによって実行される順序や操作について、想定しないようにする必要があります。</para></block>
        <block subset="none" type="usage"><para>派生 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> メソッドは、派生クラスで実装された物理形式に基づいてパーツデータストリームを開いて返すために、<see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> メソッドによって呼び出されます。  
  
既定では、抽象 <see cref="T:System.IO.Packaging.PackagePart" /> クラスの <see cref="T:System.IO.Packaging.ZipPackagePart" /> サブクラス実装が提供され、使用されます。  既定の操作では、<see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> 内部で <see cref="T:System.IO.Packaging.ZipPackagePart" /> クラスの <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> を呼び出して、ZIP ファイルからパーツデータストリームを開いて返します。</para></block>
      </Docs>
    </Member>
    <Member MemberName="Package">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package Package { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.Package Package" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackagePart.Package" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Package As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::Package ^ Package { System::IO::Packaging::Package ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Package : System.IO.Packaging.Package" Usage="System.IO.Packaging.PackagePart.Package" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パーツの親 <see cref="T:System.IO.Packaging.Package" /> を取得します。</summary>
        <value>パーツの親パッケージ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.Package%2A> は読み取り専用のプロパティであり、親 <xref:System.IO.Packaging.Package> が開いている場合にのみアクセスできます。  
  
 <xref:System.IO.Packaging.PackagePart.Package%2A> プロパティは、<xref:System.IO.Packaging.PackagePart.%23ctor%2A> コンストラクターによって自動的に設定されます。  コンストラクターによって設定された後、そのパートの親 <xref:System.IO.Packaging.PackagePart.Package%2A> を変更することはできません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">パーツが削除されました。  
  
または 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      </Docs>
    </Member>
    <Member MemberName="RelationshipExists">
      <MemberSignature Language="C#" Value="public bool RelationshipExists (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RelationshipExists(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RelationshipExists (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RelationshipExists(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.RelationshipExists : string -&gt; bool" Usage="packagePart.RelationshipExists id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">確認対象のリレーションシップの <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
        <summary>指定した <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> を持つリレーションシップがこのパーツによって所有されているどうかを示す値を返します。</summary>
        <returns>指定した <paramref name="id" /> を持つリレーションシップがこのパーツによって所有されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `id` 有効な XML 識別子である必要があります。  `id` 型は xsd: ID で、 *XML スキーマパート 2: データ型*の仕様に規定されている名前付け規則に従う必要があります ( [https://www.w3.org/TR/xmlschema-2/#ID](https://www.w3.org/TR/xmlschema-2/#ID)を参照してください)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="id" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.Xml.XmlException"><paramref name="id" /> が有効な XML 識別子でありません。</exception>
        <exception cref="T:System.InvalidOperationException">パーツが削除されました。  
  
または 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
        <exception cref="T:System.IO.IOException">パッケージは書き込み専用です (リレーションシップ情報を読み取ることができません)。</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackagePart.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Uri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="System.IO.Packaging.PackagePart.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パーツの URI を取得します。</summary>
        <value>パッケージルートに対して相対的な部分の URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.Uri%2A> は読み取り専用のプロパティであり、親 <xref:System.IO.Packaging.Package> が開いている場合にのみアクセスできます。  
  
 <xref:System.IO.Packaging.PackagePart.Uri%2A> プロパティは、<xref:System.IO.Packaging.PackagePart.%23ctor%2A> コンストラクターによって自動的に設定されます。  コンストラクターによって設定された後、パートの <xref:System.IO.Packaging.PackagePart.Uri%2A> を変更することはできません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">パーツが削除されました。  
  
または 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
  </Members>
</Type>
