<Type Name="PackageStore" FullName="System.IO.Packaging.PackageStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e093b385eb17baa6eb6652f3108ad1f59721551a" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82301450" /></Metadata><TypeSignature Language="C#" Value="public static class PackageStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PackageStore extends System.Object" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageStore" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageStore abstract sealed" />
  <TypeSignature Language="F#" Value="type PackageStore = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackageStore extends System.Object" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.IO.Packaging.Package" /> と組み合わせて使用されるアプリケーション固有の <see cref="T:System.IO.Packaging.PackWebRequest" /> インスタンスのコレクションを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageStore> は、アプリケーションで開いてアクティブになっているパッケージの参照コレクションを定義します。  <xref:System.IO.Packaging.PackageStore> に追加されたパッケージは、そのキー URI 値によってアクセスされます。  <xref:System.IO.Packaging.PackageStore> では、次の3つの一般的な用途がサポートされます。  
  
1.  <xref:System.IO.Packaging.PackWebRequest>を使用した <xref:System.IO.Packaging.PackagePart> データへのアクセス。  
  
2.  パッケージの URI を指定して <xref:System.IO.Packaging.Package> のインスタンスを取得するアプリケーション。  
  
3.  <xref:System.IO.MemoryStream>に作成および保存されたパッケージへのアクセス。  
  
 パフォーマンスを向上させ、ファイルを開く/閉じる操作を繰り返すことによるオーバーヘッドを最小限に抑えるために、<xref:System.IO.Packaging.PackageStore> は、<xref:System.IO.Packaging.PackWebRequest> によって、またアプリケーションによって直接アクセスされるパッケージのインスタンスを管理するために使用されます。  パッケージ内のデータにアクセスするときは、要求された <xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.PackagePart.Uri%2A> の <xref:System.IO.Packaging.Package> アドレスが最初にチェックされ、パッケージが既に定義され、<xref:System.IO.Packaging.PackageStore>で開かれているかどうかが確認されます。  パッケージが <xref:System.IO.Packaging.PackageStore>で open として定義されている場合、要求ごとにパッケージを開いたり閉じたりすることなく、要求されたパーツに直接アクセスできます。  
  
 アプリケーションが <xref:System.IO.Packaging.Package.Open%2A?displayProperty=nameWithType>でパッケージを開いた場合、<xref:System.IO.Packaging.PackageStore.AddPackage%2A> を呼び出して、パッケージを <xref:System.IO.Packaging.PackageStore>に追加できます。  <xref:System.IO.Packaging.Package.Close%2A?displayProperty=nameWithType>を呼び出す前に <xref:System.IO.Packaging.PackageStore> からパッケージを削除するには、後で <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> を呼び出す必要があります。  
  
 <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> コンストラクターで開かれた XPS パッケージは、ドキュメントが作成されて破棄されると、<xref:System.IO.Packaging.PackageStore> に自動的に追加され、削除されます。  (<xref:System.IO.Packaging.PackageStore.AddPackage%2A> を呼び出す必要はなく、<xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> コンストラクターで開かれた XPS パッケージに対して個別に <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> する必要もありません)。  
  
 <xref:System.IO.Packaging.PackageStore> によってアクセスされるパッケージのファイル i/o アクセス許可は、パッケージが開かれたときに設定された i/o アクセス許可と同じままです。  <xref:System.IO.Packaging.PackageStore> は、ストアに追加されたパッケージへの参照のみを提供します。  各パッケージを正しく開いて更新し、終了するのは、アプリケーションの場合です。  
  
 <xref:System.IO.Packaging.PackageStore> に追加されたパッケージは、<xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType>などの [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] パーサーと組み合わせて使用されている場合に、マルチスレッド環境でアクセスできます。  マルチスレッド環境で動作している場合、アプリケーションはアクセスの前にパッケージをロックする必要があります。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackWebRequest" />
    <altmember cref="T:System.IO.Packaging.PackWebResponse" />
  </Docs>
  <Members>
    <Member MemberName="AddPackage">
      <MemberSignature Language="C#" Value="public static void AddPackage (Uri uri, System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPackage(class System.Uri uri, class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPackage (uri As Uri, package As Package)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPackage(Uri ^ uri, System::IO::Packaging::Package ^ package);" />
      <MemberSignature Language="F#" Value="static member AddPackage : Uri * System.IO.Packaging.Package -&gt; unit" Usage="System.IO.Packaging.PackageStore.AddPackage (uri, package)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="uri"><paramref name="package" /> で比較される <see cref="T:System.IO.Packaging.PackWebRequest" /> のキー URI。</param>
        <param name="package">ストアに追加するパッケージ。</param>
        <summary><see cref="T:System.IO.Packaging.Package" /> をストアに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` は、<xref:System.IO.Packaging.PackWebRequest>を呼び出すときに比較されるパッケージのキー URI を定義します。  
  
 `packageUri` が <xref:System.IO.Packaging.PackWebRequest> 呼び出しで <xref:System.IO.Packaging.PackagePart> の <xref:System.IO.Packaging.PackagePart.Uri%2A> と一致する場合、要求されたパーツにアクセスするために、<xref:System.IO.Packaging.PackageStore> で定義されているパッケージが使用されます。  
  
 `packageUri` が <xref:System.IO.Packaging.PackWebRequest> 呼び出しの <xref:System.IO.Packaging.PackagePart> の <xref:System.IO.Packaging.PackagePart.Uri%2A> と一致しない場合、要求されたパーツにアクセスするために、指定した URI のパッケージが開かれます。  
  
 **セキュリティ**に関する注意このメソッドは、すべてのカスタム <xref:System.IO.Packaging.Package> (非<xref:System.IO.Packaging.ZipPackage>) 型に対して <xref:System.Security.Permissions.EnvironmentPermission> を要求します。  
  
   
  
## Examples  
 <xref:System.IO.Packaging.PackageStore.AddPackage%2A> メソッドを使用する方法の例を次に示します。  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewdecrypt)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewdecrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="package" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> が無効なパッケージ URI です。</exception>
        <exception cref="T:System.InvalidOperationException">指定した <paramref name="packageUri" /> を持つパッケージが、既にストアに存在します。</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package GetPackage (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package GetPackage(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPackage (uri As Uri) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ GetPackage(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member GetPackage : Uri -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.PackageStore.GetPackage uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">返されるパッケージの Uniform Resource Identifier (URI)。</param>
        <summary>指定した URI を持つ <see cref="T:System.IO.Packaging.Package" /> をストアから返します。</summary>
        <returns>指定した <paramref name="packageUri" /> を持つパッケージ。指定した <see langword="null" /> を持つパッケージがストア内に存在しない場合は <paramref name="packageUri" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` は、<xref:System.IO.Packaging.PackageStore.AddPackage%2A> メソッドの呼び出しで指定された Uri と一致します。  
  
 **セキュリティ**に関する注意このメソッドは、すべてのカスタム <xref:System.IO.Packaging.Package> (非<xref:System.IO.Packaging.ZipPackage>) 型に対して <xref:System.Security.Permissions.EnvironmentPermission> を要求します。  
  
   
  
## Examples  
 <xref:System.IO.Packaging.PackageStore.GetPackage%2A> メソッドを使用する方法の例を次に示します。  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewopendoc)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewopendoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> が無効なパッケージ URI です。</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePackage">
      <MemberSignature Language="C#" Value="public static void RemovePackage (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePackage(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePackage (uri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePackage(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member RemovePackage : Uri -&gt; unit" Usage="System.IO.Packaging.PackageStore.RemovePackage uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">削除されるパッケージの Uniform Resource Identifier (URI)。</param>
        <summary>指定した URI を持つ <see cref="T:System.IO.Packaging.Package" /> をストアから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` は、<xref:System.IO.Packaging.PackageStore.AddPackage%2A> メソッドの呼び出しで指定された Uri と一致します。  
  
 **セキュリティ**に関する注意このメソッドは、すべてのカスタム <xref:System.IO.Packaging.Package> (非<xref:System.IO.Packaging.ZipPackage>) 型に対して <xref:System.Security.Permissions.EnvironmentPermission> を要求します。  
  
   
  
## Examples  
 <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> メソッドを使用する方法の例を次に示します。  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewclosedoc)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewclosedoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> が無効なパッケージ URI です。</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
      </Docs>
    </Member>
  </Members>
</Type>
