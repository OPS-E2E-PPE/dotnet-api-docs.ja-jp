<Type Name="PackUriHelper" FullName="System.IO.Packaging.PackUriHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="619fbaea6d0ffe2f326bbcdc60defad4f48888a9" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83979523" /></Metadata><TypeSignature Language="C#" Value="public static class PackUriHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PackUriHelper extends System.Object" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackUriHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class PackUriHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackUriHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type PackUriHelper = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackUriHelper extends System.Object" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="WindowsBase" FromVersion="5.0.0.0" To="System.IO.Packaging" ToVersion="4.0.4.0" FrameworkAlternate="dotnet-plat-ext-5.0" />
    <TypeForwarding From="WindowsBase" FromVersion="5.0.0.0" To="System.IO.Packaging" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="WindowsBase" FromVersion="4.0.0.0" To="System.IO.Packaging" ToVersion="4.0.4.0" FrameworkAlternate="netcore-3.0" />
    <TypeForwarding From="WindowsBase" FromVersion="4.0.0.0" To="System.IO.Packaging" ToVersion="4.0.5.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>パック URI オブジェクトを作成および解析するユーティリティ メソッドを提供します。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ComparePackUri">
      <MemberSignature Language="C#" Value="public static int ComparePackUri (Uri firstPackUri, Uri secondPackUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePackUri(class System.Uri firstPackUri, class System.Uri secondPackUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePackUri (firstPackUri As Uri, secondPackUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePackUri(Uri ^ firstPackUri, Uri ^ secondPackUri);" />
      <MemberSignature Language="F#" Value="static member ComparePackUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePackUri (firstPackUri, secondPackUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPackUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="secondPackUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
      </Parameters>
      <Docs>
        <param name="firstPackUri">最初のパック URI。</param>
        <param name="secondPackUri">2 番目のパック URI。</param>
        <summary>2 つのパック URI が同等であるかどうかを示す値を返します。</summary>
        <returns><paramref name="firstPackUri" /> と <paramref name="secondPackUri" /> との間のリレーションシップを示す符号付き整数。  
  
 <list type="table"><listheader><term> 値 
 </term><description> 意味 
 </description></listheader><item><term> 0 より小さい。 
 </term><description><paramref name="firstPackUri" /> が <paramref name="secondPackUri" />がスローされます。  
  
 </description></item><item><term> 0 
 </term><description><paramref name="firstPackUri" /> は <paramref name="secondPackUri" /> に相当します。  
  
 </description></item><item><term> 0 より大きい 
 </term><description><paramref name="firstPackUri" /> は <paramref name="secondPackUri" />がスローされます。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `firstPackUri` と `secondPackUri` の両方が `null`場合、<xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> は0を返します。 パック Uri を比較する場合、null URI は常に null 以外の URI よりも小さくなります。    `firstPackUri` と `secondPackUri` が両方とも絶対パック Uri である場合、<xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> は比較を実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="firstPackUri" /> または <paramref name="secondPackUri" /> が絶対 URI ではありません。  
  
または 
<paramref name="firstPackUri" /> または <paramref name="secondPackUri" /> が "pack://" スキームで始まっていません。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="ComparePartUri">
      <MemberSignature Language="C#" Value="public static int ComparePartUri (Uri firstPartUri, Uri secondPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePartUri(class System.Uri firstPartUri, class System.Uri secondPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePartUri (firstPartUri As Uri, secondPartUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePartUri(Uri ^ firstPartUri, Uri ^ secondPartUri);" />
      <MemberSignature Language="F#" Value="static member ComparePartUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePartUri (firstPartUri, secondPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPartUri" Type="System.Uri" />
        <Parameter Name="secondPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="firstPartUri">最初の <see cref="T:System.IO.Packaging.PackagePart" /> の URI。</param>
        <param name="secondPartUri">2 番目の <see cref="T:System.IO.Packaging.PackagePart" /> の URI。</param>
        <summary>2 つのパッケージ パーツの URI が同等であるかどうかを示す値を返します。</summary>
        <returns><paramref name="firstPartUri" /> と <paramref name="secondPartUri" /> の間のリレーションシップを示す値。  
  
 <list type="table"><listheader><term> 値 
 </term><description> 意味 
 </description></listheader><item><term> 0 より小さい。 
 </term><description><paramref name="firstPartUri" /> が <paramref name="secondPartUri" />がスローされます。  
  
 </description></item><item><term> 0 
 </term><description><paramref name="firstPartUri" /> は <paramref name="secondPartUri" /> に相当します。  
  
 </description></item><item><term> 0 より大きい 
 </term><description><paramref name="firstPartUri" /> は <paramref name="secondPartUri" />がスローされます。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `firstPartUri` と `secondPartUri` の両方が `null`場合、<xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> は0を返します。 <xref:System.IO.Packaging.PackagePart> Uri を比較する場合、null URI は常に null 以外の URI よりも小さくなります。 `firstPartUri` と `secondPartUri` が両方とも相対 <xref:System.IO.Packaging.PackagePart> Uri の場合、<xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> は比較を実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="firstPartUri" /> または <paramref name="secondPartUri" /> は有効なパーツ URI 構文ではありません。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>新しいパック URI を作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表は、<xref:System.IO.Packaging.PackUriHelper.Create%2A> メソッドのケース例を示しています。  
  
|`packageUri`|`partUri`|`fragment`|返されたパックの URI|  
|------------------|---------------|----------------|-----------------------|  
|`http://www.proseware.com/mypackage.pkg`|/page1.xaml|#intro|pack: http:、、mypackage、または、次のようにします。|  
|`http://www.proseware.com/mypackage.pkg`|/page2.xaml|**packUri**|pack: http:、、mypackage、または、次のようにします。|  
|`http://www.proseware.com/mypackage.pkg`|/a/page4.xaml|**packUri**|pack: http:、、mypackage、page4、またはを実行します。|  
|`http://www.proseware.com/mypackage.pkg`|/%41/%61.xml|**packUri**|pack: http:、、www. mypackage、/A/a .xml。|  
|`http://www.proseware.com/mypackage.pkg`|/%25XY.xml|**packUri**|pack: http:、、mypackage、1/%2 5、1つの xml|  
|`http://www.proseware.com/mypackage.pkg`|/a/page5.xaml|#summary|pack: http:、、mypackage、page5/a/の概要を示します。|  
|`http://www.proseware.com/packages.aspx?pkg04`|/page1.xaml|#intro|pack: http:、、pkg04、パッケージ .aspx %3 f、または page1 # の概要|  
|`http://www.proseware.com/mypackage.pkg`|**packUri**|**packUri**|pack: http:,, www. mypackage,|  
|`ftp://ftp.proseware.com/packages/mypackage1.abc`|/a/mydoc.xaml|**packUri**|pack:/、ftp:、、mypackage1、パッケージ、mydoc/a、または .xaml|  
|`file:///d:/packages/mypackage2.pkg`|/a/bar.xaml|#xref|pack://file:,,, d:、packages、mypackage2/a/bar. .xaml # xref|  
  
 パック URI の作成は、複数の手順から成るプロセスです。  たとえば、パック URI を形成する1つの手順は、`packageUri` のスラッシュ (/) 文字をコンマ (,) で置き換えることです。  
  
 文字列の変換と、パックの Uri の形式の詳細については、「付録 A. 4」の「文字列変換の例」と「付録 B. 3」「パッケージ規則を開く」の「パッケージの URI の構成」を[参照して](https://go.microsoft.com/fwlink/?LinkID=71255)ください。  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create packageUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
      </Parameters>
      <Docs>
        <param name="packageUri">参照先の <see cref="T:System.IO.Packaging.Package" />の URI。</param>
        <summary>パッケージを指す新しいパック URI を作成します。</summary>
        <returns>指定された <paramref name="packageUri" /> によって参照されている <see cref="T:System.IO.Packaging.Package" /> のパック URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` を `null` または空として指定することはできません。  
  
 次の表は、<xref:System.IO.Packaging.PackUriHelper.Create%2A>のケース例を示しています。  
  
|`packageUri`|返されたパックの URI|  
|------------------|-----------------------|  
|`http://www.proseware.com/mypackage.pkg`|pack: http:,, www. mypackage,|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|pack: ftp:、、mypackage1、パッケージ、およびを実行します。|  
|file:///d:/packages/mypackage2.pkg|pack://file:,,, d:、packages、mypackage2|  
  
 パック URI の作成は、複数の手順から成るプロセスです。  たとえば、パック URI を形成する1つの手順は、`packageUri` のスラッシュ (/) 文字をコンマ (,) で置き換えることです。  
  
 文字列の変換と、パックの Uri の形式の詳細については、「付録 A. 4」の「文字列変換の例」と「付録 B. 3」「パッケージ規則を開く」の「パッケージの URI の構成」を[参照して](https://go.microsoft.com/fwlink/?LinkID=71255)ください。  
  
   
  
## Examples  
 次の例は、<xref:System.IO.Packaging.PackUriHelper.Create%2A> メソッドを使用して、パッケージを参照するパック URI を定義する方法を示しています。  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> は絶対 URI ではありません。</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="partUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
      </Parameters>
      <Docs>
        <param name="packageUri"><see cref="T:System.IO.Packaging.Package" /> の URI。</param>
        <param name="partUri">パッケージ内の <see cref="T:System.IO.Packaging.PackagePart" /> の URI。</param>
        <summary><see cref="T:System.IO.Packaging.Package" /> URI およびパッケージ内にあるパーツの URI が指定されている場合に、パック URI を作成します。</summary>
        <returns>指定された <see cref="T:System.IO.Packaging.PackagePart" />のパック URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` を null または空として指定することはできません。  
  
 `partUri` が `null`場合、返されたパック URI はパッケージを指します。  
  
 次の表は、<xref:System.IO.Packaging.PackUriHelper.Create%2A> メソッドのケース例を示しています。  
  
|`packageUri`|`partUri`|返されたパックの URI|  
|------------------|---------------|-----------------------|  
|`http://www.proseware.com/mypackage.pkg`|/page2.xaml|pack: http:、、mypackage、または、次のようにします。|  
|`http://www.proseware.com/mypackage.pkg`|/a/page4.xaml|pack: http:、、mypackage、page4、またはを実行します。|  
|`http://www.proseware.com/mypackage.pkg`|/%41/%61.xml|pack: http:、、www. mypackage、/A/a .xml。|  
|`http://www.proseware.com/mypackage.pkg`|/%25XY.xml|pack: http:、、mypackage、1/%2 5、1つの xml|  
|`http://www.proseware.com/mypackage.pkg`|**packUri**|pack: http:,, www. mypackage,|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/mydoc.xaml|pack:/、ftp:、、mypackage1、パッケージ、mydoc/a、または .xaml|  
|file:///d:/packages/mypackage2.pkg|/a/bar.xaml|pack://file:,,, d:, packages, mypackage2/a/bar. .xaml|  
  
 パック URI の作成は、複数の手順から成るプロセスです。  たとえば、パック URI を形成する1つの手順は、`packageUri` のスラッシュ (/) 文字をコンマ (,) で置き換えることです。  
  
 文字列の変換と、パックの Uri の形式の詳細については、「付録 A. 4」の「文字列変換の例」と「付録 B. 3」「パッケージ規則を開く」の「パッケージの URI の構成」を[参照して](https://go.microsoft.com/fwlink/?LinkID=71255)ください。  
  
   
  
## Examples  
 次の例は、<xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> メソッドを使用して、パッケージを参照するパック URI を定義する方法を示しています。  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> は絶対 URI ではありません。  
  
または 
 <paramref name="partUri" /> は有効なパーツ URI 構文ではありません。</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri, string fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri, string fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri, fragment As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri, System::String ^ fragment);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri * string -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri, fragment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="partUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="fragment" Type="System.String" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
      </Parameters>
      <Docs>
        <param name="packageUri"><see cref="T:System.IO.Packaging.Package" /> の URI。</param>
        <param name="partUri">パッケージ内の <see cref="T:System.IO.Packaging.PackagePart" /> の URI。</param>
        <param name="fragment">パッケージ パーツ内の要素を識別する「#」参照。</param>
        <summary><see cref="T:System.IO.Packaging.Package" /> URI、パッケージ内にあるパーツの URI、および追加する "#" フラグメントが指定されている場合に、パック URI を作成します。</summary>
        <returns>指定したパッケージ、パッケージ パーツ、およびフラグメントを識別するパック URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` を `null` または空として指定することはできません。  
  
 `partUri` が `null`場合、返されたパック URI はパッケージを指します。  
  
 `fragment` を空の文字列にすることはできませんが、`null`として指定することはできます。  `null`として指定されていない場合、`fragment` 文字列は ' # ' 文字で始まる必要があります。  `fragment` リファレンスの構文の詳細については、 [RFC 3986](https://www.ietf.org/rfc/rfc3986.txt)のセクション3.5 の「Fragment」を参照してください。  
  
 次の表は、<xref:System.IO.Packaging.PackUriHelper.Create%2A> メソッドのケース例を示しています。  
  
|`packageUri`|`partUri`|`fragment`|返されたパックの URI|  
|------------------|---------------|----------------|-----------------------|  
|`http://www.proseware.com/mypackage.pkg`|/page1.xaml|#intro|pack: http:、、mypackage、または、次のようにします。|  
|`http://www.proseware.com/mypackage.pkg`|/page2.xaml|**packUri**|pack: http:、、mypackage、または、次のようにします。|  
|`http://www.proseware.com/mypackage.pkg`|/a/page4.xaml|**packUri**|pack: http:、、mypackage、page4、またはを実行します。|  
|`http://www.proseware.com/mypackage.pkg`|/%41/%61.xml|**packUri**|pack: http:、、www. mypackage、/A/a .xml。|  
|`http://www.proseware.com/mypackage.pkg`|/%25XY.xml|**packUri**|pack: http:、、mypackage、1/%2 5、1つの xml|  
|`http://www.proseware.com/mypackage.pkg`|/a/page5.xaml|#summary|pack: http:、、mypackage、page5/a/の概要を示します。|  
|`http://www.proseware.com/packages.aspx?pkg04`|/page1.xaml|#intro|pack: http:、、pkg04、パッケージ .aspx %3 f、または page1 # の概要|  
|`http://www.proseware.com/mypackage.pkg`|**packUri**|**packUri**|pack: http:,, www. mypackage,|  
|`ftp://ftp.proseware.com/packages/mypackage1.abc`|/a/mydoc.xaml|**packUri**|pack:/、ftp:、、mypackage1、パッケージ、mydoc/a、または .xaml|  
|`file:///d:/packages/mypackage2.pkg`|/a/bar.xaml|#xref|pack://file:,,, d:、packages、mypackage2/a/bar. .xaml # xref|  
  
 パック URI の作成は、複数の手順から成るプロセスです。  たとえば、パック URI を形成する1つの手順は、`packageUri` のスラッシュ (/) 文字をコンマ (,) で置き換えることです。  
  
 文字列の変換と、パックの Uri の形式の詳細については、「付録 A. 4」の「文字列変換の例」と「付録 B. 3」「パッケージ規則を開く」の「パッケージの URI の構成」を[参照して](https://go.microsoft.com/fwlink/?LinkID=71255)ください。  
  
   
  
## Examples  
 次の例は、<xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> メソッドを使用して、パッケージを参照するパック URI を定義する方法を示しています。  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> は絶対 URI ではありません。  
  
または 
 <paramref name="partUri" /> は有効なパーツ URI 構文ではありません。  
  
または 
 <paramref name="fragment" /> は空であるか、または「#」で始まっています。</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
      </Docs>
    </Member>
    <Member MemberName="CreatePartUri">
      <MemberSignature Language="C#" Value="public static Uri CreatePartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreatePartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ CreatePartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member CreatePartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.CreatePartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">パッケージ内の <see cref="T:System.IO.Packaging.PackagePart" /> の URI。</param>
        <summary>書式設定された <see cref="T:System.IO.Packaging.PackagePart" /> URI を作成します。</summary>
        <returns>書式設定された <see cref="T:System.IO.Packaging.PackagePart" /> URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart> の URI は、常に <xref:System.IO.Packaging.Package> ルートから参照されます。  
  
 返される <xref:System.IO.Packaging.PackagePart> URI は、常に "/" で始まる絶対パスであり、[オープンパッケージング規則の仕様](https://go.microsoft.com/fwlink/?LinkID=71255)で定義されている構文に準拠しています。  
  
 次の表は、<xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A>のケース例を示しています。  
  
|`partUri`|返されたパーツの URI|  
|---------------|-----------------------|  
|picture1.jpg|/picture1.jpg|  
|/picture2.jpg|/picture2.jpg|  
|a/mydoc.xaml|/a/mydoc.xaml|  
|/b/bar.xaml|/b/bar.xaml|  
  
   
  
## Examples  
 次の例は、<xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A> メソッドを使用して、<xref:System.IO.Packaging.PackagePart> 要素の相対 Uri を定義する方法を示しています。  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreateparturi)]
 [!code-vb[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreateparturi)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160055">パッケージの作成のサンプル</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> は絶対 <see cref="T:System.Uri" /> ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNormalizedPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetNormalizedPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetNormalizedPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNormalizedPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetNormalizedPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetNormalizedPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetNormalizedPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">正規化する <see cref="T:System.IO.Packaging.PackagePart" /> URI。</param>
        <summary>指定した <see cref="T:System.IO.Packaging.PackagePart" /> URI の正規化形式を返します。</summary>
        <returns>指定した <paramref name="partUri" /> の正規化形式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri%2A> は大文字と小文字の `partUri` を大文字 (<xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType>) に正規化し、結果を返します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> は <see langword="null" /> です。</exception>
        <altmember cref="M:System.String.Normalize" />
        <altmember cref="T:System.Text.NormalizationForm" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> には有効な <see cref="T:System.Uri" /> 構文がありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPackageUri">
      <MemberSignature Language="C#" Value="public static Uri GetPackageUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPackageUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPackageUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPackageUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPackageUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPackageUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
      </Parameters>
      <Docs>
        <param name="packUri"><see cref="T:System.IO.Packaging.Package" />のURI を返すパック URI。</param>
        <summary>指定したパッケージの URI のパッケージ全体を指す内部 URI を返します。</summary>
        <returns>指定した <paramref name="packUri" /> の <see cref="T:System.IO.Packaging.Package" /> の URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表は、<xref:System.IO.Packaging.PackUriHelper.GetPackageUri%2A>のケース例を示しています。  
  
|`packUri`|返されたパッケージの URI|  
|---------------|--------------------------|  
|pack: http:、、mypackage、mydoc、またはを実行します。|`http://www.proseware.com/mypackage.xyz`|  
|pack:/http:、、mypackage、パッケージ .aspx %3 f/a/bar. .xaml|`http://www.proseware.com/packages.aspx?mypackage`|  
|pack: http:,, www. mypackage,|`http://www.proseware.com/mypackage.pkg`|  
|pack: ftp:、、ftp、mypackage1、パッケージ、および、/a/picture .jpg|`ftp://ftp.proseware.com/packages/mypackage1.abc`|  
|pack://file:,,, d:, packages, mypackage2/a/bar. .xaml|`file:///d:/packages/mypackage2.pkg`|  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.PackUriHelper.Create" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
        <exception cref="T:System.ArgumentNullException"><paramref name="packUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packUri" /> は絶対 <see cref="T:System.Uri" /> ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetPartUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPartUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPartUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPartUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPartUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
      </Parameters>
      <Docs>
        <param name="packUri"><see cref="T:System.IO.Packaging.PackagePart" /> URI を返す元のパック URI。</param>
        <summary>指定されたパック URI 内の <see cref="T:System.IO.Packaging.PackagePart" /> の URI を返します。</summary>
        <returns>指定された <paramref name="packUri" /> の <see cref="T:System.IO.Packaging.PackagePart" /> の URI、または <paramref name="packUri" /> が <see cref="T:System.IO.Packaging.PackagePart" /> の代わりのパッケージをポイントする場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返される <xref:System.IO.Packaging.PackagePart> URI は、パッケージルートに対して相対的であり、"/" で始まる絶対パスであり、 [Open パッケージング規約仕様](https://go.microsoft.com/fwlink/?LinkID=71255)で定義されている構文に準拠しています。  
  
 次の表は、<xref:System.IO.Packaging.PackUriHelper.GetPartUri%2A>のケース例を示しています。  
  
|`packUri`|返されたパーツの URI|  
|---------------|-----------------------|  
|pack: http:、、mypackage、mydoc、またはを実行します。|/a/mydoc.xaml|  
|pack:/http:、、mypackage、パッケージ .aspx %3 f/a/bar. .xaml|/a/bar.xaml|  
|pack: http:,, www. mypackage,|null|  
|pack: ftp:、、ftp、mypackage1、パッケージ、および、/a/picture .jpg|/a/picture.jpg|  
|pack://file:,,, d:, packages, mypackage2/a/bar. .xaml|/a/bar.xaml|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
        <exception cref="T:System.ArgumentNullException"><paramref name="packUri" /> が <see langword="null" /> の場合。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packUri" /> が絶対 <see cref="T:System.Uri" /> ではない場合。

または

<paramref name="packUri" /> に "pack://" スキームがありません。
          
または 
<paramref name="packUri" /> から抽出された partUri が、有効な partUri 構文に準拠していません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelationshipPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">関連する <see cref="P:System.IO.Packaging.PackagePart.Uri" /> の URI を返す <see cref="T:System.IO.Packaging.PackagePart" /> の <see cref="T:System.IO.Packaging.PackageRelationship" />。</param>
        <summary>指定した <see cref="T:System.IO.Packaging.PackagePart" /> に関連付けられているリレーションシップ パーツの URI を返します。</summary>
        <returns><paramref name="partUri" /> によって識別される <see cref="T:System.IO.Packaging.PackageRelationship" /> に関連付けられている <see cref="T:System.IO.Packaging.PackagePart" /> パーツの URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` は、<xref:System.IO.Packaging.Package> ("/") または <xref:System.IO.Packaging.PackageRelationship> パーツではない <xref:System.IO.Packaging.PackagePart> を識別する必要があります。  
  
 <xref:System.IO.Packaging.PackageRelationship> パーツの詳細については、「Open パッケージング規約の仕様」の「リレーションシップ」を[参照し9.3 てください。](https://go.microsoft.com/fwlink/?LinkID=71255)  
  
   
  
## Examples  
 [WPF におけるパッケージの URI](/dotnet/framework/wpf/app-development/pack-uris-in-wpf)  
  
 [パッケージ規則の仕様を開く](https://go.microsoft.com/fwlink/?LinkID=71255)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> 構文がパッケージ パーツ URI に対して有効ではありません。  
  
または 
 <paramref name="partUri" /> が絶対 URI です。  
  
または 
 <paramref name="partUri" /> がリレーションシップ パーツを参照しています。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelativeUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelativeUri (Uri sourcePartUri, Uri targetPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelativeUri(class System.Uri sourcePartUri, class System.Uri targetPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelativeUri (sourcePartUri As Uri, targetPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelativeUri(Uri ^ sourcePartUri, Uri ^ targetPartUri);" />
      <MemberSignature Language="F#" Value="static member GetRelativeUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelativeUri (sourcePartUri, targetPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">ソース パーツの URI。</param>
        <param name="targetPartUri">ターゲット パーツの URI。</param>
        <summary>指定した 2 つの <see cref="T:System.IO.Packaging.PackagePart" /> URI の間における相対 URI を返します。</summary>
        <returns><paramref name="sourcePartUri" /> から <paramref name="targetPartUri" /> への相対 URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表は、<xref:System.IO.Packaging.PackUriHelper.GetRelativeUri%2A>のケース例を示しています。  
  
|`sourcePartUri`|`targetPartUri`|返された相対 URI|  
|---------------------|---------------------|---------------------------|  
|/mydoc/markup/page.xml|/mydoc/markup/picture.jpg|picture.jpg|  
|/mydoc/markup/page.xml|/mydoc/picture.jpg|../picture.jpg|  
|/mydoc/markup/page.xml|/mydoc/images/picture.jpg|../images/picture.jpg|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourcePartUri" /> 、または <paramref name="targetPartUri" /> が <see langword="null" />です。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
        <exception cref="T:System.ArgumentException"><paramref name="sourcePartUri" /> または <paramref name="targetPartUri" /> には有効な <see cref="T:System.Uri" /> 構文がありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSourcePartUriFromRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetSourcePartUriFromRelationshipPartUri (Uri relationshipPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetSourcePartUriFromRelationshipPartUri(class System.Uri relationshipPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourcePartUriFromRelationshipPartUri (relationshipPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetSourcePartUriFromRelationshipPartUri(Uri ^ relationshipPartUri);" />
      <MemberSignature Language="F#" Value="static member GetSourcePartUriFromRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri relationshipPartUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="relationshipPartUri"><see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> を返すリレーションシップ パーツの URI。</param>
        <summary>指定した URI を持つ <see cref="T:System.IO.Packaging.PackageRelationship" /> から <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> を返します。</summary>
        <returns>指定した <paramref name="relationshipPartUri" /> を持つリレーションシップの <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> の <see cref="T:System.IO.Packaging.PackagePart" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 リレーションシップパーツの <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> プロパティは、<xref:System.IO.Packaging.PackagePart.Package%2A> ("/") または <xref:System.IO.Packaging.PackageRelationship>ではない <xref:System.IO.Packaging.PackagePart> を識別する必要があります。  
  
 たとえば、パッケージパーツ "/document.xaml.rels" が "/document.xaml.rels" というリレーションシップ _rels パーツのソース所有者である場合、"/files/_rels" の `relationshipPartUri` パラメーターを指定して <xref:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri%2A> を呼び出すと、"/files/" の <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> が返されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="relationshipPartUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="relationshipPartUri" /> が絶対 URI です。  
  
または 
 <paramref name="relationshipPartUri" /> 構文が <see cref="T:System.IO.Packaging.PackagePart" /> に対して有効ではありません。  
  
または 
 <paramref name="relationshipPartUri" /> がリレーションシップ パーツを参照していません。  
  
または 
リレーションシップ パーツの <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> が別のリレーションシップ パーツを参照しています (無効)。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
      </Docs>
    </Member>
    <Member MemberName="IsRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static bool IsRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRelationshipPartUri (partUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member IsRelationshipPartUri : Uri -&gt; bool" Usage="System.IO.Packaging.PackUriHelper.IsRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><see cref="T:System.IO.Packaging.PackageRelationship" /> パーツをチェックする URI。</param>
        <summary>指定した URI が <see cref="T:System.IO.Packaging.PackageRelationship" /> パーツの URI であるかどうかを示す値を返します。</summary>
        <returns><paramref name="partUri" /> が <see cref="T:System.IO.Packaging.PackageRelationship" /> パーツを識別する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
このメソッドは、パーツの内容を検査しません。名前にのみ基づいています。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> が絶対 URI です。  
  
または 
 <paramref name="partUri" /> が無効な <see cref="T:System.IO.Packaging.PackagePart" /> 構文です。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
      </Docs>
    </Member>
    <Member MemberName="ResolvePartUri">
      <MemberSignature Language="C#" Value="public static Uri ResolvePartUri (Uri sourcePartUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri ResolvePartUri(class System.Uri sourcePartUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResolvePartUri (sourcePartUri As Uri, targetUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ ResolvePartUri(Uri ^ sourcePartUri, Uri ^ targetUri);" />
      <MemberSignature Language="F#" Value="static member ResolvePartUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.ResolvePartUri (sourcePartUri, targetUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">ソース パーツの URI、または <see cref="T:System.IO.Packaging.Package" /> ルートを指定する "/"。</param>
        <param name="targetUri">ターゲット パーツへの相対 URI。</param>
        <summary>ソース パーツ URI と、ターゲット パーツへの相対パスを含む URI が指定されている場合に、パーツ URI を返します。</summary>
        <returns>指定した <paramref name="SourcePartUri" /> パラメーターと <paramref name="targetUri" /> パラメーターの間で解決されたターゲット パーツの URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表は、<xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A>のケース例を示しています。  
  
|`sourcePartUri`|`targetUri`|返された URI|  
|---------------------|-----------------|------------------|  
|/mydoc/markup/page.xml|picture.jpg|/mydoc/markup/picture.jpg|  
|/mydoc/markup/page.xml|images/picture.jpg|/mydoc/markup/images/picture.jpg|  
|/mydoc/markup/page.xml|./picture.jpg|/mydoc/markup/picture.jpg|  
|/mydoc/markup/page.xml|../picture.jpg|/mydoc/picture.jpg|  
|/mydoc/markup/page.xml|../images/picture.jpg|/mydoc/images/picture.jpg|  
|/|images/picture.jpg|/images/picture.jpg|  
  
   
  
## Examples  
 <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A> メソッドを使用する方法の例を次に示します。  完全なサンプルについては、「[パッケージサンプルの読み取り](https://go.microsoft.com/fwlink/?LinkID=160034)」を参照してください。  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourcePartUri" /> 、または <paramref name="targetUri" /> が <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="sourcePartUri" /> が有効なパーツ URI ではありません。  
  
または 
 <paramref name="targetUri" /> が有効な相対 URI ではありません。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">パッケージ規則の仕様を開く</related>
      </Docs>
    </Member>
    <Member MemberName="UriSchemePack">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemePack;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemePack" />
      <MemberSignature Language="DocId" Value="F:System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemePack As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemePack;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemePack : string" Usage="System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パック URI スキーム名 "pack" を定義します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
