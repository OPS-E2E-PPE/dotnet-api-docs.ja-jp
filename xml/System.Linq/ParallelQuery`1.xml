<Type Name="ParallelQuery&lt;TSource&gt;" FullName="System.Linq.ParallelQuery&lt;TSource&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cfc89d8dd66cc8f5d44b6e9a1c4385c0517c3c4d" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82490574" /></Metadata><TypeSignature Language="C#" Value="public class ParallelQuery&lt;TSource&gt; : System.Linq.ParallelQuery, System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParallelQuery`1&lt;TSource&gt; extends System.Linq.ParallelQuery implements class System.Collections.Generic.IEnumerable`1&lt;!TSource&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Linq.ParallelQuery`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ParallelQuery(Of TSource)&#xA;Inherits ParallelQuery&#xA;Implements IEnumerable(Of TSource)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TSource&gt;&#xA;public ref class ParallelQuery : System::Linq::ParallelQuery, System::Collections::Generic::IEnumerable&lt;TSource&gt;" />
  <TypeSignature Language="F#" Value="type ParallelQuery&lt;'Source&gt; = class&#xA;    inherit ParallelQuery&#xA;    interface seq&lt;'Source&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Core" FromVersion="4.0.0.0" To="System.Linq.Parallel" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="TSource" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Linq.ParallelQuery</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TSource&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TSource"><span data-ttu-id="29b5e-101">ソース シーケンス内の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29b5e-101">The type of element in the source sequence.</span></span></typeparam>
    <summary><span data-ttu-id="29b5e-102">並列シーケンスを表します。</span><span class="sxs-lookup"><span data-stu-id="29b5e-102">Represents a parallel sequence.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Linq.ParallelEnumerable" />
    <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29b5e-103">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29b5e-103">Parallel LINQ (PLINQ)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerator&lt;TSource&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!TSource&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelQuery`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;TSource&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'Source&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'Source&gt;" Usage="parallelQuery.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29b5e-104">シーケンスを反復処理する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="29b5e-104">Returns an enumerator that iterates through the sequence.</span></span></summary>
        <returns><span data-ttu-id="29b5e-105">シーケンスを反復処理する列挙子。</span><span class="sxs-lookup"><span data-stu-id="29b5e-105">An enumerator that iterates through the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29b5e-106">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29b5e-106">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
