<Type Name="ParallelEnumerable" FullName="System.Linq.ParallelEnumerable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="005df9e58dfa76e09596db5ba8195d4f53dfd248" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83537442" /></Metadata><TypeSignature Language="C#" Value="public static class ParallelEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ParallelEnumerable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Linq.ParallelEnumerable" />
  <TypeSignature Language="VB.NET" Value="Public Module ParallelEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParallelEnumerable abstract sealed" />
  <TypeSignature Language="F#" Value="type ParallelEnumerable = class" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Core" FromVersion="4.0.0.0" To="System.Linq.Parallel" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Linq.Parallel" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="29c9e-101">ParallelQuery{TSource} を実装するオブジェクトをクエリするための一連のメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-101">Provides a set of methods for querying objects that implement ParallelQuery{TSource}.</span></span> <span data-ttu-id="29c9e-102">これは、並列の <see cref="T:System.Linq.Enumerable" /> に相当します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-102">This is the parallel equivalent of <see cref="T:System.Linq.Enumerable" />.</span></span></summary>
    <remarks>To be added.</remarks>
    <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-103">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-103">Parallel LINQ (PLINQ)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Aggregate&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-104">シーケンスにアキュムレータ関数を並列で適用します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-104">Applies in parallel an accumulator function over a sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Aggregate&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Aggregate&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TSource,TSource&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Aggregate&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, !!TSource, !!TSource&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource) (source As ParallelQuery(Of TSource), func As Func(Of TSource, TSource, TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Aggregate(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TSource, TSource&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Source, 'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Aggregate (source, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="func" Type="System.Func&lt;TSource,TSource,TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-105"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-105">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-106">集計対象のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-106">A sequence to aggregate over.</span></span></param>
        <param name="func"><span data-ttu-id="29c9e-107">各要素に対して呼び出すアキュムレータ関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-107">An accumulator function to be invoked on each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-108">シーケンスにアキュムレータ関数を並列で適用します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-108">Applies in parallel an accumulator function over a sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-109">最終的なアキュムレータ値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-109">The final accumulator value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-110"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-110">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-111"><paramref name="source" /> または <paramref name="func" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-111"><paramref name="source" /> or <paramref name="func" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-112">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-112">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-113"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-113"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-114">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-114">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TSource,TAccumulate&gt;">
      <MemberSignature Language="C#" Value="public static TAccumulate Aggregate&lt;TSource,TAccumulate&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, TAccumulate seed, Func&lt;TAccumulate,TSource,TAccumulate&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TAccumulate Aggregate&lt;TSource, TAccumulate&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!TSource, !!TAccumulate&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource, TAccumulate) (source As ParallelQuery(Of TSource), seed As TAccumulate, func As Func(Of TAccumulate, TSource, TAccumulate)) As TAccumulate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TAccumulate&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TAccumulate Aggregate(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, TAccumulate seed, Func&lt;TAccumulate, TSource, TAccumulate&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.ParallelQuery&lt;'Source&gt; * 'Accumulate * Func&lt;'Accumulate, 'Source, 'Accumulate&gt; -&gt; 'Accumulate" Usage="System.Linq.ParallelEnumerable.Aggregate (source, seed, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TAccumulate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TAccumulate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Func&lt;TAccumulate,TSource,TAccumulate&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-115"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-115">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TAccumulate"><span data-ttu-id="29c9e-116">アキュムレータ値の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-116">The type of the accumulator value.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-117">集計対象のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-117">A sequence to aggregate over.</span></span></param>
        <param name="seed"><span data-ttu-id="29c9e-118">最初のアキュムレータ値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-118">The initial accumulator value.</span></span></param>
        <param name="func"><span data-ttu-id="29c9e-119">各要素に対して呼び出すアキュムレータ関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-119">An accumulator function to be invoked on each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-120">シーケンスにアキュムレータ関数を並列で適用します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-120">Applies in parallel an accumulator function over a sequence.</span></span> <span data-ttu-id="29c9e-121">指定されたシード値が最初のアキュムレータ値として使用されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-121">The specified seed value is used as the initial accumulator value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-122">最終的なアキュムレータ値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-122">The final accumulator value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-123"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-123">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-124"><paramref name="source" /> または <paramref name="func" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-124"><paramref name="source" /> or <paramref name="func" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-125">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-125">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-126"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-126"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-127">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-127">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TSource,TAccumulate,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Aggregate&lt;TSource,TAccumulate,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, TAccumulate seed, Func&lt;TAccumulate,TSource,TAccumulate&gt; func, Func&lt;TAccumulate,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Aggregate&lt;TSource, TAccumulate, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!TSource, !!TAccumulate&gt; func, class System.Func`2&lt;!!TAccumulate, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource, TAccumulate, TResult) (source As ParallelQuery(Of TSource), seed As TAccumulate, func As Func(Of TAccumulate, TSource, TAccumulate), resultSelector As Func(Of TAccumulate, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TAccumulate, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Aggregate(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, TAccumulate seed, Func&lt;TAccumulate, TSource, TAccumulate&gt; ^ func, Func&lt;TAccumulate, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.ParallelQuery&lt;'Source&gt; * 'Accumulate * Func&lt;'Accumulate, 'Source, 'Accumulate&gt; * Func&lt;'Accumulate, 'Result&gt; -&gt; 'Result" Usage="System.Linq.ParallelEnumerable.Aggregate (source, seed, func, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Func&lt;TAccumulate,TSource,TAccumulate&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TAccumulate,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-128"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-128">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TAccumulate"><span data-ttu-id="29c9e-129">アキュムレータ値の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-129">The type of the accumulator value.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-130">結果の値の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-130">The type of the resulting value.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-131">集計対象のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-131">A sequence to aggregate over.</span></span></param>
        <param name="seed"><span data-ttu-id="29c9e-132">最初のアキュムレータ値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-132">The initial accumulator value.</span></span></param>
        <param name="func"><span data-ttu-id="29c9e-133">各要素に対して呼び出すアキュムレータ関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-133">An accumulator function to be invoked on each element.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="29c9e-134">最終的なアキュムレータ値を結果値に変換する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-134">A function to transform the final accumulator value into the result value.</span></span></param>
        <summary><span data-ttu-id="29c9e-135">シーケンスにアキュムレータ関数を並列で適用します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-135">Applies in parallel an accumulator function over a sequence.</span></span> <span data-ttu-id="29c9e-136">指定したシード値は最初のアキュムレータ値として使用され、指定した関数は結果値の選択に使用されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-136">The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-137">変換された最終的なアキュムレータ値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-137">The transformed final accumulator value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-138"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-138">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-139"><paramref name="source" /> または <paramref name="func" /> または <paramref name="resultSelector" /> が null 参照 (Visual Basic の Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-139"><paramref name="source" /> or <paramref name="func" /> or <paramref name="resultSelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-140">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-140">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-141"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-141"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-142">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-142">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TSource,TAccumulate,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Aggregate&lt;TSource,TAccumulate,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TAccumulate&gt; seedFactory, Func&lt;TAccumulate,TSource,TAccumulate&gt; updateAccumulatorFunc, Func&lt;TAccumulate,TAccumulate,TAccumulate&gt; combineAccumulatorsFunc, Func&lt;TAccumulate,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Aggregate&lt;TSource, TAccumulate, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`1&lt;!!TAccumulate&gt; seedFactory, class System.Func`3&lt;!!TAccumulate, !!TSource, !!TAccumulate&gt; updateAccumulatorFunc, class System.Func`3&lt;!!TAccumulate, !!TAccumulate, !!TAccumulate&gt; combineAccumulatorsFunc, class System.Func`2&lt;!!TAccumulate, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource, TAccumulate, TResult) (source As ParallelQuery(Of TSource), seedFactory As Func(Of TAccumulate), updateAccumulatorFunc As Func(Of TAccumulate, TSource, TAccumulate), combineAccumulatorsFunc As Func(Of TAccumulate, TAccumulate, TAccumulate), resultSelector As Func(Of TAccumulate, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TAccumulate, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Aggregate(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TAccumulate&gt; ^ seedFactory, Func&lt;TAccumulate, TSource, TAccumulate&gt; ^ updateAccumulatorFunc, Func&lt;TAccumulate, TAccumulate, TAccumulate&gt; ^ combineAccumulatorsFunc, Func&lt;TAccumulate, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Accumulate&gt; * Func&lt;'Accumulate, 'Source, 'Accumulate&gt; * Func&lt;'Accumulate, 'Accumulate, 'Accumulate&gt; * Func&lt;'Accumulate, 'Result&gt; -&gt; 'Result" Usage="System.Linq.ParallelEnumerable.Aggregate (source, seedFactory, updateAccumulatorFunc, combineAccumulatorsFunc, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="seedFactory" Type="System.Func&lt;TAccumulate&gt;" />
        <Parameter Name="updateAccumulatorFunc" Type="System.Func&lt;TAccumulate,TSource,TAccumulate&gt;" />
        <Parameter Name="combineAccumulatorsFunc" Type="System.Func&lt;TAccumulate,TAccumulate,TAccumulate&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TAccumulate,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-143"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-143">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TAccumulate"><span data-ttu-id="29c9e-144">アキュムレータ値の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-144">The type of the accumulator value.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-145">結果の値の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-145">The type of the resulting value.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-146">集計対象のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-146">A sequence to aggregate over.</span></span></param>
        <param name="seedFactory"><span data-ttu-id="29c9e-147">最初のアキュムレータ値を返す関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-147">A function that returns the initial accumulator value.</span></span></param>
        <param name="updateAccumulatorFunc"><span data-ttu-id="29c9e-148">パーティション内の各要素に対して呼び出すアキュムレータ関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-148">An accumulator function to be invoked on each element in a partition.</span></span></param>
        <param name="combineAccumulatorsFunc"><span data-ttu-id="29c9e-149">各パーティションから返されたアキュムレータの結果に対して呼び出すアキュムレータ関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-149">An accumulator function to be invoked on the yielded accumulator result from each partition.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="29c9e-150">最終的なアキュムレータ値を結果値に変換する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-150">A function to transform the final accumulator value into the result value.</span></span></param>
        <summary><span data-ttu-id="29c9e-151">シーケンスにアキュムレータ関数を並列で適用します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-151">Applies in parallel an accumulator function over a sequence.</span></span> <span data-ttu-id="29c9e-152">このオーバーロードはシーケンシャルな実装では使用できません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-152">This overload is not available in the sequential implementation.</span></span></summary>
        <returns><span data-ttu-id="29c9e-153">変換された最終的なアキュムレータ値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-153">The transformed final accumulator value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-154">このオーバーロードは、並列化されたクエリに固有のものです。</span><span class="sxs-lookup"><span data-stu-id="29c9e-154">This overload is specific to parallelized queries.</span></span> <span data-ttu-id="29c9e-155">並列化されたクエリでは、データソースシーケンスが複数のサブシーケンス (パーティション) に分割されることがあります。</span><span class="sxs-lookup"><span data-stu-id="29c9e-155">A parallelized query may partition the data source sequence into several sub-sequences (partitions).</span></span> <span data-ttu-id="29c9e-156">`updateAccumulatorFunc` は、パーティション内の各要素に対して呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-156">The `updateAccumulatorFunc` is invoked on each element within partitions.</span></span> <span data-ttu-id="29c9e-157">各パーティションは、1つの累積結果を生成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-157">Each partition then yields a single accumulated result.</span></span> <span data-ttu-id="29c9e-158">次に、各パーティションの結果に対して `combineAccumulatorsFunc` が呼び出され、1つの要素が生成されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-158">The `combineAccumulatorsFunc` is then invoked on the results of each partition to yield a single element.</span></span> <span data-ttu-id="29c9e-159">この要素は、`resultSelector` 関数によって変換されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-159">This element is then transformed by the `resultSelector` function.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-160"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-160">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-161"><paramref name="source" /> または <paramref name="seedFactory" /> または <paramref name="updateAccumulatorFunc" /> または <paramref name="combineAccumulatorsFunc" /> または <paramref name="resultSelector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-161"><paramref name="source" /> or <paramref name="seedFactory" /> or <paramref name="updateAccumulatorFunc" /> or <paramref name="combineAccumulatorsFunc" /> or <paramref name="resultSelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-162">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-162">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-163"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-163"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-164">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-164">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TSource,TAccumulate,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Aggregate&lt;TSource,TAccumulate,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, TAccumulate seed, Func&lt;TAccumulate,TSource,TAccumulate&gt; updateAccumulatorFunc, Func&lt;TAccumulate,TAccumulate,TAccumulate&gt; combineAccumulatorsFunc, Func&lt;TAccumulate,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Aggregate&lt;TSource, TAccumulate, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!TSource, !!TAccumulate&gt; updateAccumulatorFunc, class System.Func`3&lt;!!TAccumulate, !!TAccumulate, !!TAccumulate&gt; combineAccumulatorsFunc, class System.Func`2&lt;!!TAccumulate, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource, TAccumulate, TResult) (source As ParallelQuery(Of TSource), seed As TAccumulate, updateAccumulatorFunc As Func(Of TAccumulate, TSource, TAccumulate), combineAccumulatorsFunc As Func(Of TAccumulate, TAccumulate, TAccumulate), resultSelector As Func(Of TAccumulate, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TAccumulate, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Aggregate(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, TAccumulate seed, Func&lt;TAccumulate, TSource, TAccumulate&gt; ^ updateAccumulatorFunc, Func&lt;TAccumulate, TAccumulate, TAccumulate&gt; ^ combineAccumulatorsFunc, Func&lt;TAccumulate, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.ParallelQuery&lt;'Source&gt; * 'Accumulate * Func&lt;'Accumulate, 'Source, 'Accumulate&gt; * Func&lt;'Accumulate, 'Accumulate, 'Accumulate&gt; * Func&lt;'Accumulate, 'Result&gt; -&gt; 'Result" Usage="System.Linq.ParallelEnumerable.Aggregate (source, seed, updateAccumulatorFunc, combineAccumulatorsFunc, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="updateAccumulatorFunc" Type="System.Func&lt;TAccumulate,TSource,TAccumulate&gt;" />
        <Parameter Name="combineAccumulatorsFunc" Type="System.Func&lt;TAccumulate,TAccumulate,TAccumulate&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TAccumulate,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-165"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-165">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TAccumulate"><span data-ttu-id="29c9e-166">アキュムレータ値の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-166">The type of the accumulator value.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-167">結果の値の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-167">The type of the resulting value.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-168">集計対象のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-168">A sequence to aggregate over.</span></span></param>
        <param name="seed"><span data-ttu-id="29c9e-169">最初のアキュムレータ値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-169">The initial accumulator value.</span></span></param>
        <param name="updateAccumulatorFunc"><span data-ttu-id="29c9e-170">パーティション内の各要素に対して呼び出すアキュムレータ関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-170">An accumulator function to be invoked on each element in a partition.</span></span></param>
        <param name="combineAccumulatorsFunc"><span data-ttu-id="29c9e-171">各パーティションから返されたアキュムレータの結果に対して呼び出すアキュムレータ関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-171">An accumulator function to be invoked on the yielded accumulator result from each partition.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="29c9e-172">最終的なアキュムレータ値を結果値に変換する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-172">A function to transform the final accumulator value into the result value.</span></span></param>
        <summary><span data-ttu-id="29c9e-173">シーケンスにアキュムレータ関数を並列で適用します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-173">Applies in parallel an accumulator function over a sequence.</span></span> <span data-ttu-id="29c9e-174">このオーバーロードはシーケンシャルな実装では使用できません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-174">This overload is not available in the sequential implementation.</span></span></summary>
        <returns><span data-ttu-id="29c9e-175">変換された最終的なアキュムレータ値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-175">The transformed final accumulator value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-176">このオーバーロードは、並列化されたクエリの処理に固有のものです。</span><span class="sxs-lookup"><span data-stu-id="29c9e-176">This overload is specific to processing a parallelized query.</span></span> <span data-ttu-id="29c9e-177">並列化されたクエリでは、データソースシーケンスが複数のサブシーケンス (パーティション) に分割されることがあります。</span><span class="sxs-lookup"><span data-stu-id="29c9e-177">A parallelized query may partition the data source sequence into several sub-sequences (partitions).</span></span> <span data-ttu-id="29c9e-178">`updateAccumulatorFunc` は、パーティション内の各要素に対して呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-178">The `updateAccumulatorFunc` is invoked on each element within partitions.</span></span> <span data-ttu-id="29c9e-179">各パーティションは、1つの累積結果を生成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-179">Each partition then yields a single accumulated result.</span></span> <span data-ttu-id="29c9e-180">次に、各パーティションの結果に対して `combineAccumulatorsFunc` が呼び出され、1つの要素が生成されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-180">The `combineAccumulatorsFunc` is then invoked on the results of each partition to yield a single element.</span></span> <span data-ttu-id="29c9e-181">この要素は、`resultSelector` 関数によって変換されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-181">This element is then transformed by the `resultSelector` function.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-182"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-182">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-183"><paramref name="source" /> または <paramref name="updateAccumulatorFunc" /> または <paramref name="combineAccumulatorsFunc" /> または <paramref name="resultSelector" /> が null 参照 (Visual Basic の Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-183"><paramref name="source" /> or <paramref name="updateAccumulatorFunc" /> or <paramref name="combineAccumulatorsFunc" /> or <paramref name="resultSelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-184">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-184">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-185"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-185"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-186">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-186">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="All&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool All&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool All&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool All(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.All (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-187"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-187">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-188">述語を適用する要素を格納するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-188">A sequence whose elements to apply the predicate to.</span></span></param>
        <param name="predicate"><span data-ttu-id="29c9e-189">各要素が条件を満たしているかどうかをテストする関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-189">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="29c9e-190">シーケンスのすべての要素が条件を満たしているかどうかを並列で判断します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-190">Determines in parallel whether all elements of a sequence satisfy a condition.</span></span></summary>
        <returns><span data-ttu-id="29c9e-191">指定された述語でソース シーケンスのすべての要素がテストに合格する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-191"><see langword="true" /> if every element of the source sequence passes the test in the specified predicate, or if the sequence is empty; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-192"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-192">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-193"><paramref name="source" /> または <paramref name="predicate" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-193"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-194">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-194">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-195">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-195">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Any&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-196">並列シーケンスに要素が含まれているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-196">Determines whether a parallel sequence contains any elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Any&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of TSource) (source As ParallelQuery(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Any : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.Any source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-197"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-197">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-198">空かどうかを確認するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-198">The sequence to check for emptiness.</span></span></param>
        <summary><span data-ttu-id="29c9e-199">並列シーケンスに要素が含まれているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-199">Determines whether a parallel sequence contains any elements.</span></span></summary>
        <returns><span data-ttu-id="29c9e-200">ソース シーケンスに要素が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-200"><see langword="true" /> if the source sequence contains any elements; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-201">任意のメソッドのこのオーバーロードにより、結果が返される前に、完全にバッファリングされたマージが実行されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-201">This overload of the Any method causes a fully-buffered merge to be performed before the result is returned.</span></span> <span data-ttu-id="29c9e-202">マージ動作がパフォーマンスに影響を与えるか、大きな列挙体でメモリ不足の例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="29c9e-202">The merge behavior can impact performance or cause an out of memory exception in large enumerables.</span></span> <span data-ttu-id="29c9e-203">マージ動作を回避するには、Func パラメーターを受け取る任意ののオーバーロードを使用するか、FirstOrDefault などの別のメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-203">To avoid the merge behavior, use the overload of Any that takes a Func parameter, or else use an alternative method such as FirstOrDefault.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-204"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-204">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-205"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-205"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-206">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-206">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-207">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-207">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.Any (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-208"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-208">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-209">述語を適用する要素を格納するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-209">A sequence to whose elements the predicate will be applied.</span></span></param>
        <param name="predicate"><span data-ttu-id="29c9e-210">各要素が条件を満たしているかどうかをテストする関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-210">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="29c9e-211">シーケンスのいずれかの要素が条件を満たしているかどうかを並列で判断します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-211">Determines in parallel whether any element of a sequence satisfies a condition.</span></span></summary>
        <returns><span data-ttu-id="29c9e-212">指定された述語でソース シーケンスの要素がテストに合格する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-212"><see langword="true" /> if any elements in the source sequence pass the test in the specified predicate; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-213"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-213">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-214"><paramref name="source" /> または <paramref name="predicate" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-214"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-215">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-215">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-216">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-216">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AsEnumerable&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TSource&gt; AsEnumerable&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; AsEnumerable&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsEnumerable(Of TSource) (source As ParallelQuery(Of TSource)) As IEnumerable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ AsEnumerable(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsEnumerable : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; seq&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.AsEnumerable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-217"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-217">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-218"><see cref="T:System.Collections.Generic.IEnumerable`1" /> としてキャストするシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-218">The sequence to cast as <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span></span></param>
        <summary><span data-ttu-id="29c9e-219"><see cref="T:System.Linq.ParallelQuery`1" /> を <see cref="T:System.Collections.Generic.IEnumerable`1" /> に変換して、クエリの順次評価を強制的に実行します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-219">Converts a <see cref="T:System.Linq.ParallelQuery`1" /> into an <see cref="T:System.Collections.Generic.IEnumerable`1" /> to force sequential evaluation of the query.</span></span></summary>
        <returns><span data-ttu-id="29c9e-220"><see cref="T:System.Collections.Generic.IEnumerable`1" /> として型指定された入力シーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-220">The input sequence typed as <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-221"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-221"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-222">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-222">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AsOrdered">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery AsOrdered (this System.Linq.ParallelQuery source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery AsOrdered(class System.Linq.ParallelQuery source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsOrdered (source As ParallelQuery) As ParallelQuery" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery ^ AsOrdered(System::Linq::ParallelQuery ^ source);" />
      <MemberSignature Language="F#" Value="static member AsOrdered : System.Linq.ParallelQuery -&gt; System.Linq.ParallelQuery" Usage="System.Linq.ParallelEnumerable.AsOrdered source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-223">入力シーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-223">The input sequence.</span></span></param>
        <summary><span data-ttu-id="29c9e-224">既定の順序なしの状態をオーバーライドして、データ ソースを順序ありとして扱うことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-224">Enables treatment of a data source as if it were ordered, overriding the default of unordered.</span></span> <span data-ttu-id="29c9e-225">AsOrdered は、AsParallel、ParallelEnumerable.Range、および ParallelEnumerable.Repeat によって返された非ジェネリック シーケンスでのみ呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-225">AsOrdered may only be invoked on non-generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.</span></span></summary>
        <returns><span data-ttu-id="29c9e-226">元の順序を以降のクエリ演算子の中で保持するソース シーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-226">The source sequence which will maintain the original ordering in the subsequent query operators.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-227">並列処理では、パフォーマンスと保持順序の間に自然なテンションが存在します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-227">A natural tension exists between performance and preserving order in parallel processing.</span></span> <span data-ttu-id="29c9e-228">既定では、並列化されたクエリは、AsOrdered が適用されているか、クエリ内に明示的な OrderBy 演算子が存在しない限り、結果の順序が任意であるかのように動作します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-228">By default, a parallelized query behaves as if the ordering of the results is arbitrary unless AsOrdered is applied or there is an explicit OrderBy operator in the query.</span></span> <span data-ttu-id="29c9e-229">詳細については、「[Order Preservation in PLINQ (PLINQ における順序維持)](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-229">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-230"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-230"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-231"><paramref name="source" /> に要素が含まれない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-231">thrown if <paramref name="source" /> contains no elements</span></span> 
<span data-ttu-id="29c9e-232">または</span><span class="sxs-lookup"><span data-stu-id="29c9e-232">-or-</span></span> 
<span data-ttu-id="29c9e-233">AsOrdered がクエリの実行中に呼び出された場合。</span><span class="sxs-lookup"><span data-stu-id="29c9e-233">if AsOrdered is called midway through a query.</span></span> <span data-ttu-id="29c9e-234"><see cref="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />、<see cref="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" />、または <see cref="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" /> の直後に呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-234">It is allowed to be called immediately after <see cref="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />, <see cref="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" /> or <see cref="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-235">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-235">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AsOrdered&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; AsOrdered&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; AsOrdered&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsOrdered(Of TSource) (source As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ AsOrdered(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsOrdered : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.AsOrdered source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-236"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-236">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-237">入力シーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-237">The input sequence.</span></span></param>
        <summary><span data-ttu-id="29c9e-238">既定の順序なしの状態をオーバーライドして、データ ソースを順序ありとして扱うことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-238">Enables treatment of a data source as if it were ordered, overriding the default of unordered.</span></span> <span data-ttu-id="29c9e-239">AsOrdered は、AsParallel、ParallelEnumerable.Range、および ParallelEnumerable.Repeat によって返されたジェネリック シーケンスでのみ呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-239">AsOrdered may only be invoked on generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.</span></span></summary>
        <returns><span data-ttu-id="29c9e-240">元の順序を以降のクエリ演算子の中で保持するソース シーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-240">The source sequence which will maintain the original ordering in the subsequent query operators.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-241">並列処理では、パフォーマンスと保持順序の間に自然なテンションが存在します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-241">A natural tension exists between performance and preserving order in parallel processing.</span></span> <span data-ttu-id="29c9e-242">既定では、並列化されたクエリは、AsOrdered が適用されているか、クエリ内に明示的な OrderBy 演算子が存在しない限り、結果の順序が任意であるかのように動作します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-242">By default, a parallelized query behaves as if the ordering of the results is arbitrary unless AsOrdered is applied or there is an explicit OrderBy operator in the query.</span></span> <span data-ttu-id="29c9e-243">詳細については、「[Order Preservation in PLINQ (PLINQ における順序維持)](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-243">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-244"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-244"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-245"><paramref name="source" /> に要素が含まれない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-245">Thrown if <paramref name="source" /> contains no elements</span></span> 
<span data-ttu-id="29c9e-246">または</span><span class="sxs-lookup"><span data-stu-id="29c9e-246">-or-</span></span> 
<span data-ttu-id="29c9e-247"><paramref name="source" /> が AsParallel、ParallelEnumerable.Range、ParallelEnumerable.Repeat のいずれでもない場合。</span><span class="sxs-lookup"><span data-stu-id="29c9e-247">if <paramref name="source" /> is not one of AsParallel, ParallelEnumerable.Range, or ParallelEnumerable.Repeat.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-248">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-248">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AsParallel">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-249">クエリの並列化を有効にします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-249">Enables parallelization of a query.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-250">このメソッドは、クエリを PLINQ にバインドします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-250">This method binds the query to PLINQ.</span></span> <span data-ttu-id="29c9e-251">詳細については、「[Parallel LINQ (PLINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-251">For more information, see [Parallel LINQ (PLINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AsParallel">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery AsParallel (this System.Collections.IEnumerable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery AsParallel(class System.Collections.IEnumerable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsParallel (source As IEnumerable) As ParallelQuery" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery ^ AsParallel(System::Collections::IEnumerable ^ source);" />
      <MemberSignature Language="F#" Value="static member AsParallel : System.Collections.IEnumerable -&gt; System.Linq.ParallelQuery" Usage="System.Linq.ParallelEnumerable.AsParallel source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.IEnumerable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-252"><see cref="T:System.Linq.ParallelQuery" /> に変換する <see cref="T:System.Collections.Generic.IEnumerable`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-252">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to convert to a <see cref="T:System.Linq.ParallelQuery" />.</span></span></param>
        <summary><span data-ttu-id="29c9e-253">クエリの並列化を有効にします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-253">Enables parallelization of a query.</span></span></summary>
        <returns><span data-ttu-id="29c9e-254">ParallelEnumerable 拡張メソッドにバインドされる ParallelQuery としての source。</span><span class="sxs-lookup"><span data-stu-id="29c9e-254">The source as a ParallelQuery to bind to ParallelEnumerable extension methods.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-255"><xref:System.Linq.ParallelEnumerable.Cast%2A> 演算子を使用すると、ParallelQuery を ParallelQuery (T) に変換できます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-255">The <xref:System.Linq.ParallelEnumerable.Cast%2A> operator can be used to convert a ParallelQuery to a ParallelQuery(T).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-256"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-256"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-257">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-257">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AsParallel&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; AsParallel&lt;TSource&gt; (this System.Collections.Concurrent.Partitioner&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; AsParallel&lt;TSource&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsParallel(Of TSource) (source As Partitioner(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ AsParallel(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsParallel : System.Collections.Concurrent.Partitioner&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.AsParallel source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-258"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-258">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-259">入力シーケンスに対するパーティショナー。</span><span class="sxs-lookup"><span data-stu-id="29c9e-259">A partitioner over the input sequence.</span></span></param>
        <summary><span data-ttu-id="29c9e-260">入力シーケンスを複数のパーティションに分割するカスタム パーティショナーによって供給されるクエリの並列化を有効にします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-260">Enables parallelization of a query, as sourced by a custom partitioner that is responsible for splitting the input sequence into partitions.</span></span></summary>
        <returns><span data-ttu-id="29c9e-261">ParallelEnumerable 拡張メソッドにバインドされる ParallelQuery としての <paramref name="source" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-261">The <paramref name="source" /> as a ParallelQuery to bind to ParallelEnumerable extension methods.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-262">ソースパーティショナーの GetOrderedPartitions メソッドは、順序付けが有効な場合に使用されます。一方、順序が有効になっていない場合 (既定)、パーティショナーの GetPartitions が使用されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-262">The source partitioner's GetOrderedPartitions method is used when ordering is enabled, whereas the partitioner's GetPartitions is used if ordering is not enabled (the default).</span></span> <span data-ttu-id="29c9e-263">ソースパーティショナーの GetDynamicPartitions と GetDynamicOrderedPartitions は使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-263">The source partitioner's GetDynamicPartitions and GetDynamicOrderedPartitions are not used.</span></span> <span data-ttu-id="29c9e-264">詳細と例については、「[カスタムパーティショナー FOR PLINQ AND TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-264">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-265"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-265"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-266">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-266">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AsParallel&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; AsParallel&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; AsParallel&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsParallel(Of TSource) (source As IEnumerable(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ AsParallel(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsParallel : seq&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.AsParallel source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-267"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-267">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-268"><see cref="T:System.Linq.ParallelQuery`1" /> に変換する <see cref="T:System.Collections.Generic.IEnumerable`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-268">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to convert to a <see cref="T:System.Linq.ParallelQuery`1" />.</span></span></param>
        <summary><span data-ttu-id="29c9e-269">クエリの並列化を有効にします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-269">Enables parallelization of a query.</span></span></summary>
        <returns><span data-ttu-id="29c9e-270">ParallelEnumerable 拡張メソッドにバインドされる <see cref="T:System.Linq.ParallelQuery`1" /> としての source。</span><span class="sxs-lookup"><span data-stu-id="29c9e-270">The source as a <see cref="T:System.Linq.ParallelQuery`1" /> to bind to ParallelEnumerable extension methods.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-271"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-271"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-272">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-272">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AsSequential&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TSource&gt; AsSequential&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; AsSequential&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsSequential(Of TSource) (source As ParallelQuery(Of TSource)) As IEnumerable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ AsSequential(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsSequential : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; seq&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.AsSequential source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-273"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-273">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-274"><see cref="T:System.Collections.Generic.IEnumerable`1" /> に変換する <see cref="T:System.Linq.ParallelQuery`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-274">A <see cref="T:System.Linq.ParallelQuery`1" /> to convert to an <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span></span></param>
        <summary><span data-ttu-id="29c9e-275"><see cref="T:System.Linq.ParallelQuery`1" /> を <see cref="T:System.Collections.Generic.IEnumerable`1" /> に変換して、クエリの順次評価を強制的に実行します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-275">Converts a <see cref="T:System.Linq.ParallelQuery`1" /> into an <see cref="T:System.Collections.Generic.IEnumerable`1" /> to force sequential evaluation of the query.</span></span></summary>
        <returns><span data-ttu-id="29c9e-276">順次拡張メソッドにバインドされる <see cref="T:System.Collections.Generic.IEnumerable`1" /> としての source。</span><span class="sxs-lookup"><span data-stu-id="29c9e-276">The source as an <see cref="T:System.Collections.Generic.IEnumerable`1" /> to bind to sequential extension methods.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-277">詳細については、「 [plinq での順序の保持](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)」と「[方法: Plinq クエリで順序を制御する](~/docs/standard/parallel-programming/how-to-control-ordering-in-a-plinq-query.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-277">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md) and [How to: Control Ordering in a PLINQ Query](~/docs/standard/parallel-programming/how-to-control-ordering-in-a-plinq-query.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-278"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-278"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-279">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-279">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AsUnordered&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; AsUnordered&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; AsUnordered&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsUnordered(Of TSource) (source As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ AsUnordered(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsUnordered : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.AsUnordered source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-280"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-280">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-281">入力シーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-281">The input sequence.</span></span></param>
        <summary><span data-ttu-id="29c9e-282">中間クエリを、要素間の明示的な順序付けが行われていないものとして扱うことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-282">Allows an intermediate query to be treated as if no ordering is implied among the elements.</span></span></summary>
        <returns><span data-ttu-id="29c9e-283">任意の順序のソース シーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-283">The source sequence with arbitrary order.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-284">AsUnordered 替えは、クエリの一部で順序付けが不要な場合に、パフォーマンス上の利点を提供する場合があります。</span><span class="sxs-lookup"><span data-stu-id="29c9e-284">AsUnordered may provide performance benefits when ordering is not required in a portion of a query.</span></span> <span data-ttu-id="29c9e-285">既定では、OrderBy または AsOrdered が指定されていない限り、PLINQ は入力シーケンスを順序なしとして扱います。</span><span class="sxs-lookup"><span data-stu-id="29c9e-285">By default, PLINQ treats an input sequence as unordered unless OrderBy or AsOrdered is specified.</span></span> <span data-ttu-id="29c9e-286">ただし、順序付けが有効になっていて、不要になった場合は、AsUnordered を使用して、中間クエリでこれを無効にすることができます。これにより、パフォーマンスが向上する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="29c9e-286">However, if ordering was turned on and is no longer needed, then AsUnordered can be used to turn it off in mid-query, and this may result in performance benefits.</span></span> <span data-ttu-id="29c9e-287">AsUnordered なしの演算子自体は、ソースシーケンスのシャッフルを行いません。これは、後続の演算子の順序の要件を単純に削除します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-287">The AsUnordered operator itself does not shuffle the source sequence; it simply removes the ordering requirement for subsequent operators.</span></span> <span data-ttu-id="29c9e-288">ソースが順序付けされている場合、後続の演算子はその順序を維持する方が効率的な場合があります。</span><span class="sxs-lookup"><span data-stu-id="29c9e-288">If the source is ordered, subsequent operators might keep that ordering if it is more efficient to do so.</span></span> <span data-ttu-id="29c9e-289">AsUnordered は、クエリ内の任意の場所で呼び出すことができます。AsParallel の直後に呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-289">AsUnordered can be called anywhere in the query; it does not need to be called immediately after AsParallel.</span></span> <span data-ttu-id="29c9e-290">詳細については、「plinq[での高速化の概要](~/docs/standard/parallel-programming/understanding-speedup-in-plinq.md)」および「 [Plinq での順序の保持](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-290">For more information, see [Understanding Speedup in PLINQ](~/docs/standard/parallel-programming/understanding-speedup-in-plinq.md) and [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-291"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-291"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-292">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-292">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Average">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-293">値のシーケンスの平均値を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-293">Computes in parallel the average of a sequence of values.</span></span></summary>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-294">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-294">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static decimal Average (this System.Linq.ParallelQuery&lt;decimal&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Average(class System.Linq.ParallelQuery`1&lt;valuetype System.Decimal&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Average(System::Linq::ParallelQuery&lt;System::Decimal&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Decimal&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-295">平均値の計算に使用される値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-295">A sequence of values that are used to calculate an average.</span></span></param>
        <summary><span data-ttu-id="29c9e-296">値のシーケンスの平均値を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-296">Computes in parallel the average of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-297">値のシーケンスの平均値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-297">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-298"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-298">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-299"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-299"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-300">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-300">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-301"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-301"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-302">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-302">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.ParallelQuery&lt;double&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.ParallelQuery`1&lt;float64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::ParallelQuery&lt;double&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-303">平均値の計算に使用される値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-303">A sequence of values that are used to calculate an average.</span></span></param>
        <summary><span data-ttu-id="29c9e-304">値のシーケンスの平均値を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-304">Computes in parallel the average of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-305">値のシーケンスの平均値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-305">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-306"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-306">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-307"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-307"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-308">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-308">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-309"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-309"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-310">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-310">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.ParallelQuery&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.ParallelQuery`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Integer)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::ParallelQuery&lt;int&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;int&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-311">平均値の計算に使用される値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-311">A sequence of values that are used to calculate an average.</span></span></param>
        <summary><span data-ttu-id="29c9e-312">値のシーケンスの平均値を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-312">Computes in parallel the average of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-313">値のシーケンスの平均値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-313">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-314"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-314">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-315"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-315"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-316">シーケンス内の要素の合計または数が <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-316">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="29c9e-317">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-317">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-318"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-318"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-319">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-319">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.ParallelQuery&lt;long&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.ParallelQuery`1&lt;int64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Long)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::ParallelQuery&lt;long&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;int64&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int64&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-320">平均値の計算に使用される値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-320">A sequence of values that are used to calculate an average.</span></span></param>
        <summary><span data-ttu-id="29c9e-321">値のシーケンスの平均値を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-321">Computes in parallel the average of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-322">値のシーケンスの平均値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-322">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-323"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-323">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-324"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-324"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-325">シーケンス内の要素の合計または数が <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-325">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="29c9e-326">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-326">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-327"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-327"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-328">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-328">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static decimal? Average (this System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Average(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Average(System::Linq::ParallelQuery&lt;Nullable&lt;System::Decimal&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Decimal&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-329">平均値の計算に使用される値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-329">A sequence of values that are used to calculate an average.</span></span></param>
        <summary><span data-ttu-id="29c9e-330">値のシーケンスの平均値を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-330">Computes in parallel the average of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-331">値のシーケンスの平均値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-331">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-332"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-332">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-333"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-333"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-334">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-334">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-335"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-335"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-336">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-336">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double? Average (this System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::ParallelQuery&lt;Nullable&lt;double&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Double&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-337">ソース シーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-337">The source sequence.</span></span></param>
        <summary><span data-ttu-id="29c9e-338">値のシーケンスの平均値を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-338">Computes in parallel the average of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-339">値のシーケンスの平均値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-339">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-340"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-340">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-341"><paramref name="source" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-341"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-342">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-342">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-343"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-343"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-344">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-344">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double? Average (this System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Nullable(Of Integer))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::ParallelQuery&lt;Nullable&lt;int&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int32&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-345">平均値の計算に使用される値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-345">A sequence of values that are used to calculate an average.</span></span></param>
        <summary><span data-ttu-id="29c9e-346">値のシーケンスの平均値を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-346">Computes in parallel the average of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-347">値のシーケンスの平均値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-347">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-348"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-348">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-349"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-349"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-350">シーケンス内の要素の合計または数が <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-350">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="29c9e-351">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-351">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-352"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-352"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-353">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-353">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double? Average (this System.Linq.ParallelQuery&lt;Nullable&lt;long&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Nullable(Of Long))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::ParallelQuery&lt;Nullable&lt;long&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int64&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-354">平均値の計算に使用される値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-354">A sequence of values that are used to calculate an average.</span></span></param>
        <summary><span data-ttu-id="29c9e-355">値のシーケンスの平均値を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-355">Computes in parallel the average of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-356">値のシーケンスの平均値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-356">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-357"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-357">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-358"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-358"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-359">シーケンス内の要素の合計または数が <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-359">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="29c9e-360">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-360">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-361"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-361"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-362">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-362">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static float? Average (this System.Linq.ParallelQuery&lt;Nullable&lt;float&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Average(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Average(System::Linq::ParallelQuery&lt;Nullable&lt;float&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Single&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-363">平均値の計算に使用される値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-363">A sequence of values that are used to calculate an average.</span></span></param>
        <summary><span data-ttu-id="29c9e-364">値のシーケンスの平均値を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-364">Computes in parallel the average of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-365">値のシーケンスの平均値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-365">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-366"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-366">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-367"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-367"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-368">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-368">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-369"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-369"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-370">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-370">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static float Average (this System.Linq.ParallelQuery&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Average(class System.Linq.ParallelQuery`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Average(System::Linq::ParallelQuery&lt;float&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-371">平均値の計算に使用される値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-371">A sequence of values that are used to calculate an average.</span></span></param>
        <summary><span data-ttu-id="29c9e-372">値のシーケンスの平均値を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-372">Computes in parallel the average of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-373">値のシーケンスの平均値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-373">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-374"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-374">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-375"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-375"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-376">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-376">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-377"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-377"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-378">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-378">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,decimal&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Decimal&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, System::Decimal&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-379"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-379">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-380">平均値の計算に使用される値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-380">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-381">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-381">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-382">入力シーケンスの各要素に対して変換関数を呼び出すことによって取得される値のシーケンスの平均値を、並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-382">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-383">値のシーケンスの平均値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-383">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-384"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-384">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-385"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-385"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-386">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-386">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-387"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-387"><paramref name="source" /> contains no elements.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="29c9e-388">(内部例外として <see cref="T:System.AggregateException" /> でスローされます)。</span><span class="sxs-lookup"><span data-stu-id="29c9e-388">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span></span> <span data-ttu-id="29c9e-389"><paramref name="selector" /> 関数は、その要素型の MaxValue より大きい値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-389">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-390">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-390">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,double&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, double&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Double&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-391"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-391">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-392">平均値の計算に使用される値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-392">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-393">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-393">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-394">入力シーケンスの各要素に対して変換関数を呼び出すことによって取得される値のシーケンスの平均値を、並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-394">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-395">値のシーケンスの平均値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-395">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-396"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-396">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-397"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-397"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-398">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-398">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-399"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-399"><paramref name="source" /> contains no elements.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="29c9e-400">(内部例外として <see cref="T:System.AggregateException" /> でスローされます)。</span><span class="sxs-lookup"><span data-stu-id="29c9e-400">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span></span> <span data-ttu-id="29c9e-401"><paramref name="selector" /> 関数は、その要素型の MaxValue より大きい値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-401">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-402">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-402">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Integer)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-403"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-403">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-404">平均値の計算に使用される値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-404">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-405">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-405">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-406">入力シーケンスの各要素に対して変換関数を呼び出すことによって取得される値のシーケンスの平均値を、並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-406">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-407">値のシーケンスの平均値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-407">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-408"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-408">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-409"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-409"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-410">シーケンス内の要素の合計または数が <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-410">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="29c9e-411">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-411">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-412"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-412"><paramref name="source" /> contains no elements.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="29c9e-413">(内部例外として <see cref="T:System.AggregateException" /> でスローされます)。</span><span class="sxs-lookup"><span data-stu-id="29c9e-413">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span></span> <span data-ttu-id="29c9e-414"><paramref name="selector" /> 関数は、その要素型の MaxValue より大きい値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-414">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-415">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-415">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,long&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Long)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, long&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int64&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-416"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-416">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-417">平均値の計算に使用される値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-417">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-418">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-418">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-419">入力シーケンスの各要素に対して変換関数を呼び出すことによって取得される値のシーケンスの平均値を、並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-419">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-420">値のシーケンスの平均値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-420">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-421"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-421">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-422"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-422"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-423">シーケンス内の要素の合計または数が <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-423">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="29c9e-424">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-424">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-425"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-425"><paramref name="source" /> contains no elements.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="29c9e-426">(内部例外として <see cref="T:System.AggregateException" /> でスローされます)。</span><span class="sxs-lookup"><span data-stu-id="29c9e-426">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span></span> <span data-ttu-id="29c9e-427"><paramref name="selector" /> 関数は、その要素型の MaxValue より大きい値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-427">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-428">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-428">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal? Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;decimal&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;System::Decimal&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Decimal&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-429"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-429">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-430">平均値の計算に使用される値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-430">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-431">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-431">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-432">入力シーケンスの各要素に対して変換関数を呼び出すことによって取得される値のシーケンスの平均値を、並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-432">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-433">値のシーケンスの平均値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-433">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-434"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-434">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-435"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-435"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-436">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-436">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-437"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-437"><paramref name="source" /> contains no elements.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="29c9e-438">(内部例外として <see cref="T:System.AggregateException" /> でスローされます)。</span><span class="sxs-lookup"><span data-stu-id="29c9e-438">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span></span> <span data-ttu-id="29c9e-439"><paramref name="selector" /> 関数は、その要素型の MaxValue より大きい値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-439">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-440">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-440">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double? Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;double&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;double&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-441"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-441">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-442">平均値の計算に使用される値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-442">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-443">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-443">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-444">入力シーケンスの各要素に対して変換関数を呼び出すことによって取得される値のシーケンスの平均値を、並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-444">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-445">値のシーケンスの平均値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-445">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-446"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-446">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-447"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-447"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-448">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-448">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-449"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-449"><paramref name="source" /> contains no elements.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="29c9e-450">(内部例外として <see cref="T:System.AggregateException" /> でスローされます)。</span><span class="sxs-lookup"><span data-stu-id="29c9e-450">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span></span> <span data-ttu-id="29c9e-451"><paramref name="selector" /> 関数は、その要素型の MaxValue より大きい値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-451">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-452">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-452">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double? Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;int&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Integer))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;int&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-453"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-453">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-454">平均値の計算に使用される値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-454">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-455">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-455">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-456">入力シーケンスの各要素に対して変換関数を呼び出すことによって取得される値のシーケンスの平均値を、並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-456">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-457">値のシーケンスの平均値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-457">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-458"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-458">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-459"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-459"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-460">シーケンス内の要素の合計または数が <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-460">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="29c9e-461">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-461">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-462"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-462"><paramref name="source" /> contains no elements.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="29c9e-463">(内部例外として <see cref="T:System.AggregateException" /> でスローされます)。</span><span class="sxs-lookup"><span data-stu-id="29c9e-463">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span></span> <span data-ttu-id="29c9e-464"><paramref name="selector" /> 関数は、その要素型の MaxValue より大きい値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-464">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-465">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-465">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double? Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;long&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Long))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;long&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int64&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-466"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-466">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-467">平均値の計算に使用される値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-467">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-468">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-468">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-469">入力シーケンスの各要素に対して変換関数を呼び出すことによって取得される値のシーケンスの平均値を、並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-469">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-470">値のシーケンスの平均値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-470">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-471"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-471">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-472"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-472"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-473">シーケンス内の要素の合計または数が <see cref="F:System.Int64.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-473">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int64.MaxValue" />.</span></span> <span data-ttu-id="29c9e-474">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-474">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-475"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-475"><paramref name="source" /> contains no elements.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="29c9e-476">(内部例外として <see cref="T:System.AggregateException" /> でスローされます)。</span><span class="sxs-lookup"><span data-stu-id="29c9e-476">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span></span> <span data-ttu-id="29c9e-477"><paramref name="selector" /> 関数は、その要素型の MaxValue より大きい値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-477">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-478">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-478">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float? Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;float&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;float&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-479"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-479">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-480">平均値の計算に使用される値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-480">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-481">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-481">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-482">入力シーケンスの各要素に対して変換関数を呼び出すことによって取得される値のシーケンスの平均値を、並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-482">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-483">値のシーケンスの平均値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-483">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-484"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-484">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-485"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-485"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-486">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-486">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-487"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-487"><paramref name="source" /> contains no elements.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="29c9e-488">(内部例外として <see cref="T:System.AggregateException" /> でスローされます)。</span><span class="sxs-lookup"><span data-stu-id="29c9e-488">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span></span> <span data-ttu-id="29c9e-489"><paramref name="selector" /> 関数は、その要素型の MaxValue より大きい値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-489">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-490">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-490">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,float&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, float&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Single&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-491"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-491">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-492">平均値の計算に使用される値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-492">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-493">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-493">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-494">入力シーケンスの各要素に対して変換関数を呼び出すことによって取得される値のシーケンスの平均値を、並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-494">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-495">値のシーケンスの平均値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-495">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-496"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-496">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-497"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-497"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-498">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-498">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-499"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-499"><paramref name="source" /> contains no elements.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="29c9e-500">(内部例外として <see cref="T:System.AggregateException" /> でスローされます)。</span><span class="sxs-lookup"><span data-stu-id="29c9e-500">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span></span> <span data-ttu-id="29c9e-501"><paramref name="selector" /> 関数は、その要素型の MaxValue より大きい値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-501">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-502">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-502">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Cast&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Cast&lt;TResult&gt; (this System.Linq.ParallelQuery source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Cast&lt;TResult&gt;(class System.Linq.ParallelQuery source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Cast(Of TResult) (source As ParallelQuery) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Cast(System::Linq::ParallelQuery ^ source);" />
      <MemberSignature Language="F#" Value="static member Cast : System.Linq.ParallelQuery -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Cast source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="29c9e-503"><paramref name="source" /> の要素の変換後の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-503">The type to convert the elements of <paramref name="source" /> to.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-504">変換する要素が格納されているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-504">The sequence that contains the elements to be converted.</span></span></param>
        <summary><span data-ttu-id="29c9e-505">ParallelQuery の要素を指定した型に変換します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-505">Converts the elements of a ParallelQuery to the specified type.</span></span></summary>
        <returns><span data-ttu-id="29c9e-506">指定した型に変換されたソース シーケンスの各要素が格納されているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-506">A sequence that contains each element of the source sequence converted to the specified type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-507"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-507"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="29c9e-508">変換元のシーケンスの型を <paramref name="TResult" /> に変換できませんでした。</span><span class="sxs-lookup"><span data-stu-id="29c9e-508">The type of the source sequence could not be converted to <paramref name="TResult" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-509">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-509">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Concat&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-510">2 つの並列シーケンスを連結します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-510">Concatenates two parallel sequences.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Concat&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Concat&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Concat&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concat(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Concat(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Concat : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Concat (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-511">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-511">This type parameter is not used.</span></span></typeparam>
        <param name="first"><span data-ttu-id="29c9e-512">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-512">This parameter is not used.</span></span></param>
        <param name="second"><span data-ttu-id="29c9e-513">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-513">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="29c9e-514">この Concat オーバーロードは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-514">This Concat overload should never be called.</span></span> <span data-ttu-id="29c9e-515">このメソッドは互換性のために残されており、呼び出すと常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-515">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="29c9e-516">このオーバーロードは常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-516">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-517">このオーバーロードは、<xref:System.Linq.ParallelQuery%601> 型の左側のデータソースと、<xref:System.Collections.Generic.IEnumerable%601>型の適切なデータソースを使用した Concat の使用を禁止するために存在します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-517">This overload exists to disallow usage of Concat with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="29c9e-518">それ以外の場合、Concat 演算子は並列実装にバインドされているように見えますが、実際には順次実装にバインドされます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-518">Otherwise, the Concat operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="29c9e-519">このメソッドが呼び出されたときに発生する例外。</span><span class="sxs-lookup"><span data-stu-id="29c9e-519">The exception that occurs when this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-520">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-520">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Concat&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Concat&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Concat&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concat(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Concat(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Concat : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Concat (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-521">入力シーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-521">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="first"><span data-ttu-id="29c9e-522">連結する最初のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-522">The first sequence to concatenate.</span></span></param>
        <param name="second"><span data-ttu-id="29c9e-523">最初のシーケンスに連結するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-523">The sequence to concatenate to the first sequence.</span></span></param>
        <summary><span data-ttu-id="29c9e-524">2 つの並列シーケンスを連結します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-524">Concatenates two parallel sequences.</span></span></summary>
        <returns><span data-ttu-id="29c9e-525">2 つの入力シーケンスの連結された要素が格納されているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-525">A sequence that contains the concatenated elements of the two input sequences.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-526"><paramref name="first" /> または <paramref name="second" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-526"><paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-527">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-527">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-528">指定した要素がシーケンスに格納されているかどうかを並列で判断します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-528">Determines in parallel whether a sequence contains a specified element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, TSource value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, !!TSource value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TSource) (source As ParallelQuery(Of TSource), value As TSource) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, TSource value);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Linq.ParallelQuery&lt;'Source&gt; * 'Source -&gt; bool" Usage="System.Linq.ParallelEnumerable.Contains (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="value" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-529"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-529">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-530">値の検索対象となるシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-530">A sequence in which to locate a value.</span></span></param>
        <param name="value"><span data-ttu-id="29c9e-531">シーケンス内で検索する値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-531">The value to locate in the sequence.</span></span></param>
        <summary><span data-ttu-id="29c9e-532">既定の等値比較子を使用して、指定した要素がシーケンスに含まれているかどうかを並列で判断します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-532">Determines in parallel whether a sequence contains a specified element by using the default equality comparer.</span></span></summary>
        <returns><span data-ttu-id="29c9e-533">指定した値を持つ要素がソース シーケンスに含まれている場合は <see langword="true" />。それ以外は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-533"><see langword="true" /> if the source sequence contains an element that has the specified value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-534"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-534">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-535"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-535"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-536">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-536">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-537">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-537">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Contains&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, TSource value, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, !!TSource value, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TSource) (source As ParallelQuery(Of TSource), value As TSource, comparer As IEqualityComparer(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, TSource value, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Linq.ParallelQuery&lt;'Source&gt; * 'Source * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.Contains (source, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="value" Type="TSource" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-538"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-538">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-539">値の検索対象となるシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-539">A sequence in which to locate a value.</span></span></param>
        <param name="value"><span data-ttu-id="29c9e-540">シーケンス内で検索する値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-540">The value to locate in the sequence.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-541">値を比較する等値比較子。</span><span class="sxs-lookup"><span data-stu-id="29c9e-541">An equality comparer to compare values.</span></span></param>
        <summary><span data-ttu-id="29c9e-542">指定した <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用して、指定した要素がシーケンスに含まれているかどうかを並列で判断します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-542">Determines in parallel whether a sequence contains a specified element by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <returns><span data-ttu-id="29c9e-543">指定した値を持つ要素がソース シーケンスに含まれている場合は <see langword="true" />。それ以外は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-543"><see langword="true" /> if the source sequence contains an element that has the specified value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-544"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-544">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-545"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-545"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-546">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-546">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-547">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-547">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Count&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-548">並列シーケンス内の要素の数を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-548">Returns the number of elements in a parallel sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Count&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Count&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Count&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count(Of TSource) (source As ParallelQuery(Of TSource)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Count(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Count : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Count source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-549"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-549">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-550">カウントする要素が格納されているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-550">A sequence that contains elements to be counted.</span></span></param>
        <summary><span data-ttu-id="29c9e-551">並列シーケンス内の要素の数を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-551">Returns the number of elements in a parallel sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-552">入力シーケンス内の要素数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-552">The number of elements in the input sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-553"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-553">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-554"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-554"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-555">ソース内の要素数が <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-555">The number of elements in source is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="29c9e-556">(この場合、InnerException は <see cref="T:System.OverflowException" /> です。) -または- クエリの評価中に 1 つ以上の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-556">(In this case the InnerException is <see cref="T:System.OverflowException" />) -or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-557">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-557">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Count&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Count&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Count&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Count(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Count : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Count (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-558"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-558">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-559">カウントする要素が格納されているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-559">A sequence that contains elements to be counted.</span></span></param>
        <param name="predicate"><span data-ttu-id="29c9e-560">各要素が条件を満たしているかどうかをテストする関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-560">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="29c9e-561">条件を満たす、指定された並列シーケンス内の要素の数を表す数値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-561">Returns a number that represents how many elements in the specified parallel sequence satisfy a condition.</span></span></summary>
        <returns><span data-ttu-id="29c9e-562">述語関数の条件を満たす、シーケンス内の要素数を表す数値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-562">A number that represents how many elements in the sequence satisfy the condition in the predicate function.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-563"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-563">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-564"><paramref name="source" /> または <paramref name="predicate" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-564"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-565">ソース内の要素数が <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-565">The number of elements in source is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="29c9e-566">(この場合、InnerException は <see cref="T:System.OverflowException" /> です。) -または- クエリの評価中に 1 つ以上の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-566">(In this case the InnerException is <see cref="T:System.OverflowException" />) -or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-567">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-567">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-568">指定された並列シーケンスの要素、または、シーケンスが空の場合はシングルトン コレクションにある指定された値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-568">Returns the elements of the specified parallel sequence or the specified value in a singleton collection if the sequence is empty.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; DefaultIfEmpty&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; DefaultIfEmpty&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DefaultIfEmpty(Of TSource) (source As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ DefaultIfEmpty(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member DefaultIfEmpty : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.DefaultIfEmpty source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-569"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-569">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-570">シーケンスが空の場合に、既定値を返すシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-570">The sequence to return a default value for if it is empty.</span></span></param>
        <summary><span data-ttu-id="29c9e-571">指定した並列シーケンスの要素、または、シーケンスが空の場合はシングルトン コレクションにある型パラメーターの既定値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-571">Returns the elements of the specified parallel sequence or the type parameter's default value in a singleton collection if the sequence is empty.</span></span></summary>
        <returns><span data-ttu-id="29c9e-572"><paramref name="source" /> が空の場合は default(TSource) が格納されているシーケンス。それ以外の場合は <paramref name="source" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-572">A sequence that contains default(TSource) if <paramref name="source" /> is empty; otherwise, <paramref name="source" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-573"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-573"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-574"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-574">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-575">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-575">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-576">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-576">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; DefaultIfEmpty&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, TSource defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; DefaultIfEmpty&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, !!TSource defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DefaultIfEmpty(Of TSource) (source As ParallelQuery(Of TSource), defaultValue As TSource) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ DefaultIfEmpty(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, TSource defaultValue);" />
      <MemberSignature Language="F#" Value="static member DefaultIfEmpty : System.Linq.ParallelQuery&lt;'Source&gt; * 'Source -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.DefaultIfEmpty (source, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="defaultValue" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-577"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-577">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-578">シーケンスが空の場合に、指定された値を返すシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-578">The sequence to return the specified value for if it is empty.</span></span></param>
        <param name="defaultValue"><span data-ttu-id="29c9e-579">シーケンスが空の場合に返す値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-579">The value to return if the sequence is empty.</span></span></param>
        <summary><span data-ttu-id="29c9e-580">指定された並列シーケンスの要素、または、シーケンスが空の場合はシングルトン コレクションにある指定された値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-580">Returns the elements of the specified parallel sequence or the specified value in a singleton collection if the sequence is empty.</span></span></summary>
        <returns><span data-ttu-id="29c9e-581"><paramref name="source" /> が空の場合は defaultValue が格納されているシーケンス。それ以外の場合は <paramref name="source" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-581">A sequence that contains defaultValue if <paramref name="source" /> is empty; otherwise, <paramref name="source" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-582"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-582"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-583"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-583">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-584">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-584">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-585">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-585">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Distinct&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-586">既定の等値比較子を使用して値を比較することにより、並列シーケンスから一意の要素を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-586">Returns distinct elements from a parallel sequence by using the default equality comparer to compare values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Distinct&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Distinct&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Distinct&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct(Of TSource) (source As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Distinct(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Distinct : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Distinct source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-587"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-587">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-588">重複する要素を削除する対象となるシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-588">The sequence to remove duplicate elements from.</span></span></param>
        <summary><span data-ttu-id="29c9e-589">既定の等値比較子を使用して値を比較することにより、並列シーケンスから一意の要素を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-589">Returns distinct elements from a parallel sequence by using the default equality comparer to compare values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-590">ソース シーケンスの一意の要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-590">A sequence that contains distinct elements from the source sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-591"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-591"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-592"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-592">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-593">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-593">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-594">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-594">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Distinct&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Distinct&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Distinct&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct(Of TSource) (source As ParallelQuery(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Distinct(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Distinct : System.Linq.ParallelQuery&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Distinct (source, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-595"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-595">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-596">重複する要素を削除する対象となるシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-596">The sequence to remove duplicate elements from.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-597">値を比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-597">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></param>
        <summary><span data-ttu-id="29c9e-598">指定された <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用して値を比較することにより、並列シーケンスから一意の要素を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-598">Returns distinct elements from a parallel sequence by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-599">ソース シーケンスの一意の要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-599">A sequence that contains distinct elements from the source sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-600"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-600"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-601">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-601">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-602">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-602">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ElementAt&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource ElementAt&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource ElementAt&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAt(Of TSource) (source As ParallelQuery(Of TSource), index As Integer) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource ElementAt(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, int index);" />
      <MemberSignature Language="F#" Value="static member ElementAt : System.Linq.ParallelQuery&lt;'Source&gt; * int -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.ElementAt (source, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-603"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-603">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-604">要素を返すシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-604">A sequence to return an element from.</span></span></param>
        <param name="index"><span data-ttu-id="29c9e-605">取得する要素の、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-605">The zero-based index of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="29c9e-606">並列シーケンス内の指定したインデックス位置にある要素を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-606">Returns the element at a specified index in a parallel sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-607">ソース シーケンス内の指定された位置にある要素。</span><span class="sxs-lookup"><span data-stu-id="29c9e-607">The element at the specified position in the source sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-608"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-608">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-609"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-609"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="29c9e-610"><paramref name="index" /> が 0 未満か <paramref name="source" /> に含まれている要素数以上の値です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-610"><paramref name="index" /> is less than 0 or greater than or equal to the number of elements in <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-611">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-611">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-612">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-612">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ElementAtOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource ElementAtOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource ElementAtOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAtOrDefault(Of TSource) (source As ParallelQuery(Of TSource), index As Integer) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource ElementAtOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, int index);" />
      <MemberSignature Language="F#" Value="static member ElementAtOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; * int -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.ElementAtOrDefault (source, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-613"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-613">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-614">要素を返すシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-614">A sequence to return an element from.</span></span></param>
        <param name="index"><span data-ttu-id="29c9e-615">取得する要素の、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-615">The zero-based index of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="29c9e-616">並列シーケンス内の指定したインデックス位置にある要素、または、インデックスが範囲外の場合は既定値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-616">Returns the element at a specified index in a parallel sequence or a default value if the index is out of range.</span></span></summary>
        <returns><span data-ttu-id="29c9e-617">インデックスがソース シーケンスの範囲外の場合は default(TSource)。それ以外の場合は、ソース シーケンスの指定した位置にある要素。</span><span class="sxs-lookup"><span data-stu-id="29c9e-617">default(TSource) if the index is outside the bounds of the source sequence; otherwise, the element at the specified position in the source sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-618"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-618">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-619"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-619"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-620">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-620">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-621">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-621">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Empty&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Empty&lt;TResult&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Empty&lt;TResult&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Empty``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Empty(Of TResult) () As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Empty();" />
      <MemberSignature Language="F#" Value="static member Empty : unit -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Empty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="29c9e-622">返されるジェネリック シーケンスの型パラメーターに割り当てる型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-622">The type to assign to the type parameter of the returned generic sequence.</span></span></typeparam>
        <summary><span data-ttu-id="29c9e-623">指定した型引数を持つ空の ParallelQuery{TResult} を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-623">Returns an empty ParallelQuery{TResult} that has the specified type argument.</span></span></summary>
        <returns><span data-ttu-id="29c9e-624">型引数が <paramref name="TResult" /> である空のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-624">An empty sequence whose type argument is <paramref name="TResult" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-625">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-625">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Except&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-626">2 つの並列シーケンスの差集合を生成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-626">Produces the set difference of two parallel sequences.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Except&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Except&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Except&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Except(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Except : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Except (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-627">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-627">This type parameter is not used.</span></span></typeparam>
        <param name="first"><span data-ttu-id="29c9e-628">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-628">This parameter is not used.</span></span></param>
        <param name="second"><span data-ttu-id="29c9e-629">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-629">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="29c9e-630">この Except オーバーロードは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-630">This Except overload should never be called.</span></span> <span data-ttu-id="29c9e-631">このメソッドは互換性のために残されており、呼び出すと常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-631">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="29c9e-632">このオーバーロードは常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-632">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-633"><xref:System.Linq.ParallelQuery%601> 型の左側のデータソースと <xref:System.Collections.Generic.IEnumerable%601>型の適切なデータソースを除き、の使用を許可しない場合は、このオーバーロードが存在します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-633">This overload exists to disallow usage of Except with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="29c9e-634">それ以外の場合、Except 演算子は並列実装にバインドするように見えますが、実際には順次実装にバインドされます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-634">Otherwise, the Except operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="29c9e-635">このメソッドが呼び出されたときに発生する例外。</span><span class="sxs-lookup"><span data-stu-id="29c9e-635">The exception that occurs when this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-636">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-636">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Except&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Except&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Except&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Except(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Except : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Except (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-637">入力シーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-637">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="first"><span data-ttu-id="29c9e-638"><paramref name="second" /> には含まれていない要素を格納するシーケンスが返されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-638">A sequence whose elements that are not also in <paramref name="second" /> will be returned.</span></span></param>
        <param name="second"><span data-ttu-id="29c9e-639">最初のシーケンスでも発生する要素を格納するシーケンスが、返されたシーケンスの要素を削除します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-639">A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</span></span></param>
        <summary><span data-ttu-id="29c9e-640">既定の等値比較子を使用して値を比較することにより、2 つの並列シーケンスの差集合を生成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-640">Produces the set difference of two parallel sequences by using the default equality comparer to compare values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-641">2 つのシーケンスの要素の差集合が格納されているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-641">A sequence that contains the set difference of the elements of two sequences.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-642"><paramref name="first" /> または <paramref name="second" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-642"><paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-643"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-643">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-644">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-644">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-645">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-645">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Except&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Except&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Except&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Except(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Except : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Except (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-646">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-646">This type parameter is not used.</span></span></typeparam>
        <param name="first"><span data-ttu-id="29c9e-647">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-647">This parameter is not used.</span></span></param>
        <param name="second"><span data-ttu-id="29c9e-648">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-648">This parameter is not used.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-649">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-649">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="29c9e-650">この Except オーバーロードは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-650">This Except overload should never be called.</span></span> <span data-ttu-id="29c9e-651">このメソッドは互換性のために残されており、呼び出すと常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-651">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="29c9e-652">このオーバーロードは常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-652">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-653"><xref:System.Linq.ParallelQuery%601> 型の左側のデータソースと <xref:System.Collections.Generic.IEnumerable%601>型の適切なデータソースを除き、の使用を許可しない場合は、このオーバーロードが存在します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-653">This overload exists to disallow usage of Except with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="29c9e-654">それ以外の場合、Except 演算子は並列実装にバインドするように見えますが、実際には順次実装にバインドされます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-654">Otherwise, the Except operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="29c9e-655">このメソッドが呼び出されたときに発生する例外。</span><span class="sxs-lookup"><span data-stu-id="29c9e-655">The exception that occurs when this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-656">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-656">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Except&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Except&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Except&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Except(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Except : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Except (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-657">入力シーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-657">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="first"><span data-ttu-id="29c9e-658"><paramref name="second" /> には含まれていない要素を格納するシーケンスが返されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-658">A sequence whose elements that are not also in <paramref name="second" /> will be returned.</span></span></param>
        <param name="second"><span data-ttu-id="29c9e-659">最初のシーケンスでも発生する要素を格納するシーケンスが、返されたシーケンスの要素を削除します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-659">A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-660">値を比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-660"><see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></param>
        <summary><span data-ttu-id="29c9e-661">指定された <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用して値を比較することにより、2 つの並列シーケンスの差集合を生成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-661">Produces the set difference of two parallel sequences by using the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-662">2 つのシーケンスの要素の差集合が格納されているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-662">A sequence that contains the set difference of the elements of two sequences.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-663"><paramref name="first" /> または <paramref name="second" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-663"><paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-664"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-664">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-665">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-665">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-666">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-666">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="First&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-667">並列シーケンスの最初の要素を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-667">Returns the first element of a parallel sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="First&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource First&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource First&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource First(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member First : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.First source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-668"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-668">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-669">最初の要素を返すシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-669">The sequence to return the first element of.</span></span></param>
        <summary><span data-ttu-id="29c9e-670">並列シーケンスの最初の要素を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-670">Returns the first element of a parallel sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-671">指定されたシーケンスの最初の要素。</span><span class="sxs-lookup"><span data-stu-id="29c9e-671">The first element in the specified sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-672">クエリが順序付けされていない場合、最初の要素は非決定的になります。</span><span class="sxs-lookup"><span data-stu-id="29c9e-672">If the query is not ordered, then the first element is non-deterministic.</span></span> <span data-ttu-id="29c9e-673">詳細については、「[Order Preservation in PLINQ (PLINQ における順序維持)](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-673">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-674"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-674">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-675"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-675"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-676">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-676">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-677"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-677"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-678">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-678">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="First&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource First&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource First&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource First(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member First : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.First (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-679"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-679">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-680">要素を返すシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-680">The sequence to return an element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="29c9e-681">各要素が条件を満たしているかどうかをテストする関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-681">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="29c9e-682">指定された条件を満たす並列シーケンスの最初の要素を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-682">Returns the first element in a parallel sequence that satisfies a specified condition.</span></span></summary>
        <returns><span data-ttu-id="29c9e-683">指定された述語関数でテストに合格する、シーケンスの最初の要素。</span><span class="sxs-lookup"><span data-stu-id="29c9e-683">The first element in the sequence that passes the test in the specified predicate function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-684">クエリが順序付けされていない場合、最初の要素は非決定的になります。</span><span class="sxs-lookup"><span data-stu-id="29c9e-684">If the query is not ordered, then the first element is non-deterministic.</span></span> <span data-ttu-id="29c9e-685">詳細については、「[Order Preservation in PLINQ (PLINQ における順序維持)](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-685">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-686"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-686">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-687"><paramref name="source" /> または <paramref name="predicate" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-687"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-688">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-688">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-689"><paramref name="source" /> に <paramref name="predicate" /> の条件を満たす要素がありません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-689">No element in <paramref name="source" /> satisfies the condition in <paramref name="predicate" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-690">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-690">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FirstOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-691">並列シーケンスの最初の要素、または、シーケンスに要素が含まれていない場合は既定値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-691">Returns the first element of a parallel sequence, or a default value if the sequence contains no elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FirstOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource FirstOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource FirstOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource FirstOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.FirstOrDefault source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-692"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-692">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-693">最初の要素を返すシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-693">The sequence to return the first element of.</span></span></param>
        <summary><span data-ttu-id="29c9e-694">並列シーケンスの最初の要素、または、シーケンスに要素が含まれていない場合は既定値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-694">Returns the first element of a parallel sequence, or a default value if the sequence contains no elements.</span></span></summary>
        <returns><span data-ttu-id="29c9e-695"><paramref name="source" /> が空の場合は default(TSource)。それ以外の場合は <paramref name="source" /> の最初の要素。</span><span class="sxs-lookup"><span data-stu-id="29c9e-695">default(TSource) if <paramref name="source" /> is empty; otherwise, the first element in <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-696">クエリが順序付けされていない場合、最初の要素は非決定的になります。</span><span class="sxs-lookup"><span data-stu-id="29c9e-696">If the query is not ordered, then the first element is non-deterministic.</span></span> <span data-ttu-id="29c9e-697">詳細については、「[Order Preservation in PLINQ (PLINQ における順序維持)](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-697">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-698"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-698">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-699"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-699"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-700">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-700">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-701">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-701">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource FirstOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource FirstOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource FirstOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.FirstOrDefault (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-702"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-702">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-703">要素を返すシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-703">The sequence to return an element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="29c9e-704">各要素が条件を満たしているかどうかをテストする関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-704">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="29c9e-705">条件を満たす並列シーケンスの最初の要素、または、このような要素が見つからない場合は既定値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-705">Returns the first element of the parallel sequence that satisfies a condition or a default value if no such element is found.</span></span></summary>
        <returns><span data-ttu-id="29c9e-706"><paramref name="source" /> が空の場合、または predicate で指定されたテストに合格した要素がない場合は default(TSource)。それ以外の場合は predicate で指定されたテストに合格した <paramref name="source" /> の最初の要素。</span><span class="sxs-lookup"><span data-stu-id="29c9e-706">default(TSource) if <paramref name="source" /> is empty or if no element passes the test specified by predicate; otherwise, the first element in <paramref name="source" /> that passes the test specified by predicate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-707">クエリが順序付けされていない場合、最初の要素は非決定的になります。</span><span class="sxs-lookup"><span data-stu-id="29c9e-707">If the query is not ordered, then the first element is non-deterministic.</span></span> <span data-ttu-id="29c9e-708">詳細については、「[Order Preservation in PLINQ (PLINQ における順序維持)](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-708">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-709"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-709">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-710"><paramref name="source" /> または <paramref name="predicate" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-710"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-711">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-711">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-712">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-712">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForAll&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static void ForAll&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Action&lt;TSource&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForAll&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Action`1&lt;!!TSource&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ForAll(Of TSource) (source As ParallelQuery(Of TSource), action As Action(Of TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ForAll(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Action&lt;TSource&gt; ^ action);" />
      <MemberSignature Language="F#" Value="static member ForAll : System.Linq.ParallelQuery&lt;'Source&gt; * Action&lt;'Source&gt; -&gt; unit" Usage="System.Linq.ParallelEnumerable.ForAll (source, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="action" Type="System.Action&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-713"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-713">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-714"><paramref name="action" /> によって処理される要素を格納する <see cref="T:System.Linq.ParallelQuery`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-714">The <see cref="T:System.Linq.ParallelQuery`1" /> whose elements will be processed by <paramref name="action" />.</span></span></param>
        <param name="action"><span data-ttu-id="29c9e-715">各要素に対して呼び出す処理。</span><span class="sxs-lookup"><span data-stu-id="29c9e-715">An Action to invoke on each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-716"><paramref name="source" /> の各要素に対して、指定された処理を並列で実行します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-716">Invokes in parallel the specified action for each element in the <paramref name="source" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-717">これは、並列化されたクエリの出力を処理する効率的な方法です。これは、最後にマージステップを必要としないためです。</span><span class="sxs-lookup"><span data-stu-id="29c9e-717">This is an efficient way to process the output from a parallelized query because it does not require a merge step at the end.</span></span> <span data-ttu-id="29c9e-718">詳細については、「plinq の[マージオプション](~/docs/standard/parallel-programming/merge-options-in-plinq.md)」または「 [Plinq での順序保持](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-718">For more information, see [Merge Options in PLINQ](~/docs/standard/parallel-programming/merge-options-in-plinq.md) or [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span> <span data-ttu-id="29c9e-719">このメソッドは副作用を生成するため、並列クエリの実際の実行順序を確認するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-719">Because this method produces a side-effect, it can be used to observe the actual order of execution in a parallel query.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-720"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-720">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-721"><paramref name="source" /> または <paramref name="action" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-721"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-722">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-722">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-723">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-723">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GroupBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-724">キー セレクター関数に従ってシーケンスの要素を並列でグループ化します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-724">Groups in parallel the elements of a sequence according to a key selector function.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GroupBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt; GroupBy&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TSource&gt;&gt; GroupBy&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As ParallelQuery(Of IGrouping(Of TKey, TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;System::Linq::IGrouping&lt;TKey, TSource&gt; ^&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;'Key, 'Source&gt;&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-725"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-725">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-726"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-726">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-727">並べ替える要素を格納している OrderedParallelQuery{TSource}。</span><span class="sxs-lookup"><span data-stu-id="29c9e-727">An OrderedParallelQuery{TSource}that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-728">要素からキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-728">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="29c9e-729">指定されたキー セレクター関数に従ってシーケンスの要素を並列でグループ化します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-729">Groups in parallel the elements of a sequence according to a specified key selector function.</span></span></summary>
        <returns><span data-ttu-id="29c9e-730"><paramref name="TKey" /> に従って降順に並べ替えるグループ シーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-730">A sequence of groups that are sorted descending according to <paramref name="TKey" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-731"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-731">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-732"><paramref name="source" /> または <paramref name="action" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-732"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-733">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-733">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-734">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-734">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt; GroupBy&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TSource&gt;&gt; GroupBy&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of IGrouping(Of TKey, TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;System::Linq::IGrouping&lt;TKey, TSource&gt; ^&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;'Key, 'Source&gt;&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-735"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-735">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-736"><paramref name="keySelector" />&gt;によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-736">The type of the key returned by <paramref name="keySelector" />&gt;.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-737">並べ替える要素を格納している <see cref="T:System.Linq.OrderedParallelQuery`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-737">An <see cref="T:System.Linq.OrderedParallelQuery`1" /> that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-738">要素からキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-738">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-739">キーを比較する <see cref="T:System.Collections.Generic.IComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-739">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="29c9e-740">指定されたキー セレクター関数に従ってシーケンスの要素を並列でグループ化し、指定された <see cref="T:System.Collections.Generic.IComparer`1" /> を使用してキーを比較します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-740">Groups in parallel the elements of a sequence according to a specified key selector function and compares the keys by using a specified <see cref="T:System.Collections.Generic.IComparer`1" />.</span></span></summary>
        <returns><span data-ttu-id="29c9e-741"><paramref name="TKey" /> に従って降順に並べ替えるグループ シーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-741">A sequence of groups that are sorted descending according to <paramref name="TKey" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-742"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-742">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-743"><paramref name="source" /> または <paramref name="action" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-743"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-744">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-744">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-745">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-745">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt; GroupBy&lt;TSource,TKey,TElement&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TElement&gt;&gt; GroupBy&lt;TSource, TKey, TElement&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement)) As ParallelQuery(Of IGrouping(Of TKey, TElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;System::Linq::IGrouping&lt;TKey, TElement&gt; ^&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; -&gt; System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;'Key, 'Element&gt;&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-746"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-746">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-747"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-747">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="29c9e-748"><see cref="T:System.Linq.IGrouping`2" /> 内の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-748">The type of the elements in the <see cref="T:System.Linq.IGrouping`2" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-749">並べ替える要素を格納している <see cref="T:System.Linq.OrderedParallelQuery`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-749">An <see cref="T:System.Linq.OrderedParallelQuery`1" /> that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-750">要素からキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-750">A function to extract a key from an element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="29c9e-751">ソースの各要素を <see cref="T:System.Linq.IGrouping`2" /> の要素に割り当てる関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-751">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</span></span></param>
        <summary><span data-ttu-id="29c9e-752">指定されたキー セレクター関数に従ってシーケンスの要素を並列でグループ化し、指定された関数を使用して各グループの要素を射影します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-752">Groups in parallel the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.</span></span></summary>
        <returns><span data-ttu-id="29c9e-753"><paramref name="TKey" /> に従って降順に並べ替えるグループ シーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-753">A sequence of groups that are sorted descending according to <paramref name="TKey" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-754"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-754">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-755"><paramref name="source" /> または <paramref name="action" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-755"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-756">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-756">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-757">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-757">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt; GroupBy&lt;TSource,TKey,TElement&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TElement&gt;&gt; GroupBy&lt;TSource, TKey, TElement&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of IGrouping(Of TKey, TElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;System::Linq::IGrouping&lt;TKey, TElement&gt; ^&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;'Key, 'Element&gt;&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, elementSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-758"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-758">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-759"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-759">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="29c9e-760">IGrouping 内の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-760">The type of the elements in the IGrouping</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-761">並べ替える要素を格納している OrderedParallelQuery{TSource}。</span><span class="sxs-lookup"><span data-stu-id="29c9e-761">An OrderedParallelQuery{TSource}that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-762">要素からキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-762">A function to extract a key from an element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="29c9e-763">ソースの各要素を IGrouping の要素に割り当てる関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-763">A function to map each source element to an element in an IGrouping.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-764">キーを比較する IComparer{TSource}。</span><span class="sxs-lookup"><span data-stu-id="29c9e-764">An IComparer{TSource} to compare keys.</span></span></param>
        <summary><span data-ttu-id="29c9e-765">キー セレクター関数に従ってシーケンスの要素を並列でグループ化します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-765">Groups in parallel the elements of a sequence according to a key selector function.</span></span> <span data-ttu-id="29c9e-766">キーの比較には、比較子を使用し、各グループの要素の射影には、指定された関数を使用します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-766">The keys are compared by using a comparer and each group's elements are projected by using a specified function.</span></span></summary>
        <returns><span data-ttu-id="29c9e-767"><paramref name="TKey" /> に従って降順に並べ替えるグループ シーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-767">A sequence of groups that are sorted descending according to <paramref name="TKey" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-768"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-768">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-769"><paramref name="source" /> または <paramref name="action" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-769"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-770">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-770">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-771">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-771">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupBy&lt;TSource,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt;, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TResult) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), resultSelector As Func(Of TKey, IEnumerable(Of TSource), TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Key, seq&lt;'Source&gt;, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-772"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-772">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-773"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-773">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-774"><paramref name="resultSelector" /> によって返される結果値の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-774">The type of the result value returned by <paramref name="resultSelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-775">グループ化する要素を格納するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-775">A sequence whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-776">各要素のキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-776">A function to extract the key for each element.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="29c9e-777">各グループから結果値を作成する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-777">A function to create a result value from each group.</span></span></param>
        <summary><span data-ttu-id="29c9e-778">指定されたキー セレクター関数に従ってシーケンスの要素を並列でグループ化し、各グループとそのキーから結果値を作成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-778">Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span></span></summary>
        <returns><span data-ttu-id="29c9e-779"><paramref name="TResult" /> 型の要素のシーケンス。各要素は、グループとそのキーの射影を表します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-779">A sequence of elements of type <paramref name="TResult" /> where each element represents a projection over a group and its key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-780"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-780">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-781"><paramref name="source" /> または <paramref name="action" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-781"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-782">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-782">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-783">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-783">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupBy&lt;TSource,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt;, !!TResult&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TResult) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), resultSelector As Func(Of TKey, IEnumerable(Of TSource), TResult), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^, TResult&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Key, seq&lt;'Source&gt;, 'Result&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-784"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-784">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-785"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-785">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-786"><paramref name="resultSelector" /> によって返される結果値の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-786">The type of the result value returned by <paramref name="resultSelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-787">グループ化する要素を格納するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-787">A sequence whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-788">各要素のキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-788">A function to extract the key for each element.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="29c9e-789">各グループから結果値を作成する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-789">A function to create a result value from each group.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-790">キーを比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-790">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="29c9e-791">指定されたキー セレクター関数に従ってシーケンスの要素を並列でグループ化し、各グループとそのキーから結果値を作成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-791">Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span></span> <span data-ttu-id="29c9e-792">キーの比較には、指定された比較子を使用します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-792">The keys are compared by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="29c9e-793">グループのシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-793">A sequence of groups.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-794"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-794">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-795"><paramref name="source" /> または <paramref name="action" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-795"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-796">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-796">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-797">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-797">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupBy&lt;TSource,TKey,TElement,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector, Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TElement, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector, class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt;, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement, TResult) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement), resultSelector As Func(Of TKey, IEnumerable(Of TElement), TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector, Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TElement&gt; ^, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; * Func&lt;'Key, seq&lt;'Element&gt;, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, elementSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-798"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-798">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-799"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-799">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="29c9e-800">各 IGrouping{TKey, TElement} の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-800">The type of the elements in each IGrouping{TKey, TElement}.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-801"><paramref name="resultSelector" /> によって返される結果値の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-801">The type of the result value returned by <paramref name="resultSelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-802">グループ化する要素を格納するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-802">A sequence whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-803">各要素のキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-803">A function to extract the key for each element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="29c9e-804">ソースの各要素を IGrouping&lt;TKey, TElement&gt; の要素に割り当てる関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-804">A function to map each source element to an element in an IGrouping&lt;TKey, TElement&gt;.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="29c9e-805">各グループから結果値を作成する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-805">A function to create a result value from each group.</span></span></param>
        <summary><span data-ttu-id="29c9e-806">指定されたキー セレクター関数に従ってシーケンスの要素を並列でグループ化し、各グループとそのキーから結果値を作成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-806">Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span></span> <span data-ttu-id="29c9e-807">各グループの要素は、指定された関数を使用して射影されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-807">The elements of each group are projected by using a specified function.</span></span></summary>
        <returns><span data-ttu-id="29c9e-808"><paramref name="TResult" /> 型の要素のシーケンス。各要素は、グループとそのキーの射影を表します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-808">A sequence of elements of type <paramref name="TResult" /> where each element represents a projection over a group and its key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-809"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-809">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-810"><paramref name="source" /> または <paramref name="action" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-810"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-811">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-811">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-812">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-812">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupBy&lt;TSource,TKey,TElement,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector, Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TElement, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector, class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt;, !!TResult&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement, TResult) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement), resultSelector As Func(Of TKey, IEnumerable(Of TElement), TResult), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector, Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TElement&gt; ^, TResult&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; * Func&lt;'Key, seq&lt;'Element&gt;, 'Result&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, elementSelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-813"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-813">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-814"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-814">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="29c9e-815">各 IGrouping{TKey, TElement} の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-815">The type of the elements in each IGrouping{TKey, TElement}.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-816"><paramref name="resultSelector" /> によって返される結果値の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-816">The type of the result value returned by <paramref name="resultSelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-817">グループ化する要素を格納するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-817">A sequence whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-818">各要素のキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-818">A function to extract the key for each element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="29c9e-819">ソースの各要素を IGrouping{Key, TElement} の要素に割り当てる関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-819">A function to map each source element to an element in an IGrouping{Key, TElement}.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="29c9e-820">各グループから結果値を作成する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-820">A function to create a result value from each group.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-821">キーを比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-821">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="29c9e-822">指定されたキー セレクター関数に従ってシーケンスの要素をグループ化し、各グループとそのキーから結果値を作成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-822">Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span></span> <span data-ttu-id="29c9e-823">キー値の比較には、指定された比較子を使用し、各グループの要素の射影には、指定された関数を使用します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-823">Key values are compared by using a specified comparer, and the elements of each group are projected by using a specified function.</span></span></summary>
        <returns><span data-ttu-id="29c9e-824"><paramref name="TResult" /> 型の要素のシーケンス。各要素は、グループとそのキーの射影を表します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-824">A sequence of elements of type <paramref name="TResult" /> where each element represents a projection over a group and its key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-825"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-825">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-826"><paramref name="source" /> または <paramref name="action" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-826"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-827">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-827">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-828">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-828">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-829">キーが等しいかどうかに基づいて 2 つのシーケンスの要素を並列で相互に関連付け、その結果をグループ化します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-829">Correlates in parallel the elements of two sequences based on equality of keys and groups the results.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupJoin&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt;, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupJoin(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, IEnumerable(Of TInner), TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupJoin(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupJoin : System.Linq.ParallelQuery&lt;'Outer&gt; * seq&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, seq&lt;'Inner&gt;, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupJoin (outer, inner, outerKeySelector, innerKeySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="29c9e-830">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-830">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="29c9e-831">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-831">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-832">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-832">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-833">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-833">This type parameter is not used.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="29c9e-834">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-834">This parameter is not used.</span></span></param>
        <param name="inner"><span data-ttu-id="29c9e-835">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-835">This parameter is not used.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="29c9e-836">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-836">This parameter is not used.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="29c9e-837">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-837">This parameter is not used.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="29c9e-838">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-838">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="29c9e-839">この GroupJoin オーバーロードは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-839">This GroupJoin overload should never be called.</span></span> <span data-ttu-id="29c9e-840">このメソッドは互換性のために残されており、呼び出すと常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-840">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="29c9e-841">このオーバーロードは常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-841">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-842">このオーバーロードは、<xref:System.Linq.ParallelQuery%601> 型の左側のデータソースと、<xref:System.Collections.Generic.IEnumerable%601>型の適切なデータソースによる GroupJoin の使用を禁止するために存在します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-842">This overload exists to disallow usage of GroupJoin with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="29c9e-843">それ以外の場合、GroupJoin 演算子は並列実装にバインドされているように見えますが、実際には順次実装にバインドされます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-843">Otherwise, the GroupJoin operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="29c9e-844">このメソッドが呼び出されたときに発生する例外。</span><span class="sxs-lookup"><span data-stu-id="29c9e-844">The exception that occurs when this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-845">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-845">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupJoin&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Linq.ParallelQuery&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Linq.ParallelQuery`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt;, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupJoin(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As ParallelQuery(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, IEnumerable(Of TInner), TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupJoin(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Linq::ParallelQuery&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupJoin : System.Linq.ParallelQuery&lt;'Outer&gt; * System.Linq.ParallelQuery&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, seq&lt;'Inner&gt;, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupJoin (outer, inner, outerKeySelector, innerKeySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Linq.ParallelQuery&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="29c9e-846">最初のシーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-846">The type of the elements of the first sequence.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="29c9e-847">2 番目のシーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-847">The type of the elements of the second sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-848">キー セレクター関数によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-848">The type of the keys returned by the key selector functions.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-849">結果の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-849">The type of the result elements.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="29c9e-850">結合する最初のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-850">The first sequence to join.</span></span></param>
        <param name="inner"><span data-ttu-id="29c9e-851">最初のシーケンスに結合するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-851">The sequence to join to the first sequence.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="29c9e-852">最初のシーケンスの各要素から結合キーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-852">A function to extract the join key from each element of the first sequence.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="29c9e-853">2 番目のシーケンスの各要素から結合キーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-853">A function to extract the join key from each element of the second sequence.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="29c9e-854">最初のシーケンスの要素と、2 番目のシーケンスの一致する要素のコレクションから結果の要素を作成する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-854">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</span></span></param>
        <summary><span data-ttu-id="29c9e-855">キーが等しいかどうかに基づいて 2 つのシーケンスの要素を並列で相互に関連付け、その結果をグループ化します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-855">Correlates in parallel the elements of two sequences based on equality of keys and groups the results.</span></span> <span data-ttu-id="29c9e-856">キーの比較には既定の等値比較子が使用されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-856">The default equality comparer is used to compare keys.</span></span></summary>
        <returns><span data-ttu-id="29c9e-857">2 つのシーケンスに対してグループ化結合を実行することによって取得される <paramref name="TResult" /> 型の要素が格納されているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-857">A sequence that has elements of type <paramref name="TResult" /> that are obtained by performing a grouped join on two sequences.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-858"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-858">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-859"><paramref name="source" /> または <paramref name="action" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-859"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-860">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-860">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-861">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-861">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupJoin&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt;, !!TResult&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupJoin(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, IEnumerable(Of TInner), TResult), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupJoin(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^, TResult&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupJoin : System.Linq.ParallelQuery&lt;'Outer&gt; * seq&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, seq&lt;'Inner&gt;, 'Result&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupJoin (outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="29c9e-862">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-862">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="29c9e-863">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-863">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-864">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-864">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-865">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-865">This type parameter is not used.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="29c9e-866">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-866">This parameter is not used.</span></span></param>
        <param name="inner"><span data-ttu-id="29c9e-867">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-867">This parameter is not used.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="29c9e-868">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-868">This parameter is not used.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="29c9e-869">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-869">This parameter is not used.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="29c9e-870">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-870">This parameter is not used.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-871">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-871">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="29c9e-872">この GroupJoin オーバーロードは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-872">This GroupJoin overload should never be called.</span></span> <span data-ttu-id="29c9e-873">このメソッドは互換性のために残されており、呼び出すと常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-873">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="29c9e-874">このオーバーロードは常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-874">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-875">このオーバーロードは、<xref:System.Linq.ParallelQuery%601> 型の左側のデータソースと、<xref:System.Collections.Generic.IEnumerable%601>型の適切なデータソースによる GroupJoin の使用を禁止するために存在します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-875">This overload exists to disallow usage of GroupJoin with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="29c9e-876">それ以外の場合、GroupJoin 演算子は並列実装にバインドされているように見えますが、実際には順次実装にバインドされます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-876">Otherwise, the GroupJoin operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="29c9e-877">このメソッドが呼び出されたときに発生する例外。</span><span class="sxs-lookup"><span data-stu-id="29c9e-877">The exception that occurs when this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-878">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-878">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupJoin&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Linq.ParallelQuery&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Linq.ParallelQuery`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt;, !!TResult&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupJoin(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As ParallelQuery(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, IEnumerable(Of TInner), TResult), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupJoin(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Linq::ParallelQuery&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^, TResult&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupJoin : System.Linq.ParallelQuery&lt;'Outer&gt; * System.Linq.ParallelQuery&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, seq&lt;'Inner&gt;, 'Result&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupJoin (outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Linq.ParallelQuery&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="29c9e-879">最初のシーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-879">The type of the elements of the first sequence.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="29c9e-880">2 番目のシーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-880">The type of the elements of the second sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-881">キー セレクター関数によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-881">The type of the keys returned by the key selector functions.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-882">結果の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-882">The type of the result elements.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="29c9e-883">結合する最初のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-883">The first sequence to join.</span></span></param>
        <param name="inner"><span data-ttu-id="29c9e-884">最初のシーケンスに結合するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-884">The sequence to join to the first sequence.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="29c9e-885">最初のシーケンスの各要素から結合キーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-885">A function to extract the join key from each element of the first sequence.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="29c9e-886">2 番目のシーケンスの各要素から結合キーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-886">A function to extract the join key from each element of the second sequence.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="29c9e-887">最初のシーケンスの要素と、2 番目のシーケンスの一致する要素のコレクションから結果の要素を作成する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-887">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-888">キーをハッシュして比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-888">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to hash and compare keys.</span></span></param>
        <summary><span data-ttu-id="29c9e-889">キーが等しいかどうかに基づいて 2 つのシーケンスの要素を並列で相互に関連付け、その結果をグループ化します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-889">Correlates in parallel the elements of two sequences based on key equality and groups the results.</span></span> <span data-ttu-id="29c9e-890">指定された <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用してキーを比較します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-890">A specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> is used to compare keys.</span></span></summary>
        <returns><span data-ttu-id="29c9e-891">2 つのシーケンスに対してグループ化結合を実行することによって取得される <paramref name="TResult" /> 型の要素が格納されているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-891">A sequence that has elements of type <paramref name="TResult" /> that are obtained by performing a grouped join on two sequences.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-892"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-892">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-893"><paramref name="source" /> または <paramref name="action" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-893"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-894">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-894">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-895">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-895">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Intersect&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-896">2 つの並列シーケンスの積集合を生成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-896">Produces the set intersection of two parallel sequences.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Intersect&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Intersect&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Intersect&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Intersect(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Intersect (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-897">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-897">This type parameter is not used.</span></span></typeparam>
        <param name="first"><span data-ttu-id="29c9e-898">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-898">This parameter is not used.</span></span></param>
        <param name="second"><span data-ttu-id="29c9e-899">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-899">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="29c9e-900">この Intersect オーバーロードは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-900">This Intersect overload should never be called.</span></span> <span data-ttu-id="29c9e-901">このメソッドは互換性のために残されており、呼び出すと常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-901">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="29c9e-902">このオーバーロードは常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-902">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-903">このオーバーロードは、<xref:System.Linq.ParallelQuery%601> 型の左側のデータソースと、<xref:System.Collections.Generic.IEnumerable%601>型の適切なデータソースとの積集合の使用を許可しないために存在します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-903">This overload exists to disallow usage of Intersect with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="29c9e-904">それ以外の場合、Intersect 演算子は並列実装にバインドするように見えますが、実際には順次実装にバインドされます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-904">Otherwise, the Intersect operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="29c9e-905">このメソッドが呼び出されたときに発生する例外。</span><span class="sxs-lookup"><span data-stu-id="29c9e-905">The exception that occurs when this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-906">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-906">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Intersect&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Intersect&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Intersect&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Intersect(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Intersect (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-907">入力シーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-907">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="first"><span data-ttu-id="29c9e-908"><paramref name="second" /> にも含まれる一意の要素を格納するシーケンスが返されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-908">A sequence whose distinct elements that also appear in <paramref name="second" /> will be returned.</span></span></param>
        <param name="second"><span data-ttu-id="29c9e-909">最初のシーケンスにも含まれる一意の要素を格納するシーケンスが返されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-909">A sequence whose distinct elements that also appear in the first sequence will be returned.</span></span></param>
        <summary><span data-ttu-id="29c9e-910">既定の等値比較子を使用して値を比較することにより、2 つの並列シーケンスの積集合を生成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-910">Produces the set intersection of two parallel sequences by using the default equality comparer to compare values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-911">2 つのシーケンスの積集合を構成する要素が格納されているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-911">A sequence that contains the elements that form the set intersection of two sequences.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-912"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-912">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-913"><paramref name="source" /> または <paramref name="action" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-913"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-914">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-914">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-915">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-915">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Intersect&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Intersect&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Intersect&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Intersect(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Intersect (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-916">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-916">This type parameter is not used.</span></span></typeparam>
        <param name="first"><span data-ttu-id="29c9e-917">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-917">This parameter is not used.</span></span></param>
        <param name="second"><span data-ttu-id="29c9e-918">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-918">This parameter is not used.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-919">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-919">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="29c9e-920">この Intersect オーバーロードは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-920">This Intersect overload should never be called.</span></span> <span data-ttu-id="29c9e-921">このメソッドは互換性のために残されており、呼び出すと常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-921">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="29c9e-922">このオーバーロードは常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-922">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-923">このオーバーロードは、<xref:System.Linq.ParallelQuery%601> 型の左側のデータソースと、<xref:System.Collections.Generic.IEnumerable%601>型の適切なデータソースとの積集合の使用を許可しないために存在します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-923">This overload exists to disallow usage of Intersect with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="29c9e-924">それ以外の場合、Intersect 演算子は並列実装にバインドするように見えますが、実際には順次実装にバインドされます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-924">Otherwise, the Intersect operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="29c9e-925">このメソッドが呼び出されたときに発生する例外。</span><span class="sxs-lookup"><span data-stu-id="29c9e-925">The exception that occurs when this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-926">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-926">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Intersect&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Intersect&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Intersect&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Intersect(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Intersect (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-927">入力シーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-927">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="first"><span data-ttu-id="29c9e-928"><paramref name="second" /> にも含まれる一意の要素を格納するシーケンスが返されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-928">A sequence whose distinct elements that also appear in <paramref name="second" /> will be returned.</span></span></param>
        <param name="second"><span data-ttu-id="29c9e-929">最初のシーケンスにも含まれる一意の要素を格納するシーケンスが返されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-929">A sequence whose distinct elements that also appear in the first sequence will be returned.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-930">値を比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-930">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></param>
        <summary><span data-ttu-id="29c9e-931">指定された IEqualityComparer{T} を使用して値を比較することにより、2 つの並列シーケンスの積集合を生成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-931">Produces the set intersection of two parallel sequences by using the specified IEqualityComparer{T} to compare values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-932">2 つのシーケンスの積集合を構成する要素が格納されているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-932">A sequence that contains the elements that form the set intersection of two sequences.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-933"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-933">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-934"><paramref name="source" /> または <paramref name="action" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-934"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-935">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-935">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-936">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-936">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-937">一致するキーに基づいて 2 つのシーケンスの要素を並列で相互に関連付けます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-937">Correlates in parallel the elements of two sequences based on matching keys.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Join&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,TInner,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Join&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, !!TInner, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, TInner, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Join(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, TInner, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Join : System.Linq.ParallelQuery&lt;'Outer&gt; * seq&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, 'Inner, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Join (outer, inner, outerKeySelector, innerKeySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,TInner,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="29c9e-938">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-938">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="29c9e-939">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-939">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-940">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-940">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-941">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-941">This type parameter is not used.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="29c9e-942">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-942">This parameter is not used.</span></span></param>
        <param name="inner"><span data-ttu-id="29c9e-943">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-943">This parameter is not used.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="29c9e-944">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-944">This parameter is not used.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="29c9e-945">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-945">This parameter is not used.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="29c9e-946">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-946">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="29c9e-947">この Join オーバーロードは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-947">This Join overload should never be called.</span></span> <span data-ttu-id="29c9e-948">このメソッドは互換性のために残されており、呼び出すと常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-948">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when invoked.</span></span></summary>
        <returns><span data-ttu-id="29c9e-949">このオーバーロードは常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-949">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-950">このオーバーロードは、<xref:System.Linq.ParallelQuery%601> 型の左側のデータソースと、<xref:System.Collections.Generic.IEnumerable%601>型の適切なデータソースとの使用の結合を禁止するために存在します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-950">This overload exists to disallow usage Join with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="29c9e-951">それ以外の場合、結合演算子は並列実装にバインドするように見えますが、実際には順次実装にバインドされます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-951">Otherwise, the Join operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="29c9e-952">このメソッドが呼び出されたときに発生する例外。</span><span class="sxs-lookup"><span data-stu-id="29c9e-952">The exception that occurs when this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-953">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-953">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Join&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Linq.ParallelQuery&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,TInner,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Join&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Linq.ParallelQuery`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, !!TInner, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As ParallelQuery(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, TInner, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Join(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Linq::ParallelQuery&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, TInner, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Join : System.Linq.ParallelQuery&lt;'Outer&gt; * System.Linq.ParallelQuery&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, 'Inner, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Join (outer, inner, outerKeySelector, innerKeySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Linq.ParallelQuery&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,TInner,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="29c9e-954">最初のシーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-954">The type of the elements of the first sequence.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="29c9e-955">2 番目のシーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-955">The type of the elements of the second sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-956">キー セレクター関数によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-956">The type of the keys returned by the key selector functions.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-957">結果の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-957">The type of the result elements.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="29c9e-958">結合する最初のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-958">The first sequence to join.</span></span></param>
        <param name="inner"><span data-ttu-id="29c9e-959">最初のシーケンスに結合するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-959">The sequence to join to the first sequence.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="29c9e-960">最初のシーケンスの各要素から結合キーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-960">A function to extract the join key from each element of the first sequence.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="29c9e-961">2 番目のシーケンスの各要素から結合キーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-961">A function to extract the join key from each element of the second sequence.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="29c9e-962">一致する 2 つの要素から結果の要素を作成する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-962">A function to create a result element from two matching elements.</span></span></param>
        <summary><span data-ttu-id="29c9e-963">一致するキーに基づいて 2 つのシーケンスの要素を並列で相互に関連付けます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-963">Correlates in parallel the elements of two sequences based on matching keys.</span></span> <span data-ttu-id="29c9e-964">キーの比較には既定の等値比較子が使用されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-964">The default equality comparer is used to compare keys.</span></span></summary>
        <returns><span data-ttu-id="29c9e-965">2 つのシーケンスに対して内部結合を実行することによって取得される <paramref name="TResult" /> 型の要素が格納されているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-965">A sequence that has elements of type <paramref name="TResult" /> that are obtained by performing an inner join on two sequences.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-966"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-966">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-967"><paramref name="source" /> または <paramref name="action" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-967"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-968">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-968">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-969">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-969">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Join&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,TInner,TResult&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Join&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, !!TInner, !!TResult&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, TInner, TResult), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Join(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, TInner, TResult&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Join : System.Linq.ParallelQuery&lt;'Outer&gt; * seq&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, 'Inner, 'Result&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Join (outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,TInner,TResult&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="29c9e-970">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-970">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="29c9e-971">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-971">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-972">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-972">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-973">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-973">This type parameter is not used.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="29c9e-974">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-974">This parameter is not used.</span></span></param>
        <param name="inner"><span data-ttu-id="29c9e-975">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-975">This parameter is not used.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="29c9e-976">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-976">This parameter is not used.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="29c9e-977">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-977">This parameter is not used.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="29c9e-978">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-978">This parameter is not used.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-979">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-979">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="29c9e-980">この Join オーバーロードは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-980">This Join overload should never be called.</span></span> <span data-ttu-id="29c9e-981">このメソッドは互換性のために残されており、呼び出すと常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-981">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when invoked.</span></span></summary>
        <returns><span data-ttu-id="29c9e-982">このオーバーロードは常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-982">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-983">このオーバーロードは、<xref:System.Linq.ParallelQuery%601> 型の左側のデータソースと、<xref:System.Collections.Generic.IEnumerable%601>型の適切なデータソースとの結合の使用を禁止するために存在します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-983">This overload exists to disallow usage of Join with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="29c9e-984">それ以外の場合、結合演算子は並列実装にバインドするように見えますが、実際には順次実装にバインドされます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-984">Otherwise, the Join operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="29c9e-985">このメソッドが呼び出されたときに発生する例外。</span><span class="sxs-lookup"><span data-stu-id="29c9e-985">The exception that occurs when this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-986">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-986">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Join&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Linq.ParallelQuery&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,TInner,TResult&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Join&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Linq.ParallelQuery`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, !!TInner, !!TResult&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As ParallelQuery(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, TInner, TResult), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Join(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Linq::ParallelQuery&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, TInner, TResult&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Join : System.Linq.ParallelQuery&lt;'Outer&gt; * System.Linq.ParallelQuery&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, 'Inner, 'Result&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Join (outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Linq.ParallelQuery&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,TInner,TResult&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="29c9e-987">最初のシーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-987">The type of the elements of the first sequence.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="29c9e-988">2 番目のシーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-988">The type of the elements of the second sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-989">キー セレクター関数によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-989">The type of the keys returned by the key selector functions.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-990">結果の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-990">The type of the result elements.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="29c9e-991">結合する最初のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-991">The first sequence to join.</span></span></param>
        <param name="inner"><span data-ttu-id="29c9e-992">最初のシーケンスに結合するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-992">The sequence to join to the first sequence.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="29c9e-993">最初のシーケンスの各要素から結合キーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-993">A function to extract the join key from each element of the first sequence.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="29c9e-994">2 番目のシーケンスの各要素から結合キーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-994">A function to extract the join key from each element of the second sequence.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="29c9e-995">一致する 2 つの要素から結果の要素を作成する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-995">A function to create a result element from two matching elements.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-996">キーをハッシュして比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-996">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to hash and compare keys.</span></span></param>
        <summary><span data-ttu-id="29c9e-997">一致するキーに基づいて 2 つのシーケンスの要素を並列で相互に関連付けます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-997">Correlates in parallel the elements of two sequences based on matching keys.</span></span> <span data-ttu-id="29c9e-998">指定された <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用してキーを比較します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-998">A specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> is used to compare keys.</span></span></summary>
        <returns><span data-ttu-id="29c9e-999">2 つのシーケンスに対して内部結合を実行することによって取得される <paramref name="TResult" /> 型の要素が格納されているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-999">A sequence that has elements of type <paramref name="TResult" /> that are obtained by performing an inner join on two sequences.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1000"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1000">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1001"><paramref name="source" /> または <paramref name="action" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1001"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1002">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1002">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1003">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1003">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Last&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-1004">並列シーケンスの最後の要素を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1004">Returns the last element of a parallel sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Last&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Last&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Last&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Last(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Last : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Last source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1005"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1005">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1006">最後の要素を返すシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1006">The sequence to return the last element from.</span></span></param>
        <summary><span data-ttu-id="29c9e-1007">並列シーケンスの最後の要素を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1007">Returns the last element of a parallel sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1008">ソース シーケンスの最後の位置にある値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1008">The value at the last position in the source sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-1009">クエリが順序付けされていない場合、最後の要素は非決定的になります。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1009">If the query is not ordered, then the last element is non-deterministic.</span></span> <span data-ttu-id="29c9e-1010">詳細については、「[Order Preservation in PLINQ (PLINQ における順序維持)](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1010">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1011"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1011">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1012"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1012"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1013">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1013">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1014"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1014"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1015">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1015">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Last&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Last&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Last(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Last : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Last (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1016"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1016">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1017">要素を返すシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1017">The sequence to return an element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="29c9e-1018">各要素が条件を満たしているかどうかをテストする関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1018">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="29c9e-1019">指定された条件を満たす並列シーケンスの最後の要素を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1019">Returns the last element of a parallel sequence that satisfies a specified condition.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1020">指定された述語関数でテストに合格する、シーケンスの最後の要素。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1020">The last element in the sequence that passes the test in the specified predicate function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-1021">クエリが順序付けされていない場合、最後の要素は非決定的になります。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1021">If the query is not ordered, then the last element is non-deterministic.</span></span> <span data-ttu-id="29c9e-1022">詳細については、「[Order Preservation in PLINQ (PLINQ における順序維持)](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1022">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1023"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1023">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1024"><paramref name="source" /> または <paramref name="predicate" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1024"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1025">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1025">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1026"><paramref name="source" /> に <paramref name="predicate" /> の条件を満たす要素がありません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1026">No element in <paramref name="source" /> satisfies the condition in <paramref name="predicate" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1027">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1027">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="LastOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-1028">並列シーケンスの最後の要素、または、シーケンスに要素が含まれていない場合は既定値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1028">Returns the last element of a parallel sequence, or a default value if the sequence contains no elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource LastOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource LastOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource LastOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.LastOrDefault source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1029"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1029">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1030">要素を返すシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1030">The sequence to return an element from.</span></span></param>
        <summary><span data-ttu-id="29c9e-1031">並列シーケンスの最後の要素、または、シーケンスに要素が含まれていない場合は既定値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1031">Returns the last element of a parallel sequence, or a default value if the sequence contains no elements.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1032">ソース シーケンスが空の場合は default()。それ以外の場合はシーケンスの最後の要素。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1032">default() if the source sequence is empty; otherwise, the last element in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-1033">クエリが順序付けされていない場合、最後の要素は非決定的になります。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1033">If the query is not ordered, then the last element is non-deterministic.</span></span> <span data-ttu-id="29c9e-1034">詳細については、「[Order Preservation in PLINQ (PLINQ における順序維持)](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1034">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1035"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1035">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1036"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1036"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1037">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1037">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1038">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1038">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource LastOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource LastOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource LastOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.LastOrDefault (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1039"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1039">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1040">要素を返すシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1040">The sequence to return an element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="29c9e-1041">各要素が条件を満たしているかどうかをテストする関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1041">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="29c9e-1042">条件を満たす並列シーケンスの最後の要素、または、このような要素が見つからない場合は既定値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1042">Returns the last element of a parallel sequence that satisfies a condition, or a default value if no such element is found.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1043">シーケンスが空の場合、または述語関数でテストに合格した要素がない場合は default()。それ以外の場合は述語関数でテストに合格した最後の要素。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1043">default() if the sequence is empty or if no elements pass the test in the predicate function; otherwise, the last element that passes the test in the predicate function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-1044">クエリが順序付けされていない場合、最後の要素は非決定的になります。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1044">If the query is not ordered, then the last element is non-deterministic.</span></span> <span data-ttu-id="29c9e-1045">詳細については、「[Order Preservation in PLINQ (PLINQ における順序維持)](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1045">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1046"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1046">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1047"><paramref name="source" /> または <paramref name="predicate" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1047"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1048">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1048">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1049">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1049">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="LongCount&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-1050">並列シーケンス内の要素の合計数を表す Int64 を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1050">Returns an Int64 that represents the total number of elements in a parallel sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LongCount&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long LongCount&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 LongCount&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount(Of TSource) (source As ParallelQuery(Of TSource)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long LongCount(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member LongCount : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.LongCount source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1051"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1051">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1052">カウントする要素が格納されているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1052">A sequence that contains elements to be counted.</span></span></param>
        <summary><span data-ttu-id="29c9e-1053">並列シーケンス内の要素の合計数を表す Int64 を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1053">Returns an Int64 that represents the total number of elements in a parallel sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1054">入力シーケンス内の要素数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1054">The number of elements in the input sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1055"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1055">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1056"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1056"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1057">ソース内の要素数が <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1057">The number of elements in source is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1058">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1058">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="29c9e-1059">計算結果が <see cref="F:System.Int32.MaxValue" /> より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1059">The computed result is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1060">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1060">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LongCount&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long LongCount&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 LongCount&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long LongCount(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LongCount : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.LongCount (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1061"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1061">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1062">カウントする要素が格納されているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1062">A sequence that contains elements to be counted.</span></span></param>
        <param name="predicate"><span data-ttu-id="29c9e-1063">各要素が条件を満たしているかどうかをテストする関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1063">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="29c9e-1064">並列シーケンス内で条件を満たす要素の数を表す Int64 を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1064">Returns an Int64 that represents how many elements in a parallel sequence satisfy a condition.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1065">述語関数の条件を満たす、シーケンス内の要素数を表す数値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1065">A number that represents how many elements in the sequence satisfy the condition in the predicate function.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1066"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1066">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1067"><paramref name="source" /> または <paramref name="predicate" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1067"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1068">ソース内の要素数が <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1068">The number of elements in source is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1069">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1069">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="29c9e-1070">計算結果が <see cref="F:System.Int32.MaxValue" /> より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1070">The computed result is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1071">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1071">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Max">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-1072">値の並列シーケンスの最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1072">Returns the maximum value in a parallel sequence of values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static decimal Max (this System.Linq.ParallelQuery&lt;decimal&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Max(class System.Linq.ParallelQuery`1&lt;valuetype System.Decimal&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Max(System::Linq::ParallelQuery&lt;System::Decimal&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Decimal&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1073">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1073">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1074">値の並列シーケンスの最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1074">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1075">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1075">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1076"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1076">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1077"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1077"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1078">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1078">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1079"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1079"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1080">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1080">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static double Max (this System.Linq.ParallelQuery&lt;double&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Max(class System.Linq.ParallelQuery`1&lt;float64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Max(System::Linq::ParallelQuery&lt;double&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1081">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1081">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1082">値の並列シーケンスの最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1082">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1083">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1083">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1084"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1084">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1085"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1085"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1086">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1086">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1087"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1087"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1088">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1088">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static int Max (this System.Linq.ParallelQuery&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Max(class System.Linq.ParallelQuery`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Max(System::Linq::ParallelQuery&lt;int&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;int&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1089">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1089">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1090">値の並列シーケンスの最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1090">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1091">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1091">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1092"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1092">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1093"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1093"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1094">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1094">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1095"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1095"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1096">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1096">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static long Max (this System.Linq.ParallelQuery&lt;long&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Max(class System.Linq.ParallelQuery`1&lt;int64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Max(System::Linq::ParallelQuery&lt;long&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;int64&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int64&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1097">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1097">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1098">値の並列シーケンスの最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1098">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1099">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1099">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1100"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1100">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1101"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1101"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1102">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1102">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1103"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1103"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1104">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1104">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static decimal? Max (this System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Max(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Max(System::Linq::ParallelQuery&lt;Nullable&lt;System::Decimal&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Decimal&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1105">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1105">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1106">値の並列シーケンスの最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1106">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1107">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1107">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1108"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1108">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1109"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1109"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1110">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1110">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1111"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1111"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1112">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1112">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static double? Max (this System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Max(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Max(System::Linq::ParallelQuery&lt;Nullable&lt;double&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Double&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1113">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1113">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1114">値の並列シーケンスの最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1114">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1115">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1115">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1116"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1116">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1117"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1117"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1118">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1118">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1119"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1119"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1120">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1120">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static int? Max (this System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Max(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Max(System::Linq::ParallelQuery&lt;Nullable&lt;int&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int32&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1121">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1121">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1122">値の並列シーケンスの最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1122">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1123">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1123">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1124"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1124">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1125"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1125"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1126">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1126">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1127"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1127"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1128">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1128">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static long? Max (this System.Linq.ParallelQuery&lt;Nullable&lt;long&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Max(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Max(System::Linq::ParallelQuery&lt;Nullable&lt;long&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int64&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1129">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1129">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1130">値の並列シーケンスの最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1130">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1131">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1131">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1132"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1132">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1133"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1133"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1134">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1134">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1135"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1135"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1136">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1136">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static float? Max (this System.Linq.ParallelQuery&lt;Nullable&lt;float&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Max(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Max(System::Linq::ParallelQuery&lt;Nullable&lt;float&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Single&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1137">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1137">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1138">値の並列シーケンスの最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1138">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1139">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1139">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1140"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1140">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1141"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1141"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1142">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1142">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1143"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1143"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1144">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1144">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static float Max (this System.Linq.ParallelQuery&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max(class System.Linq.ParallelQuery`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Max(System::Linq::ParallelQuery&lt;float&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1145">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1145">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1146">値の並列シーケンスの最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1146">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1147">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1147">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1148"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1148">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1149"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1149"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1150">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1150">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1151"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1151"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1152">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1152">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1153">ソース シーケンス内の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1153">The type of elements in the source sequence.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1154">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1154">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1155">値の並列シーケンスの最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1155">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1156">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1156">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1157"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1157">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1158"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1158"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1159">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1159">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1160"><paramref name="source" /> には要素が含まれていません。<paramref name="TSource" /> は null 非許容の値型です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1160"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1161">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1161">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,decimal&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Decimal&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, System::Decimal&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1162"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1162">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1163">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1163">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1164">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1164">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1165">シーケンスの各要素に対して変換関数を並列で呼び出し、最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1165">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1166">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1166">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1167"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1167">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1168"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1168"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1169">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1169">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1170"><paramref name="source" /> には要素が含まれていません。<paramref name="TSource" /> は null 非許容の値型です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1170"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1171">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1171">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,double&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, double&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Double&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1172"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1172">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1173">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1173">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1174">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1174">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1175">シーケンスの各要素に対して変換関数を並列で呼び出し、最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1175">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1176">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1176">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1177"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1177">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1178"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1178"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1179">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1179">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1180"><paramref name="source" /> には要素が含まれていません。<paramref name="TSource" /> は null 非許容の値型です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1180"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1181">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1181">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1182"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1182">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1183">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1183">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1184">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1184">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1185">シーケンスの各要素に対して変換関数を並列で呼び出し、最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1185">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1186">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1186">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1187"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1187">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1188"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1188"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1189">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1189">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1190"><paramref name="source" /> には要素が含まれていません。<paramref name="TSource" /> は null 非許容の値型です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1190"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1191">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1191">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,long&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, long&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int64&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1192"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1192">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1193">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1193">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1194">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1194">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1195">シーケンスの各要素に対して変換関数を並列で呼び出し、最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1195">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1196">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1196">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1197"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1197">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1198"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1198"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1199">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1199">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1200"><paramref name="source" /> には要素が含まれていません。<paramref name="TSource" /> は null 非許容の値型です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1200"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1201">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1201">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal? Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;decimal&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;System::Decimal&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Decimal&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1202"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1202">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1203">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1203">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1204">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1204">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1205">シーケンスの各要素に対して変換関数を並列で呼び出し、最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1205">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1206">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1206">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1207"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1207">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1208"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1208"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1209">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1209">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1210"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1210"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1211">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1211">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double? Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;double&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;double&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1212"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1212">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1213">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1213">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1214">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1214">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1215">シーケンスの各要素に対して変換関数を並列で呼び出し、最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1215">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1216">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1216">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1217"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1217">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1218"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1218"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1219">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1219">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1220"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1220"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1221">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1221">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int? Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;int&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;int&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1222"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1222">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1223">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1223">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1224">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1224">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1225">シーケンスの各要素に対して変換関数を並列で呼び出し、最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1225">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1226">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1226">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1227"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1227">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1228"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1228"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1229">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1229">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1230"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1230"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1231">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1231">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long? Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;long&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;long&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int64&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1232"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1232">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1233">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1233">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1234">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1234">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1235">シーケンスの各要素に対して変換関数を並列で呼び出し、最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1235">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1236">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1236">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1237"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1237">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1238"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1238"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1239">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1239">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1240"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1240"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1241">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1241">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float? Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;float&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;float&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1242"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1242">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1243">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1243">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1244">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1244">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1245">シーケンスの各要素に対して変換関数を並列で呼び出し、最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1245">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1246">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1246">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1247"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1247">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1248"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1248"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1249">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1249">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1250"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1250"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1251">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1251">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,float&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, float&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Single&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1252"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1252">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1253">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1253">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1254">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1254">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1255">シーケンスの各要素に対して変換関数を並列で呼び出し、最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1255">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1256">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1256">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1257"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1257">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1258"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1258"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1259">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1259">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1260"><paramref name="source" /> には要素が含まれていません。<paramref name="TSource" /> は null 非許容の値型です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1260"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1261">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1261">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Max&lt;TSource,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Max&lt;TSource, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource, TResult) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Result&gt; -&gt; 'Result" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1262"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1262">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-1263"><paramref name="selector" /> によって返される値の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1263">The type of the value returned by <paramref name="selector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1264">最大値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1264">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1265">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1265">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1266">シーケンスの各要素に対して変換関数を並列で呼び出し、最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1266">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1267">シーケンスの最大値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1267">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1268"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1268">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1269"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1269"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1270">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1270">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1271"><paramref name="source" /> には要素が含まれていません。<paramref name="TSource" /> は null 非許容の値型です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1271"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1272">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1272">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Min">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-1273">値の並列シーケンスの最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1273">Returns the minimum value in a parallel sequence of values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static decimal Min (this System.Linq.ParallelQuery&lt;decimal&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Min(class System.Linq.ParallelQuery`1&lt;valuetype System.Decimal&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Min(System::Linq::ParallelQuery&lt;System::Decimal&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Decimal&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1274">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1274">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1275">値の並列シーケンスの最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1275">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1276">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1276">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1277"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1277">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1278"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1278"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1279">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1279">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1280"><paramref name="source" /> には要素が含まれていません。<paramref name="TSource" /> は null 非許容の値型です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1280"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1281">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1281">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static double Min (this System.Linq.ParallelQuery&lt;double&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Min(class System.Linq.ParallelQuery`1&lt;float64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Min(System::Linq::ParallelQuery&lt;double&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1282">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1282">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1283">値の並列シーケンスの最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1283">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1284">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1284">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1285"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1285">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1286"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1286"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1287">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1287">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1288"><paramref name="source" /> には要素が含まれていません。<paramref name="TSource" /> は null 非許容の値型です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1288"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1289">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1289">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static int Min (this System.Linq.ParallelQuery&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Min(class System.Linq.ParallelQuery`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Min(System::Linq::ParallelQuery&lt;int&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;int&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1290">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1290">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1291">値の並列シーケンスの最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1291">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1292">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1292">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1293"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1293">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1294"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1294"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1295">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1295">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1296"><paramref name="source" /> には要素が含まれていません。<paramref name="TSource" /> は null 非許容の値型です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1296"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1297">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1297">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static long Min (this System.Linq.ParallelQuery&lt;long&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Min(class System.Linq.ParallelQuery`1&lt;int64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Min(System::Linq::ParallelQuery&lt;long&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;int64&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int64&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1298">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1298">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1299">値の並列シーケンスの最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1299">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1300">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1300">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1301"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1301">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1302"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1302"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1303">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1303">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1304"><paramref name="source" /> には要素が含まれていません。<paramref name="TSource" /> は null 非許容の値型です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1304"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1305">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1305">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static decimal? Min (this System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Min(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Min(System::Linq::ParallelQuery&lt;Nullable&lt;System::Decimal&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Decimal&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1306">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1306">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1307">値の並列シーケンスの最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1307">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1308">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1308">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1309"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1309">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1310"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1310"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1311">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1311">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1312"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1312"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1313">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1313">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static double? Min (this System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Min(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Min(System::Linq::ParallelQuery&lt;Nullable&lt;double&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Double&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1314">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1314">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1315">値の並列シーケンスの最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1315">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1316">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1316">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1317"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1317">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1318"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1318"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1319">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1319">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1320"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1320"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1321">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1321">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static int? Min (this System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Min(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Min(System::Linq::ParallelQuery&lt;Nullable&lt;int&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int32&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1322">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1322">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1323">値の並列シーケンスの最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1323">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1324">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1324">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1325"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1325">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1326"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1326"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1327">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1327">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1328"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1328"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1329">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1329">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static long? Min (this System.Linq.ParallelQuery&lt;Nullable&lt;long&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Min(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Min(System::Linq::ParallelQuery&lt;Nullable&lt;long&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int64&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1330">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1330">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1331">値の並列シーケンスの最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1331">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1332">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1332">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1333"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1333">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1334"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1334"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1335">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1335">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1336"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1336"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1337">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1337">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static float? Min (this System.Linq.ParallelQuery&lt;Nullable&lt;float&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Min(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Min(System::Linq::ParallelQuery&lt;Nullable&lt;float&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Single&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1338">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1338">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1339">値の並列シーケンスの最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1339">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1340">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1340">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1341"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1341">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1342"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1342"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1343">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1343">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1344"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1344"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1345">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1345">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static float Min (this System.Linq.ParallelQuery&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min(class System.Linq.ParallelQuery`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Min(System::Linq::ParallelQuery&lt;float&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1346">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1346">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1347">値の並列シーケンスの最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1347">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1348">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1348">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1349"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1349">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1350"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1350"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1351">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1351">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1352"><paramref name="source" /> には要素が含まれていません。<paramref name="TSource" /> は null 非許容の値型です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1352"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1353">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1353">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1354"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1354">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1355">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1355">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1356">値の並列シーケンスの最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1356">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1357">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1357">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1358"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1358">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1359"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1359"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1360">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1360">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1361"><paramref name="source" /> には要素が含まれていません。<paramref name="TSource" /> は null 非許容の値型です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1361"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1362">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1362">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,decimal&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Decimal&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, System::Decimal&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1363"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1363">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1364">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1364">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1365">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1365">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1366">シーケンスの各要素に対して変換関数を並列で呼び出し、最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1366">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1367">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1367">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1368"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1368">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1369"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1369"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1370">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1370">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1371"><paramref name="source" /> には要素が含まれていません。<paramref name="TSource" /> は null 非許容の値型です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1371"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1372">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1372">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,double&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, double&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Double&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1373"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1373">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1374">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1374">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1375">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1375">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1376">シーケンスの各要素に対して変換関数を並列で呼び出し、最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1376">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1377">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1377">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1378"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1378">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1379"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1379"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1380">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1380">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1381"><paramref name="source" /> には要素が含まれていません。<paramref name="TSource" /> は null 非許容の値型です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1381"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1382">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1382">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1383"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1383">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1384">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1384">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1385">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1385">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1386">シーケンスの各要素に対して変換関数を並列で呼び出し、最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1386">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1387">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1387">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1388"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1388">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1389"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1389"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1390">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1390">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1391"><paramref name="source" /> には要素が含まれていません。<paramref name="TSource" /> は null 非許容の値型です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1391"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1392">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1392">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,long&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, long&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int64&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1393"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1393">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1394">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1394">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1395">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1395">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1396">シーケンスの各要素に対して変換関数を並列で呼び出し、最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1396">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1397">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1397">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1398"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1398">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1399"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1399"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1400">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1400">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1401"><paramref name="source" /> には要素が含まれていません。<paramref name="TSource" /> は null 非許容の値型です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1401"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1402">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1402">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal? Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;decimal&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;System::Decimal&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Decimal&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1403"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1403">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1404">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1404">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1405">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1405">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1406">シーケンスの各要素に対して変換関数を並列で呼び出し、最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1406">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1407">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1407">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1408"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1408">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1409"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1409"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1410">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1410">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1411"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1411"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1412">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1412">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double? Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;double&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;double&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1413"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1413">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1414">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1414">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1415">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1415">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1416">シーケンスの各要素に対して変換関数を並列で呼び出し、最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1416">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1417">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1417">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1418"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1418">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1419"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1419"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1420">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1420">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1421"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1421"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1422">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1422">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int? Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;int&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;int&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1423"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1423">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1424">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1424">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1425">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1425">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1426">シーケンスの各要素に対して変換関数を並列で呼び出し、最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1426">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1427">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1427">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1428"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1428">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1429"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1429"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1430">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1430">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1431"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1431"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1432">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1432">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long? Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;long&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;long&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int64&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1433"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1433">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1434">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1434">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1435">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1435">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1436">シーケンスの各要素に対して変換関数を並列で呼び出し、最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1436">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1437">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1437">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1438"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1438">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1439"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1439"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1440">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1440">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1441"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1441"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1442">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1442">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float? Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;float&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;float&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1443"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1443">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1444">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1444">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1445">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1445">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1446">シーケンスの各要素に対して変換関数を並列で呼び出し、最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1446">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1447">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1447">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1448"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1448">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1449"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1449"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1450">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1450">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1451"><paramref name="source" /> に要素が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1451"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1452">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1452">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,float&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, float&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Single&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1453"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1453">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1454">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1454">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1455">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1455">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1456">シーケンスの各要素に対して変換関数を並列で呼び出し、最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1456">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1457">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1457">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1458"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1458">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1459"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1459"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1460">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1460">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1461"><paramref name="source" /> には要素が含まれていません。<paramref name="TSource" /> は null 非許容の値型です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1461"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1462">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1462">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Min&lt;TSource,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Min&lt;TSource, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource, TResult) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Result&gt; -&gt; 'Result" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1463"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1463">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-1464"><paramref name="selector" /> によって返される値の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1464">The type of the value returned by <paramref name="selector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1465">最小値を確認する対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1465">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1466">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1466">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1467">シーケンスの各要素に対して変換関数を並列で呼び出し、最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1467">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1468">シーケンスの最小値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1468">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1469"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1469">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1470"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1470"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1471">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1471">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1472"><paramref name="source" /> には要素が含まれていません。<paramref name="TSource" /> は null 非許容の値型です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1472"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1473">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1473">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OfType&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; OfType&lt;TResult&gt; (this System.Linq.ParallelQuery source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; OfType&lt;TResult&gt;(class System.Linq.ParallelQuery source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfType(Of TResult) (source As ParallelQuery) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ OfType(System::Linq::ParallelQuery ^ source);" />
      <MemberSignature Language="F#" Value="static member OfType : System.Linq.ParallelQuery -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.OfType source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="29c9e-1474">シーケンスの要素をフィルター処理する型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1474">The type to filter the elements of the sequence on.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1475">フィルター処理する要素を含むシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1475">The sequence with elements to filter.</span></span></param>
        <summary><span data-ttu-id="29c9e-1476">指定された型に基づいて ParallelQuery の要素をフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1476">Filters the elements of a ParallelQuery based on a specified type.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1477">型でフィルター処理された入力シーケンスからの要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1477">A sequence that contains elements from the input sequence filtered by type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1478"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1478"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1479"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1479">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1480">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1480">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1481">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1481">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-1482">シーケンスの要素を並列で昇順に並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1482">Sorts in parallel the elements of a sequence in ascending order.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; OrderBy&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; OrderBy&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ OrderBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.OrderBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1483"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1483">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-1484"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1484">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1485">順序付ける値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1485">A sequence of values to order.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-1486">要素からキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1486">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1487">シーケンスの要素をキーに従って並列で昇順に並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1487">Sorts in parallel the elements of a sequence in ascending order according to a key.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1488">要素がキーに従って並べ替えられている OrderedParallelQuery{TSource}。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1488">An OrderedParallelQuery{TSource} whose elements are sorted according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-1489">シーケンシャルな実装とは異なり、これは安定した並べ替えではありません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1489">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="29c9e-1490">安定した並べ替えを実現するには、次の形式のクエリを変更します。 var ordered = source.((E, i) = > 新しい {E = e, I = i}) を選択します。OrderBy ((v) = > v)。ThenBy (v = > v)。Select ((v) = > v);</span><span class="sxs-lookup"><span data-stu-id="29c9e-1490">To achieve a stable sort, change a query of the form: var ordered = source.Select((e,i) => new { E=e, I=i }).OrderBy((v) => v.e).ThenBy(v => v.i).Select((v) => v.e);</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1491"><paramref name="source" /> または <paramref name="keySelector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1491"><paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1492"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1492">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1493">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1493">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1494">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1494">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OrderBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; OrderBy&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; OrderBy&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IComparer(Of TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ OrderBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.OrderBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1495"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1495">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-1496"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1496">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1497">順序付ける値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1497">A sequence of values to order.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-1498">要素からキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1498">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-1499">キーを比較する IComparer{TKey}。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1499">An IComparer{TKey} to compare keys.</span></span></param>
        <summary><span data-ttu-id="29c9e-1500">指定された比較子を使用してシーケンスの要素を並列で昇順に並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1500">Sorts in parallel the elements of a sequence in ascending order by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1501">要素がキーに従って並べ替えられている OrderedParallelQuery{TSource}。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1501">An OrderedParallelQuery{TSource} whose elements are sorted according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-1502">シーケンシャルな実装とは異なり、これは安定した並べ替えではありません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1502">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="29c9e-1503">安定した並べ替えを実装する方法については、<xref:System.Linq.ParallelEnumerable.OrderBy%2A> の解説を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1503">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1504"><paramref name="source" /> または <paramref name="keySelector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1504"><paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1505"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1505">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1506">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1506">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1507">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1507">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-1508">シーケンスの要素を降順に並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1508">Sorts the elements of a sequence in descending order.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; OrderByDescending&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; OrderByDescending&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ OrderByDescending(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.OrderByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1509"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1509">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-1510"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1510">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1511">順序付ける値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1511">A sequence of values to order.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-1512">要素からキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1512">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1513">シーケンスの要素をキーに従って並列で降順に並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1513">Sorts in parallel the elements of a sequence in descending order according to a key.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1514">要素がキーに従って降順に並べ替えられている OrderedParallelQuery{TSource}。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1514">An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-1515">シーケンシャルな実装とは異なり、これは安定した並べ替えではありません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1515">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="29c9e-1516">安定した並べ替えを実装する方法については、<xref:System.Linq.ParallelEnumerable.OrderBy%2A> の解説を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1516">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1517"><paramref name="source" /> または <paramref name="keySelector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1517"><paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1518"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1518">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1519">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1519">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1520">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1520">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; OrderByDescending&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; OrderByDescending&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IComparer(Of TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ OrderByDescending(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.OrderByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1521"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1521">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-1522"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1522">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1523">順序付ける値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1523">A sequence of values to order.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-1524">要素からキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1524">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-1525">キーを比較する IComparer{TKey}。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1525">An IComparer{TKey} to compare keys.</span></span></param>
        <summary><span data-ttu-id="29c9e-1526">指定された比較子を使用してシーケンスの要素を降順に並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1526">Sorts the elements of a sequence in descending order by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1527">要素がキーに従って降順に並べ替えられている OrderedParallelQuery{TSource}。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1527">An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-1528">シーケンシャルな実装とは異なり、これは安定した並べ替えではありません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1528">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="29c9e-1529">安定した並べ替えを実装する方法については、<xref:System.Linq.ParallelEnumerable.OrderBy%2A> の解説を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1529">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1530"><paramref name="source" /> または <paramref name="KeySelector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1530"><paramref name="source" /> or <paramref name="KeySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1531"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1531">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1532">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1532">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1533">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1533">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;int&gt; Range (int start, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;int32&gt; Range(int32 start, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Range (start As Integer, count As Integer) As ParallelQuery(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::ParallelQuery&lt;int&gt; ^ Range(int start, int count);" />
      <MemberSignature Language="F#" Value="static member Range : int * int -&gt; System.Linq.ParallelQuery&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Range (start, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="29c9e-1534">シーケンス内の最初の整数の値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1534">The value of the first integer in the sequence.</span></span></param>
        <param name="count"><span data-ttu-id="29c9e-1535">生成する連続した整数の数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1535">The number of sequential integers to generate.</span></span></param>
        <summary><span data-ttu-id="29c9e-1536">指定した範囲内の整数の並列シーケンスを生成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1536">Generates a parallel sequence of integral numbers within a specified range.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1537">連続した整数の範囲を含む IEnumerable&lt;Int32&gt; (C# の場合) または IEnumerable(Of Int32) (Visual Basic の場合)。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1537">An IEnumerable&lt;Int32&gt; in C# or IEnumerable(Of Int32) in Visual Basic that contains a range of sequential integral numbers.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="29c9e-1538"><paramref name="count" /> が 0 未満です。または、<paramref name="start" /> + <paramref name="count" /> - 1が <see cref="F:System.Int32.MaxValue" /> を超える値です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1538"><paramref name="count" /> is less than 0 -or- <paramref name="start" /> + <paramref name="count" /> - 1 is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1539">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1539">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Repeat&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Repeat&lt;TResult&gt; (TResult element, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Repeat&lt;TResult&gt;(!!TResult element, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Repeat(Of TResult) (element As TResult, count As Integer) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Repeat(TResult element, int count);" />
      <MemberSignature Language="F#" Value="static member Repeat : 'Result * int -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Repeat (element, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="TResult" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="29c9e-1540">結果のシーケンスで繰り返される値の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1540">The type of the value to be repeated in the result sequence.</span></span></typeparam>
        <param name="element"><span data-ttu-id="29c9e-1541">繰り返される値。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1541">The value to be repeated.</span></span></param>
        <param name="count"><span data-ttu-id="29c9e-1542">生成されたシーケンスで値を繰り返す回数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1542">The number of times to repeat the value in the generated sequence.</span></span></param>
        <summary><span data-ttu-id="29c9e-1543">繰り返される 1 つの値を格納する並列シーケンスを生成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1543">Generates a parallel sequence that contains one repeated value.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1544">繰り返される 1 つの値が格納されているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1544">A sequence that contains a repeated value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="29c9e-1545"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1545"><paramref name="count" /> is less than 0.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1546">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1546">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reverse&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Reverse&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Reverse&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Reverse(Of TSource) (source As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Reverse(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Reverse : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Reverse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1547"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1547">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1548">反転させる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1548">A sequence of values to reverse.</span></span></param>
        <summary><span data-ttu-id="29c9e-1549">並列シーケンスの要素の順序を反転させます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1549">Inverts the order of the elements in a parallel sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1550">要素が入力シーケンスの要素に逆順で対応しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1550">A sequence whose elements correspond to those of the input sequence in reverse order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1551"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1551"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1552"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1552">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1553">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1553">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1554">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1554">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select&lt;TSource,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-1555">並列シーケンスの各要素を新しいフォームに射影します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1555">Projects in parallel each element of a sequence into a new form.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Select&lt;TSource,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Select&lt;TSource, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, int32, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TSource, TResult) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Integer, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Select(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Select (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int32,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1556"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1556">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-1557">セレクターによって返される要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1557">The type of elements returned by selector.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1558">変換関数を呼び出す対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1558">A sequence of values to invoke a transform function on.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1559">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1559">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1560">要素のインデックスを組み込むことにより、シーケンスの各要素を新しいフォームに並列で射影します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1560">Projects in parallel each element of a sequence into a new form by incorporating the element's index.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1561"><paramref name="selector" /> に渡されたインデックスに基づいて、<paramref name="source" /> の各要素に対して変換関数を呼び出した結果として得られる要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1561">A sequence whose elements are the result of invoking the transform function on each element of <paramref name="source" />, based on the index supplied to <paramref name="selector" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1562"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1562"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1563"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1563">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1564">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1564">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="29c9e-1565"><see cref="F:System.Int32.MaxValue" /> を超える要素が、クエリで列挙されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1565">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by the query.</span></span> <span data-ttu-id="29c9e-1566">この状態は、ストリーミングのシナリオで発生することがあります。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1566">This condition might occur in streaming scenarios.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1567">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1567">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Select&lt;TSource,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Select&lt;TSource, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TSource, TResult) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Select(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Select (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1568"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1568">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-1569">セレクターによって返される要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1569">The type of elements returned by selector.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1570">変換関数を呼び出す対象となる値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1570">A sequence of values to invoke a transform function on.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1571">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1571">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1572">並列シーケンスの各要素を新しいフォームに射影します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1572">Projects in parallel each element of a sequence into a new form.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1573"><paramref name="source" /> の各要素に対して変換関数を呼び出した結果として得られる要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1573">A sequence whose elements are the result of invoking the transform function on each element of <paramref name="source" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1574"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1574"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1575"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1575">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1576">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1576">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1577">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1577">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectMany&lt;TSource,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-1578">シーケンスの各要素を <see cref="T:System.Collections.Generic.IEnumerable`1" /> に並列で射影し、結果のシーケンスを 1 つのシーケンスに平坦化します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1578">Projects in parallel each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and flattens the resulting sequences into one sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectMany&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; SelectMany&lt;TSource,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; SelectMany&lt;TSource, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TResult) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, IEnumerable(Of TResult))) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ SelectMany(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, seq&lt;'Result&gt;&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.SelectMany (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1579"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1579">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-1580">セレクターによって返されるシーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1580">The type of the elements of the sequence returned by selector.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1581">射影する値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1581">A sequence of values to project.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1582">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1582">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1583">シーケンスの各要素を <see cref="T:System.Collections.Generic.IEnumerable`1" /> に並列で射影し、結果のシーケンスを 1 つのシーケンスに平坦化します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1583">Projects in parallel each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and flattens the resulting sequences into one sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1584">入力シーケンスの各要素に対して一対多の変換関数を呼び出した結果として得られる要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1584">A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1585"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1585"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1586"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1586">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1587">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1587">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1588">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1588">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; SelectMany&lt;TSource,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; SelectMany&lt;TSource, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, int32, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TResult) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Integer, IEnumerable(Of TResult))) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ SelectMany(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int, System::Collections::Generic::IEnumerable&lt;TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int, seq&lt;'Result&gt;&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.SelectMany (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int32,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1589"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1589">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-1590">セレクターによって返されるシーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1590">The type of the elements of the sequence returned by selector.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1591">射影する値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1591">A sequence of values to project.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1592">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1592">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1593">シーケンスの各要素を <see cref="T:System.Collections.Generic.IEnumerable`1" /> に並列で射影し、結果のシーケンスを 1 つのシーケンスに平坦化します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1593">Projects in parallel each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" />, and flattens the resulting sequences into one sequence.</span></span> <span data-ttu-id="29c9e-1594">各ソース要素のインデックスは、その要素の射影されたフォームで使用されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1594">The index of each source element is used in the projected form of that element.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1595">入力シーケンスの各要素に対して一対多の変換関数を呼び出した結果として得られる要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1595">A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1596"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1596"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1597"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1597">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="29c9e-1598"><see cref="F:System.Int32.MaxValue" /> を超える要素が、クエリで列挙されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1598">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by the query.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1599">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1599">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1600">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1600">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt; collectionSelector, Func&lt;TSource,TCollection,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt; collectionSelector, class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (source As ParallelQuery(Of TSource), collectionSelector As Func(Of TSource, IEnumerable(Of TCollection)), resultSelector As Func(Of TSource, TCollection, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ SelectMany(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^ collectionSelector, Func&lt;TSource, TCollection, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, seq&lt;'Collection&gt;&gt; * Func&lt;'Source, 'Collection, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.SelectMany (source, collectionSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TSource,TCollection,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1601"><paramref name="collectionSelector" /> によって収集される中間要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1601">The type of the intermediate elements collected by <paramref name="collectionSelector" />.</span></span></typeparam>
        <typeparam name="TCollection"><span data-ttu-id="29c9e-1602"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1602">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-1603">結果のシーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1603">The type of elements in the result sequence.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1604">射影する値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1604">A sequence of values to project.</span></span></param>
        <param name="collectionSelector"><span data-ttu-id="29c9e-1605">各ソース要素に適用する変換関数。この関数の 2 つ目のパラメーターは、ソース要素のインデックスを表します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1605">A transform function to apply to each source element; the second parameter of the function represents the index of the source element.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="29c9e-1606">最初のシーケンスの要素と、2 番目のシーケンスの一致する要素のコレクションから結果の要素を作成する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1606">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</span></span></param>
        <summary><span data-ttu-id="29c9e-1607">シーケンスの各要素を <see cref="T:System.Collections.Generic.IEnumerable`1" /> に射影し、結果のシーケンスを 1 つのシーケンスに平坦化して、その各要素に対して結果のセレクター関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1607">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" />, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1608"><paramref name="collectionSelector" /> に指定されたインデックスに基づいて <paramref name="source" /> の各要素で一対多の変換関数 <paramref name="collectionSelector" /> を呼び出し、これらのシーケンスの各要素とそれに対応するソース要素を結果の要素に割り当てた結果として得られる要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1608">A sequence whose elements are the result of invoking the one-to-many transform function <paramref name="collectionSelector" /> on each element of <paramref name="source" /> based on the index supplied to <paramref name="collectionSelector" />, and then mapping each of those sequence elements and their corresponding source element to a result element.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1609"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1609"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1610"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1610">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="29c9e-1611"><see cref="F:System.Int32.MaxValue" /> を超える要素が、クエリで列挙されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1611">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by the query.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1612">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1612">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1613">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1613">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt; collectionSelector, Func&lt;TSource,TCollection,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, int32, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt; collectionSelector, class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (source As ParallelQuery(Of TSource), collectionSelector As Func(Of TSource, Integer, IEnumerable(Of TCollection)), resultSelector As Func(Of TSource, TCollection, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ SelectMany(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^ collectionSelector, Func&lt;TSource, TCollection, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int, seq&lt;'Collection&gt;&gt; * Func&lt;'Source, 'Collection, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.SelectMany (source, collectionSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Func&lt;TSource,System.Int32,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TSource,TCollection,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1614"><paramref name="collectionSelector" /> によって収集される中間要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1614">The type of the intermediate elements collected by <paramref name="collectionSelector" />.</span></span></typeparam>
        <typeparam name="TCollection"><span data-ttu-id="29c9e-1615"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1615">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-1616">返す要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1616">The type of elements to return.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1617">射影する値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1617">A sequence of values to project.</span></span></param>
        <param name="collectionSelector"><span data-ttu-id="29c9e-1618">各ソース要素に適用する変換関数。この関数の 2 つ目のパラメーターは、ソース要素のインデックスを表します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1618">A transform function to apply to each source element; the second parameter of the function represents the index of the source element.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="29c9e-1619">最初のシーケンスの要素と、2 番目のシーケンスの一致する要素のコレクションから結果の要素を作成する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1619">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</span></span></param>
        <summary><span data-ttu-id="29c9e-1620">シーケンスの各要素を <see cref="T:System.Collections.Generic.IEnumerable`1" /> に射影し、結果のシーケンスを 1 つのシーケンスに平坦化して、その各要素に対して結果のセレクター関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1620">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" />, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.</span></span> <span data-ttu-id="29c9e-1621">各ソース要素のインデックスは、その要素の中間の射影されたフォームで使用されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1621">The index of each source element is used in the intermediate projected form of that element.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1622"><paramref name="collectionSelector" /> に指定されたインデックスに基づいて <paramref name="source" /> の各要素で一対多の変換関数 <paramref name="collectionSelector" /> を呼び出し、これらのシーケンスの各要素とそれに対応するソース要素を結果の要素に割り当てた結果として得られる要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1622">A sequence whose elements are the result of invoking the one-to-many transform function <paramref name="collectionSelector" /> on each element of <paramref name="source" /> based on the index supplied to <paramref name="collectionSelector" />, and then mapping each of those sequence elements and their corresponding source element to a result element.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1623"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1623"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1624"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1624">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="29c9e-1625"><see cref="F:System.Int32.MaxValue" /> を超える要素が、クエリで列挙されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1625">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by the query.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1626">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1626">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1627">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1627">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SequenceEqual&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-1628">要素の型に対して等値比較子を使用して要素を比較することで、2 つの並列シーケンスが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1628">Determines whether two parallel sequences are equal by comparing the elements by using an equality comparer for their type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SequenceEqual&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.SequenceEqual (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1629">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1629">This type parameter is not used.</span></span></typeparam>
        <param name="first"><span data-ttu-id="29c9e-1630">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1630">This parameter is not used.</span></span></param>
        <param name="second"><span data-ttu-id="29c9e-1631">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1631">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="29c9e-1632">この SequenceEqual オーバーロードは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1632">This SequenceEqual overload should never be called.</span></span> <span data-ttu-id="29c9e-1633">このメソッドは互換性のために残されており、呼び出すと常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1633">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1634">このオーバーロードは常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1634">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-1635">このオーバーロードは、<xref:System.Linq.ParallelQuery%601> 型の左側のデータソースと、<xref:System.Collections.Generic.IEnumerable%601>型の適切なデータソースで、SequenceEqual の使用を禁止するために存在します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1635">This overload exists to disallow usage of SequenceEqual with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="29c9e-1636">それ以外の場合、SequenceEqual 演算子は並列実装にバインドするように見えますが、実際には順次実装にバインドされます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1636">Otherwise, the SequenceEqual operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="29c9e-1637">このメソッドが呼び出されるたびにスローされます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1637">Thrown every time this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1638">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1638">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.SequenceEqual (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1639">入力シーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1639">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="first"><span data-ttu-id="29c9e-1640">second と比較するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1640">A sequence to compare to second.</span></span></param>
        <param name="second"><span data-ttu-id="29c9e-1641">最初の入力シーケンスと比較するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1641">A sequence to compare to the first input sequence.</span></span></param>
        <summary><span data-ttu-id="29c9e-1642">要素の型に対して既定の等値比較子を使用して要素を比較することで、2 つの並列シーケンスが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1642">Determines whether two parallel sequences are equal by comparing the elements by using the default equality comparer for their type.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1643">2 つのソース シーケンスが同じ長さで、それらに対応する要素がその型の既定の等値比較子に従って等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1643"><see langword="true" /> if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1644"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1644">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1645"><paramref name="first" /> または <paramref name="second" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1645"><paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1646">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1646">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1647">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1647">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.SequenceEqual (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1648">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1648">This type parameter is not used.</span></span></typeparam>
        <param name="first"><span data-ttu-id="29c9e-1649">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1649">This parameter is not used.</span></span></param>
        <param name="second"><span data-ttu-id="29c9e-1650">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1650">This parameter is not used.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-1651">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1651">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="29c9e-1652">この SequenceEqual オーバーロードは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1652">This SequenceEqual overload should never be called.</span></span> <span data-ttu-id="29c9e-1653">このメソッドは互換性のために残されており、呼び出すと常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1653">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1654">このオーバーロードは常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1654">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-1655">このオーバーロードは、<xref:System.Linq.ParallelQuery%601> 型の左側のデータソースと、<xref:System.Collections.Generic.IEnumerable%601>型の適切なデータソースで、SequenceEqual の使用を禁止するために存在します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1655">This overload exists to disallow usage of SequenceEqual with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="29c9e-1656">それ以外の場合、SequenceEqual 演算子は並列実装にバインドするように見えますが、実際には順次実装にバインドされます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1656">Otherwise, the SequenceEqual operator would appear to be binding to the parallel implementation, but would in reality bind to sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="29c9e-1657">このメソッドが呼び出されるたびにスローされます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1657">Thrown every time this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1658">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1658">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource), comparer As IEqualityComparer(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.SequenceEqual (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1659">入力シーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1659">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="first"><span data-ttu-id="29c9e-1660"><paramref name="second" /> と比較するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1660">A sequence to compare to <paramref name="second" />.</span></span></param>
        <param name="second"><span data-ttu-id="29c9e-1661">最初の入力シーケンスと比較するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1661">A sequence to compare to the first input sequence.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-1662">要素の比較に使用する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1662">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to use to compare elements.</span></span></param>
        <summary><span data-ttu-id="29c9e-1663">指定された IEqualityComparer{T} を使用して要素を比較することで、2 つの並列シーケンスが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1663">Determines whether two parallel sequences are equal by comparing their elements by using a specified IEqualityComparer{T}.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1664">2 つのソース シーケンスが同じ長さで、それらに対応する要素がその型の既定の等値比較子に従って等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1664"><see langword="true" /> if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1665"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1665">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1666"><paramref name="first" /> または <paramref name="second" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1666"><paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1667">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1667">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1668">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1668">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Single&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-1669">並列シーケンスの唯一の要素を返し、シーケンス内の要素が 1 つだけではない場合は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1669">Returns the only element of a parallel sequence, and throws an exception if there is not exactly one element in the sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Single&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Single&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Single&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Single(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Single : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Single source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1670"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1670">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1671">返す唯一の要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1671">The sequence to return the single element of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1672">並列シーケンスの唯一の要素を返し、シーケンス内の要素が 1 つだけではない場合は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1672">Returns the only element of a parallel sequence, and throws an exception if there is not exactly one element in the sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1673">入力シーケンスの 1 つの要素。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1673">The single element of the input sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1674"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1674">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1675"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1675"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1676">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1676">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1677">入力シーケンスに複数の要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1677">The input sequence contains more than one element.</span></span> <span data-ttu-id="29c9e-1678">または、入力シーケンスが空です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1678">-or- The input sequence is empty.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1679">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1679">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Single&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Single&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Single(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Single : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Single (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1680"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1680">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1681">返す唯一の要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1681">The sequence to return the single element of.</span></span></param>
        <param name="predicate"><span data-ttu-id="29c9e-1682">要素が条件を満たしているかどうかをテストする関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1682">A function to test an element for a condition.</span></span></param>
        <summary><span data-ttu-id="29c9e-1683">指定された条件を満たす並列シーケンスの唯一の要素を返し、そのような要素が複数存在する場合は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1683">Returns the only element of a parallel sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1684">条件を満たす、入力シーケンスの 1 つの要素。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1684">The single element of the input sequence that satisfies a condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1685"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1685">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1686"><paramref name="source" /> または <paramref name="predicate" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1686"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1687">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1687">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1688"><paramref name="predicate" /> の条件を満たす要素はありません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1688">No element satisfies the condition in <paramref name="predicate" />.</span></span> <span data-ttu-id="29c9e-1689">または <paramref name="predicate" /> の条件を満たす要素が複数あります。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1689">-or- More than one element satisfies the condition in <paramref name="predicate" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1690">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1690">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SingleOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-1691">並列シーケンスの唯一の要素、または、シーケンスが空の場合は既定値を返します。このメソッドは、シーケンス内に要素が複数ある場合は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1691">Returns the only element of a parallel sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SingleOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource SingleOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource SingleOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource SingleOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member SingleOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.SingleOrDefault source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1692"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1692">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1693">返す唯一の要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1693">The sequence to return the single element of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1694">並列シーケンスの唯一の要素、または、シーケンスが空の場合は既定値を返します。このメソッドは、シーケンス内に要素が複数ある場合は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1694">Returns the only element of a parallel sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1695">入力シーケンスの唯一の要素、または、シーケンスに要素が含まれない場合は default()。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1695">The single element of the input sequence, or default() if the sequence contains no elements.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1696"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1696">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1697"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1697"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1698"><paramref name="source" /> には複数の要素があります。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1698"><paramref name="source" /> has more than one element.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1699">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1699">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1700">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1700">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource SingleOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource SingleOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource SingleOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SingleOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.SingleOrDefault (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1701"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1701">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1702">返す唯一の要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1702">The sequence to return the single element of.</span></span></param>
        <param name="predicate"><span data-ttu-id="29c9e-1703">要素が条件を満たしているかどうかをテストする関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1703">A function to test an element for a condition.</span></span></param>
        <summary><span data-ttu-id="29c9e-1704">指定された条件を満たす並列シーケンスの唯一の要素、または、そのような要素が存在しない場合は既定値を返します。このメソッドは、複数の要素が条件を満たす場合は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1704">Returns the only element of a parallel sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1705">条件を満たす入力シーケンスの唯一要素、または、そのような要素が見つからない場合は default()。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1705">The single element of the input sequence that satisfies the condition, or default() if no such element is found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1706"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1706">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1707"><paramref name="source" /> または <paramref name="predicate" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1707"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1708">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1708">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-1709"><paramref name="source" /> が空であるか、複数の要素が返されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1709"><paramref name="source" /> is empty or multiple elements are returned.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1710">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1710">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Skip&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Skip&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Skip&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip(Of TSource) (source As ParallelQuery(Of TSource), count As Integer) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Skip(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, int count);" />
      <MemberSignature Language="F#" Value="static member Skip : System.Linq.ParallelQuery&lt;'Source&gt; * int -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Skip (source, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1711"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1711">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1712">要素を返すシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1712">The sequence to return elements from.</span></span></param>
        <param name="count"><span data-ttu-id="29c9e-1713">残りの要素を返す前にスキップする要素の数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1713">The number of elements to skip before returning the remaining elements.</span></span></param>
        <summary><span data-ttu-id="29c9e-1714">並列シーケンス内の指定された数の要素をバイパスし、残りの要素を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1714">Bypasses a specified number of elements in a parallel sequence and then returns the remaining elements.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1715">入力シーケンスで指定されたインデックスの後に出現する要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1715">A sequence that contains the elements that occur after the specified index in the input sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-1716">カウント > ソースの場合は。Count (), 要素は返されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1716">If count > source.Count(), no elements are returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1717"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1717"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1718"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1718">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="29c9e-1719">カウントが <see cref="F:System.Int32.MaxValue" /> より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1719">Count is greater than <see cref="F:System.Int32.MaxValue" /></span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1720">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1720">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1721">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1721">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SkipWhile&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-1722">指定された条件が満たされる限り、並列シーケンスの要素をバイパスし、残りの要素を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1722">Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SkipWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; SkipWhile&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; SkipWhile&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SkipWhile(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ SkipWhile(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SkipWhile : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.SkipWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1723"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1723">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1724">要素を返すシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1724">The sequence to return elements from.</span></span></param>
        <param name="predicate"><span data-ttu-id="29c9e-1725">各要素が条件を満たしているかどうかをテストする関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1725">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="29c9e-1726">指定された条件が満たされる限り、並列シーケンスの要素をバイパスし、残りの要素を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1726">Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1727">述語で指定されたテストに合格しなかった線系列の最初の要素を起点として入力シーケンスからの要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1727">A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1728"><paramref name="source" /> または <paramref name="predicate" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1728"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1729"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1729">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1730">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1730">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1731">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1731">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SkipWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; SkipWhile&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; SkipWhile&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, int32, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SkipWhile(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Integer, Boolean)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ SkipWhile(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SkipWhile : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int, bool&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.SkipWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Int32,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1732"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1732">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1733">要素を返すシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1733">The sequence to return elements from.</span></span></param>
        <param name="predicate"><span data-ttu-id="29c9e-1734">各ソース要素が条件に当てはまるかどうかをテストする関数。この関数の 2 つ目のパラメーターは、ソース要素のインデックスを表します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1734">A function to test each source element for a condition; the second parameter of the function represents the index of the source element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1735">指定された条件が満たされる限り、並列シーケンスの要素をバイパスし、残りの要素を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1735">Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.</span></span> <span data-ttu-id="29c9e-1736">要素のインデックスは、述語関数のロジックで使用されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1736">The element's index is used in the logic of the predicate function.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1737">述語で指定されたテストに合格しなかった線系列の最初の要素を起点として入力シーケンスからの要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1737">A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1738"><paramref name="source" /> または <paramref name="predicate" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1738"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1739"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1739">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="29c9e-1740"><see cref="F:System.Int32.MaxValue" /> を超える要素が、クエリで列挙されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1740">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by the query.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1741">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1741">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1742">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1742">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sum">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-1743">値のシーケンスの合計を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1743">Computes in parallel the sum of a sequence of values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static decimal Sum (this System.Linq.ParallelQuery&lt;decimal&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Sum(class System.Linq.ParallelQuery`1&lt;valuetype System.Decimal&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Sum(System::Linq::ParallelQuery&lt;System::Decimal&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Decimal&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1744">合計を計算する対象の値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1744">A sequence of values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1745">値のシーケンスの合計を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1745">Computes in parallel the sum of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1746">シーケンスの射影された値の合計。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1746">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1747"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1747">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1748"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1748"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1749">合計が <see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1749">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1750">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1750">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1751">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1751">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static double Sum (this System.Linq.ParallelQuery&lt;double&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sum(class System.Linq.ParallelQuery`1&lt;float64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Sum(System::Linq::ParallelQuery&lt;double&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1752">合計を計算する対象の値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1752">A sequence of values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1753">値のシーケンスの合計を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1753">Computes in parallel the sum of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1754">シーケンスの射影された値の合計。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1754">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1755"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1755">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1756"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1756"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1757">合計が <see cref="F:System.Double.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1757">The sum is larger than <see cref="F:System.Double.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1758">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1758">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1759">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1759">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static int Sum (this System.Linq.ParallelQuery&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sum(class System.Linq.ParallelQuery`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Sum(System::Linq::ParallelQuery&lt;int&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;int&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1760">合計を計算する対象の値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1760">A sequence of values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1761">値のシーケンスの合計を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1761">Computes in parallel the sum of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1762">シーケンスの射影された値の合計。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1762">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1763"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1763">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1764"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1764"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1765">合計が <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1765">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1766">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1766">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1767">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1767">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static long Sum (this System.Linq.ParallelQuery&lt;long&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Sum(class System.Linq.ParallelQuery`1&lt;int64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Sum(System::Linq::ParallelQuery&lt;long&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;int64&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int64&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1768">合計を計算する対象の値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1768">A sequence of values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1769">値のシーケンスの合計を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1769">Computes in parallel the sum of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1770">シーケンスの射影された値の合計。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1770">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1771"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1771">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1772"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1772"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1773">合計が <see cref="F:System.Int64.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1773">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1774">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1774">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1775">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1775">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static decimal? Sum (this System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Sum(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Sum(System::Linq::ParallelQuery&lt;Nullable&lt;System::Decimal&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Decimal&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1776">合計を計算する対象の値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1776">A sequence of values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1777">値のシーケンスの合計を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1777">Computes in parallel the sum of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1778">シーケンスの射影された値の合計。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1778">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1779"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1779">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1780"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1780"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1781">合計が <see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1781">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1782">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1782">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1783">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1783">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static double? Sum (this System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sum(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Sum(System::Linq::ParallelQuery&lt;Nullable&lt;double&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Double&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1784">合計を計算する対象の値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1784">A sequence of values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1785">値のシーケンスの合計を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1785">Computes in parallel the sum of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1786">シーケンスの射影された値の合計。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1786">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1787"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1787">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1788"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1788"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1789">合計が <see cref="F:System.Double.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1789">The sum is larger than <see cref="F:System.Double.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1790">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1790">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1791">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1791">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static int? Sum (this System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Sum(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Sum(System::Linq::ParallelQuery&lt;Nullable&lt;int&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int32&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1792">合計を計算する対象の値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1792">A sequence of values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1793">値のシーケンスの合計を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1793">Computes in parallel the sum of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1794">シーケンスの射影された値の合計。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1794">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1795"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1795">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1796"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1796"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1797">合計が <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1797">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1798">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1798">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1799">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1799">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static long? Sum (this System.Linq.ParallelQuery&lt;Nullable&lt;long&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Sum(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Sum(System::Linq::ParallelQuery&lt;Nullable&lt;long&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int64&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1800">合計を計算する対象の値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1800">A sequence of values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1801">値のシーケンスの合計を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1801">Computes in parallel the sum of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1802">シーケンスの射影された値の合計。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1802">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1803"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1803">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1804"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1804"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1805">合計が <see cref="F:System.Int64.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1805">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1806">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1806">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1807">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1807">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static float? Sum (this System.Linq.ParallelQuery&lt;Nullable&lt;float&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Sum(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Sum(System::Linq::ParallelQuery&lt;Nullable&lt;float&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Single&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1808">合計を計算する対象の値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1808">A sequence of values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1809">値のシーケンスの合計を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1809">Computes in parallel the sum of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1810">シーケンスの射影された値の合計。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1810">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1811"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1811">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1812"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1812"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1813">合計が <see cref="F:System.Single.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1813">The sum is larger than <see cref="F:System.Single.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1814">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1814">-or-  One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1815">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1815">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static float Sum (this System.Linq.ParallelQuery&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sum(class System.Linq.ParallelQuery`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Sum(System::Linq::ParallelQuery&lt;float&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="29c9e-1816">合計を計算する対象の値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1816">A sequence of values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="29c9e-1817">値のシーケンスの合計を並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1817">Computes in parallel the sum of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1818">シーケンスの射影された値の合計。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1818">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1819"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1819">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1820"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1820"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1821">合計が <see cref="F:System.Single.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1821">The sum is larger than <see cref="F:System.Single.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1822">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1822">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1823">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1823">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,decimal&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Decimal&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, System::Decimal&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1824"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1824">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1825">合計を計算する対象の値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1825">A sequence of values to calculate the sum of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1826">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1826">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1827">入力シーケンスの各要素に対して変換関数を呼び出すことによって取得される値のシーケンスの合計を、並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1827">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1828">シーケンスの射影された値の合計。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1828">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1829"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1829">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1830"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1830"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1831">合計が <see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1831">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1832">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1832">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1833">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1833">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,double&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, double&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Double&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1834"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1834">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1835">合計を計算する対象の値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1835">A sequence of values to calculate the sum of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1836">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1836">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1837">入力シーケンスの各要素に対して変換関数を呼び出すことによって取得される値のシーケンスの合計を、並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1837">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1838">シーケンスの射影された値の合計。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1838">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1839"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1839">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1840"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1840"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1841">合計が <see cref="F:System.Double.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1841">The sum is larger than <see cref="F:System.Double.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1842">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1842">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1843">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1843">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1844">ソース シーケンス内の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1844">The type of elements in the source sequence.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1845">合計を計算する対象の値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1845">A sequence of values to calculate the sum of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1846">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1846">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1847">入力シーケンスの各要素に対して変換関数を呼び出すことによって取得される値のシーケンスの合計を、並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1847">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1848">シーケンスの射影された値の合計。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1848">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1849"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1849">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1850"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1850"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1851">合計が <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1851">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1852">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1852">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1853">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1853">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,long&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, long&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int64&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1854"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1854">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1855">合計を計算する対象の値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1855">A sequence of values to calculate the sum of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1856">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1856">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1857">入力シーケンスの各要素に対して変換関数を呼び出すことによって取得される値のシーケンスの合計を、並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1857">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1858">シーケンスの射影された値の合計。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1858">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1859"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1859">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1860"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1860"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1861">合計が <see cref="F:System.Int64.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1861">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1862">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1862">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1863">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1863">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal? Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;decimal&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;System::Decimal&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Decimal&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1864"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1864">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1865">合計を計算する対象の値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1865">A sequence of values to calculate the sum of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1866">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1866">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1867">入力シーケンスの各要素に対して変換関数を呼び出すことによって取得される値のシーケンスの合計を、並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1867">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1868">シーケンスの射影された値の合計。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1868">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1869"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1869">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1870"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1870"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1871">合計が <see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1871">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1872">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1872">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1873">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1873">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double? Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;double&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;double&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1874"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1874">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1875">合計を計算する対象の値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1875">A sequence of values to calculate the sum of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1876">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1876">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1877">入力シーケンスの各要素に対して変換関数を呼び出すことによって取得される値のシーケンスの合計を、並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1877">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1878">シーケンスの射影された値の合計。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1878">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1879"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1879">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1880"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1880"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1881">合計が <see cref="F:System.Double.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1881">The sum is larger than <see cref="F:System.Double.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1882">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1882">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1883">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1883">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int? Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;int&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;int&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1884"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1884">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1885">合計を計算する対象の値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1885">A sequence of values to calculate the sum of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1886">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1886">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1887">入力シーケンスの各要素に対して変換関数を呼び出すことによって取得される値のシーケンスの合計を、並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1887">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1888">シーケンスの射影された値の合計。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1888">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1889"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1889">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1890"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1890"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1891">合計が <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1891">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1892">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1892">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1893">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1893">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long? Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;long&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;long&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int64&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1894"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1894">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1895">合計を計算する対象の値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1895">A sequence of values to calculate the sum of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1896">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1896">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1897">入力シーケンスの各要素に対して変換関数を呼び出すことによって取得される値のシーケンスの合計を、並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1897">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1898">シーケンスの射影された値の合計。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1898">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1899"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1899">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1900"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1900"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1901">合計が <see cref="F:System.Int64.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1901">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1902">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1902">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1903">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1903">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float? Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;float&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;float&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1904"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1904">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1905">合計を計算する対象の値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1905">A sequence of values to calculate the sum of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1906">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1906">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1907">入力シーケンスの各要素に対して変換関数を呼び出すことによって取得される値のシーケンスの合計を、並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1907">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1908">シーケンスの射影された値の合計。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1908">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1909"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1909">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1910"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1910"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1911">合計が <see cref="F:System.Single.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1911">The sum is larger than <see cref="F:System.Single.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1912">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1912">-or-  One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1913">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1913">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,float&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, float&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Single&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1914"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1914">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1915">合計を計算する対象の値のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1915">A sequence of values to calculate the sum of.</span></span></param>
        <param name="selector"><span data-ttu-id="29c9e-1916">各要素に適用する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1916">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1917">入力シーケンスの各要素に対して変換関数を呼び出すことによって取得される値のシーケンスの合計を、並列で計算します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1917">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1918">シーケンスの射影された値の合計。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1918">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1919"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1919">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1920"><paramref name="source" /> または <paramref name="selector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1920"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1921">合計が <see cref="F:System.Single.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1921">The sum is larger than <see cref="F:System.Single.MaxValue" />.</span></span> <span data-ttu-id="29c9e-1922">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1922">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1923">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1923">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Take&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Take&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Take&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Take(Of TSource) (source As ParallelQuery(Of TSource), count As Integer) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Take(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, int count);" />
      <MemberSignature Language="F#" Value="static member Take : System.Linq.ParallelQuery&lt;'Source&gt; * int -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Take (source, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1924"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1924">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1925">要素を返すシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1925">The sequence to return elements from.</span></span></param>
        <param name="count"><span data-ttu-id="29c9e-1926">返す要素数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1926">The number of elements to return.</span></span></param>
        <summary><span data-ttu-id="29c9e-1927">並列シーケンスの先頭から指定された数だけ連続する要素を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1927">Returns a specified number of contiguous elements from the start of a parallel sequence.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1928">入力シーケンスの先頭から指定された数だけの要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1928">A sequence that contains the specified number of elements from the start of the input sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1929"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1929"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1930"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1930">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1931">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1931">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1932">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1932">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TakeWhile&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-1933">指定された条件が満たされる限り、並列シーケンスから要素を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1933">Returns elements from a parallel sequence as long as a specified condition is true.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TakeWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; TakeWhile&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; TakeWhile&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TakeWhile(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ TakeWhile(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member TakeWhile : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.TakeWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1934"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1934">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1935">要素を返すシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1935">The sequence to return elements from.</span></span></param>
        <param name="predicate"><span data-ttu-id="29c9e-1936">各要素が条件を満たしているかどうかをテストする関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1936">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="29c9e-1937">指定された条件が満たされる限り、並列シーケンスから要素を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1937">Returns elements from a parallel sequence as long as a specified condition is true.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1938">テストに合格しなくなった要素の前に出現する入力シーケンスからの要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1938">A sequence that contains the elements from the input sequence that occur before the element at which the test no longer passes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1939"><paramref name="source" /> または <paramref name="predicate" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1939"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1940"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1940">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1941">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1941">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1942">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1942">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TakeWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; TakeWhile&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; TakeWhile&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, int32, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TakeWhile(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Integer, Boolean)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ TakeWhile(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member TakeWhile : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int, bool&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.TakeWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Int32,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1943"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1943">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1944">要素を返すシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1944">The sequence to return elements from.</span></span></param>
        <param name="predicate"><span data-ttu-id="29c9e-1945">各ソース要素が条件に当てはまるかどうかをテストする関数。この関数の 2 つ目のパラメーターは、ソース要素のインデックスを表します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1945">A function to test each source element for a condition; the second parameter of the function represents the index of the source element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1946">指定された条件が満たされる限り、並列シーケンスから要素を返します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1946">Returns elements from a parallel sequence as long as a specified condition is true.</span></span> <span data-ttu-id="29c9e-1947">要素のインデックスは、述語関数のロジックで使用されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1947">The element's index is used in the logic of the predicate function.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1948">テストに合格しなくなった要素の前に出現する入力シーケンスからの要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1948">A sequence that contains elements from the input sequence that occur before the element at which the test no longer passes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1949"><paramref name="source" /> または <paramref name="predicate" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1949"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1950"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1950">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="29c9e-1951"><see cref="F:System.Int32.MaxValue" /> を超える要素がこのクエリによって列挙されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1951">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by this query.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1952">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1952">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1953">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1953">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-1954">シーケンス内の後続の要素を並列で昇順に配置します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1954">Performs in parallel a subsequent ordering of the elements in a sequence in ascending order.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; ThenBy&lt;TSource,TKey&gt; (this System.Linq.OrderedParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; ThenBy&lt;TSource, TKey&gt;(class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TSource, TKey) (source As OrderedParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ ThenBy(System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Linq.OrderedParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.ThenBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.OrderedParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1955"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1955">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-1956"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1956">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1957">並べ替える要素を格納している OrderedParallelQuery{TSource}。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1957">An OrderedParallelQuery{TSource} that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-1958">要素からキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1958">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1959">キーに従って、シーケンス内の後続の要素を並列で昇順に配置します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1959">Performs in parallel a subsequent ordering of the elements in a sequence in ascending order according to a key.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1960">要素がキーに従って並べ替えられている OrderedParallelQuery{TSource}。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1960">An OrderedParallelQuery{TSource} whose elements are sorted according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-1961">シーケンシャルな実装とは異なり、これは安定した並べ替えではありません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1961">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="29c9e-1962">安定した並べ替えを実装する方法については、<xref:System.Linq.ParallelEnumerable.OrderBy%2A> の解説を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1962">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1963"><paramref name="source" /> または <paramref name="keySelector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1963"><paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1964"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1964">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1965">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1965">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1966">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1966">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ThenBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; ThenBy&lt;TSource,TKey&gt; (this System.Linq.OrderedParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; ThenBy&lt;TSource, TKey&gt;(class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TSource, TKey) (source As OrderedParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IComparer(Of TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ ThenBy(System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Linq.OrderedParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.ThenBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.OrderedParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1967"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1967">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-1968"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1968">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1969">並べ替える要素を格納している OrderedParallelQuery{TSource}。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1969">An OrderedParallelQuery{TSource} that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-1970">要素からキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1970">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-1971">キーを比較する IComparer{TKey}。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1971">An IComparer{TKey} to compare keys.</span></span></param>
        <summary><span data-ttu-id="29c9e-1972">指定された比較子を使用して、シーケンス内の後続の要素を並列で昇順に配置します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1972">Performs in parallel a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1973">要素がキーに従って並べ替えられている OrderedParallelQuery{TSource}。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1973">An OrderedParallelQuery{TSource} whose elements are sorted according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-1974">シーケンシャルな実装とは異なり、これは安定した並べ替えではありません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1974">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="29c9e-1975">安定した並べ替えを実装する方法については、<xref:System.Linq.ParallelEnumerable.OrderBy%2A> の解説を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1975">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1976"><paramref name="source" /> または <paramref name="keySelector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1976"><paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1977"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1977">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1978">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1978">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1979">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1979">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-1980">シーケンス内の後続の要素を並列で降順に配置します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1980">Performs in parallel a subsequent ordering of the elements in a sequence in descending order.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; ThenByDescending&lt;TSource,TKey&gt; (this System.Linq.OrderedParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; ThenByDescending&lt;TSource, TKey&gt;(class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TSource, TKey) (source As OrderedParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ ThenByDescending(System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Linq.OrderedParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.ThenByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.OrderedParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1981"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1981">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-1982"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1982">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1983">並べ替える要素を格納している OrderedParallelQuery{TSource}。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1983">An OrderedParallelQuery{TSource} that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-1984">要素からキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1984">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="29c9e-1985">キーに従って、シーケンス内の後続の要素を並列で降順に配置します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1985">Performs in parallel a subsequent ordering of the elements in a sequence in descending order, according to a key.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1986">要素がキーに従って降順に並べ替えられているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1986">A sequence whose elements are sorted descending according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-1987">シーケンシャルな実装とは異なり、これは安定した並べ替えではありません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1987">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="29c9e-1988">安定した並べ替えを実装する方法については、<xref:System.Linq.ParallelEnumerable.OrderBy%2A> の解説を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1988">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-1989"><paramref name="source" /> または <paramref name="keySelector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1989"><paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-1990"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1990">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-1991">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1991">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-1992">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-1992">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; ThenByDescending&lt;TSource,TKey&gt; (this System.Linq.OrderedParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; ThenByDescending&lt;TSource, TKey&gt;(class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TSource, TKey) (source As OrderedParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IComparer(Of TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ ThenByDescending(System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Linq.OrderedParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.ThenByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.OrderedParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-1993"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1993">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-1994"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1994">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-1995">並べ替える要素を格納している OrderedParallelQuery{TSource}。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1995">An OrderedParallelQuery{TSource} that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-1996">要素からキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1996">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-1997">キーを比較する IComparer{TKey}。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1997">An IComparer{TKey} to compare keys.</span></span></param>
        <summary><span data-ttu-id="29c9e-1998">指定された比較子を使用して、シーケンス内の後続の要素を並列で降順に配置します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1998">Performs in parallel a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="29c9e-1999">要素がキーに従って降順に並べ替えられているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-1999">A sequence whose elements are sorted descending according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-2000">シーケンシャルな実装とは異なり、これは安定した並べ替えではありません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2000">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="29c9e-2001">安定した並べ替えを実装する方法については、<xref:System.Linq.ParallelEnumerable.OrderBy%2A> の解説を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2001">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-2002"><paramref name="source" /> または <paramref name="keySelector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2002"><paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-2003"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2003">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-2004">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2004">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2005">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2005">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToArray&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource[] ToArray&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource[] ToArray&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToArray(Of TSource) (source As ParallelQuery(Of TSource)) As TSource()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;TSource&gt; ^ ToArray(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ToArray : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source[]" Usage="System.Linq.ParallelEnumerable.ToArray source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-2006"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2006">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-2007">配列の作成元のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2007">A sequence to create an array from.</span></span></param>
        <summary><span data-ttu-id="29c9e-2008"><see cref="T:System.Linq.ParallelQuery`1" /> から配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2008">Creates an array from a <see cref="T:System.Linq.ParallelQuery`1" />.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2009">入力シーケンスの要素を含む配列。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2009">An array that contains the elements from the input sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-2010"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2010">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-2011"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2011"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-2012">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2012">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2013">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2013">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDictionary&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-2014"><see cref="T:System.Linq.ParallelQuery`1" /> から <see cref="T:System.Collections.Generic.Dictionary`2" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2014">Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TSource&gt; ToDictionary&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TSource&gt; ToDictionary&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As Dictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TSource&gt; ^ ToDictionary(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'Source&gt;" Usage="System.Linq.ParallelEnumerable.ToDictionary (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-2015"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2015">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-2016"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2016">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-2017"><see cref="T:System.Collections.Generic.Dictionary`2" /> の作成元のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2017">A sequence to create a <see cref="T:System.Collections.Generic.Dictionary`2" /> from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-2018">各要素からキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2018">A function to extract a key from each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-2019">指定されたキー セレクター関数に従って、<see cref="T:System.Linq.ParallelQuery`1" /> から <see cref="T:System.Collections.Generic.Dictionary`2" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2019">Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to a specified key selector function.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2020">キーと値を格納している <see cref="T:System.Collections.Generic.Dictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2020">A <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains keys and values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-2021"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2021">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-2022"><paramref name="source" /> または <paramref name="keySelector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2022"><paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-2023"><paramref name="keySelector" /> が null 参照 (Visual Basic の場合は Nothing) のキーを生成しています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2023"><paramref name="keySelector" /> produces a key that is a null reference (Nothing in Visual Basic).</span></span> <span data-ttu-id="29c9e-2024">または、<paramref name="keySelector" /> が 2 つの要素に対して重複するキーを生成しています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2024">-or- <paramref name="keySelector" /> produces duplicate keys for two elements.</span></span> <span data-ttu-id="29c9e-2025">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2025">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2026">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2026">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TSource&gt; ToDictionary&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TSource&gt; ToDictionary&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TSource&gt; ^ ToDictionary(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'Source&gt;" Usage="System.Linq.ParallelEnumerable.ToDictionary (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-2027"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2027">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-2028"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2028">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-2029"><see cref="T:System.Collections.Generic.Dictionary`2" /> の作成元のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2029">A sequence to create a <see cref="T:System.Collections.Generic.Dictionary`2" /> from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-2030">各要素からキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2030">A function to extract a key from each element.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-2031">キーを比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2031">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="29c9e-2032">指定されたキー セレクター関数およびキーの比較子に従って、<see cref="T:System.Linq.ParallelQuery`1" /> から <see cref="T:System.Collections.Generic.Dictionary`2" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2032">Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to a specified key selector function and key comparer.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2033">キーと値を格納している <see cref="T:System.Collections.Generic.Dictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2033">A <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains keys and values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-2034"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2034">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-2035"><paramref name="source" /> または <paramref name="keySelector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2035"><paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-2036"><paramref name="keySelector" /> が null 参照 (Visual Basic の場合は Nothing) のキーを生成しています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2036"><paramref name="keySelector" /> produces a key that is a null reference (Nothing in Visual Basic).</span></span> <span data-ttu-id="29c9e-2037">または、<paramref name="keySelector" /> が 2 つの要素に対して重複するキーを生成しています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2037">-or- <paramref name="keySelector" /> produces duplicate keys for two elements.</span></span> <span data-ttu-id="29c9e-2038">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2038">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2039">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2039">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TElement&gt; ToDictionary&lt;TSource,TKey,TElement&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TElement&gt; ToDictionary&lt;TSource, TKey, TElement&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TSource, TKey, TElement) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement)) As Dictionary(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TElement&gt; ^ ToDictionary(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'Element&gt;" Usage="System.Linq.ParallelEnumerable.ToDictionary (source, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-2040"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2040">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-2041"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2041">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="29c9e-2042"><paramref name="elementSelector" /> によって返される値の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2042">The type of the value returned by <paramref name="elementSelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-2043"><see cref="T:System.Collections.Generic.Dictionary`2" /> の作成元のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2043">A sequence to create a <see cref="T:System.Collections.Generic.Dictionary`2" /> from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-2044">各要素からキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2044">A function to extract a key from each element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="29c9e-2045">各要素から結果の要素値を生成する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2045">A transform function to produce a result element value from each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-2046">指定されたキー セレクター関数および要素セレクター関数に従って、<see cref="T:System.Linq.ParallelQuery`1" /> から <see cref="T:System.Collections.Generic.Dictionary`2" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2046">Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to specified key selector and element selector functions.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2047">入力シーケンスから選択された <paramref name="TElement" /> 型の値を格納する <see cref="T:System.Collections.Generic.Dictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2047">A <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains values of type <paramref name="TElement" /> selected from the input sequence</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-2048"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2048">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-2049"><paramref name="source" /> または <paramref name="keySelector" /> または <paramref name="elementSelector" /> が null 参照 (Visual Basic の Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2049"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-2050"><paramref name="keySelector" /> が null 参照 (Visual Basic の場合は Nothing) のキーを生成しています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2050"><paramref name="keySelector" /> produces a key that is a null reference (Nothing in Visual Basic).</span></span> <span data-ttu-id="29c9e-2051">または、<paramref name="keySelector" /> が 2 つの要素に対して重複するキーを生成しています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2051">-or- <paramref name="keySelector" /> produces duplicate keys for two elements.</span></span> <span data-ttu-id="29c9e-2052">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2052">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2053">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2053">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TElement&gt; ToDictionary&lt;TSource,TKey,TElement&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TElement&gt; ToDictionary&lt;TSource, TKey, TElement&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TSource, TKey, TElement) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TElement&gt; ^ ToDictionary(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'Element&gt;" Usage="System.Linq.ParallelEnumerable.ToDictionary (source, keySelector, elementSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-2054"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2054">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-2055"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2055">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="29c9e-2056"><paramref name="elementSelector" /> によって返される値の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2056">The type of the value returned by <paramref name="elementSelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-2057"><see cref="T:System.Collections.Generic.Dictionary`2" /> の作成元のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2057">A sequence to create a <see cref="T:System.Collections.Generic.Dictionary`2" /> from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-2058">各要素からキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2058">A function to extract a key from each element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="29c9e-2059">各要素から結果の要素値を生成する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2059">A transform function to produce a result element value from each element.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-2060">キーを比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2060">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="29c9e-2061">指定されたキー セレクター関数、比較子、および要素セレクター関数に従って、<see cref="T:System.Linq.ParallelQuery`1" /> から <see cref="T:System.Collections.Generic.Dictionary`2" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2061">Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to a specified key selector function, a comparer, and an element selector function.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2062">入力シーケンスから選択された <paramref name="TElement" /> 型の値を格納する <see cref="T:System.Collections.Generic.Dictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2062">A <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains values of type <paramref name="TElement" /> selected from the input sequence</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-2063"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2063">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-2064"><paramref name="source" /> または <paramref name="keySelector" /> または <paramref name="elementSelector" /> が null 参照 (Visual Basic の Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2064"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-2065"><paramref name="keySelector" /> が null 参照 (Visual Basic の場合は Nothing) のキーを生成しています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2065"><paramref name="keySelector" /> produces a key that is a null reference (Nothing in Visual Basic).</span></span> <span data-ttu-id="29c9e-2066">または、<paramref name="keySelector" /> が 2 つの要素に対して重複するキーを生成しています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2066">-or- <paramref name="keySelector" /> produces duplicate keys for two elements.</span></span> <span data-ttu-id="29c9e-2067">または、クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2067">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2068">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2068">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToList&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.List&lt;TSource&gt; ToList&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.List`1&lt;!!TSource&gt; ToList&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToList(Of TSource) (source As ParallelQuery(Of TSource)) As List(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::List&lt;TSource&gt; ^ ToList(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ToList : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Collections.Generic.List&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.ToList source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-2069"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2069">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-2070"><see cref="T:System.Collections.Generic.List`1" /> の作成元のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2070">A sequence to create a <see cref="T:System.Collections.Generic.List`1" /> from.</span></span></param>
        <summary><span data-ttu-id="29c9e-2071"><see cref="T:System.Linq.ParallelQuery`1" /> から <see cref="T:System.Collections.Generic.List`1" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2071">Creates a <see cref="T:System.Collections.Generic.List`1" /> from an <see cref="T:System.Linq.ParallelQuery`1" />.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2072">入力シーケンスの要素を含む <see cref="T:System.Collections.Generic.List`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2072">A <see cref="T:System.Collections.Generic.List`1" /> that contains elements from the input sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-2073"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2073">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-2074"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2074"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-2075">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2075">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2076">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2076">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToLookup&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-2077"><see cref="T:System.Linq.ParallelQuery`1" /> から <see cref="T:System.Linq.ILookup`2" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2077">Creates an <see cref="T:System.Linq.ILookup`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToLookup&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ILookup&lt;TKey,TSource&gt; ToLookup&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ILookup`2&lt;!!TKey, !!TSource&gt; ToLookup&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLookup(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As ILookup(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ILookup&lt;TKey, TSource&gt; ^ ToLookup(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ToLookup : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Linq.ILookup&lt;'Key, 'Source&gt;" Usage="System.Linq.ParallelEnumerable.ToLookup (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ILookup&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-2078"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2078">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-2079"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2079">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-2080"><see cref="T:System.Linq.ILookup`2" /> の作成元のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2080">The sequence to create a <see cref="T:System.Linq.ILookup`2" /> from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-2081">各要素からキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2081">A function to extract a key from each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-2082">指定されたキー セレクター関数に従って、<see cref="T:System.Linq.ParallelQuery`1" /> から <see cref="T:System.Linq.ILookup`2" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2082">Creates an <see cref="T:System.Linq.ILookup`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to a specified key selector function.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2083">キーと値を格納している <see cref="T:System.Linq.ILookup`2" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2083">A <see cref="T:System.Linq.ILookup`2" /> that contains keys and values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-2084"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2084">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-2085"><paramref name="source" /> または <paramref name="keySelector" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2085"><paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-2086">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2086">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2087">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2087">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToLookup&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ILookup&lt;TKey,TSource&gt; ToLookup&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ILookup`2&lt;!!TKey, !!TSource&gt; ToLookup&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLookup(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IEqualityComparer(Of TKey)) As ILookup(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ILookup&lt;TKey, TSource&gt; ^ ToLookup(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ToLookup : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ILookup&lt;'Key, 'Source&gt;" Usage="System.Linq.ParallelEnumerable.ToLookup (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ILookup&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-2088"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2088">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-2089"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2089">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-2090"><see cref="T:System.Linq.ILookup`2" /> の作成元のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2090">The sequence to create a <see cref="T:System.Linq.ILookup`2" /> from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-2091">各要素からキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2091">A function to extract a key from each element.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-2092">キーを比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2092">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="29c9e-2093">指定されたキー セレクター関数およびキーの比較子に従って、<see cref="T:System.Linq.ParallelQuery`1" /> から <see cref="T:System.Linq.ILookup`2" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2093">Creates an <see cref="T:System.Linq.ILookup`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to a specified key selector function and key comparer.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2094">キーと値を格納している <see cref="T:System.Linq.ILookup`2" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2094">A <see cref="T:System.Linq.ILookup`2" /> that contains keys and values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-2095"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2095">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-2096"><paramref name="source" /> または <paramref name="keySelector" /> が null 参照 (Visual Basic の Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2096"><paramref name="source" /> or <paramref name="keySelector" /> or is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-2097">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2097">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2098">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2098">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToLookup&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ILookup&lt;TKey,TElement&gt; ToLookup&lt;TSource,TKey,TElement&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ILookup`2&lt;!!TKey, !!TElement&gt; ToLookup&lt;TSource, TKey, TElement&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLookup(Of TSource, TKey, TElement) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement)) As ILookup(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ILookup&lt;TKey, TElement&gt; ^ ToLookup(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member ToLookup : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; -&gt; System.Linq.ILookup&lt;'Key, 'Element&gt;" Usage="System.Linq.ParallelEnumerable.ToLookup (source, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ILookup&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-2099"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2099">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-2100"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2100">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="29c9e-2101"><paramref name="elementSelector" /> によって返される値の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2101">The type of the value returned by <paramref name="elementSelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-2102"><see cref="T:System.Linq.ILookup`2" /> の作成元のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2102">The sequence to create a <see cref="T:System.Linq.ILookup`2" /> from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-2103">各要素からキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2103">A function to extract a key from each element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="29c9e-2104">各要素から結果の要素値を生成する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2104">A transform function to produce a result element value from each element.</span></span></param>
        <summary><span data-ttu-id="29c9e-2105">指定されたキー セレクター関数および要素セレクター関数に従って、<see cref="T:System.Linq.ParallelQuery`1" /> から <see cref="T:System.Linq.ILookup`2" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2105">Creates an <see cref="T:System.Linq.ILookup`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to specified key selector and element selector functions.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2106">入力シーケンスから選択された <paramref name="TElement" /> 型の値を格納する <see cref="T:System.Linq.ILookup`2" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2106">A <see cref="T:System.Linq.ILookup`2" /> that contains values of type <paramref name="TElement" /> selected from the input sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-2107"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2107">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-2108"><paramref name="source" /> または <paramref name="keySelector" /> または <paramref name="elementSelector" /> が null 参照 (Visual Basic の Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2108"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-2109">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2109">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2110">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2110">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToLookup&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ILookup&lt;TKey,TElement&gt; ToLookup&lt;TSource,TKey,TElement&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ILookup`2&lt;!!TKey, !!TElement&gt; ToLookup&lt;TSource, TKey, TElement&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLookup(Of TSource, TKey, TElement) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement), comparer As IEqualityComparer(Of TKey)) As ILookup(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ILookup&lt;TKey, TElement&gt; ^ ToLookup(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ToLookup : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ILookup&lt;'Key, 'Element&gt;" Usage="System.Linq.ParallelEnumerable.ToLookup (source, keySelector, elementSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ILookup&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-2111"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2111">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="29c9e-2112"><paramref name="keySelector" /> によって返されるキーの型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2112">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="29c9e-2113"><paramref name="elementSelector" /> によって返される値の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2113">The type of the value returned by <paramref name="elementSelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-2114"><see cref="T:System.Linq.ILookup`2" /> の作成元のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2114">The sequence to create a <see cref="T:System.Linq.ILookup`2" /> from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="29c9e-2115">各要素からキーを抽出する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2115">A function to extract a key from each element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="29c9e-2116">各要素から結果の要素値を生成する変換関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2116">A transform function to produce a result element value from each element.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-2117">キーを比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2117">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="29c9e-2118">指定されたキー セレクター関数、比較子、および要素セレクター関数に従って、<see cref="T:System.Linq.ParallelQuery`1" /> から <see cref="T:System.Linq.ILookup`2" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2118">Creates an <see cref="T:System.Linq.ILookup`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to a specified key selector function, a comparer and an element selector function.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2119">入力シーケンスから選択された TElement 型の値を格納している Lookup&lt;(Of &lt;(TKey, TElement&gt;)&gt;)。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2119">A Lookup&lt;(Of &lt;(TKey, TElement&gt;)&gt;) that contains values of type TElement selected from the input sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-2120"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2120">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-2121"><paramref name="source" /> または <paramref name="keySelector" /> または <paramref name="elementSelector" /> が null 参照 (Visual Basic の Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2121"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-2122">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2122">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2123">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2123">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Union&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-2124">2 つの並列シーケンスの和集合を生成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2124">Produces the set union of two parallel sequences.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Union&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Union&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Union&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Union(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Union : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Union (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-2125">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2125">This type parameter is not used.</span></span></typeparam>
        <param name="first"><span data-ttu-id="29c9e-2126">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2126">This parameter is not used.</span></span></param>
        <param name="second"><span data-ttu-id="29c9e-2127">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2127">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="29c9e-2128">この Union オーバーロードは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2128">This Union overload should never be called.</span></span> <span data-ttu-id="29c9e-2129">このメソッドは互換性のために残されており、呼び出すと常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2129">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2130">このオーバーロードは常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2130">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-2131">このオーバーロードは、<xref:System.Linq.ParallelQuery%601> 型の左側のデータソースと、<xref:System.Collections.Generic.IEnumerable%601>型の適切なデータソースとの共用体の使用を許可しないために存在します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2131">This overload exists to disallow usage of Union with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="29c9e-2132">それ以外の場合、Union 演算子は並列実装にバインドするように見えますが、実際には順次実装にバインドされます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2132">Otherwise, the Union operator would appear to be binding to the parallel implementation, but would in reality bind to sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="29c9e-2133">このメソッドが呼び出されたときに発生する例外。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2133">The exception that occurs when this method is called.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-2134"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2134">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-2135">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2135">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2136">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2136">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Union&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Union&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Union&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Union(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Union : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Union (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-2137">入力シーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2137">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="first"><span data-ttu-id="29c9e-2138">和集合の 1 番目のセットを形成する一意の要素を格納するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2138">A sequence whose distinct elements form the first set for the union.</span></span></param>
        <param name="second"><span data-ttu-id="29c9e-2139">和集合の 2 番目のセットを形成する一意の要素を格納するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2139">A sequence whose distinct elements form the second set for the union.</span></span></param>
        <summary><span data-ttu-id="29c9e-2140">既定の等値比較子を使用して、2 つの並列シーケンスの和集合を生成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2140">Produces the set union of two parallel sequences by using the default equality comparer.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2141">2 つの入力シーケンスの要素 (重複する要素は除く) を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2141">A sequence that contains the elements from both input sequences, excluding duplicates.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-2142"><paramref name="first" /> または <paramref name="second" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2142"><paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-2143"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2143">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-2144">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2144">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2145">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2145">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Union&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Union&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Union&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Union(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Union : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Union (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-2146">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2146">This type parameter is not used.</span></span></typeparam>
        <param name="first"><span data-ttu-id="29c9e-2147">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2147">This parameter is not used.</span></span></param>
        <param name="second"><span data-ttu-id="29c9e-2148">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2148">This parameter is not used.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-2149">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2149">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="29c9e-2150">この Union オーバーロードは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2150">This Union overload should never be called.</span></span> <span data-ttu-id="29c9e-2151">このメソッドは互換性のために残されており、呼び出すと常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2151">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2152">このオーバーロードは常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2152">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-2153">このオーバーロードは、<xref:System.Linq.ParallelQuery%601> 型の左側のデータソースと、<xref:System.Collections.Generic.IEnumerable%601>型の適切なデータソースとの共用体の使用を許可しないために存在します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2153">This overload exists to disallow usage of Union with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="29c9e-2154">それ以外の場合、Union 演算子は並列実装にバインドされているように見えますが、実際にはシーケンシャルな実装にバインドされます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2154">Otherwise, the Union operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="29c9e-2155">このメソッドが呼び出されたときに発生する例外。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2155">The exception that occurs when this method is called.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-2156"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2156">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-2157">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2157">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2158">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2158">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Union&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Union&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Union&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Union(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Union : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Union (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-2159">入力シーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2159">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="first"><span data-ttu-id="29c9e-2160">和集合の 1 番目のセットを形成する一意の要素を格納するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2160">A sequence whose distinct elements form the first set for the union.</span></span></param>
        <param name="second"><span data-ttu-id="29c9e-2161">和集合の 2 番目のセットを形成する一意の要素を格納するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2161">A sequence whose distinct elements form the second set for the union.</span></span></param>
        <param name="comparer"><span data-ttu-id="29c9e-2162">値を比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2162">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></param>
        <summary><span data-ttu-id="29c9e-2163">指定された IEqualityComparer{T} を使用して 2 つの並列シーケンスの和集合を生成します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2163">Produces the set union of two parallel sequences by using a specified IEqualityComparer{T}.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2164">2 つの入力シーケンスの要素 (重複する要素は除く) を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2164">A sequence that contains the elements from both input sequences, excluding duplicates.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-2165"><paramref name="first" /> または <paramref name="second" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2165"><paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-2166"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2166">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-2167">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2167">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2168">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2168">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Where&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-2169">述語に基づいて値のシーケンスを並列でフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2169">Filters in parallel a sequence of values based on a predicate.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Where&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Where&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Where&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Where(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-2170">source の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2170">The type of the elements of source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-2171">フィルター処理するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2171">A sequence to filter.</span></span></param>
        <param name="predicate"><span data-ttu-id="29c9e-2172">各要素が条件を満たしているかどうかをテストする関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2172">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="29c9e-2173">述語に基づいて値のシーケンスを並列でフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2173">Filters in parallel a sequence of values based on a predicate.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2174">条件を満たす入力シーケンスからの要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2174">A sequence that contains elements from the input sequence that satisfy the condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-2175"><paramref name="source" /> または <paramref name="predicate" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2175"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-2176"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2176">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-2177">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2177">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2178">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2178">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Where&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Where&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Where&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, int32, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Integer, Boolean)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Where(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int, bool&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Int32,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-2179">source の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2179">The type of the elements of source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-2180">フィルター処理するシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2180">A sequence to filter.</span></span></param>
        <param name="predicate"><span data-ttu-id="29c9e-2181">各要素が条件を満たしているかどうかをテストする関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2181">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="29c9e-2182">述語に基づいて値のシーケンスを並列でフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2182">Filters in parallel a sequence of values based on a predicate.</span></span> <span data-ttu-id="29c9e-2183">各要素のインデックスは、述語関数のロジックで使用されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2183">Each element's index is used in the logic of the predicate function.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2184">条件を満たす入力シーケンスからの要素を格納しているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2184">A sequence that contains elements from the input sequence that satisfy the condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-2185"><paramref name="source" /> または <paramref name="predicate" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2185"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-2186"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2186">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="29c9e-2187"><see cref="F:System.Int32.MaxValue" /> を超える要素が、クエリで列挙されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2187">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by the query.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-2188">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2188">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2189">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2189">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WithCancellation&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; WithCancellation&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; WithCancellation&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithCancellation(Of TSource) (source As ParallelQuery(Of TSource), cancellationToken As CancellationToken) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ WithCancellation(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member WithCancellation : System.Linq.ParallelQuery&lt;'Source&gt; * System.Threading.CancellationToken -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.WithCancellation (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-2190"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2190">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-2191">オプションを設定する対象の ParallelQuery。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2191">A ParallelQuery on which to set the option.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="29c9e-2192">キャンセル トークン。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2192">A cancellation token.</span></span></param>
        <summary><span data-ttu-id="29c9e-2193">クエリに関連付ける <see cref="T:System.Threading.CancellationToken" /> を設定します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2193">Sets the <see cref="T:System.Threading.CancellationToken" /> to associate with the query.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2194">source と同じクエリを表すが、キャンセル トークンが登録されている ParallelQuery。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2194">ParallelQuery representing the same query as source, but with the registered cancellation token.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="29c9e-2195">破棄された <paramref name="cancellationToken" /> に関連付けられている <see cref="T:System.Threading.CancellationTokenSource" />。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2195">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <paramref name="cancellationToken" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-2196"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2196"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-2197"><paramref name="WithCancellation" /> はクエリで複数回使用されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2197"><paramref name="WithCancellation" /> is used multiple times in the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2198">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2198">Parallel LINQ (PLINQ)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/80b14640-edfa-4153-be1b-3e003d3e9c1a"><span data-ttu-id="29c9e-2199">方法: PLINQ クエリを取り消す</span><span class="sxs-lookup"><span data-stu-id="29c9e-2199">How to: Cancel a PLINQ Query</span></span></related>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md"><span data-ttu-id="29c9e-2200">キャンセル</span><span class="sxs-lookup"><span data-stu-id="29c9e-2200">Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WithDegreeOfParallelism&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; WithDegreeOfParallelism&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, int degreeOfParallelism);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; WithDegreeOfParallelism&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, int32 degreeOfParallelism) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithDegreeOfParallelism(Of TSource) (source As ParallelQuery(Of TSource), degreeOfParallelism As Integer) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ WithDegreeOfParallelism(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, int degreeOfParallelism);" />
      <MemberSignature Language="F#" Value="static member WithDegreeOfParallelism : System.Linq.ParallelQuery&lt;'Source&gt; * int -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.WithDegreeOfParallelism (source, degreeOfParallelism)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="degreeOfParallelism" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-2201"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2201">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-2202">並列化の次数に対する制限を設定する ParallelQuery。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2202">A ParallelQuery on which to set the limit on the degrees of parallelism.</span></span></param>
        <param name="degreeOfParallelism"><span data-ttu-id="29c9e-2203">クエリで使用する並列化の次数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2203">The degree of parallelism for the query.</span></span></param>
        <summary><span data-ttu-id="29c9e-2204">クエリで使用する並列化の次数を設定します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2204">Sets the degree of parallelism to use in a query.</span></span> <span data-ttu-id="29c9e-2205">並列化の次数とは、クエリの処理において同時実行されるタスクの最大数です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2205">Degree of parallelism is the maximum number of concurrently executing tasks that will be used to process the query.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2206">並列化の次数が制限されている source と同じクエリを表す ParallelQuery。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2206">ParallelQuery representing the same query as source, with the limit on the degrees of parallelism set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-2207"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2207"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="29c9e-2208"><paramref name="degreeOfParallelism" /> が 1 より小さいか、または 512 を超えています。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2208"><paramref name="degreeOfParallelism" /> is less than 1 or greater than 512.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-2209">WithDegreeOfParallelism は、クエリで複数回使用されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2209">WithDegreeOfParallelism is used multiple times in the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2210">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2210">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WithExecutionMode&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; WithExecutionMode&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, System.Linq.ParallelExecutionMode executionMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; WithExecutionMode&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, valuetype System.Linq.ParallelExecutionMode executionMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithExecutionMode(Of TSource) (source As ParallelQuery(Of TSource), executionMode As ParallelExecutionMode) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ WithExecutionMode(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, System::Linq::ParallelExecutionMode executionMode);" />
      <MemberSignature Language="F#" Value="static member WithExecutionMode : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelExecutionMode -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.WithExecutionMode (source, executionMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="executionMode" Type="System.Linq.ParallelExecutionMode" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-2211"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2211">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-2212">オプションを設定する対象の ParallelQuery。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2212">A ParallelQuery on which to set the option.</span></span></param>
        <param name="executionMode"><span data-ttu-id="29c9e-2213">クエリの実行モード。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2213">The mode in which to execute the query.</span></span></param>
        <summary><span data-ttu-id="29c9e-2214">クエリの実行モードを設定します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2214">Sets the execution mode of the query.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2215">source と同じクエリを表すが、クエリの実行モードが登録されている ParallelQuery。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2215">ParallelQuery representing the same query as source, but with the registered execution mode.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-2216">実行モードでは、特定のクエリ図形が検出された場合に、PLINQ が順次実行に切り替えようとするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2216">The execution mode specifies whether PLINQ will attempt to fall back to sequential execution if it detects certain query shapes.</span></span> <span data-ttu-id="29c9e-2217">詳細と例については、「[方法: PLINQ で実行モードを指定](~/docs/standard/parallel-programming/how-to-specify-the-execution-mode-in-plinq.md)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2217">For more information and examples, see [How to: Specify the Execution Mode in PLINQ](~/docs/standard/parallel-programming/how-to-specify-the-execution-mode-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-2218"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2218"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29c9e-2219"><paramref name="executionMode" /> が有効な <see cref="T:System.Linq.ParallelExecutionMode" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2219"><paramref name="executionMode" /> is not a valid <see cref="T:System.Linq.ParallelExecutionMode" /> value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-2220">WithExecutionMode は、クエリで複数回使用されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2220">WithExecutionMode is used multiple times in the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2221">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2221">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WithMergeOptions&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; WithMergeOptions&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, System.Linq.ParallelMergeOptions mergeOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; WithMergeOptions&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, valuetype System.Linq.ParallelMergeOptions mergeOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithMergeOptions(Of TSource) (source As ParallelQuery(Of TSource), mergeOptions As ParallelMergeOptions) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ WithMergeOptions(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, System::Linq::ParallelMergeOptions mergeOptions);" />
      <MemberSignature Language="F#" Value="static member WithMergeOptions : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelMergeOptions -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.WithMergeOptions (source, mergeOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="mergeOptions" Type="System.Linq.ParallelMergeOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="29c9e-2222"><paramref name="source" /> の要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2222">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="29c9e-2223">オプションを設定する対象の ParallelQuery。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2223">A ParallelQuery on which to set the option.</span></span></param>
        <param name="mergeOptions"><span data-ttu-id="29c9e-2224">このクエリに設定するマージ オプション。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2224">The merge options to set for this query.</span></span></param>
        <summary><span data-ttu-id="29c9e-2225">このクエリのマージ オプションを設定します。このオプションは、クエリが出力をバッファリングする方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2225">Sets the merge options for this query, which specify how the query will buffer output.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2226">source と同じクエリを表すが、マージ オプションが登録されている ParallelQuery。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2226">ParallelQuery representing the same query as source, but with the registered merge options.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-2227"><paramref name="source" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2227"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29c9e-2228"><paramref name="mergeOptions" /> が有効な <see cref="T:System.Linq.ParallelMergeOptions" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2228"><paramref name="mergeOptions" /> is not a valid <see cref="T:System.Linq.ParallelMergeOptions" /> value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29c9e-2229"><paramref name="WithMergeOptions" /> はクエリで複数回使用されます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2229"><paramref name="WithMergeOptions" /> is used multiple times in the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2230">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2230">Parallel LINQ (PLINQ)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e8f7be3b-88de-4f33-ab14-dc008e76c1ba"><span data-ttu-id="29c9e-2231">PLINQ のマージ オプション</span><span class="sxs-lookup"><span data-stu-id="29c9e-2231">Merge Options in PLINQ</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0f33b527-e91a-4550-a39a-e63e396fd831"><span data-ttu-id="29c9e-2232">方法: PLINQ のマージ オプションを指定する</span><span class="sxs-lookup"><span data-stu-id="29c9e-2232">How to: Specify Merge Options in PLINQ</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Zip&lt;TFirst,TSecond,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29c9e-2233">指定された述語関数を使用して 2 つのシーケンスを並列でマージします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2233">Merges in parallel two sequences by using the specified predicate function.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Zip&lt;TFirst,TSecond,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Zip&lt;TFirst,TSecond,TResult&gt; (this System.Linq.ParallelQuery&lt;TFirst&gt; first, System.Collections.Generic.IEnumerable&lt;TSecond&gt; second, Func&lt;TFirst,TSecond,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Zip&lt;TFirst, TSecond, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TFirst&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSecond&gt; second, class System.Func`3&lt;!!TFirst, !!TSecond, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Zip(Of TFirst, TSecond, TResult) (first As ParallelQuery(Of TFirst), second As IEnumerable(Of TSecond), resultSelector As Func(Of TFirst, TSecond, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFirst, typename TSecond, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Zip(System::Linq::ParallelQuery&lt;TFirst&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSecond&gt; ^ second, Func&lt;TFirst, TSecond, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Zip : System.Linq.ParallelQuery&lt;'First&gt; * seq&lt;'Second&gt; * Func&lt;'First, 'Second, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Zip (first, second, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFirst" />
        <TypeParameter Name="TSecond" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TFirst&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSecond&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TFirst,TSecond,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TFirst"><span data-ttu-id="29c9e-2234">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2234">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TSecond"><span data-ttu-id="29c9e-2235">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2235">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-2236">この型パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2236">This type parameter is not used.</span></span></typeparam>
        <param name="first"><span data-ttu-id="29c9e-2237">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2237">This parameter is not used.</span></span></param>
        <param name="second"><span data-ttu-id="29c9e-2238">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2238">This parameter is not used.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="29c9e-2239">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2239">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="29c9e-2240">この Zip オーバーロードは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2240">This Zip overload should never be called.</span></span> <span data-ttu-id="29c9e-2241">このメソッドは互換性のために残されており、呼び出すと常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2241">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when invoked.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2242">このオーバーロードは常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2242">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c9e-2243">このオーバーロードは、<xref:System.Linq.ParallelQuery%601> 型の左側のデータソースと、<xref:System.Collections.Generic.IEnumerable%601>型の適切なデータソースによる Zip の使用を禁止するために存在します。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2243">This overload exists to disallow usage of Zip with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="29c9e-2244">それ以外の場合、Zip 演算子は並列実装にバインドされているように見えますが、実際にはシーケンシャルな実装にバインドされます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2244">Otherwise, the Zip operator would appear to be bind to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="29c9e-2245">このメソッドが呼び出されたときに発生する例外。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2245">The exception that occurs when this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="29c9e-2246">Parallel LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="29c9e-2246">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Zip&lt;TFirst,TSecond,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Zip&lt;TFirst,TSecond,TResult&gt; (this System.Linq.ParallelQuery&lt;TFirst&gt; first, System.Linq.ParallelQuery&lt;TSecond&gt; second, Func&lt;TFirst,TSecond,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Zip&lt;TFirst, TSecond, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TFirst&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSecond&gt; second, class System.Func`3&lt;!!TFirst, !!TSecond, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Zip(Of TFirst, TSecond, TResult) (first As ParallelQuery(Of TFirst), second As ParallelQuery(Of TSecond), resultSelector As Func(Of TFirst, TSecond, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFirst, typename TSecond, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Zip(System::Linq::ParallelQuery&lt;TFirst&gt; ^ first, System::Linq::ParallelQuery&lt;TSecond&gt; ^ second, Func&lt;TFirst, TSecond, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Zip : System.Linq.ParallelQuery&lt;'First&gt; * System.Linq.ParallelQuery&lt;'Second&gt; * Func&lt;'First, 'Second, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Zip (first, second, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFirst" />
        <TypeParameter Name="TSecond" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TFirst&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSecond&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TFirst,TSecond,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TFirst"><span data-ttu-id="29c9e-2247">最初のシーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2247">The type of the elements of the first sequence.</span></span></typeparam>
        <typeparam name="TSecond"><span data-ttu-id="29c9e-2248">2 番目のシーケンスの要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2248">The type of the elements of the second sequence.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="29c9e-2249">返される要素の型。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2249">The type of the return elements.</span></span></typeparam>
        <param name="first"><span data-ttu-id="29c9e-2250">結合する 1 番目のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2250">The first sequence to zip.</span></span></param>
        <param name="second"><span data-ttu-id="29c9e-2251">結合する 2 番目のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2251">The second sequence to zip.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="29c9e-2252">一致する 2 つの要素から結果の要素を作成する関数。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2252">A function to create a result element from two matching elements.</span></span></param>
        <summary><span data-ttu-id="29c9e-2253">指定された述語関数を使用して 2 つのシーケンスを並列でマージします。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2253">Merges in parallel two sequences by using the specified predicate function.</span></span></summary>
        <returns><span data-ttu-id="29c9e-2254">2 つのシーケンスに対して <paramref name="resultSelector" /> をペアで実行することによって取得される <paramref name="TResult" /> 型の要素が格納されているシーケンス。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2254">A sequence that has elements of type <paramref name="TResult" /> that are obtained by performing <paramref name="resultSelector" /> pairwise on two sequences.</span></span> <span data-ttu-id="29c9e-2255">シーケンスの長さが異なる場合は、長いシーケンスが短いシーケンスに合わせて切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2255">If the sequence lengths are unequal, this truncates to the length of the shorter sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29c9e-2256"><paramref name="first" /> または <paramref name="second" /> または <paramref name="resultSelector" /> が null 参照 (Visual Basic の Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2256"><paramref name="first" /> or <paramref name="second" /> or <paramref name="resultSelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="29c9e-2257"><paramref name="WithCancellation" /> 経由で渡されたトークンで、クエリが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2257">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="29c9e-2258">クエリ評価中に 1 つまたは複数の例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="29c9e-2258">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
