<Type Name="ISynchronizeInvoke" FullName="System.ComponentModel.ISynchronizeInvoke">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02941803711a167a3426bc295a9316c5c2301bc6" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75146844" /></Metadata><TypeSignature Language="C#" Value="public interface ISynchronizeInvoke" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISynchronizeInvoke" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ISynchronizeInvoke" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISynchronizeInvoke" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISynchronizeInvoke" />
  <TypeSignature Language="F#" Value="type ISynchronizeInvoke = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="16c9c-101">デリゲートを同期的または非同期的に実行する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="16c9c-101">Provides a way to synchronously or asynchronously execute a delegate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16c9c-102"><xref:System.ComponentModel.ISynchronizeInvoke> インターフェイスは、イベントの発生に関するオブジェクト間の同期通信と非同期通信を提供します。</span><span class="sxs-lookup"><span data-stu-id="16c9c-102">The <xref:System.ComponentModel.ISynchronizeInvoke> interface provides synchronous and asynchronous communication between objects about the occurrence of an event.</span></span> <span data-ttu-id="16c9c-103">このインターフェイスを実装するオブジェクトは、イベントが発生したという通知を受け取り、イベントに関するクエリに応答できます。</span><span class="sxs-lookup"><span data-stu-id="16c9c-103">Objects that implement this interface can receive notification that an event has occurred, and they can respond to queries about the event.</span></span> <span data-ttu-id="16c9c-104">これにより、クライアントは、最初の要求の完了に依存する後続の要求を送信する前に、1つの要求が処理されたことを確認できます。</span><span class="sxs-lookup"><span data-stu-id="16c9c-104">In this way, clients can ensure that one request has been processed before they submit a subsequent request that depends on completion of the first.</span></span>  
  
 <span data-ttu-id="16c9c-105"><xref:System.ComponentModel.ISynchronizeInvoke> クラスには、プロセスを呼び出すための2つの方法が用意されています。</span><span class="sxs-lookup"><span data-stu-id="16c9c-105">The <xref:System.ComponentModel.ISynchronizeInvoke> class provides two ways to invoke a process:</span></span>  
  
1.  <span data-ttu-id="16c9c-106">非同期的に、<xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="16c9c-106">Asynchronously, by using the <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> method.</span></span> <span data-ttu-id="16c9c-107"><xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> はプロセスを開始し、すぐに制御を戻します。</span><span class="sxs-lookup"><span data-stu-id="16c9c-107"><xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> starts a process and then returns immediately.</span></span> <span data-ttu-id="16c9c-108"><xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> を使用して、<xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> によって開始されたプロセスが完了するまで待機します。</span><span class="sxs-lookup"><span data-stu-id="16c9c-108">Use <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> to wait until the process started by <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> completes.</span></span>  
  
2.  <span data-ttu-id="16c9c-109"><xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> メソッドを使用して同期的に行います。</span><span class="sxs-lookup"><span data-stu-id="16c9c-109">Synchronously, by using the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method.</span></span> <span data-ttu-id="16c9c-110"><xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> プロセスを開始し、完了するまで待機してから、を返します。</span><span class="sxs-lookup"><span data-stu-id="16c9c-110"><xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> starts a process, waits until it completes, and then returns.</span></span> <span data-ttu-id="16c9c-111">呼び出しを適切なスレッドにマーシャリングするために、コントロールのメインスレッドが呼び出し元のスレッドと異なる場合は、<xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="16c9c-111">Use <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> when the control's main thread is different from the calling thread to marshal the call to the proper thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="16c9c-112">このクラスに適用される <xref:System.Security.Permissions.HostProtectionAttribute> 属性には、<xref:System.Security.Permissions.HostProtectionResource.Synchronization> &#124; <xref:System.Security.Permissions.HostProtectionResource.ExternalThreading>の <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> プロパティ値があります。</span><span class="sxs-lookup"><span data-stu-id="16c9c-112">The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource.Synchronization> &#124; <xref:System.Security.Permissions.HostProtectionResource.ExternalThreading>.</span></span> <span data-ttu-id="16c9c-113"><xref:System.Security.Permissions.HostProtectionAttribute> は、デスクトップ アプリケーション (通常、アイコンのダブルクリック、コマンドの入力、またはブラウザーへの URL の入力により起動されます) には影響しません。</span><span class="sxs-lookup"><span data-stu-id="16c9c-113">The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser).</span></span> <span data-ttu-id="16c9c-114">詳細については、「<xref:System.Security.Permissions.HostProtectionAttribute> クラス」または「 [SQL Server プログラミングとホスト保護の属性](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="16c9c-114">For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
  </Docs>
  <Members>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, args As Object()) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginInvoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member BeginInvoke : Delegate * obj[] -&gt; IAsyncResult" Usage="iSynchronizeInvoke.BeginInvoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="16c9c-115"><see cref="T:System.Delegate" /> に指定されているのと同じ数および型のパラメーターをとるメソッドへの <paramref name="args" />。</span><span class="sxs-lookup"><span data-stu-id="16c9c-115">A <see cref="T:System.Delegate" /> to a method that takes parameters of the same number and type that are contained in <paramref name="args" />.</span></span></param>
        <param name="args"><span data-ttu-id="16c9c-116">特定のメソッドに引数として渡す <see cref="T:System.Object" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="16c9c-116">An array of type <see cref="T:System.Object" /> to pass as arguments to the given method.</span></span> <span data-ttu-id="16c9c-117">引数が必要ない場合は、<see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="16c9c-117">This can be <see langword="null" /> if no arguments are needed.</span></span></param>
        <summary><span data-ttu-id="16c9c-118">このオブジェクトを作成したスレッド上でデリゲートを非同期的に実行します。</span><span class="sxs-lookup"><span data-stu-id="16c9c-118">Asynchronously executes the delegate on the thread that created this object.</span></span></summary>
        <returns><span data-ttu-id="16c9c-119">このメソッドを呼び出すことによって開始された非同期操作を表す <see cref="T:System.IAsyncResult" /> インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="16c9c-119">An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling this method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16c9c-120">`method` デリゲートは、<xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> が呼び出されたスレッドではなく、オブジェクトを作成したスレッドで実行されます。</span><span class="sxs-lookup"><span data-stu-id="16c9c-120">The `method` delegate is executed on the thread that created the object, instead of the thread on which <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> was called.</span></span>  
  
 <span data-ttu-id="16c9c-121">デリゲートは非同期的に呼び出され、このメソッドは直ちに制御を返します。</span><span class="sxs-lookup"><span data-stu-id="16c9c-121">The delegate is called asynchronously, and this method returns immediately.</span></span> <span data-ttu-id="16c9c-122">このメソッドは、任意のスレッドから呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="16c9c-122">You can call this method from any thread.</span></span> <span data-ttu-id="16c9c-123">このメソッドで開始されたプロセスからの戻り値が必要な場合は、<xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> を呼び出して値を取得します。</span><span class="sxs-lookup"><span data-stu-id="16c9c-123">If you need the return value from a process started with this method, call <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> to get the value.</span></span>  
  
 <span data-ttu-id="16c9c-124">デリゲートを同期的に呼び出す必要がある場合は、代わりに <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="16c9c-124">If you need to call the delegate synchronously, use the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="public object EndInvoke (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndInvoke(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndInvoke (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ EndInvoke(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndInvoke : IAsyncResult -&gt; obj" Usage="iSynchronizeInvoke.EndInvoke result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="16c9c-125"><see cref="T:System.IAsyncResult" /> の呼び出しによって開始された非同期操作を表す <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="16c9c-125">An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />.</span></span></param>
        <summary><span data-ttu-id="16c9c-126"><see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> の呼び出しによって開始されたプロセスが完了するまで待機し、そのプロセスによって生成された値を返します。</span><span class="sxs-lookup"><span data-stu-id="16c9c-126">Waits until the process started by calling <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> completes, and then returns the value generated by the process.</span></span></summary>
        <returns><span data-ttu-id="16c9c-127">非同期操作によって生成された戻り値を表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="16c9c-127">An <see cref="T:System.Object" /> that represents the return value generated by the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16c9c-128">このメソッドは、このインターフェイスによって渡される <xref:System.IAsyncResult> によって表される非同期操作の戻り値を取得します。</span><span class="sxs-lookup"><span data-stu-id="16c9c-128">This method gets the return value of the asynchronous operation represented by the <xref:System.IAsyncResult> passed by this interface.</span></span> <span data-ttu-id="16c9c-129">非同期操作が完了していない場合、このメソッドは結果が使用可能になるまで待機します。</span><span class="sxs-lookup"><span data-stu-id="16c9c-129">If the asynchronous operation has not completed, this method will wait until the result is available.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : Delegate * obj[] -&gt; obj" Usage="iSynchronizeInvoke.Invoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="16c9c-130">コントロールのスレッドのコンテキストにおいて、呼び出すメソッドを格納している <see cref="T:System.Delegate" />。</span><span class="sxs-lookup"><span data-stu-id="16c9c-130">A <see cref="T:System.Delegate" /> that contains a method to call, in the context of the thread for the control.</span></span></param>
        <param name="args"><span data-ttu-id="16c9c-131">特定のメソッドに渡す引数を表す、<see cref="T:System.Object" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="16c9c-131">An array of type <see cref="T:System.Object" /> that represents the arguments to pass to the given method.</span></span> <span data-ttu-id="16c9c-132">引数が必要ない場合は、<see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="16c9c-132">This can be <see langword="null" /> if no arguments are needed.</span></span></param>
        <summary><span data-ttu-id="16c9c-133">このオブジェクトを作成したスレッド上でデリゲートを同期的に呼び出し、その呼び出しを作成元のスレッドにマーシャリングします。</span><span class="sxs-lookup"><span data-stu-id="16c9c-133">Synchronously executes the delegate on the thread that created this object and marshals the call to the creating thread.</span></span></summary>
        <returns><span data-ttu-id="16c9c-134">呼び出されているデリゲートからの戻り値を表す <see cref="T:System.Object" />。デリゲートに戻り値がない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="16c9c-134">An <see cref="T:System.Object" /> that represents the return value from the delegate being invoked, or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16c9c-135"><xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>とは異なり、このメソッドは同期的に動作します。つまり、が返される前にプロセスが完了するまで待機します。</span><span class="sxs-lookup"><span data-stu-id="16c9c-135">Unlike <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>, this method operates synchronously, that is, it waits until the process completes before returning.</span></span> <span data-ttu-id="16c9c-136">呼び出し中に発生した例外は、呼び出し元に反映されます。</span><span class="sxs-lookup"><span data-stu-id="16c9c-136">Exceptions raised during the call are propagated back to the caller.</span></span>  
  
 <span data-ttu-id="16c9c-137">このメソッドは、別のスレッドからメソッドを呼び出して、適切なスレッドへの呼び出しをマーシャリングするときに使用します。</span><span class="sxs-lookup"><span data-stu-id="16c9c-137">Use this method when calling a method from a different thread to marshal the call to the proper thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeRequired">
      <MemberSignature Language="C#" Value="public bool InvokeRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InvokeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InvokeRequired : bool" Usage="System.ComponentModel.ISynchronizeInvoke.InvokeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="16c9c-138">このインターフェイスを実装するオブジェクトを呼び出すときに、呼び出し元が <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> を呼び出す必要があるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="16c9c-138">Gets a value indicating whether the caller must call <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> when calling an object that implements this interface.</span></span></summary>
        <value><span data-ttu-id="16c9c-139">呼び出し元が <see langword="true" /> を呼び出す必要がある場合は <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="16c9c-139"><see langword="true" /> if the caller must call <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16c9c-140">このプロパティは、このインターフェイスを実装するオブジェクトへのメソッド呼び出しを行うときに、呼び出し元が <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> を呼び出す必要があるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="16c9c-140">This property determines whether the caller must call <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> when making method calls to an object that implements this interface.</span></span> <span data-ttu-id="16c9c-141">このようなオブジェクトは特定のスレッドにバインドされ、スレッドセーフではありません。</span><span class="sxs-lookup"><span data-stu-id="16c9c-141">Such objects are bound to a specific thread and are not thread-safe.</span></span> <span data-ttu-id="16c9c-142">別のスレッドからメソッドを呼び出す場合は、<xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> メソッドを使用して、適切なスレッドへの呼び出しをマーシャリングする必要があります。</span><span class="sxs-lookup"><span data-stu-id="16c9c-142">If you are calling a method from a different thread, you must use the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method to marshal the call to the proper thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
