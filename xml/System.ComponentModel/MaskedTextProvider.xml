<Type Name="MaskedTextProvider" FullName="System.ComponentModel.MaskedTextProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9c383ca2bbc7319c3cf71770d8901bd28e99c585" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73374330" /></Metadata><TypeSignature Language="C#" Value="public class MaskedTextProvider : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MaskedTextProvider extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.MaskedTextProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class MaskedTextProvider&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MaskedTextProvider : ICloneable" />
  <TypeSignature Language="F#" Value="type MaskedTextProvider = class&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="6d280-101"><see cref="T:System.Windows.Forms.MaskedTextBox" /> コントロールなど、マスクをサポートする多数のコントロールで使用できるマスク解析サービスを表します。</span><span class="sxs-lookup"><span data-stu-id="6d280-101">Represents a mask-parsing service that can be used by any number of controls that support masking, such as the <see cref="T:System.Windows.Forms.MaskedTextBox" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-102"><xref:System.Windows.Forms.MaskedTextBox> コントロールには、すべてのユーザー入力をテストする、リテラル文字と書式設定要素で構成されるマスクが含まれています。</span><span class="sxs-lookup"><span data-stu-id="6d280-102">The <xref:System.Windows.Forms.MaskedTextBox> control contains a mask, composed of literal characters and formatting elements, that it tests all user input against.</span></span> <span data-ttu-id="6d280-103">特定のマスク解析エンジンを <xref:System.Windows.Forms.MaskedTextBox>と完全に関連付けるのではなく、Windows フォームを <xref:System.ComponentModel.MaskedTextProvider> クラスによって表される独立したサービスとして提供します。これは @no__t_、のドキュメントで説明されているマスク言語の構文を定義します。2_ プロパティ。<xref:System.Windows.Forms.MaskedTextBox.Mask%2A></span><span class="sxs-lookup"><span data-stu-id="6d280-103">Instead of permanently associating a specific mask-parsing engine with <xref:System.Windows.Forms.MaskedTextBox>, Windows Forms provides it as a separate service, represented by the <xref:System.ComponentModel.MaskedTextProvider> class, which defines the syntax of the masking language discussed in the documentation for the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property.</span></span>  
  
 <span data-ttu-id="6d280-104"><xref:System.Windows.Forms.MaskedTextBox> クラスのメンバーの多くは、関連付けられた <xref:System.ComponentModel.MaskedTextProvider>の同じ名前のメンバーに実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="6d280-104">Many of the members of the <xref:System.Windows.Forms.MaskedTextBox> class refer their implementation to similarly named members of the associated <xref:System.ComponentModel.MaskedTextProvider>.</span></span> <span data-ttu-id="6d280-105">たとえば、<xref:System.Windows.Forms.MaskedTextBox> クラスの <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=nameWithType> プロパティは、<xref:System.ComponentModel.MaskedTextProvider> クラスの <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> へのすべてのアクセスを参照します。</span><span class="sxs-lookup"><span data-stu-id="6d280-105">For example, the <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class refers all access to the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> of the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
 <span data-ttu-id="6d280-106"><xref:System.ComponentModel.MaskedTextProvider> によって使用されるマスク解析エンジンは、Microsoft Visual Basic version 6 に含まれるマスクエディットコントロールの後にモデル化されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-106">The mask-parsing engine used by <xref:System.ComponentModel.MaskedTextProvider> is modeled after the Masked Edit control included in Microsoft Visual Basic version 6.</span></span> <span data-ttu-id="6d280-107">そのマスク言語については、<xref:System.ComponentModel.MaskedTextProvider.Mask%2A> プロパティのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="6d280-107">Its masking language is described in the documentation for the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property.</span></span>  
  
 <span data-ttu-id="6d280-108"><xref:System.ComponentModel.MaskedTextProvider> クラスには、次の3つの異なる文字列が関係しています。</span><span class="sxs-lookup"><span data-stu-id="6d280-108">The following three distinct strings are involved with the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
|<span data-ttu-id="6d280-109">文字列名</span><span class="sxs-lookup"><span data-stu-id="6d280-109">String name</span></span>|<span data-ttu-id="6d280-110">説明</span><span class="sxs-lookup"><span data-stu-id="6d280-110">Description</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="6d280-111">入力文字または文字列</span><span class="sxs-lookup"><span data-stu-id="6d280-111">Input character or string</span></span>|<span data-ttu-id="6d280-112">マスクが適用される入力として使用される文字を表します。</span><span class="sxs-lookup"><span data-stu-id="6d280-112">Represents the characters used as input that the mask is applied against.</span></span> <span data-ttu-id="6d280-113">実際には、入力文字列は、<xref:System.ComponentModel.MaskedTextProvider.Add%2A>、<xref:System.ComponentModel.MaskedTextProvider.Replace%2A>、<xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>、<xref:System.ComponentModel.MaskedTextProvider.Remove%2A>を含む複数の入力操作で構成される場合があります。</span><span class="sxs-lookup"><span data-stu-id="6d280-113">In actuality, the input string may be composed of multiple input operations, including <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>.</span></span> <span data-ttu-id="6d280-114">したがって、入力文字列に直接アクセスすることはできません。</span><span class="sxs-lookup"><span data-stu-id="6d280-114">Therefore, the input string cannot be accessed directly.</span></span> <span data-ttu-id="6d280-115">ただし、入力文字列の処理の側面は、<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> と <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>、<xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>、および <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> プロパティで使用できます。</span><span class="sxs-lookup"><span data-stu-id="6d280-115">However, aspects of the input string handling are available though the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> and <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> properties.</span></span>|  
|<span data-ttu-id="6d280-116">マスク</span><span class="sxs-lookup"><span data-stu-id="6d280-116">Mask</span></span>|<span data-ttu-id="6d280-117">入力文字列を書式設定された文字列に変換するために使用する入力書式マスクを表します。</span><span class="sxs-lookup"><span data-stu-id="6d280-117">Represents the input formatting mask used to transform the input string into the formatted string.</span></span> <span data-ttu-id="6d280-118">この文字列は <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> で設定され、主に <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> プロパティにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="6d280-118">This string is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> and accessed primarily though the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property.</span></span> <span data-ttu-id="6d280-119">マスクの特性は、<xref:System.ComponentModel.MaskedTextProvider.Length%2A>、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>、<xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> プロパティなど、他のメンバーからも使用できます。</span><span class="sxs-lookup"><span data-stu-id="6d280-119">Characteristics of the mask are also available through other members, such as the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> properties.</span></span>|  
|<span data-ttu-id="6d280-120">書式設定された文字列</span><span class="sxs-lookup"><span data-stu-id="6d280-120">Formatted string</span></span>|<span data-ttu-id="6d280-121">フルマスクが入力文字列に適用されたときに結果として得られる文字列を表します。</span><span class="sxs-lookup"><span data-stu-id="6d280-121">Represents the string that results when the full mask is applied to the input string.</span></span> <span data-ttu-id="6d280-122">書式設定された文字列には、<xref:System.ComponentModel.MaskedTextProvider.Item%2A>、<xref:System.ComponentModel.MaskedTextProvider.Length%2A>、<xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>、<xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>、<xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>、<xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>など、クラスの多くのメンバーを使用してクエリを実行できます。</span><span class="sxs-lookup"><span data-stu-id="6d280-122">The formatted string can be queried with many members of the class, including <xref:System.ComponentModel.MaskedTextProvider.Item%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>, <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>, and so on.</span></span> <span data-ttu-id="6d280-123">書式設定された文字列の完全な値は、<xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> および <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> メソッドから取得できます。</span><span class="sxs-lookup"><span data-stu-id="6d280-123">The full value of the formatted string is available from the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="6d280-124">入力文字列は、<xref:System.Windows.Forms.MaskedTextBox>のように直接ユーザー入力を表している場合もあれば、ユーザーの入出力操作に直接関連付けられていない他のプロセスによって生成される場合もあります。</span><span class="sxs-lookup"><span data-stu-id="6d280-124">The input string may represent direct user input, as in the case of the <xref:System.Windows.Forms.MaskedTextBox>, or may be generated by other processes not directly associated with user input/output operations.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MaskedTextBox" />
    <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
    <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d280-125"><see cref="T:System.ComponentModel.MaskedTextProvider" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6d280-125">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider mask" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="6d280-126">入力マスクを表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-126">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <summary><span data-ttu-id="6d280-127">指定したマスクを使用して、<see cref="T:System.ComponentModel.MaskedTextProvider" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6d280-127">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-128">このコンストラクターの使用は、<xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> コンストラクターへの次の呼び出しとまったく同じです。</span><span class="sxs-lookup"><span data-stu-id="6d280-128">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, true, '_', '\0', false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="6d280-129">入力マスクを表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-129">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="restrictToAscii"><span data-ttu-id="6d280-130">入力を ASCII 互換文字に制限する場合は <see langword="true" />。Unicode セット全体を許可する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-130"><see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span></span></param>
        <summary><span data-ttu-id="6d280-131">指定したマスクと ASCII 制限値を使用して、<see cref="T:System.ComponentModel.MaskedTextProvider" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6d280-131">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask and ASCII restriction value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-132">このコンストラクターの使用は、<xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> コンストラクターへの次の呼び出しとまったく同じです。</span><span class="sxs-lookup"><span data-stu-id="6d280-132">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, true, '_', '\0', restrictToASCII)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="6d280-133">入力マスクを表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-133">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="culture"><span data-ttu-id="6d280-134">地域によって異なる区切り記号の設定に使用する <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-134">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span></span></param>
        <summary><span data-ttu-id="6d280-135">指定したマスクとカルチャを使用して、<see cref="T:System.ComponentModel.MaskedTextProvider" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6d280-135">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask and culture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-136">このコンストラクターの使用は、<xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> コンストラクターへの次の呼び出しとまったく同じです。</span><span class="sxs-lookup"><span data-stu-id="6d280-136">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, true, '_', '\0', false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, char passwordChar, bool allowPromptAsInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, passwordChar As Char, allowPromptAsInput As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, passwordChar, allowPromptAsInput)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="6d280-137">入力マスクを表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-137">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="passwordChar"><span data-ttu-id="6d280-138">パスワード文字列に入力された文字用に表示される <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-138">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span></span></param>
        <param name="allowPromptAsInput"><span data-ttu-id="6d280-139">プロンプト文字を入力として許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-139"><see langword="true" /> to allow the prompt character as input; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6d280-140">指定したマスク、パスワード文字、プロンプト使用値を使用して、<see cref="T:System.ComponentModel.MaskedTextProvider" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6d280-140">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, password character, and prompt usage value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-141">このコンストラクターの使用は、<xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> コンストラクターへの次の呼び出しとまったく同じです。</span><span class="sxs-lookup"><span data-stu-id="6d280-141">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, allowPromptAsInput, '_', passwordChar, false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="6d280-142">入力マスクを表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-142">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="culture"><span data-ttu-id="6d280-143">地域によって異なる区切り記号の設定に使用する <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-143">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span></span></param>
        <param name="restrictToAscii"><span data-ttu-id="6d280-144">入力を ASCII 互換文字に制限する場合は <see langword="true" />。Unicode セット全体を許可する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-144"><see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span></span></param>
        <summary><span data-ttu-id="6d280-145">指定したマスク、カルチャ、および ASCII 制限値を使用して、<see cref="T:System.ComponentModel.MaskedTextProvider" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6d280-145">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, and ASCII restriction value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-146">このコンストラクターの使用は、<xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> コンストラクターへの次の呼び出しとまったく同じです。</span><span class="sxs-lookup"><span data-stu-id="6d280-146">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, true, '_', '\0', restrictToAscii)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, passwordChar As Char, allowPromptAsInput As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, passwordChar, allowPromptAsInput)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="6d280-147">入力マスクを表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-147">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="culture"><span data-ttu-id="6d280-148">地域によって異なる区切り記号の設定に使用する <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-148">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span></span></param>
        <param name="passwordChar"><span data-ttu-id="6d280-149">パスワード文字列に入力された文字用に表示される <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-149">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span></span></param>
        <param name="allowPromptAsInput"><span data-ttu-id="6d280-150">プロンプト文字を入力として許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-150"><see langword="true" /> to allow the prompt character as input; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6d280-151">指定したマスク、カルチャ、パスワード文字、およびプロンプト使用値を使用して、<see cref="T:System.ComponentModel.MaskedTextProvider" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6d280-151">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, password character, and prompt usage value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-152">このコンストラクターの使用は、<xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> コンストラクターへの次の呼び出しとまったく同じです。</span><span class="sxs-lookup"><span data-stu-id="6d280-152">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, allowPromptAsInput, '_', passwordChar, false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, allowPromptAsInput As Boolean, promptChar As Char, passwordChar As Char, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * bool * char * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, allowPromptAsInput, promptChar, passwordChar, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
        <Parameter Name="promptChar" Type="System.Char" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="6d280-153">入力マスクを表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-153">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="culture"><span data-ttu-id="6d280-154">地域によって異なる区切り記号の設定に使用する <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-154">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span></span></param>
        <param name="allowPromptAsInput"><span data-ttu-id="6d280-155">プロンプト文字を有効な入力文字として許可する必要があるかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6d280-155">A <see cref="T:System.Boolean" /> value that specifies whether the prompt character should be allowed as a valid input character.</span></span></param>
        <param name="promptChar"><span data-ttu-id="6d280-156">ユーザー入力のプレースホルダーとして表示する <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-156">A <see cref="T:System.Char" /> that will be displayed as a placeholder for user input.</span></span></param>
        <param name="passwordChar"><span data-ttu-id="6d280-157">パスワード文字列に入力された文字用に表示される <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-157">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span></span></param>
        <param name="restrictToAscii"><span data-ttu-id="6d280-158">入力を ASCII 互換文字に制限する場合は <see langword="true" />。Unicode セット全体を許可する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-158"><see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span></span></param>
        <summary><span data-ttu-id="6d280-159">指定したマスク、カルチャ、プロンプト使用値、プロンプト文字、パスワード文字、および ASCII 制限値を使用して、<see cref="T:System.ComponentModel.MaskedTextProvider" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6d280-159">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, prompt usage value, prompt character, password character, and ASCII restriction value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-160">このコンストラクターは、最も一般的なオーバーロードされた形式を表します。</span><span class="sxs-lookup"><span data-stu-id="6d280-160">This constructor represents the most general overloaded form.</span></span> <span data-ttu-id="6d280-161">`mask` パラメーターは、<xref:System.ComponentModel.MaskedTextProvider> クラスで定義されているマスク言語に準拠している必要があります。これは、<xref:System.Windows.Forms.MaskedTextBox> クラスの <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=nameWithType> プロパティで詳しく説明されています。</span><span class="sxs-lookup"><span data-stu-id="6d280-161">The `mask` parameter must conform to the masking language defined by the <xref:System.ComponentModel.MaskedTextProvider> class, which is detailed in the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class.</span></span>  
  
 <span data-ttu-id="6d280-162">ニュートラルカルチャは、カルチャ固有の情報を照会できないため、<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> コンストラクターは、<xref:System.Globalization.CultureInfo.GetCultures%2A> メソッドを使用して、適切な区切り文字を決定するために使用する最初の非ニュートラルカルチャを検索します。</span><span class="sxs-lookup"><span data-stu-id="6d280-162">Because neutral cultures cannot be queried for culture-specific information, the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor will use the <xref:System.Globalization.CultureInfo.GetCultures%2A> method to search for the first non-neutral culture to use to determine the proper separator characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d280-163">マスク パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="6d280-163">The mask parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span>  
  
<span data-ttu-id="6d280-164">- または -</span><span class="sxs-lookup"><span data-stu-id="6d280-164">-or-</span></span> 
<span data-ttu-id="6d280-165">マスクに印字不可能な文字が 1 文字以上含まれています。</span><span class="sxs-lookup"><span data-stu-id="6d280-165">The mask contains one or more non-printable characters.</span></span></exception>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clone" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d280-166">書式設定された文字列に、入力文字または入力文字列を追加します。</span><span class="sxs-lookup"><span data-stu-id="6d280-166">Adds an input character or input string to the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (char input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(char input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(char input);" />
      <MemberSignature Language="F#" Value="member this.Add : char -&gt; bool" Usage="maskedTextProvider.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d280-167">書式設定された文字列に追加する <see cref="T:System.Char" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6d280-167">A <see cref="T:System.Char" /> value to be appended to the formatted string.</span></span></param>
        <summary><span data-ttu-id="6d280-168">書式設定された文字列の末尾に指定した入力文字を追加します。</span><span class="sxs-lookup"><span data-stu-id="6d280-168">Adds the specified input character to the end of the formatted string.</span></span></summary>
        <returns><span data-ttu-id="6d280-169">入力文字が正常に追加された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-169"><see langword="true" /> if the input character was added successfully; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-170"><xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> メソッドは、最後に割り当てられた位置の後にある、書式設定された文字列内の最初の使用可能な位置に `input` 文字値を追加します。これは、<xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> プロパティによって表されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-170">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> method adds the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property.</span></span> <span data-ttu-id="6d280-171">このメソッドは、次のいずれかの理由で失敗します。</span><span class="sxs-lookup"><span data-stu-id="6d280-171">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="6d280-172">入力値 `input`が印刷可能ではないか、または対応する mask 要素と一致しません。</span><span class="sxs-lookup"><span data-stu-id="6d280-172">The input value, `input`, is not printable, or it does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="6d280-173">書式設定された文字列に使用できる編集位置が0であるか、または最後に割り当てられた位置の後に使用できる編集位置がありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-173">There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; bool" Usage="maskedTextProvider.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d280-174">書式設定された文字列に追加する文字値を格納する <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-174">A <see cref="T:System.String" /> containing character values to be appended to the formatted string.</span></span></param>
        <summary><span data-ttu-id="6d280-175">書式設定された文字列の末尾に指定した入力文字列内の文字を追加します。</span><span class="sxs-lookup"><span data-stu-id="6d280-175">Adds the characters in the specified input string to the end of the formatted string.</span></span></summary>
        <returns><span data-ttu-id="6d280-176">入力文字列のすべての文字が正常に追加された場合は <see langword="true" />。それ以外の場合は、文字が追加されなかったことを示す <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-176"><see langword="true" /> if all the characters from the input string were added successfully; otherwise <see langword="false" /> to indicate that no characters were added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-177"><xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> メソッドは、<xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>後の最初の使用可能な位置から始まる書式設定された文字列に、`input` 文字列から文字を追加します。</span><span class="sxs-lookup"><span data-stu-id="6d280-177">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span></span> <span data-ttu-id="6d280-178">このメソッドは、次のいずれかの理由で失敗します。</span><span class="sxs-lookup"><span data-stu-id="6d280-178">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="6d280-179">入力値の `input`のいずれかの文字が印刷可能でないか、入力値が対応する mask 要素と一致しません。</span><span class="sxs-lookup"><span data-stu-id="6d280-179">Any of the characters in the input value, `input`, are not printable, or the input value does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="6d280-180">最後に割り当てられた位置の後に、書式設定された文字列内に使用できる編集位置が不足しています。</span><span class="sxs-lookup"><span data-stu-id="6d280-180">There are not enough available edit positions in the formatted string after the last assigned position.</span></span>  
  
 <span data-ttu-id="6d280-181">このメソッドが失敗した場合、追加は行われず、メソッドは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-181">If this method fails, no additions are made and the method returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d280-182"><paramref name="input" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6d280-182">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (char input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(char input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As Char, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(char input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Add : char * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Add (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d280-183">書式設定された文字列に追加する <see cref="T:System.Char" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6d280-183">A <see cref="T:System.Char" /> value to be appended to the formatted string.</span></span></param>
        <param name="testPosition"><span data-ttu-id="6d280-184">文字を追加しようとした、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-184">The zero-based position in the formatted string where the attempt was made to add the character.</span></span> <span data-ttu-id="6d280-185">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-185">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="6d280-186">操作の結果を簡潔に示す <see cref="T:System.ComponentModel.MaskedTextResultHint" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-186">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="6d280-187">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-187">An output parameter.</span></span></param>
        <summary><span data-ttu-id="6d280-188">書式設定された文字列の末尾に指定した入力文字を追加し、位置と説明の情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="6d280-188">Adds the specified input character to the end of the formatted string, and then outputs position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="6d280-189">入力文字が正常に追加された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-189"><see langword="true" /> if the input character was added successfully; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-190"><xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> メソッドは、最後に割り当てられた位置の後にある、書式設定された文字列内の最初の使用可能な位置に `input` 文字の値を追加しようとします。これは、<xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> プロパティによって表されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-190">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method attempts to add the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property.</span></span> <span data-ttu-id="6d280-191">使用可能なすべての位置が最後に割り当てられた位置より前にある場合、このメソッドは失敗します。</span><span class="sxs-lookup"><span data-stu-id="6d280-191">This method will fail if all available positions are before the last assigned position.</span></span> <span data-ttu-id="6d280-192">このメソッドは、次のいずれかの理由で失敗します。</span><span class="sxs-lookup"><span data-stu-id="6d280-192">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="6d280-193">入力値 `input`が印刷可能ではないか、または対応する mask 要素と一致しません。</span><span class="sxs-lookup"><span data-stu-id="6d280-193">The input value, `input`, is not printable, or it does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="6d280-194">書式設定された文字列に使用できる編集位置が0であるか、または最後に割り当てられた位置の後に使用できる編集位置がありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-194">There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.</span></span>  
  
 <span data-ttu-id="6d280-195">このメソッドは、1つの <xref:System.Char> パラメーター <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>を受け取るオーバーライドされたバージョンと同じように機能します。ただし、追加情報を出力する点が異なります。</span><span class="sxs-lookup"><span data-stu-id="6d280-195">This method functions the same as the overridden version taking a single <xref:System.Char> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>, except that it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Add : string * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Add (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d280-196">書式設定された文字列に追加する文字値を格納する <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-196">A <see cref="T:System.String" /> containing character values to be appended to the formatted string.</span></span></param>
        <param name="testPosition"><span data-ttu-id="6d280-197">文字を追加しようとした、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-197">The zero-based position in the formatted string where the attempt was made to add the character.</span></span> <span data-ttu-id="6d280-198">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-198">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="6d280-199">操作の結果を簡潔に示す <see cref="T:System.ComponentModel.MaskedTextResultHint" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-199">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="6d280-200">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-200">An output parameter.</span></span></param>
        <summary><span data-ttu-id="6d280-201">書式設定された文字列の末尾に指定した入力文字列内の文字を追加し、位置と説明の情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="6d280-201">Adds the characters in the specified input string to the end of the formatted string, and then outputs position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="6d280-202">入力文字列のすべての文字が正常に追加された場合は <see langword="true" />。それ以外の場合は、文字が追加されなかったことを示す <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-202"><see langword="true" /> if all the characters from the input string were added successfully; otherwise <see langword="false" /> to indicate that no characters were added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-203"><xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> メソッドは、<xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>後の最初の使用可能な位置から始まる書式設定された文字列に、`input` 文字列から文字を追加します。</span><span class="sxs-lookup"><span data-stu-id="6d280-203">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span></span> <span data-ttu-id="6d280-204">このメソッドは、次のいずれかの理由で失敗します。</span><span class="sxs-lookup"><span data-stu-id="6d280-204">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="6d280-205">入力値の `input`のいずれかの文字が印刷可能でないか、入力値が対応する mask 要素と一致しません。</span><span class="sxs-lookup"><span data-stu-id="6d280-205">Any of the characters in the input value, `input`, are not printable, or the input value does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="6d280-206">最後に割り当てられた位置の後に、書式設定された文字列内に使用できる編集位置が不足しています。</span><span class="sxs-lookup"><span data-stu-id="6d280-206">There are not enough available edit positions in the formatted string after the last assigned position.</span></span>  
  
 <span data-ttu-id="6d280-207">このメソッドが失敗した場合、追加は行われず、メソッドは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-207">If this method fails, no additions are made and the method returns `false`.</span></span>  
  
 <span data-ttu-id="6d280-208">このメソッドは、1つの <xref:System.String> パラメーター <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>を受け取るオーバーライドされたバージョンと同じように機能します。ただし、追加情報を出力する点が異なります。</span><span class="sxs-lookup"><span data-stu-id="6d280-208">This method functions the same as the overridden version taking a single <xref:System.String> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>, except that it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="AllowPromptAsInput">
      <MemberSignature Language="C#" Value="public bool AllowPromptAsInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPromptAsInput" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowPromptAsInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowPromptAsInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowPromptAsInput : bool" Usage="System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-209">プロンプト文字を有効な入力文字として扱う必要があるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6d280-209">Gets a value indicating whether the prompt character should be treated as a valid input character or not.</span></span></summary>
        <value><span data-ttu-id="6d280-210">ユーザーがコントロールに <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" /> を入力できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-210"><see langword="true" /> if the user can enter <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" /> into the control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6d280-211">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="6d280-211">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-212"><xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> プロパティの値は、<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> コンストラクターで設定されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-212">The <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="6d280-213"><xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> が `true`場合でも、受け入れられるようにするために、マスク内の現在の場所に対してプロンプト文字が有効である必要があります。</span><span class="sxs-lookup"><span data-stu-id="6d280-213">Even when <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> is `true`, the prompt character must be valid for the current location in the mask in order to be accepted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="AsciiOnly">
      <MemberSignature Language="C#" Value="public bool AsciiOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsciiOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsciiOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AsciiOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AsciiOnly : bool" Usage="System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-214">マスクで ASCII 文字セット以外の文字を受け入れるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6d280-214">Gets a value indicating whether the mask accepts characters outside of the ASCII character set.</span></span></summary>
        <value><span data-ttu-id="6d280-215">ASCII だけを受け入れる場合は <see langword="true" />。<see cref="T:System.ComponentModel.MaskedTextProvider" /> が任意の Unicode 文字を受け入れることができる場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-215"><see langword="true" /> if only ASCII is accepted; <see langword="false" /> if <see cref="T:System.ComponentModel.MaskedTextProvider" /> can accept any arbitrary Unicode character.</span></span> <span data-ttu-id="6d280-216">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="6d280-216">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-217"><xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> プロパティの値は、<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> コンストラクターで設定されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-217">The <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="6d280-218">`true`した場合、<xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> ユーザーの入力を ASCII 文字セットに制限します。</span><span class="sxs-lookup"><span data-stu-id="6d280-218">If `true`, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> restricts user input to the ASCII character set.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AsciiOnly" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="AssignedEditPositionCount">
      <MemberSignature Language="C#" Value="public int AssignedEditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AssignedEditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssignedEditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AssignedEditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AssignedEditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-219">入力値が既に正常に割り当てられている、編集可能な文字位置の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="6d280-219">Gets the number of editable character positions that have already been successfully assigned an input value.</span></span></summary>
        <value><span data-ttu-id="6d280-220">書式設定された文字列で文字値が既に割り当てられている、入力マスク内の編集可能な文字位置の数を格納する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-220">An <see cref="T:System.Int32" /> containing the number of editable character positions in the input mask that have already been assigned a character value in the formatted string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-221"><xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> プロパティによって表される編集可能な文字位置の合計数は、<xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> と <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> プロパティの合計と同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="6d280-221">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="AvailableEditPositionCount">
      <MemberSignature Language="C#" Value="public int AvailableEditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AvailableEditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableEditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AvailableEditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableEditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-222">入力値がまだ割り当てられていない、入力マスク内の編集可能な文字位置の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="6d280-222">Gets the number of editable character positions in the input mask that have not yet been assigned an input value.</span></span></summary>
        <value><span data-ttu-id="6d280-223">文字値がまだ割り当てられていない、編集可能な文字位置の数を格納する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-223">An <see cref="T:System.Int32" /> containing the number of editable character positions that not yet been assigned a character value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-224"><xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> プロパティによって表される編集可能な文字位置の合計数は、<xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> と <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> プロパティの合計と同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="6d280-224">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Clear">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d280-225">書式設定された文字列から、すべての入力文字を消去します。</span><span class="sxs-lookup"><span data-stu-id="6d280-225">Clears all the input characters from the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="maskedTextProvider.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d280-226">書式設定された文字列から、編集可能なすべての入力文字を消去し、プロンプト文字に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="6d280-226">Clears all the editable input characters from the formatted string, replacing them with prompt characters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-227"><xref:System.ComponentModel.MaskedTextProvider.Clear> メソッドは、書式設定された文字列を再初期化して、すべての編集可能な位置にプロンプト文字を挿入します。</span><span class="sxs-lookup"><span data-stu-id="6d280-227">The <xref:System.ComponentModel.MaskedTextProvider.Clear> method reinitializes the formatted string, inserting the prompt character into all editable positions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear([out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear (ByRef resultHint As MaskedTextResultHint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear([Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Clear : MaskedTextResultHint -&gt; unit" Usage="maskedTextProvider.Clear resultHint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resultHint"><span data-ttu-id="6d280-228">操作の結果を簡潔に示す <see cref="T:System.ComponentModel.MaskedTextResultHint" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-228">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="6d280-229">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-229">An output parameter.</span></span></param>
        <summary><span data-ttu-id="6d280-230">書式設定された文字列から、編集可能なすべての入力文字を消去し、プロンプト文字に置き換えた後、説明の情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="6d280-230">Clears all the editable input characters from the formatted string, replacing them with prompt characters, and then outputs descriptive information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-231"><xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29> メソッドは、書式設定された文字列を再初期化して、すべての編集可能な位置にプロンプト文字を挿入します。</span><span class="sxs-lookup"><span data-stu-id="6d280-231">The <xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29> method reinitializes the formatted string, inserting the prompt character into all editable positions.</span></span> <span data-ttu-id="6d280-232">これは、追加情報を出力することを除けば、パラメーターを取らないオーバーライドされたバージョンと同じように機能します (<xref:System.ComponentModel.MaskedTextProvider.Clear>)。</span><span class="sxs-lookup"><span data-stu-id="6d280-232">It functions equivalently to the overridden version that takes no parameters, <xref:System.ComponentModel.MaskedTextProvider.Clear>, except it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="maskedTextProvider.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d280-233">現在の <see cref="T:System.ComponentModel.MaskedTextProvider" /> のコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="6d280-233">Creates a copy of the current <see cref="T:System.ComponentModel.MaskedTextProvider" />.</span></span></summary>
        <returns><span data-ttu-id="6d280-234">このメソッドが作成し、オブジェクトとしてキャストする <see cref="T:System.ComponentModel.MaskedTextProvider" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6d280-234">The <see cref="T:System.ComponentModel.MaskedTextProvider" /> object this method creates, cast as an object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-235"><xref:System.ComponentModel.MaskedTextProvider.Clone%2A> メソッドは、現在の <xref:System.ComponentModel.MaskedTextProvider>の新しいコピーを返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-235">The <xref:System.ComponentModel.MaskedTextProvider.Clone%2A> method returns a new copy of the current <xref:System.ComponentModel.MaskedTextProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
        <altmember cref="T:System.ICloneable" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo" Usage="System.ComponentModel.MaskedTextProvider.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-236">入力マスク内のローカライズ可能な区切り記号とプレースホルダーの値を決定するカルチャを取得します。</span><span class="sxs-lookup"><span data-stu-id="6d280-236">Gets the culture that determines the value of the localizable separators and placeholders in the input mask.</span></span></summary>
        <value><span data-ttu-id="6d280-237">入力マスクに関連付けられたカルチャ情報を格納する <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-237">A <see cref="T:System.Globalization.CultureInfo" /> containing the culture information associated with the input mask.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-238"><xref:System.ComponentModel.MaskedTextProvider.Culture%2A> プロパティは、<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> コンストラクターで設定されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-238">The <xref:System.ComponentModel.MaskedTextProvider.Culture%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPasswordChar">
      <MemberSignature Language="C#" Value="public static char DefaultPasswordChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property char DefaultPasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultPasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property char DefaultPasswordChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPasswordChar : char" Usage="System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-239">ユーザー入力を隠すために使用する既定のパスワード文字を取得します。</span><span class="sxs-lookup"><span data-stu-id="6d280-239">Gets the default password character used obscure user input.</span></span></summary>
        <value><span data-ttu-id="6d280-240">既定のパスワード文字を表す <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-240">A <see cref="T:System.Char" /> that represents the default password character.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-241"><xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> プロパティは、<xref:System.ComponentModel.MaskedTextProvider> クラスで、アスタリスク文字 (\*) として定義されています。</span><span class="sxs-lookup"><span data-stu-id="6d280-241">The <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> property is defined in the <xref:System.ComponentModel.MaskedTextProvider> class to be the asterisk character (\*).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
      </Docs>
    </Member>
    <Member MemberName="EditPositionCount">
      <MemberSignature Language="C#" Value="public int EditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-242">書式設定された文字列内の編集可能な位置の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="6d280-242">Gets the number of editable positions in the formatted string.</span></span></summary>
        <value><span data-ttu-id="6d280-243">書式設定された文字列内の編集可能な位置の数を格納する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-243">An <see cref="T:System.Int32" /> containing the number of editable positions in the formatted string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-244"><xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> プロパティによって表される編集可能な文字位置の合計数は、<xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> と <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> プロパティの合計と同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="6d280-244">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, must equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span> <span data-ttu-id="6d280-245">この値には、必須のおよびオプションの編集可能な文字の両方が含まれます。</span><span class="sxs-lookup"><span data-stu-id="6d280-245">This value includes both the required and the optional editable characters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="EditPositions">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator EditPositions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator EditPositions" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditPositions As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerator ^ EditPositions { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditPositions : System.Collections.IEnumerator" Usage="System.ComponentModel.MaskedTextProvider.EditPositions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-246">書式設定された文字列内の編集可能な位置に対して新しく作成された列挙子を取得します。</span><span class="sxs-lookup"><span data-stu-id="6d280-246">Gets a newly created enumerator for the editable positions in the formatted string.</span></span></summary>
        <value><span data-ttu-id="6d280-247">書式設定された文字列内の編集可能な位置に対して列挙体をサポートする <see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-247">An <see cref="T:System.Collections.IEnumerator" /> that supports enumeration over the editable positions in the formatted string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-248"><xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A> プロパティのすべてのアクセスで、取得した <xref:System.Collections.IEnumerator> が操作する、編集可能な位置の一時的なコレクションが作成されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-248">On every access of the <xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A> property, a temporary collection of editable positions is created that the retrieved <xref:System.Collections.IEnumerator> operates on.</span></span>  
  
 <span data-ttu-id="6d280-249">このコレクションは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6d280-249">This collection is read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindAssignedEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindAssignedEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindAssignedEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAssignedEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindAssignedEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindAssignedEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindAssignedEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="6d280-250">検索を開始する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-250">The zero-based position in the formatted string to start the search.</span></span></param>
        <param name="direction"><span data-ttu-id="6d280-251">検索方向を示す <see cref="T:System.Boolean" />。前方に検索する場合は <see langword="true" />。後方に検索する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-251">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="6d280-252">指定した検索方向で、指定した位置より後にある、入力が割り当てられた最初の編集可能な位置を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-252">Returns the position of the first assigned editable position after the specified position using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="6d280-253">検索が成功した場合は、最初に見つかった入力が割り当てられた編集可能な位置のインデックス番号が 0 から始まる位置を表す <see cref="T:System.Int32" />。それ以外の場合は <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-253">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first assigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-254">書式設定された文字列は、マスクからコピーされた編集可能な文字とリテラルで構成されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-254">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="6d280-255">編集可能な文字位置は、マスクが割り当て解除されている場合は、マスクからコピーされたプロンプト文字によって使用されるか、入力が割り当てられている場合は有効な入力文字によって占有されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-255">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="6d280-256"><xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> メソッドは、指定された位置と検索方向の後に最初に割り当てられた文字を検索するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-256">The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> method is used to search for the first assigned character after a specified position and search direction.</span></span> <span data-ttu-id="6d280-257">その後、結果は、この位置で割り当てられた値を取得するために、パラメーターとして <xref:System.ComponentModel.MaskedTextProvider.Item%2A> インデクサーに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="6d280-257">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="6d280-258">このメソッドは、<xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> メソッドと <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> メソッドによって補完されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-258">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindAssignedEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindAssignedEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindAssignedEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAssignedEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindAssignedEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindAssignedEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindAssignedEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="6d280-259">検索を開始する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-259">The zero-based position in the formatted string where the search starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="6d280-260">検索を終了する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-260">The zero-based position in the formatted string where the search ends.</span></span></param>
        <param name="direction"><span data-ttu-id="6d280-261">検索方向を示す <see cref="T:System.Boolean" />。前方に検索する場合は <see langword="true" />。後方に検索する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-261">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="6d280-262">指定した検索方向で、指定した 2 つの位置の間にある、入力が割り当てられた最初の編集可能な位置を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-262">Returns the position of the first assigned editable position between the specified positions using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="6d280-263">検索が成功した場合は、最初に見つかった入力が割り当てられた編集可能な位置のインデックス番号が 0 から始まる位置を表す <see cref="T:System.Int32" />。それ以外の場合は <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-263">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first assigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-264">書式設定された文字列は、マスクからコピーされた編集可能な文字とリテラルで構成されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-264">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="6d280-265">編集可能な文字位置は、マスクが割り当て解除されている場合は、マスクからコピーされたプロンプト文字によって使用されるか、入力が割り当てられている場合は有効な入力文字によって占有されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-265">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="6d280-266"><xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> メソッドは、指定した検索方向を使用して、指定した2つの位置の間で最初に割り当てられた文字を検索するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-266">The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> method is used to search for the first assigned character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="6d280-267">その後、結果は、この位置で割り当てられた値を取得するために、パラメーターとして <xref:System.ComponentModel.MaskedTextProvider.Item%2A> インデクサーに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="6d280-267">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="6d280-268">このメソッドは、<xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> メソッドと <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> メソッドによって補完されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-268">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="6d280-269">検索を開始する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-269">The zero-based position in the formatted string to start the search.</span></span></param>
        <param name="direction"><span data-ttu-id="6d280-270">検索方向を示す <see cref="T:System.Boolean" />。前方に検索する場合は <see langword="true" />。後方に検索する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-270">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="6d280-271">指定した検索方向で、指定した位置より後にある最初の編集可能な位置を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-271">Returns the position of the first editable position after the specified position using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="6d280-272">検索が成功した場合は、最初に見つかった編集可能な位置のインデックス番号が 0 から始まる位置を表す <see cref="T:System.Int32" />。それ以外の場合は <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-272">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-273"><xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> メソッドを使用して、指定した位置の後にある、書式設定された文字列内で次に割り当てられた、または割り当てられていない編集可能な位置を検索</span><span class="sxs-lookup"><span data-stu-id="6d280-273">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is used to search for the next assigned or unassigned editable position in the formatted string after the specified position.</span></span>  
  
 <span data-ttu-id="6d280-274"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> メソッドは、このメソッドの補数です。</span><span class="sxs-lookup"><span data-stu-id="6d280-274">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="6d280-275">検索を開始する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-275">The zero-based position in the formatted string where the search starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="6d280-276">検索を終了する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-276">The zero-based position in the formatted string where the search ends.</span></span></param>
        <param name="direction"><span data-ttu-id="6d280-277">検索方向を示す <see cref="T:System.Boolean" />。前方に検索する場合は <see langword="true" />。後方に検索する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-277">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="6d280-278">指定した検索方向で、指定した 2 つの位置の間にある最初の編集可能な位置を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-278">Returns the position of the first editable position between the specified positions using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="6d280-279">検索が成功した場合は、最初に見つかった編集可能な位置のインデックス番号が 0 から始まる位置を表す <see cref="T:System.Int32" />。それ以外の場合は <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-279">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-280"><xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> メソッドは、指定した検索方向を使用して、指定した2つの位置の間の最初の編集可能な文字を検索するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-280">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is used to search for the first editable character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="6d280-281">その後、結果は、この位置で割り当てられた値を取得するために、パラメーターとして <xref:System.ComponentModel.MaskedTextProvider.Item%2A> インデクサーに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="6d280-281">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="6d280-282"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> メソッドは、このメソッドの補数です。</span><span class="sxs-lookup"><span data-stu-id="6d280-282">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindNonEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindNonEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindNonEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNonEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindNonEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindNonEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindNonEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="6d280-283">検索を開始する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-283">The zero-based position in the formatted string to start the search.</span></span></param>
        <param name="direction"><span data-ttu-id="6d280-284">検索方向を示す <see cref="T:System.Boolean" />。前方に検索する場合は <see langword="true" />。後方に検索する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-284">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="6d280-285">指定した検索方向で、指定した位置より後にある最初の編集不可能な位置を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-285">Returns the position of the first non-editable position after the specified position using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="6d280-286">検索が成功した場合は、最初に見つかったリテラル位置のインデックス番号が 0 から始まる位置を表す <see cref="T:System.Int32" />。それ以外の場合は <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-286">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first literal position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-287"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> メソッドは、指定された位置の後にある書式設定された文字列内の次のリテラル文字を検索するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-287">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is used to search for the next literal character in the formatted string after the specified position.</span></span> <span data-ttu-id="6d280-288">その後、結果を <xref:System.ComponentModel.MaskedTextProvider.Item%2A> インデクサーにパラメーターとして渡して、この位置でリテラル値を取得できます。</span><span class="sxs-lookup"><span data-stu-id="6d280-288">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.</span></span>  
  
 <span data-ttu-id="6d280-289"><xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> メソッドは、このメソッドの補数です。</span><span class="sxs-lookup"><span data-stu-id="6d280-289">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindNonEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindNonEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindNonEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNonEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindNonEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindNonEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindNonEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="6d280-290">検索を開始する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-290">The zero-based position in the formatted string where the search starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="6d280-291">検索を終了する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-291">The zero-based position in the formatted string where the search ends.</span></span></param>
        <param name="direction"><span data-ttu-id="6d280-292">検索方向を示す <see cref="T:System.Boolean" />。前方に検索する場合は <see langword="true" />。後方に検索する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-292">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="6d280-293">指定した検索方向で、指定した 2 つの位置の間にある最初の編集不可能な位置を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-293">Returns the position of the first non-editable position between the specified positions using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="6d280-294">検索が成功した場合は、最初に見つかったリテラル位置のインデックス番号が 0 から始まる位置を表す <see cref="T:System.Int32" />。それ以外の場合は <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-294">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first literal position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-295"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> メソッドは、指定された検索方向を使用して、指定された2つの位置の間にある最初のリテラル文字を検索するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-295">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is used to search for the first literal character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="6d280-296">その後、結果を <xref:System.ComponentModel.MaskedTextProvider.Item%2A> インデクサーにパラメーターとして渡して、この位置でリテラル値を取得できます。</span><span class="sxs-lookup"><span data-stu-id="6d280-296">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.</span></span>  
  
 <span data-ttu-id="6d280-297"><xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> メソッドは、このメソッドの補数です。</span><span class="sxs-lookup"><span data-stu-id="6d280-297">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindUnassignedEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindUnassignedEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindUnassignedEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindUnassignedEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindUnassignedEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindUnassignedEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindUnassignedEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="6d280-298">検索を開始する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-298">The zero-based position in the formatted string to start the search.</span></span></param>
        <param name="direction"><span data-ttu-id="6d280-299">検索方向を示す <see cref="T:System.Boolean" />。前方に検索する場合は <see langword="true" />。後方に検索する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-299">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="6d280-300">指定した検索方向で、指定した位置より後にある、入力が割り当てられていない最初の編集可能な位置を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-300">Returns the position of the first unassigned editable position after the specified position using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="6d280-301">検索が成功した場合は、最初に見つかった、入力が割り当てられていない編集可能な位置のインデックス番号が 0 から始まる位置を表す <see cref="T:System.Int32" />。それ以外の場合は <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-301">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first unassigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-302">書式設定された文字列は、マスクからコピーされた編集可能な文字とリテラルで構成されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-302">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="6d280-303">編集可能な文字位置は、マスクが割り当て解除されている場合は、マスクからコピーされたプロンプト文字によって使用されるか、入力が割り当てられている場合は有効な入力文字によって占有されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-303">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="6d280-304"><xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> メソッドを使用して、指定した位置と検索の方向の後に、最初に割り当てられていない文字を検索します。</span><span class="sxs-lookup"><span data-stu-id="6d280-304">The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> method is used to search for the first unassigned character after a specified position and search direction.</span></span> <span data-ttu-id="6d280-305">プロンプト文字は、この位置を占めている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6d280-305">The prompt character should occupy this position.</span></span>  
  
 <span data-ttu-id="6d280-306">このメソッドは、<xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> メソッドと <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> メソッドによって補完されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-306">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindUnassignedEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindUnassignedEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindUnassignedEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindUnassignedEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindUnassignedEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindUnassignedEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindUnassignedEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="6d280-307">検索を開始する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-307">The zero-based position in the formatted string where the search starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="6d280-308">検索を終了する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-308">The zero-based position in the formatted string where the search ends.</span></span></param>
        <param name="direction"><span data-ttu-id="6d280-309">検索方向を示す <see cref="T:System.Boolean" />。前方に検索する場合は <see langword="true" />。後方に検索する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-309">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="6d280-310">指定した検索方向で、指定した 2 つの位置の間にある、入力が割り当てられていない最初の編集可能な位置を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-310">Returns the position of the first unassigned editable position between the specified positions using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="6d280-311">検索が成功した場合は、最初に見つかった、入力が割り当てられていない編集可能な位置のインデックス番号が 0 から始まる位置を表す <see cref="T:System.Int32" />。それ以外の場合は <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-311">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first unassigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-312">書式設定された文字列は、マスクからコピーされた編集可能な文字とリテラルで構成されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-312">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="6d280-313">編集可能な文字位置は、マスクが割り当て解除されている場合は、マスクからコピーされたプロンプト文字によって使用されるか、入力が割り当てられている場合は有効な入力文字によって占有されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-313">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="6d280-314"><xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> メソッドは、指定された検索方向を使用して、指定された2つの位置の間で最初に割り当てられていない文字を検索するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-314">The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> method is used to search for the first unassigned character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="6d280-315">プロンプト文字は、この位置を占めている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6d280-315">The prompt character should occupy this position.</span></span>  
  
 <span data-ttu-id="6d280-316">このメソッドは、<xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> メソッドと <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> メソッドによって補完されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-316">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetOperationResultFromHint">
      <MemberSignature Language="C#" Value="public static bool GetOperationResultFromHint (System.ComponentModel.MaskedTextResultHint hint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetOperationResultFromHint(valuetype System.ComponentModel.MaskedTextResultHint hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOperationResultFromHint (hint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetOperationResultFromHint(System::ComponentModel::MaskedTextResultHint hint);" />
      <MemberSignature Language="F#" Value="static member GetOperationResultFromHint : System.ComponentModel.MaskedTextResultHint -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint hint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hint" Type="System.ComponentModel.MaskedTextResultHint" />
      </Parameters>
      <Docs>
        <param name="hint"><span data-ttu-id="6d280-317">以前の操作の出力パラメーターとして通常取得される <see cref="T:System.ComponentModel.MaskedTextResultHint" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6d280-317">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> value typically obtained as an output parameter from a previous operation.</span></span></param>
        <summary><span data-ttu-id="6d280-318">指定した <see cref="T:System.ComponentModel.MaskedTextResultHint" /> が、成功または失敗のどちらを示しているかを判断します。</span><span class="sxs-lookup"><span data-stu-id="6d280-318">Determines whether the specified <see cref="T:System.ComponentModel.MaskedTextResultHint" /> denotes success or failure.</span></span></summary>
        <returns><span data-ttu-id="6d280-319">指定した <see cref="T:System.ComponentModel.MaskedTextResultHint" /> 値が成功を表している場合は <see langword="true" />。失敗を表している場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-319"><see langword="true" /> if the specified <see cref="T:System.ComponentModel.MaskedTextResultHint" /> value represents a success; otherwise, <see langword="false" /> if it represents failure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-320"><xref:System.ComponentModel.MaskedTextProvider> クラスの次のメソッドには、メソッドの操作に関する情報を出力するために使用される <xref:System.ComponentModel.MaskedTextResultHint> 型のパラメーター <xref:System.ComponentModel.MaskedTextProvider.Add%2A>、<xref:System.ComponentModel.MaskedTextProvider.Clear%2A>、<xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>、<xref:System.ComponentModel.MaskedTextProvider.Remove%2A>、<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>、<xref:System.ComponentModel.MaskedTextProvider.Replace%2A>が含まれています。、<xref:System.ComponentModel.MaskedTextProvider.Set%2A>、<xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>、および <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d280-320">The following methods of the <xref:System.ComponentModel.MaskedTextProvider> class contain a parameter of type <xref:System.ComponentModel.MaskedTextResultHint> that is used to output information about the operation of the method: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>, <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>.</span></span> <span data-ttu-id="6d280-321"><xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> メソッドは、この値を解釈し、操作が成功したか失敗したかを <xref:System.ComponentModel.MaskedTextResultHint> が通知したかどうかを示すブール値を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-321">The <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> method interprets this value and returns a Boolean value that indicates whether the <xref:System.ComponentModel.MaskedTextResultHint> has signaled that the operation was a success or failure.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.MaskedTextResultHint" />
      </Docs>
    </Member>
    <Member MemberName="IncludeLiterals">
      <MemberSignature Language="C#" Value="public bool IncludeLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeLiterals" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeLiterals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeLiterals { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeLiterals : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-322">入力マスク内のリテラル文字を、書式設定された文字列に含める必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6d280-322">Gets or sets a value that indicates whether literal characters in the input mask should be included in the formatted string.</span></span></summary>
        <value><span data-ttu-id="6d280-323">リテラルを含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-323"><see langword="true" /> if literals are included; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6d280-324">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="6d280-324">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-325"><xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> プロパティと <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> プロパティによって、<xref:System.ComponentModel.MaskedTextProvider.ToString%2A> メソッドを呼び出すときに、プロンプトとリテラル文字が表示されるかどうかが決まります。</span><span class="sxs-lookup"><span data-stu-id="6d280-325">The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method.</span></span> <span data-ttu-id="6d280-326">これらのプロパティの両方を `false`に設定すると、解析された文字列は、ユーザーが入力した文字だけを表します。</span><span class="sxs-lookup"><span data-stu-id="6d280-326">By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="IncludePrompt">
      <MemberSignature Language="C#" Value="public bool IncludePrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludePrompt" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludePrompt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludePrompt { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludePrompt : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IncludePrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-327">書式設定された文字列を表示するときに、<see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> を使用してユーザー入力がないことを表すかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6d280-327">Gets or sets a value indicating whether <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> is used to represent the absence of user input when displaying the formatted string.</span></span></summary>
        <value><span data-ttu-id="6d280-328">プロンプト文字を使用して、ユーザー入力が行われなかった位置を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-328"><see langword="true" /> if the prompt character is used to represent the positions where no user input was provided; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6d280-329">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="6d280-329">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-330"><xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> プロパティと <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> プロパティによって、<xref:System.ComponentModel.MaskedTextProvider.ToString%2A> メソッドを呼び出すときに、プロンプトとリテラル文字が表示されるかどうかが決まります。</span><span class="sxs-lookup"><span data-stu-id="6d280-330">The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method.</span></span> <span data-ttu-id="6d280-331">これらのプロパティの両方を `false`に設定すると、解析された文字列は、ユーザーが入力した文字だけを表します。</span><span class="sxs-lookup"><span data-stu-id="6d280-331">By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertAt">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d280-332">書式設定された文字列内の特定の位置に文字または文字列を挿入します。</span><span class="sxs-lookup"><span data-stu-id="6d280-332">Inserts a character or string at a specific position within the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : char * int -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d280-333">挿入する <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-333">The <see cref="T:System.Char" /> to be inserted.</span></span></param>
        <param name="position"><span data-ttu-id="6d280-334">文字を挿入する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-334">The zero-based position in the formatted string to insert the character.</span></span></param>
        <summary><span data-ttu-id="6d280-335">書式設定された文字列内の指定した位置に指定した文字を挿入します。</span><span class="sxs-lookup"><span data-stu-id="6d280-335">Inserts the specified character at the specified position within the formatted string.</span></span></summary>
        <returns><span data-ttu-id="6d280-336">挿入が正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-336"><see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-337"><xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> メソッドは、`pos` パラメーターによって指定された以降の最初の編集位置に文字を挿入します。</span><span class="sxs-lookup"><span data-stu-id="6d280-337">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter.</span></span> <span data-ttu-id="6d280-338">このメソッドは、挿入ポイントの後にあるすべての既存の文字を1つ上の位置にシフトして、挿入された `input` 文字のための領域を確保します。</span><span class="sxs-lookup"><span data-stu-id="6d280-338">This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character.</span></span> <span data-ttu-id="6d280-339">次のいずれかのエラーが発生した場合、挿入は実行されず、メソッドは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-339">If one of the following errors occurs, the insertion is not performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="6d280-340">`pos` パラメーターが0未満か、または書式設定された文字列の <xref:System.ComponentModel.MaskedTextProvider.Length%2A> を超えています。</span><span class="sxs-lookup"><span data-stu-id="6d280-340">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="6d280-341">書式設定された文字列の中で、または指定した位置より後に、編集可能な文字が見つかりませんでした `pos`。</span><span class="sxs-lookup"><span data-stu-id="6d280-341">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="6d280-342">挿入文字 (`input`) は、印刷可能でないか、対応する mask 要素と一致しないため、有効な入力文字ではありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-342">The insertion character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="6d280-343">挿入ポイントの右側には使用可能な位置がないため、既存の文字をシフトできません。</span><span class="sxs-lookup"><span data-stu-id="6d280-343">There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="6d280-344">既存の文字をシフトすると、マスク違反が発生します。</span><span class="sxs-lookup"><span data-stu-id="6d280-344">Shifting the existing characters would produce a violation of the mask.</span></span>  
  
 <span data-ttu-id="6d280-345">空の `input` 文字列を指定すると、書式設定された文字列は変更されませんが、`true`が返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-345">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (string input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(string input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As String, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(System::String ^ input, int position);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : string * int -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d280-346">挿入する <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-346">The <see cref="T:System.String" /> to be inserted.</span></span></param>
        <param name="position"><span data-ttu-id="6d280-347">入力文字列を挿入する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-347">The zero-based position in the formatted string to insert the input string.</span></span></param>
        <summary><span data-ttu-id="6d280-348">書式設定された文字列内の指定した位置に指定した文字列を挿入します。</span><span class="sxs-lookup"><span data-stu-id="6d280-348">Inserts the specified string at a specified position within the formatted string.</span></span></summary>
        <returns><span data-ttu-id="6d280-349">挿入が正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-349"><see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-350"><xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> メソッドは、`input` 文字列の各文字を、`pos` 以上の位置にある編集位置に挿入します。</span><span class="sxs-lookup"><span data-stu-id="6d280-350">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond.</span></span> <span data-ttu-id="6d280-351">このメソッドは、挿入された文字の1つ上の位置に、挿入ポイントの後にあるすべての既存の文字をシフトします。</span><span class="sxs-lookup"><span data-stu-id="6d280-351">This method will shift all existing characters after the insertion point over by one position for each inserted character.</span></span> <span data-ttu-id="6d280-352">次のいずれかのエラーが発生した場合、挿入は実行されず、メソッドは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-352">If one of the following errors occurs, no insertion is performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="6d280-353">`pos` パラメーターが0未満か、または書式設定された文字列の <xref:System.ComponentModel.MaskedTextProvider.Length%2A> を超えています。</span><span class="sxs-lookup"><span data-stu-id="6d280-353">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="6d280-354">書式設定された文字列の中で、または指定した位置以降に含まれる編集可能な文字が不足しています。 `pos`は、`input` 文字列からすべての文字を挿入します。</span><span class="sxs-lookup"><span data-stu-id="6d280-354">Not enough editable characters exist in the formatted string at or beyond the specified position, `pos`, to insert all of the characters from the `input` string.</span></span>  
  
-   <span data-ttu-id="6d280-355">1つ以上の挿入文字が、印刷可能でないか、対応する mask 要素と一致しないため、有効な入力文字ではありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-355">One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.</span></span>  
  
-   <span data-ttu-id="6d280-356">挿入ポイントの右側には、使用可能な位置が不足しているため、既存の文字をシフトできません。</span><span class="sxs-lookup"><span data-stu-id="6d280-356">There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="6d280-357">既存の文字をシフトすると、マスク違反が発生します。</span><span class="sxs-lookup"><span data-stu-id="6d280-357">Shifting the existing characters would produce a violation of the mask.</span></span> <span data-ttu-id="6d280-358">このシフトは、個々の文字の挿入時に行われることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="6d280-358">Note that this shifting occurs during the insertion of each individual character.</span></span>  
  
 <span data-ttu-id="6d280-359">空の `input` 文字列を指定すると、書式設定された文字列は変更されませんが、`true`が返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-359">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d280-360"><paramref name="input" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6d280-360">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(char input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As Char, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(char input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : char * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d280-361">挿入する <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-361">The <see cref="T:System.Char" /> to be inserted.</span></span></param>
        <param name="position"><span data-ttu-id="6d280-362">文字を挿入する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-362">The zero-based position in the formatted string to insert the character.</span></span></param>
        <param name="testPosition"><span data-ttu-id="6d280-363">メソッドが正常に実行された場合は、文字が挿入された最後の位置。それ以外の場合は、挿入が失敗した最初の位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-363">If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.</span></span> <span data-ttu-id="6d280-364">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-364">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="6d280-365">挿入操作の結果を簡潔に示す <see cref="T:System.ComponentModel.MaskedTextResultHint" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-365">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the insertion operation.</span></span> <span data-ttu-id="6d280-366">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-366">An output parameter.</span></span></param>
        <summary><span data-ttu-id="6d280-367">書式設定された文字列内の指定した位置に指定した文字を挿入し、最後の挿入位置と操作のステータスを返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-367">Inserts the specified character at the specified position within the formatted string, returning the last insertion position and the status of the operation.</span></span></summary>
        <returns><span data-ttu-id="6d280-368">挿入が正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-368"><see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-369"><xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> メソッドは、`pos` パラメーターによって指定された以降の最初の編集位置に文字を挿入します。</span><span class="sxs-lookup"><span data-stu-id="6d280-369">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter.</span></span> <span data-ttu-id="6d280-370">このメソッドは、挿入ポイントの後にあるすべての既存の文字を1つ上の位置にシフトして、挿入された `input` 文字のための領域を確保します。</span><span class="sxs-lookup"><span data-stu-id="6d280-370">This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character.</span></span> <span data-ttu-id="6d280-371">次のいずれかのエラーが発生した場合、挿入は実行されず、メソッドは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-371">If one of the following errors occurs, the insertion is not performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="6d280-372">`pos` パラメーターが0未満か、または書式設定された文字列の <xref:System.ComponentModel.MaskedTextProvider.Length%2A> を超えています。</span><span class="sxs-lookup"><span data-stu-id="6d280-372">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="6d280-373">書式設定された文字列の中で、または指定した位置より後に、編集可能な文字が見つかりませんでした `pos`。</span><span class="sxs-lookup"><span data-stu-id="6d280-373">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="6d280-374">挿入文字 (`input`) は、印刷可能でないか、対応する mask 要素と一致しないため、有効な入力文字ではありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-374">The insertion character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="6d280-375">挿入ポイントの右側には使用可能な位置がないため、既存の文字をシフトできません。</span><span class="sxs-lookup"><span data-stu-id="6d280-375">There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="6d280-376">既存の文字をシフトすると、マスク違反が発生します。</span><span class="sxs-lookup"><span data-stu-id="6d280-376">Shifting the existing characters would produce a violation of the mask.</span></span>  
  
 <span data-ttu-id="6d280-377">空の `input` 文字列を指定すると、書式設定された文字列は変更されませんが、`true`が返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-377">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(string input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As String, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(System::String ^ input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : string * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d280-378">挿入する <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-378">The <see cref="T:System.String" /> to be inserted.</span></span></param>
        <param name="position"><span data-ttu-id="6d280-379">入力文字列を挿入する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-379">The zero-based position in the formatted string to insert the input string.</span></span></param>
        <param name="testPosition"><span data-ttu-id="6d280-380">メソッドが正常に実行された場合は、文字が挿入された最後の位置。それ以外の場合は、挿入が失敗した最初の位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-380">If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.</span></span> <span data-ttu-id="6d280-381">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-381">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="6d280-382">挿入操作の結果を簡潔に示す <see cref="T:System.ComponentModel.MaskedTextResultHint" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-382">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the insertion operation.</span></span> <span data-ttu-id="6d280-383">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-383">An output parameter.</span></span></param>
        <summary><span data-ttu-id="6d280-384">書式設定された文字列内の指定した位置に指定した文字列を挿入し、最後の挿入位置と操作のステータスを返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-384">Inserts the specified string at a specified position within the formatted string, returning the last insertion position and the status of the operation.</span></span></summary>
        <returns><span data-ttu-id="6d280-385">挿入が正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-385"><see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-386"><xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> メソッドは、`input` 文字列の各文字を、`pos` 以上の位置にある編集位置に挿入します。</span><span class="sxs-lookup"><span data-stu-id="6d280-386">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond.</span></span> <span data-ttu-id="6d280-387">このメソッドは、挿入された文字の1つ上の位置に、挿入ポイントの後にあるすべての既存の文字をシフトします。</span><span class="sxs-lookup"><span data-stu-id="6d280-387">This method will shift all existing characters after the insertion point over by one position for each inserted character.</span></span> <span data-ttu-id="6d280-388">次のいずれかのエラーが発生した場合、挿入は実行されず、メソッドは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-388">If one of the following errors occurs, no insertion is performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="6d280-389">`pos` パラメーターが0未満か、または書式設定された文字列の <xref:System.ComponentModel.MaskedTextProvider.Length%2A> を超えています。</span><span class="sxs-lookup"><span data-stu-id="6d280-389">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="6d280-390">書式設定された文字列の中で、または指定した位置以降に含まれる編集可能な文字が不足しています。 `pos`は、`input` 文字列からすべての文字を挿入します。</span><span class="sxs-lookup"><span data-stu-id="6d280-390">Not enough editable characters exist in the formatted string at or beyond the specified position, `pos`, to insert all of the characters from the `input` string.</span></span>  
  
-   <span data-ttu-id="6d280-391">1つ以上の挿入文字が、印刷可能でないか、対応する mask 要素と一致しないため、有効な入力文字ではありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-391">One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.</span></span>  
  
-   <span data-ttu-id="6d280-392">挿入ポイントの右側には、使用可能な位置が不足しているため、既存の文字をシフトできません。</span><span class="sxs-lookup"><span data-stu-id="6d280-392">There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="6d280-393">既存の文字をシフトすると、マスク違反が発生します。</span><span class="sxs-lookup"><span data-stu-id="6d280-393">Shifting the existing characters would produce a violation of the mask.</span></span> <span data-ttu-id="6d280-394">このシフトは、個々の文字の挿入時に行われることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="6d280-394">Note that this shifting occurs during the insertion of each individual character.</span></span>  
  
 <span data-ttu-id="6d280-395">空の `input` 文字列を指定すると、書式設定された文字列は変更されませんが、`true`が返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-395">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d280-396"><paramref name="input" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6d280-396">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InvalidIndex">
      <MemberSignature Language="C#" Value="public static int InvalidIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 InvalidIndex" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvalidIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int InvalidIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InvalidIndex : int" Usage="System.ComponentModel.MaskedTextProvider.InvalidIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-397">無効なインデックスの範囲の上限を取得します。</span><span class="sxs-lookup"><span data-stu-id="6d280-397">Gets the upper bound of the range of invalid indexes.</span></span></summary>
        <value><span data-ttu-id="6d280-398">プロバイダー実装によって判断された無効な最大インデックスを表す値。</span><span class="sxs-lookup"><span data-stu-id="6d280-398">A value representing the largest invalid index, as determined by the provider implementation.</span></span> <span data-ttu-id="6d280-399">たとえば、有効な最小インデックスが 0 の場合、このプロパティは -1 を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-399">For example, if the lowest valid index is 0, this property will return -1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-400"><xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A> プロパティは、<xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> メソッドなどのインデックス作成操作に対して無効な結果を表すために使用されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-400">The <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A> property is used to represent a result that is not valid for indexing operations, such as the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> method.</span></span>  
  
 <span data-ttu-id="6d280-401">プロバイダーを使用する場合、または独自のプロバイダーを実装する場合は、このプロパティを使用して、無効な値に関する知識をハードコーディングするのではなく、インデックスが無効かどうかを判断する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6d280-401">When you use the provider or implement your own, you should use this property to decide if an index is invalid, rather than hard-coding knowledge of invalid values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsAvailablePosition">
      <MemberSignature Language="C#" Value="public bool IsAvailablePosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAvailablePosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAvailablePosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAvailablePosition(int position);" />
      <MemberSignature Language="F#" Value="member this.IsAvailablePosition : int -&gt; bool" Usage="maskedTextProvider.IsAvailablePosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="6d280-402">テスト対象となるマスク内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-402">The zero-based position in the mask to test.</span></span></param>
        <summary><span data-ttu-id="6d280-403">指定した位置を入力の割り当てに使用できるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="6d280-403">Determines whether the specified position is available for assignment.</span></span></summary>
        <returns><span data-ttu-id="6d280-404">書式設定された文字列内の指定した位置が編集可能であり、入力がまだ割り当てられていない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-404"><see langword="true" /> if the specified position in the formatted string is editable and has not been assigned to yet; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-405"><xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A> メソッドは、次の条件がすべて満たされている場合にのみ `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-405">The <xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A> method returns `true` only if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="6d280-406">`pos` パラメーターは、書式設定された文字列の境界内にあります。つまり、値が0以上で、書式設定された文字列の <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 未満であることを示します。</span><span class="sxs-lookup"><span data-stu-id="6d280-406">The `pos` parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="6d280-407">指定された位置は編集可能な文字です。</span><span class="sxs-lookup"><span data-stu-id="6d280-407">The specified position is an editable character.</span></span>  
  
-   <span data-ttu-id="6d280-408">文字はこの位置にまだ割り当てられていません。</span><span class="sxs-lookup"><span data-stu-id="6d280-408">A character has not already been assigned to this position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsEditPosition">
      <MemberSignature Language="C#" Value="public bool IsEditPosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEditPosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEditPosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEditPosition(int position);" />
      <MemberSignature Language="F#" Value="member this.IsEditPosition : int -&gt; bool" Usage="maskedTextProvider.IsEditPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="6d280-409">テスト対象となるマスク内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-409">The zero-based position in the mask to test.</span></span></param>
        <summary><span data-ttu-id="6d280-410">指定した位置が編集可能かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="6d280-410">Determines whether the specified position is editable.</span></span></summary>
        <returns><span data-ttu-id="6d280-411">書式設定された文字列内の指定した位置が編集可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-411"><see langword="true" /> if the specified position in the formatted string is editable; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-412"><xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A> メソッドは、次の両方の条件に該当する場合にのみ `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-412">The <xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A> method returns `true` only if both of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="6d280-413">`pos` パラメーターは、書式設定された文字列の境界内にあります。つまり、値が0以上で、書式設定された文字列の <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 未満であることを示します。</span><span class="sxs-lookup"><span data-stu-id="6d280-413">The `pos` parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="6d280-414">指定された位置は編集可能な文字です。</span><span class="sxs-lookup"><span data-stu-id="6d280-414">The specified position is an editable character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsPassword">
      <MemberSignature Language="C#" Value="public bool IsPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPassword" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPassword { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPassword : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IsPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-415">書式設定された文字列に、パスワードによる保護を適用する必要があるかどうかを決定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6d280-415">Gets or sets a value that determines whether password protection should be applied to the formatted string.</span></span></summary>
        <value><span data-ttu-id="6d280-416">入力文字列をパスワード文字列として扱う場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-416"><see langword="true" /> if the input string is to be treated as a password string; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6d280-417">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="6d280-417">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-418">パスワード保護は、次の2つの方法のいずれかを使用して開始できます。</span><span class="sxs-lookup"><span data-stu-id="6d280-418">Password protection can be initiated using one of the following two ways:</span></span>  
  
-   <span data-ttu-id="6d280-419"><xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> プロパティを`null` 以外の値に設定します。</span><span class="sxs-lookup"><span data-stu-id="6d280-419">Setting the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property to a non-`null` value.</span></span>  
  
-   <span data-ttu-id="6d280-420"><xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> プロパティを `true`に設定します。これにより、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> プロパティも <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> 値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-420">Setting the <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> property to `true`, which also sets the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property to the <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> value.</span></span>  
  
 <span data-ttu-id="6d280-421"><xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> は、実際の入力文字を表示するか、または <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>で不明瞭にするかどうかを決定するために、<xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> メソッドと <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> メソッドによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-421"><xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to determine whether to reveal the actual input characters or obscure them with <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="IsValidInputChar">
      <MemberSignature Language="C#" Value="public static bool IsValidInputChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidInputChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidInputChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidInputChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidInputChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidInputChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="6d280-422">テストする <see cref="T:System.Char" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6d280-422">The <see cref="T:System.Char" /> value to test.</span></span></param>
        <summary><span data-ttu-id="6d280-423">指定した文字が有効な入力文字かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="6d280-423">Determines whether the specified character is a valid input character.</span></span></summary>
        <returns><span data-ttu-id="6d280-424">指定した文字に有効な入力値が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-424"><see langword="true" /> if the specified character contains a valid input value; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-425">有効な入力文字には、文字、数字、句読点、記号、および空白文字を含む、印刷可能なすべての文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="6d280-425">Valid input characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidMaskChar">
      <MemberSignature Language="C#" Value="public static bool IsValidMaskChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidMaskChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidMaskChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidMaskChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidMaskChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidMaskChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="6d280-426">テストする <see cref="T:System.Char" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6d280-426">The <see cref="T:System.Char" /> value to test.</span></span></param>
        <summary><span data-ttu-id="6d280-427">指定した文字が有効なマスク文字かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="6d280-427">Determines whether the specified character is a valid mask character.</span></span></summary>
        <returns><span data-ttu-id="6d280-428">指定した文字に有効なマスク値が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-428"><see langword="true" /> if the specified character contains a valid mask value; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-429">有効なマスク文字には、文字、数字、句読点、記号、および空白文字を含む、印刷可能なすべての文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="6d280-429">Valid mask characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="IsValidPasswordChar">
      <MemberSignature Language="C#" Value="public static bool IsValidPasswordChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidPasswordChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidPasswordChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidPasswordChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidPasswordChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidPasswordChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="6d280-430">テストする <see cref="T:System.Char" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6d280-430">The <see cref="T:System.Char" /> value to test.</span></span></param>
        <summary><span data-ttu-id="6d280-431">指定した文字が有効なパスワード文字かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="6d280-431">Determines whether the specified character is a valid password character.</span></span></summary>
        <returns><span data-ttu-id="6d280-432">指定した文字に有効なパスワード値が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-432"><see langword="true" /> if the specified character contains a valid password value; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-433">有効なパスワード文字には、すべての印刷可能な文字と null 文字が含まれます。これは、パスワード機能を無効にするために使用されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-433">Valid password characters include all printable characters and the null character, which is used to disable password functionality.</span></span> <span data-ttu-id="6d280-434">印刷可能な文字には、文字、数字、句読点、記号、および空白文字があります。</span><span class="sxs-lookup"><span data-stu-id="6d280-434">Printable characters include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public char this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char default[int] { char get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : char" Usage="System.ComponentModel.MaskedTextProvider.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="6d280-435">取得する要素の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="6d280-435">A zero-based index of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="6d280-436">書式設定された文字列内の指定した位置にある要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="6d280-436">Gets the element at the specified position in the formatted string.</span></span></summary>
        <value><span data-ttu-id="6d280-437">書式設定された文字列内の指定した位置にある <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-437">The <see cref="T:System.Char" /> at the specified position in the formatted string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-438"><xref:System.ComponentModel.MaskedTextProvider.Item%2A> プロパティは、<xref:System.ComponentModel.MaskedTextProvider> クラスの標準のインデクサーです。</span><span class="sxs-lookup"><span data-stu-id="6d280-438">The <xref:System.ComponentModel.MaskedTextProvider.Item%2A> property is the standard indexer for the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="6d280-439"><paramref name="index" /> が 0 未満か、マスクの <see cref="P:System.ComponentModel.MaskedTextProvider.Length" /> 以上の値です。</span><span class="sxs-lookup"><span data-stu-id="6d280-439"><paramref name="index" /> is less than zero or greater than or equal to the <see cref="P:System.ComponentModel.MaskedTextProvider.Length" /> of the mask.</span></span></exception>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
      </Docs>
    </Member>
    <Member MemberName="LastAssignedPosition">
      <MemberSignature Language="C#" Value="public int LastAssignedPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastAssignedPosition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastAssignedPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastAssignedPosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastAssignedPosition : int" Usage="System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-440">マスクに割り当てられている右端の入力文字のマスク内のインデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="6d280-440">Gets the index in the mask of the rightmost input character that has been assigned to the mask.</span></span></summary>
        <value><span data-ttu-id="6d280-441">マスクに入力文字が少なくとも 1 文字割り当てられている場合は、文字が割り当てられている右端の位置のインデックスを格納する <see cref="T:System.Int32" />。文字が割り当てられた位置がない場合は <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-441">If at least one input character has been assigned to the mask, an <see cref="T:System.Int32" /> containing the index of rightmost assigned position; otherwise, if no position has been assigned, <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-442"><xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> プロパティは、入力文字が割り当てられている、原点を基準とした、マスク内の最も遠い編集位置を表します。</span><span class="sxs-lookup"><span data-stu-id="6d280-442">The <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property represents the farthest edit position in the mask, relative to the origin, that has been assigned an input character.</span></span> <span data-ttu-id="6d280-443">英語など、左から右 (LTR) に読み取られる言語の場合、これは右端で割り当てられた位置です。右から左に読む (RTL) 言語の場合、これが左端の位置になります。</span><span class="sxs-lookup"><span data-stu-id="6d280-443">For languages read left-to-right (LTR), such as English, this is the rightmost assigned position; for languages read right-to-left (RTL), this would be the leftmost position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.ComponentModel.MaskedTextProvider.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-444">マスク修飾子文字を除いたマスクの長さを取得します。</span><span class="sxs-lookup"><span data-stu-id="6d280-444">Gets the length of the mask, absent any mask modifier characters.</span></span></summary>
        <value><span data-ttu-id="6d280-445">マスク入力を修飾する文字を除く、マスク内の位置の数を格納する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-445">An <see cref="T:System.Int32" /> containing the number of positions in the mask, excluding characters that modify mask input.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-446"><xref:System.ComponentModel.MaskedTextProvider.Length%2A> プロパティは、リテラルと編集可能な文字の両方を含む、マスク内の文字の合計数を表します。</span><span class="sxs-lookup"><span data-stu-id="6d280-446">The <xref:System.ComponentModel.MaskedTextProvider.Length%2A> property represents the total number of characters in the mask, including both the literal and editable characters.</span></span> <span data-ttu-id="6d280-447">リテラル文字の数は、<xref:System.ComponentModel.MaskedTextProvider.Length%2A>から <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> の値を減算することによって決定できます。</span><span class="sxs-lookup"><span data-stu-id="6d280-447">The number of literal characters can be determined by subtracting the value of the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> from the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>.</span></span>  
  
 <span data-ttu-id="6d280-448">また <xref:System.ComponentModel.MaskedTextProvider.Length%2A> は、入力文字、リテラル、プロンプト文字など、書式設定された文字列の長さも記述します。</span><span class="sxs-lookup"><span data-stu-id="6d280-448"><xref:System.ComponentModel.MaskedTextProvider.Length%2A> also describes the length of the formatted string, including input characters, literals, and prompt characters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="Mask">
      <MemberSignature Language="C#" Value="public string Mask { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Mask" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Mask" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mask As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Mask { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Mask : string" Usage="System.ComponentModel.MaskedTextProvider.Mask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-449">入力マスクを取得します。</span><span class="sxs-lookup"><span data-stu-id="6d280-449">Gets the input mask.</span></span></summary>
        <value><span data-ttu-id="6d280-450">フル マスクを格納する <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-450">A <see cref="T:System.String" /> containing the full mask.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-451"><xref:System.ComponentModel.MaskedTextProvider.Mask%2A> プロパティは、<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> コンストラクターで設定されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-451">The <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span> <span data-ttu-id="6d280-452">このマスクには、マスク言語で定義されている有効な文字のみを含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="6d280-452">This mask must contain only valid characters as defined by the masking language.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clone" />
      </Docs>
    </Member>
    <Member MemberName="MaskCompleted">
      <MemberSignature Language="C#" Value="public bool MaskCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskCompleted" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaskCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MaskCompleted : bool" Usage="System.ComponentModel.MaskedTextProvider.MaskCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-453">すべての必須入力が、書式設定された文字列に入力されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6d280-453">Gets a value indicating whether all required inputs have been entered into the formatted string.</span></span></summary>
        <value><span data-ttu-id="6d280-454">必須の入力がすべてマスクに入力された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-454"><see langword="true" /> if all required input has been entered into the mask; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-455"><xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> プロパティは、必要な入力要素だけをチェックします。</span><span class="sxs-lookup"><span data-stu-id="6d280-455">The <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property checks only required input elements.</span></span> <span data-ttu-id="6d280-456">必須および省略可能な入力要素がすべて入力されているかどうかを確認するには、代わりに <xref:System.Windows.Forms.MaskedTextBox> クラスの <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=nameWithType> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="6d280-456">To determine whether all required and optional input elements have been entered, use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class instead.</span></span>  
  
 <span data-ttu-id="6d280-457"><xref:System.ComponentModel.MaskedTextProvider.Mask%2A> プロパティの現在の値によって、必須と見なされる書式要素と省略可能な要素が決まります。</span><span class="sxs-lookup"><span data-stu-id="6d280-457">The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskCompleted" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="MaskFull">
      <MemberSignature Language="C#" Value="public bool MaskFull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskFull" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskFull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaskFull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MaskFull : bool" Usage="System.ComponentModel.MaskedTextProvider.MaskFull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-458">すべての必須入力と省略可能な入力が、書式設定された文字列に入力されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6d280-458">Gets a value indicating whether all required and optional inputs have been entered into the formatted string.</span></span></summary>
        <value><span data-ttu-id="6d280-459">必須およびオプションの入力がすべて入力された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-459"><see langword="true" /> if all required and optional inputs have been entered; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-460">必須の入力要素だけが入力されているかどうかを確認するには、代わりに <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="6d280-460">To verify if only required input elements have been entered, use the <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property instead.</span></span> <span data-ttu-id="6d280-461"><xref:System.ComponentModel.MaskedTextProvider.Mask%2A> プロパティの現在の値によって、必須と見なされる書式要素と省略可能な要素が決まります。</span><span class="sxs-lookup"><span data-stu-id="6d280-461">The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="PasswordChar">
      <MemberSignature Language="C#" Value="public char PasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PasswordChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordChar : char with get, set" Usage="System.ComponentModel.MaskedTextProvider.PasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-462">実際の入力文字を置き換える文字を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6d280-462">Gets or sets the character to be substituted for the actual input characters.</span></span></summary>
        <value><span data-ttu-id="6d280-463">パスワード文字として使用される <see cref="T:System.Char" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6d280-463">The <see cref="T:System.Char" /> value used as the password character.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-464">ユーザーが機密性の高い入力を行う場合は、出力操作中にユーザーが入力した実際の情報を隠すのが一般的です。</span><span class="sxs-lookup"><span data-stu-id="6d280-464">For sensitive user input, it is common practice to conceal the actual information entered by the user during output operations.</span></span> <span data-ttu-id="6d280-465"><xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> プロパティが`null` 以外の文字に設定されている場合、<xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> や <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> などの出力メソッドは、指定されたパスワード文字で入力文字を隠すことができます。</span><span class="sxs-lookup"><span data-stu-id="6d280-465">If the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a non-`null` character, output methods such as <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> will obscure the input characters with the specified password character.</span></span> <span data-ttu-id="6d280-466">このプロパティを `null` に設定すると、パスワード保護機能が無効になります。</span><span class="sxs-lookup"><span data-stu-id="6d280-466">Setting this property to `null` will disable password protection functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d280-467">このプロパティの設定時に指定したパスワード文字は、現在のプロンプト文字 <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" /> と同じです。</span><span class="sxs-lookup"><span data-stu-id="6d280-467">The password character specified when setting this property is the same as the current prompt character, <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />.</span></span> <span data-ttu-id="6d280-468">この 2 つは異なる必要があります。</span><span class="sxs-lookup"><span data-stu-id="6d280-468">The two are required to be different.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d280-469">このプロパティの設定時に指定した文字は、<see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> メソッドによって判断された有効なパスワード文字ではありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-469">The character specified when setting this property is not a valid password character, as determined by the <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> method.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="PromptChar">
      <MemberSignature Language="C#" Value="public char PromptChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PromptChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PromptChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PromptChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PromptChar : char with get, set" Usage="System.ComponentModel.MaskedTextProvider.PromptChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-470">使用できるすべての編集位置に対してユーザー入力がないことを表す際に使用する文字を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6d280-470">Gets or sets the character used to represent the absence of user input for all available edit positions.</span></span></summary>
        <value><span data-ttu-id="6d280-471">ユーザーに入力を要求するために使用される文字。</span><span class="sxs-lookup"><span data-stu-id="6d280-471">The character used to prompt the user for input.</span></span> <span data-ttu-id="6d280-472">既定値はアンダースコア (_) です。</span><span class="sxs-lookup"><span data-stu-id="6d280-472">The default is an underscore (_).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-473"><xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> プロパティは、書式設定された入力文字列の現在の状態を表すために <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> および <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> メソッドによって使用されるプロンプト文字を表します。</span><span class="sxs-lookup"><span data-stu-id="6d280-473">The <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property represents the prompt character that is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to represent the current state of the formatted input string.</span></span> <span data-ttu-id="6d280-474">プロンプト文字は、入力値がまだ割り当てられていない編集可能な位置に配置されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-474">A prompt character is placed in editable positions that have not yet been assigned an input value.</span></span> <span data-ttu-id="6d280-475"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> メソッドの一部のバージョンは、<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> プロパティの値にも依存します。</span><span class="sxs-lookup"><span data-stu-id="6d280-475">Some versions of the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method also depend on the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d280-476">このプロパティの設定時に指定したプロンプト文字は、現在のパスワード文字 <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> と同じです。</span><span class="sxs-lookup"><span data-stu-id="6d280-476">The prompt character specified when setting this property is the same as the current password character, <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />.</span></span> <span data-ttu-id="6d280-477">この 2 つは異なる必要があります。</span><span class="sxs-lookup"><span data-stu-id="6d280-477">The two are required to be different.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d280-478">このプロパティの設定時に指定した文字は、<see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> メソッドによって判断された有効なパスワード文字ではありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-478">The character specified when setting this property is not a valid password character, as determined by the <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> method.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d280-479">書式設定された文字列から、割り当てられた最後の文字を削除します。</span><span class="sxs-lookup"><span data-stu-id="6d280-479">Removes the last assigned character from the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; bool" Usage="maskedTextProvider.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d280-480">書式設定された文字列から、割り当てられた最後の文字を削除します。</span><span class="sxs-lookup"><span data-stu-id="6d280-480">Removes the last assigned character from the formatted string.</span></span></summary>
        <returns><span data-ttu-id="6d280-481">文字が正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-481"><see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-482"><xref:System.ComponentModel.MaskedTextProvider.Remove%2A> メソッドは、マスクに文字が割り当てられていない場合は効果がありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-482">The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet.</span></span>  
  
 <span data-ttu-id="6d280-483">最後に割り当てられた文字が書式設定された文字列から削除されると、その位置に対して編集可能なマスク文字がリセットされ、後続の入力が可能になります。</span><span class="sxs-lookup"><span data-stu-id="6d280-483">When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove([out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove([Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Remove : int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Remove (testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="testPosition"><span data-ttu-id="6d280-484">文字が実際に削除された、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-484">The zero-based position in the formatted string where the character was actually removed.</span></span> <span data-ttu-id="6d280-485">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-485">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="6d280-486">操作の結果を簡潔に示す <see cref="T:System.ComponentModel.MaskedTextResultHint" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-486">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="6d280-487">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-487">An output parameter.</span></span></param>
        <summary><span data-ttu-id="6d280-488">書式設定された文字列から、割り当てられた最後の文字を削除し、削除位置と説明の情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="6d280-488">Removes the last assigned character from the formatted string, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="6d280-489">文字が正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-489"><see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-490"><xref:System.ComponentModel.MaskedTextProvider.Remove%2A> メソッドは、マスクに文字が割り当てられていない場合は効果がありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-490">The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet.</span></span>  
  
 <span data-ttu-id="6d280-491">最後に割り当てられた文字が書式設定された文字列から削除されると、その位置に対して編集可能なマスク文字がリセットされ、後続の入力が可能になります。</span><span class="sxs-lookup"><span data-stu-id="6d280-491">When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveAt">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d280-492">書式設定された文字列から、割り当てられた 1 つ以上の文字を削除します。</span><span class="sxs-lookup"><span data-stu-id="6d280-492">Removes one or more assigned characters from the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int position);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; bool" Usage="maskedTextProvider.RemoveAt position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="6d280-493">削除する割り当てられた文字のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-493">The zero-based position of the assigned character to remove.</span></span></param>
        <summary><span data-ttu-id="6d280-494">書式設定された文字列から、指定した位置にある割り当てられた文字を削除します。</span><span class="sxs-lookup"><span data-stu-id="6d280-494">Removes the assigned character at the specified position from the formatted string.</span></span></summary>
        <returns><span data-ttu-id="6d280-495">文字が正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-495"><see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-496"><xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> メソッドは、指定された削除位置に割り当てられた文字がない場合には効果がありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-496">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal position specified.</span></span> <span data-ttu-id="6d280-497">リテラル文字は、このメソッドの影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="6d280-497">Literal characters are not affected by this method.</span></span>  
  
 <span data-ttu-id="6d280-498">文字が削除されると、マスク内の残りの上位文字は、削除によって作成されたギャップを埋めるために左にシフトされます。</span><span class="sxs-lookup"><span data-stu-id="6d280-498">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="6d280-499">空の位置は、入力に対してリセットされます。</span><span class="sxs-lookup"><span data-stu-id="6d280-499">Vacated positions are reset for input.</span></span> <span data-ttu-id="6d280-500">マスクの定義によって文字の移動が禁止されている場合、削除は行われず、<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> は `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-500">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="6d280-501">このメソッドの呼び出しは、オーバーロードされた <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29> バージョンの次の呼び出しとまったく同じです。</span><span class="sxs-lookup"><span data-stu-id="6d280-501">This method call is exactly equivalent to the following call to the overloaded <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29> version:</span></span>  
  
 `RemoveAt(pos, pos);`  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int startPosition, int endPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 startPosition, int32 endPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (startPosition As Integer, endPosition As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int startPosition, int endPosition);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int * int -&gt; bool" Usage="maskedTextProvider.RemoveAt (startPosition, endPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="6d280-502">削除対象の、割り当てられた最初の文字の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="6d280-502">The zero-based index of the first assigned character to remove.</span></span></param>
        <param name="endPosition"><span data-ttu-id="6d280-503">削除対象の、割り当てられた最後の文字の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="6d280-503">The zero-based index of the last assigned character to remove.</span></span></param>
        <summary><span data-ttu-id="6d280-504">書式設定された文字列から、指定した 2 つの位置の間にある割り当てられた文字を削除します。</span><span class="sxs-lookup"><span data-stu-id="6d280-504">Removes the assigned characters between the specified positions from the formatted string.</span></span></summary>
        <returns><span data-ttu-id="6d280-505">文字が正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-505"><see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-506"><xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> メソッドは、指定された削除位置に文字が割り当てられていない場合は効果がありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-506">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified.</span></span>  
  
 <span data-ttu-id="6d280-507">文字が削除されると、マスク内の残りの上位文字は、削除によって作成されたギャップを埋めるために左にシフトされます。</span><span class="sxs-lookup"><span data-stu-id="6d280-507">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="6d280-508">空の位置は、入力に対してリセットされます。</span><span class="sxs-lookup"><span data-stu-id="6d280-508">Vacated positions are reset for input.</span></span> <span data-ttu-id="6d280-509">マスクの定義によって文字の移動が禁止されている場合、削除は行われず、<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> は `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-509">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.RemoveAt (startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="6d280-510">削除対象の、割り当てられた最初の文字の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="6d280-510">The zero-based index of the first assigned character to remove.</span></span></param>
        <param name="endPosition"><span data-ttu-id="6d280-511">削除対象の、割り当てられた最後の文字の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="6d280-511">The zero-based index of the last assigned character to remove.</span></span></param>
        <param name="testPosition"><span data-ttu-id="6d280-512">削除が正常に実行された場合は、文字が実際に削除された、書式設定された文字列内のインデックス番号が 0 から始まる位置。それ以外の場合は、操作が失敗した最初の位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-512">If successful, the zero-based position in the formatted string of where the characters were actually removed; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="6d280-513">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-513">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="6d280-514">操作の結果を簡潔に示す <see cref="T:System.ComponentModel.MaskedTextResultHint" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-514">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="6d280-515">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-515">An output parameter.</span></span></param>
        <summary><span data-ttu-id="6d280-516">書式設定された文字列から、指定した 2 つの位置の間にある割り当てられた文字を削除し、削除位置と説明の情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="6d280-516">Removes the assigned characters between the specified positions from the formatted string, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="6d280-517">文字が正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-517"><see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-518"><xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> メソッドは、指定された削除位置に文字が割り当てられていない場合は効果がありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-518">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified.</span></span>  
  
 <span data-ttu-id="6d280-519">文字が削除されると、マスク内の残りの上位文字は、削除によって作成されたギャップを埋めるために左にシフトされます。</span><span class="sxs-lookup"><span data-stu-id="6d280-519">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="6d280-520">空の位置は、入力に対してリセットされます。</span><span class="sxs-lookup"><span data-stu-id="6d280-520">Vacated positions are reset for input.</span></span> <span data-ttu-id="6d280-521">マスクの定義によって文字の移動が禁止されている場合、削除は行われず、<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> は `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-521">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="6d280-522">このバージョンの <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> には、メソッドの操作に関する詳細情報を伝えるために、2つの出力パラメーターが追加されています。</span><span class="sxs-lookup"><span data-stu-id="6d280-522">This version of <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d280-523">書式設定された文字列内の 1 つ以上の編集可能な文字を指定した文字に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="6d280-523">Replaces one or more editable characters in the formatted string with the specified characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int -&gt; bool" Usage="maskedTextProvider.Replace (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d280-524">既存の値を置き換える <see cref="T:System.Char" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6d280-524">The <see cref="T:System.Char" /> value that replaces the existing value.</span></span></param>
        <param name="position"><span data-ttu-id="6d280-525">置換する最初の編集可能な文字の検索対象となる、インデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-525">The zero-based position to search for the first editable character to replace.</span></span></param>
        <summary><span data-ttu-id="6d280-526">指定した位置以降にある単一の文字を指定した文字値に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="6d280-526">Replaces a single character at or beyond the specified position with the specified character value.</span></span></summary>
        <returns><span data-ttu-id="6d280-527">文字が正常に置き換えられた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-527"><see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-528"><xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29> メソッドは、書式設定された文字列内で、指定した位置 (`pos`) の最初の編集可能な位置を検索します。</span><span class="sxs-lookup"><span data-stu-id="6d280-528">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="6d280-529">見つかった場合は、編集可能な位置の値が、指定された文字 `input`に変更されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-529">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="6d280-530">次のいずれかの条件に該当する場合、置換が実行されず、値 `false` 返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-530">Any of the following conditions will result in an error that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="6d280-531">`pos` パラメーターが0未満か、または書式設定された文字列の <xref:System.ComponentModel.MaskedTextProvider.Length%2A> を超えています。</span><span class="sxs-lookup"><span data-stu-id="6d280-531">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="6d280-532">書式設定された文字列の中で、または指定した位置より後に、編集可能な文字が見つかりませんでした `pos`。</span><span class="sxs-lookup"><span data-stu-id="6d280-532">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="6d280-533">置換文字である `input`は、印刷可能でないか、対応する mask 要素と一致しないため、有効な入力文字ではありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-533">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int position);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int -&gt; bool" Usage="maskedTextProvider.Replace (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d280-534">既存の編集可能な文字を置き換える <see cref="T:System.String" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6d280-534">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span></span></param>
        <param name="position"><span data-ttu-id="6d280-535">置換する最初の編集可能な文字の検索対象となる、インデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-535">The zero-based position to search for the first editable character to replace.</span></span></param>
        <summary><span data-ttu-id="6d280-536">指定した位置から始まる編集可能な文字の範囲を、指定した文字列に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="6d280-536">Replaces a range of editable characters starting at the specified position with the specified string.</span></span></summary>
        <returns><span data-ttu-id="6d280-537">すべての文字が正常に置き換えられた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-537"><see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-538"><xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> メソッドは、指定された位置 (`pos`) の最初の編集可能な位置を検索します。</span><span class="sxs-lookup"><span data-stu-id="6d280-538">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> method searches for the first editable position at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="6d280-539">この時点より後の編集可能な位置が十分であると想定して、既存の文字値は、置換文字列パラメーターの内容と共に1つずつ置換されます `input`。</span><span class="sxs-lookup"><span data-stu-id="6d280-539">Operating under the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="6d280-540">次の条件はエラーと見なされます。</span><span class="sxs-lookup"><span data-stu-id="6d280-540">The following conditions are considered errors.</span></span> <span data-ttu-id="6d280-541">エラーが発生すると、置換は行われず、<xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> は `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-541">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> returns `false`.</span></span>  
  
-   <span data-ttu-id="6d280-542">`pos` パラメーターが0未満か、または書式設定された文字列の <xref:System.ComponentModel.MaskedTextProvider.Length%2A> を超えています。</span><span class="sxs-lookup"><span data-stu-id="6d280-542">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="6d280-543">置換文字列の内容を保持するために、書式設定された文字列内の編集可能な位置が不足しています。</span><span class="sxs-lookup"><span data-stu-id="6d280-543">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="6d280-544">置換文字の値の1つが印刷可能でないか、対応する mask 要素と一致しないため、有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-544">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d280-545"><paramref name="input" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6d280-545">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Replace (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d280-546">既存の値を置き換える <see cref="T:System.Char" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6d280-546">The <see cref="T:System.Char" /> value that replaces the existing value.</span></span></param>
        <param name="position"><span data-ttu-id="6d280-547">置換する最初の編集可能な文字の検索対象となる、インデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-547">The zero-based position to search for the first editable character to replace.</span></span></param>
        <param name="testPosition"><span data-ttu-id="6d280-548">置換が正常に実行された場合は、最後の文字が実際に置き換えられた、書式設定された文字列内のインデックス番号が 0 から始まる位置。それ以外の場合は、操作が失敗した最初の位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-548">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="6d280-549">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-549">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="6d280-550">置換操作の結果を簡潔に示す <see cref="T:System.ComponentModel.MaskedTextResultHint" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-550">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span></span> <span data-ttu-id="6d280-551">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-551">An output parameter.</span></span></param>
        <summary><span data-ttu-id="6d280-552">指定した位置以降にある単一の文字を指定した文字値に置き換え、削除位置と説明の情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="6d280-552">Replaces a single character at or beyond the specified position with the specified character value, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="6d280-553">文字が正常に置き換えられた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-553"><see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-554"><xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> メソッドは、書式設定された文字列内で、指定した位置 (`pos`) の最初の編集可能な位置を検索します。</span><span class="sxs-lookup"><span data-stu-id="6d280-554">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="6d280-555">見つかった場合は、編集可能な位置の値が、指定された文字 `input`に変更されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-555">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="6d280-556">次のいずれかの条件に当てはまる場合、置換は実行されず、値 `false` 返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-556">Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="6d280-557">`pos` パラメーターが0未満か、または書式設定された文字列の <xref:System.ComponentModel.MaskedTextProvider.Length%2A> を超えています。</span><span class="sxs-lookup"><span data-stu-id="6d280-557">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="6d280-558">書式設定された文字列の中で、または指定した位置より後に、編集可能な文字が見つかりませんでした `pos`。</span><span class="sxs-lookup"><span data-stu-id="6d280-558">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="6d280-559">置換文字である `input`は、印刷可能でないか、対応する mask 要素と一致しないため、有効な入力文字ではありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-559">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="6d280-560">戻り値に加えて、このメソッドには、置換操作に関する追加情報を提供する2つの出力パラメーターがあります。</span><span class="sxs-lookup"><span data-stu-id="6d280-560">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Replace (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d280-561">既存の編集可能な文字を置き換える <see cref="T:System.String" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6d280-561">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span></span></param>
        <param name="position"><span data-ttu-id="6d280-562">置換する最初の編集可能な文字の検索対象となる、インデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-562">The zero-based position to search for the first editable character to replace.</span></span></param>
        <param name="testPosition"><span data-ttu-id="6d280-563">置換が正常に実行された場合は、最後の文字が実際に置き換えられた、書式設定された文字列内のインデックス番号が 0 から始まる位置。それ以外の場合は、操作が失敗した最初の位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-563">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="6d280-564">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-564">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="6d280-565">置換操作の結果を簡潔に示す <see cref="T:System.ComponentModel.MaskedTextResultHint" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-565">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span></span> <span data-ttu-id="6d280-566">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-566">An output parameter.</span></span></param>
        <summary><span data-ttu-id="6d280-567">指定した位置から始まる編集可能な文字の範囲を指定した文字列に置き換え、削除位置と説明の情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="6d280-567">Replaces a range of editable characters starting at the specified position with the specified string, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="6d280-568">すべての文字が正常に置き換えられた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-568"><see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-569"><xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> メソッドは、指定された位置 (`pos`) の最初の編集可能な位置を検索します。</span><span class="sxs-lookup"><span data-stu-id="6d280-569">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="6d280-570">この時点より後に編集可能な位置が十分であるという前提に基づいて、既存の文字値は、置換文字列パラメーターの内容と共に1つずつ置き換えられます (`input`)。</span><span class="sxs-lookup"><span data-stu-id="6d280-570">Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="6d280-571">次の条件はエラーと見なされます。</span><span class="sxs-lookup"><span data-stu-id="6d280-571">The following conditions are considered errors.</span></span> <span data-ttu-id="6d280-572">エラーが発生すると、置換は行われず、<xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> は `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-572">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> returns `false`.</span></span>  
  
-   <span data-ttu-id="6d280-573">`pos` パラメーターが0未満か、または書式設定された文字列の <xref:System.ComponentModel.MaskedTextProvider.Length%2A> を超えています。</span><span class="sxs-lookup"><span data-stu-id="6d280-573">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="6d280-574">置換文字列の内容を保持するために、書式設定された文字列内の編集可能な位置が不足しています。</span><span class="sxs-lookup"><span data-stu-id="6d280-574">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="6d280-575">置換文字の値の1つが印刷可能でないか、対応する mask 要素と一致しないため、有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-575">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="6d280-576">戻り値に加えて、このメソッドには、置換操作に関する追加情報を提供する2つの出力パラメーターがあります。</span><span class="sxs-lookup"><span data-stu-id="6d280-576">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Replace (input, startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d280-577">既存の値を置き換える <see cref="T:System.Char" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6d280-577">The <see cref="T:System.Char" /> value that replaces the existing value.</span></span></param>
        <param name="startPosition"><span data-ttu-id="6d280-578">置換を開始する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-578">The zero-based position in the formatted string where the replacement starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="6d280-579">置換を終了する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-579">The zero-based position in the formatted string where the replacement ends.</span></span></param>
        <param name="testPosition"><span data-ttu-id="6d280-580">置換が正常に実行された場合は、最後の文字が実際に置き換えられた、書式設定された文字列内のインデックス番号が 0 から始まる位置。それ以外の場合は、操作が失敗した最初の位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-580">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="6d280-581">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-581">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="6d280-582">置換操作の結果を簡潔に示す <see cref="T:System.ComponentModel.MaskedTextResultHint" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-582">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span></span> <span data-ttu-id="6d280-583">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-583">An output parameter.</span></span></param>
        <summary><span data-ttu-id="6d280-584">指定した開始位置と終了位置の間にある単一の文字を指定した文字値に置き換え、削除位置と説明の情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="6d280-584">Replaces a single character between the specified starting and ending positions with the specified character value, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="6d280-585">文字が正常に置き換えられた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-585"><see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-586"><xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> メソッドは、指定した開始位置と終了位置の間で、書式設定された文字列内の最初の編集可能な位置を検索します。</span><span class="sxs-lookup"><span data-stu-id="6d280-586">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string between the specified starting and ending positions.</span></span> <span data-ttu-id="6d280-587">見つかった場合は、編集可能な位置の値が、指定された文字 `input`に変更されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-587">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="6d280-588">次のいずれかの条件に当てはまる場合、置換は実行されず、値 `false` 返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-588">Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="6d280-589">`startPos` または `endPos` パラメーターは、書式設定された文字列の先頭または末尾の次の位置を指します。</span><span class="sxs-lookup"><span data-stu-id="6d280-589">The `startPos` or `endPos` parameters point before the start of the formatted string or beyond its end.</span></span>  
  
-   <span data-ttu-id="6d280-590">編集可能な文字が指定された間隔で見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="6d280-590">An editable character was not found in the specified interval.</span></span>  
  
-   <span data-ttu-id="6d280-591">置換文字である `input`は、印刷可能でないか、対応する mask 要素と一致しないため、有効な入力文字ではありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-591">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="6d280-592">戻り値に加えて、このメソッドには、置換操作に関する追加情報を提供する2つの出力パラメーターがあります。</span><span class="sxs-lookup"><span data-stu-id="6d280-592">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Replace (input, startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d280-593">既存の編集可能な文字を置き換える <see cref="T:System.String" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6d280-593">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span></span></param>
        <param name="startPosition"><span data-ttu-id="6d280-594">置換を開始する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-594">The zero-based position in the formatted string where the replacement starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="6d280-595">置換を終了する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-595">The zero-based position in the formatted string where the replacement ends.</span></span></param>
        <param name="testPosition"><span data-ttu-id="6d280-596">置換が正常に実行された場合は、最後の文字が実際に置き換えられた、書式設定された文字列内のインデックス番号が 0 から始まる位置。それ以外の場合は、操作が失敗した最初の位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-596">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="6d280-597">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-597">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="6d280-598">置換操作の結果を簡潔に示す <see cref="T:System.ComponentModel.MaskedTextResultHint" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-598">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span></span> <span data-ttu-id="6d280-599">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-599">An output parameter.</span></span></param>
        <summary><span data-ttu-id="6d280-600">指定した開始位置と終了位置の間にある編集可能な文字の範囲を指定した文字列に置き換え、削除位置と説明の情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="6d280-600">Replaces a range of editable characters between the specified starting and ending positions with the specified string, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="6d280-601">すべての文字が正常に置き換えられた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-601"><see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-602"><xref:System.ComponentModel.MaskedTextProvider.Replace%2A> メソッドは、指定した開始位置と終了位置の間で、書式設定された文字列内の最初の編集可能な位置を検索します。</span><span class="sxs-lookup"><span data-stu-id="6d280-602">The <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> method searches for the first editable position in the formatted string between the specified starting and ending positions.</span></span> <span data-ttu-id="6d280-603">この時点より後に編集可能な位置が十分であるという前提に基づいて、既存の文字値は、置換文字列パラメーターの内容と共に1つずつ置き換えられます (`input`)。</span><span class="sxs-lookup"><span data-stu-id="6d280-603">Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="6d280-604">次の条件はエラーと見なされます。</span><span class="sxs-lookup"><span data-stu-id="6d280-604">The following conditions are considered errors.</span></span> <span data-ttu-id="6d280-605">エラーが発生すると、置換は行われず、<xref:System.ComponentModel.MaskedTextProvider.Replace%2A> は `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-605">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="6d280-606">`startPos` または `endPos` パラメーターは、書式設定された文字列の先頭または末尾の次の位置を指します。</span><span class="sxs-lookup"><span data-stu-id="6d280-606">The `startPos` or `endPos` parameters point before the start of the formatted string or beyond its end.</span></span>  
  
-   <span data-ttu-id="6d280-607">置換文字列の内容を保持するために、書式設定された文字列内の編集可能な位置が不足しています。</span><span class="sxs-lookup"><span data-stu-id="6d280-607">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="6d280-608">置換文字の値の1つが印刷可能でないか、対応する mask 要素と一致しないため、有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-608">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="6d280-609">戻り値に加えて、このメソッドには、置換操作に関する追加情報を提供する2つの出力パラメーターがあります。</span><span class="sxs-lookup"><span data-stu-id="6d280-609">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnPrompt">
      <MemberSignature Language="C#" Value="public bool ResetOnPrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnPrompt" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetOnPrompt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetOnPrompt { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResetOnPrompt : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-610">プロンプト文字と一致する入力文字を処理する方法を決定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6d280-610">Gets or sets a value that determines how an input character that matches the prompt character should be handled.</span></span></summary>
        <value><span data-ttu-id="6d280-611">入力されたプロンプト文字によって、マスク内の現在の編集可能な位置がリセットされる場合は <see langword="true" />。それ以外の場合、プロンプト文字が通常の入力文字として処理されることを示すには <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-611"><see langword="true" /> if the prompt character entered as input causes the current editable position in the mask to be reset; otherwise, <see langword="false" /> to indicate that the prompt character is to be processed as a normal input character.</span></span> <span data-ttu-id="6d280-612">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="6d280-612">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-613"><xref:System.ComponentModel.MaskedTextProvider> は、特殊な方法で、性能とプロンプト文字の2つのカテゴリの文字を扱うことができます。</span><span class="sxs-lookup"><span data-stu-id="6d280-613"><xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, paces and prompt characters, in a special manner.</span></span> <span data-ttu-id="6d280-614">通常、各入力文字はマスクに対してテストされ、受け入れられるか拒否されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-614">Normally, each input character will be tested against the mask and either accepted or rejected.</span></span> <span data-ttu-id="6d280-615"><xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> プロパティが `null`以外の値に設定されていることを前提にして、<xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> プロパティを `true` に設定すると、プロンプト文字が特別に処理されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-615">Operating on the assumption that the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property is set to a value other than `null`, then setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> property to `true` will result in special processing for the prompt character.</span></span> <span data-ttu-id="6d280-616">プロンプト文字を追加すると、現在のマスクの文字位置がクリアされ、現在位置が次の編集可能な文字になるようになります。</span><span class="sxs-lookup"><span data-stu-id="6d280-616">When a prompt character is added, it causes the current mask character position to be cleared and the current position to be advanced to the next editable character.</span></span>  
  
 <span data-ttu-id="6d280-617">次の表に示すように、<xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> は <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> プロパティよりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-617"><xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> takes precedence over the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property as described in the following table.</span></span>  
  
|<xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>|<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>|<span data-ttu-id="6d280-618">結果として生じる動作</span><span class="sxs-lookup"><span data-stu-id="6d280-618">Resulting behavior</span></span>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|  
|`true`|`true`|<span data-ttu-id="6d280-619">プロンプト文字を追加できます。これにより、現在のマスク位置がリセットされます。</span><span class="sxs-lookup"><span data-stu-id="6d280-619">The prompt character can be added and it causes the current mask position to be reset.</span></span> <span data-ttu-id="6d280-620">これが既定値です。</span><span class="sxs-lookup"><span data-stu-id="6d280-620">The default.</span></span>|  
|`true`|`false`|<span data-ttu-id="6d280-621">プロンプト文字を追加できます。これにより、現在のマスク位置がリセットされます。</span><span class="sxs-lookup"><span data-stu-id="6d280-621">The prompt character can be added and it causes the current mask position to be reset.</span></span>|  
|`false`|`true`|<span data-ttu-id="6d280-622">プロンプト文字は通常の入力文字として処理されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-622">The prompt character is processed as a normal input character.</span></span>|  
|`false`|`false`|<span data-ttu-id="6d280-623">プロンプト文字が有効ではないため、文字を追加しようとしたメソッドは失敗します。</span><span class="sxs-lookup"><span data-stu-id="6d280-623">The prompt character is not valid and methods attempting to add the character will fail.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnSpace">
      <MemberSignature Language="C#" Value="public bool ResetOnSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnSpace" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetOnSpace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetOnSpace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResetOnSpace : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-624">空白の入力文字の処理方法を決定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6d280-624">Gets or sets a value that determines how a space input character should be handled.</span></span></summary>
        <value><span data-ttu-id="6d280-625">空白の入力文字によって、マスク内の現在の編集可能な位置がリセットされる場合は <see langword="true" />。それ以外の場合、通常の入力文字として処理されることを示すには <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-625"><see langword="true" /> if the space input character causes the current editable position in the mask to be reset; otherwise, <see langword="false" /> to indicate that it is to be processed as a normal input character.</span></span> <span data-ttu-id="6d280-626">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="6d280-626">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-627"><xref:System.ComponentModel.MaskedTextProvider> は、特殊な方法で2つのカテゴリの文字、スペース、およびプロンプト文字を扱うことができます。</span><span class="sxs-lookup"><span data-stu-id="6d280-627"><xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, spaces and prompt characters, in a special manner.</span></span> <span data-ttu-id="6d280-628">通常、各入力文字はマスクに対してテストされ、受け入れられるか拒否されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-628">Normally, each input character will be tested against the mask and either accepted or rejected.</span></span> <span data-ttu-id="6d280-629"><xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> プロパティを `true` に設定すると、現在のマスクの文字位置がクリアされ、現在位置が次の編集可能な文字になるようになります。</span><span class="sxs-lookup"><span data-stu-id="6d280-629">Setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property to `true` will result in the current mask character position being cleared and the current position being advanced to the next editable character.</span></span>  
  
 <span data-ttu-id="6d280-630"><xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> は、プロンプトを除き、保存されたテキストを割り当てるときに便利です。プロンプトはスペースで置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="6d280-630"><xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> is useful when assigning text that was saved excluding the prompt, where the prompt is replaced with a space.</span></span> <span data-ttu-id="6d280-631">このような文字列を復元する前に、<xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> を `true` に設定すると、入力文字列のスペースによって占有されている位置でプロンプト文字がリセットされます。</span><span class="sxs-lookup"><span data-stu-id="6d280-631">Before restoring such a string, setting <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> to `true` will reset the prompt characters at the positions occupied by spaces in the input string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d280-632">書式設定された文字列に指定した入力文字列を設定します。</span><span class="sxs-lookup"><span data-stu-id="6d280-632">Sets the formatted string to the specified input string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Set(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Set (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Set(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Set : string -&gt; bool" Usage="maskedTextProvider.Set input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d280-633">書式設定された文字列の設定に使用する <see cref="T:System.String" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6d280-633">The <see cref="T:System.String" /> value used to set the formatted string.</span></span></param>
        <summary><span data-ttu-id="6d280-634">書式設定された文字列に指定した入力文字列を設定します。</span><span class="sxs-lookup"><span data-stu-id="6d280-634">Sets the formatted string to the specified input string.</span></span></summary>
        <returns><span data-ttu-id="6d280-635">すべての文字が正常に設定された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-635"><see langword="true" /> if all the characters were successfully set; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-636"><xref:System.ComponentModel.MaskedTextProvider.Set%2A> メソッドは、書式設定された文字列の既存の内容を消去し、`input` 文字列に対してマスクを適用して、書式設定された文字列の内容を更新します。</span><span class="sxs-lookup"><span data-stu-id="6d280-636">The <xref:System.ComponentModel.MaskedTextProvider.Set%2A> method clears the existing contents of the formatted string and then applies the mask against the `input` string to update the contents of the formatted string.</span></span>  
  
 <span data-ttu-id="6d280-637">次の条件はエラーと見なされます。</span><span class="sxs-lookup"><span data-stu-id="6d280-637">The following conditions are considered errors.</span></span> <span data-ttu-id="6d280-638">エラーが発生した場合、書式設定された文字列は変更されず、<xref:System.ComponentModel.MaskedTextProvider.Set%2A> は `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-638">When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="6d280-639">置換文字列の内容を保持するために、書式設定された文字列内の編集可能な位置が不足しています。</span><span class="sxs-lookup"><span data-stu-id="6d280-639">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="6d280-640">置換文字の値の1つが印刷可能でないか、対応する mask 要素と一致しないため、有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-640">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d280-641"><paramref name="input" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6d280-641">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Set (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Set(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Set : string * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Set (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d280-642">書式設定された文字列の設定に使用する <see cref="T:System.String" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6d280-642">The <see cref="T:System.String" /> value used to set the formatted string.</span></span></param>
        <param name="testPosition"><span data-ttu-id="6d280-643">設定が正常に実行された場合は、最後の文字が実際に設定された、書式設定された文字列内のインデックス番号が 0 から始まる位置。それ以外の場合は、操作が失敗した最初の位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-643">If successful, the zero-based position in the formatted string where the last character was actually set; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="6d280-644">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-644">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="6d280-645">設定操作の結果を簡潔に示す <see cref="T:System.ComponentModel.MaskedTextResultHint" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-645">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the set operation.</span></span> <span data-ttu-id="6d280-646">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-646">An output parameter.</span></span></param>
        <summary><span data-ttu-id="6d280-647">書式設定された文字列に指定した入力文字列を設定し、削除位置と説明の情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="6d280-647">Sets the formatted string to the specified input string, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="6d280-648">すべての文字が正常に設定された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-648"><see langword="true" /> if all the characters were successfully set; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-649"><xref:System.ComponentModel.MaskedTextProvider.Set%2A> メソッドは、書式設定された文字列の既存の内容を消去し、`input` 文字列に対してマスクを適用して、書式設定された文字列の内容を更新します。</span><span class="sxs-lookup"><span data-stu-id="6d280-649">The <xref:System.ComponentModel.MaskedTextProvider.Set%2A> method clears the existing contents of the formatted string and then applies the mask against the `input` string to update the contents of the formatted string.</span></span>  
  
 <span data-ttu-id="6d280-650">次の条件はエラーと見なされます。</span><span class="sxs-lookup"><span data-stu-id="6d280-650">The following conditions are considered errors.</span></span> <span data-ttu-id="6d280-651">エラーが発生した場合、書式設定された文字列は変更されず、<xref:System.ComponentModel.MaskedTextProvider.Set%2A> は `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-651">When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="6d280-652">置換文字列の内容を保持するために、書式設定された文字列内の編集可能な位置が不足しています。</span><span class="sxs-lookup"><span data-stu-id="6d280-652">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="6d280-653">置換文字の値の1つが印刷可能でないか、対応する mask 要素と一致しないため、有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-653">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="6d280-654">このバージョンの <xref:System.ComponentModel.MaskedTextProvider.Set%2A> には、メソッドの操作に関する詳細情報を伝えるために、2つの出力パラメーターが追加されています。</span><span class="sxs-lookup"><span data-stu-id="6d280-654">This version of <xref:System.ComponentModel.MaskedTextProvider.Set%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d280-655"><paramref name="input" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6d280-655">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="SkipLiterals">
      <MemberSignature Language="C#" Value="public bool SkipLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipLiterals" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLiterals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipLiterals { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLiterals : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.SkipLiterals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d280-656">マスク内のリテラル文字の位置を、同じ値で上書きできるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6d280-656">Gets or sets a value indicating whether literal character positions in the mask can be overwritten by their same values.</span></span></summary>
        <value><span data-ttu-id="6d280-657">リテラルを再び追加できる場合は <see langword="true" />。ユーザーがリテラル文字を上書きできない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-657"><see langword="true" /> to allow literals to be added back; otherwise, <see langword="false" /> to not allow the user to overwrite literal characters.</span></span> <span data-ttu-id="6d280-658">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="6d280-658">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-659">入力マスクには、リテラルおよび編集可能な文字を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="6d280-659">Input masks can contain literal and editable characters.</span></span> <span data-ttu-id="6d280-660">リテラルによって占有されているマスク内の位置に入力文字を追加しようとした場合は、<xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> プロパティの値によって結果が決まります。</span><span class="sxs-lookup"><span data-stu-id="6d280-660">If an attempt is made to add an input character to the position in a mask occupied by a literal, the value of the <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> property determines the result.</span></span>  
  
-   <span data-ttu-id="6d280-661">このプロパティが `true`場合は、入力文字を追加するときに、同じ値を持つリテラルを上書きすることができます。</span><span class="sxs-lookup"><span data-stu-id="6d280-661">If this property is `true`, it is valid to overwrite a literal with the same value when adding input characters.</span></span> <span data-ttu-id="6d280-662">たとえば、スラッシュ (`"00/00/000"`) の3番目の位置にスラッシュ (/) 文字の値 `'/'`を追加できます。</span><span class="sxs-lookup"><span data-stu-id="6d280-662">For example, a forward slash character value, `'/'`, could be added to the third position of the mask `"00/00/000"`.</span></span>  
  
-   <span data-ttu-id="6d280-663">このプロパティが `false`場合、リテラル文字によって占有されているマスク位置に任意の値を割り当てることはできません。</span><span class="sxs-lookup"><span data-stu-id="6d280-663">If this property is `false`, it is not valid to assign any value to a mask position occupied by a literal character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      </Docs>
    </Member>
    <Member MemberName="ToDisplayString">
      <MemberSignature Language="C#" Value="public string ToDisplayString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToDisplayString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToDisplayString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToDisplayString();" />
      <MemberSignature Language="F#" Value="member this.ToDisplayString : unit -&gt; string" Usage="maskedTextProvider.ToDisplayString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d280-664">表示できる形式で書式設定された文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-664">Returns the formatted string in a displayable form.</span></span></summary>
        <returns><span data-ttu-id="6d280-665">プロンプトとマスク リテラルを含む、書式設定された <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-665">The formatted <see cref="T:System.String" /> that includes prompts and mask literals.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-666"><xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> メソッドは、<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> または <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> プロパティの値に関係なく、常に戻り値にプロンプトとリテラル文字を含めます。</span><span class="sxs-lookup"><span data-stu-id="6d280-666">The <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> method will always include prompt and literal characters in the return value, regardless of the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> or <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="6d280-667"><xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> プロパティが `null`以外の文字値に設定されている場合、このメソッドは常にパスワード文字を表示します。</span><span class="sxs-lookup"><span data-stu-id="6d280-667">This method will always display password characters if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a character value other than `null`.</span></span>  
  
 <span data-ttu-id="6d280-668"><xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> は、関連付けられたユーザーインターフェイス要素 (<xref:System.Windows.Forms.MaskedTextBox>など) に表示する文字列を取得するためによく使用されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-668"><xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> is commonly used to obtain the string to display in associated user interface elements, such as <xref:System.Windows.Forms.MaskedTextBox>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d280-669">書式設定された文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-669">Returns the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="maskedTextProvider.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d280-670">割り当てられたすべての文字値を含む、書式設定された文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-670">Returns the formatted string that includes all the assigned character values.</span></span></summary>
        <returns><span data-ttu-id="6d280-671">割り当てられたすべての文字値を含む、書式設定された <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-671">The formatted <see cref="T:System.String" /> that includes all the assigned character values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-672">オーバーロードされた <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> メソッドのこのバージョンには、<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> と <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> プロパティの現在の値に従って、プロンプトとリテラルがそれぞれ含まれています。</span><span class="sxs-lookup"><span data-stu-id="6d280-672">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="6d280-673"><xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> プロパティの値を無視して、常に元の入力文字が返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-673">It will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6d280-674">このメソッドでは、通常、パスワード文字によってユーザーインターフェイスで保護されている情報が明らかになるため、機密性の高いユーザーデータが誤って漏洩するのを防ぐために、細心の注意を払って使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6d280-674">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool -&gt; string" Usage="maskedTextProvider.ToString ignorePasswordChar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar"><span data-ttu-id="6d280-675">実際の編集可能な文字を返す場合は <see langword="true" />。<see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> プロパティが有効であることを示す場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-675"><see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span></span></param>
        <summary><span data-ttu-id="6d280-676">書式設定された文字列を返します。パスワード文字が含まれる場合もあります。</span><span class="sxs-lookup"><span data-stu-id="6d280-676">Returns the formatted string, optionally including password characters.</span></span></summary>
        <returns><span data-ttu-id="6d280-677">リテラル、プロンプト、および場合によってはパスワード文字を含む、書式設定された <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-677">The formatted <see cref="T:System.String" /> that includes literals, prompts, and optionally password characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-678">オーバーロードされた <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> メソッドのこのバージョンには、<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> と <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> プロパティの現在の値に従って、プロンプトとリテラルがそれぞれ含まれています。</span><span class="sxs-lookup"><span data-stu-id="6d280-678">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="6d280-679">`ignorePasswordChar` パラメーターが `true`の場合、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> プロパティの値を無視して、元の入力文字が返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-679">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="6d280-680">このパラメーターを `false`すると、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> プロパティが `null`以外の値に設定されている場合、パスワード文字を使用して編集可能なユーザー入力を隠すことができます。</span><span class="sxs-lookup"><span data-stu-id="6d280-680">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6d280-681">この方法では、通常、パスワード文字によってユーザーインターフェイスで保護されている情報が明らかになる可能性があるため、機微なユーザーデータが誤って漏洩するのを防ぐため、細心の注意を払って使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6d280-681">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool includePrompt, bool includeLiterals);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool includePrompt, bool includeLiterals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (includePrompt As Boolean, includeLiterals As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool includePrompt, bool includeLiterals);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool -&gt; string" Usage="maskedTextProvider.ToString (includePrompt, includeLiterals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrompt"><span data-ttu-id="6d280-682">返される文字列にプロンプト文字が含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-682"><see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <param name="includeLiterals"><span data-ttu-id="6d280-683">返される文字列にリテラル文字が含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-683"><see langword="true" /> to include literal characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6d280-684">書式設定された文字列を返します。プロンプト文字やリテラル文字が含まれる場合もあります。</span><span class="sxs-lookup"><span data-stu-id="6d280-684">Returns the formatted string, optionally including prompt and literal characters.</span></span></summary>
        <returns><span data-ttu-id="6d280-685">割り当てられたすべての文字値、および場合によってはリテラルまたはプロンプトを含む、書式設定された <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-685">The formatted <see cref="T:System.String" /> that includes all the assigned character values and optionally includes literals and prompts.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-686">オーバーロードされた <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> メソッドのこのバージョンには、`IncludePrompt` パラメーターと `IncludeLiterals` パラメーターの値に応じたプロンプトとリテラルがそれぞれ含まれています。</span><span class="sxs-lookup"><span data-stu-id="6d280-686">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="6d280-687">これらのパラメーターは、<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> プロパティの値よりも優先されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="6d280-687">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="6d280-688">このメソッドは、常に元の入力文字を返します。 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> プロパティの値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-688">This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6d280-689">このメソッドでは、通常、パスワード文字によってユーザーインターフェイスで保護されている情報が明らかになるため、機密性の高いユーザーデータが誤って漏洩するのを防ぐために、細心の注意を払って使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6d280-689">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : int * int -&gt; string" Usage="maskedTextProvider.ToString (startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="6d280-690">出力を開始する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-690">The zero-based position in the formatted string where the output begins.</span></span></param>
        <param name="length"><span data-ttu-id="6d280-691">返される文字数。</span><span class="sxs-lookup"><span data-stu-id="6d280-691">The number of characters to return.</span></span></param>
        <summary><span data-ttu-id="6d280-692">書式設定された文字列の部分文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-692">Returns a substring of the formatted string.</span></span></summary>
        <returns><span data-ttu-id="6d280-693">正常に実行された場合は、割り当てられたすべての文字値を含む、書式設定された <see cref="T:System.String" /> の部分文字列。それ以外の場合は <see cref="F:System.String.Empty" /> 文字列。</span><span class="sxs-lookup"><span data-stu-id="6d280-693">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values; otherwise the <see cref="F:System.String.Empty" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-694">このバージョンのオーバーロードされた <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> メソッドは、書式設定された文字列の部分文字列を返します。その際、`startPos` 位置から、`length` パラメーターで指定した後続の文字数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="6d280-694">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="6d280-695">返される文字列には、<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> と <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> プロパティの現在の値に従って、プロンプトとリテラルがそれぞれ含まれています。</span><span class="sxs-lookup"><span data-stu-id="6d280-695">The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="6d280-696">返される文字列には、元の入力文字が含まれます。<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> プロパティは常に無視されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-696">The return string will contain the original input characters; the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is always ignored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6d280-697">このメソッドでは、通常、パスワード文字によってユーザーインターフェイスで保護されている情報が明らかになるため、機密性の高いユーザーデータが誤って漏洩するのを防ぐために、細心の注意を払って使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6d280-697">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="6d280-698"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> は、入力パラメーターに不整合がある場合に、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="6d280-698"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="6d280-699">`startPos` が0未満の場合、開始位置は0に設定されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-699">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="6d280-700">`startPos` が書式設定された文字列の実際の <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 以上の場合は、<xref:System.String.Empty> 文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-700">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="6d280-701">`length` が、開始位置を超えた残りの文字数を超えている場合は、残りの文字だけが返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-701">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="6d280-702">`length` が0以下の場合は、<xref:System.String.Empty> 文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-702">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (ignorePasswordChar, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar"><span data-ttu-id="6d280-703">実際の編集可能な文字を返す場合は <see langword="true" />。<see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> プロパティが有効であることを示す場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-703"><see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span></span></param>
        <param name="startPosition"><span data-ttu-id="6d280-704">出力を開始する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-704">The zero-based position in the formatted string where the output begins.</span></span></param>
        <param name="length"><span data-ttu-id="6d280-705">返される文字数。</span><span class="sxs-lookup"><span data-stu-id="6d280-705">The number of characters to return.</span></span></param>
        <summary><span data-ttu-id="6d280-706">書式設定された文字列の部分文字列を返します。パスワード文字が含まれる場合もあります。</span><span class="sxs-lookup"><span data-stu-id="6d280-706">Returns a substring of the formatted string, optionally including password characters.</span></span></summary>
        <returns><span data-ttu-id="6d280-707">正常に実行された場合は、リテラル、プロンプト、および場合によってはパスワード文字を含む、書式設定された <see cref="T:System.String" /> の部分文字列。それ以外の場合は <see cref="F:System.String.Empty" /> 文字列。</span><span class="sxs-lookup"><span data-stu-id="6d280-707">If successful, a substring of the formatted <see cref="T:System.String" />, which includes literals, prompts, and optionally password characters; otherwise the <see cref="F:System.String.Empty" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-708">このバージョンのオーバーロードされた <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> メソッドは、書式設定された文字列の部分文字列を返します。その際、`startPos` 位置から、`length` パラメーターで指定した後続の文字数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="6d280-708">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="6d280-709">返される文字列には、<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> と <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> プロパティの現在の値に従って、プロンプトとリテラルがそれぞれ含まれています。</span><span class="sxs-lookup"><span data-stu-id="6d280-709">The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="6d280-710">`ignorePasswordChar` パラメーターが `true`の場合、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> プロパティの値を無視して、元の入力文字が返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-710">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="6d280-711">このパラメーターを `false`すると、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> プロパティが `null`以外の値に設定されている場合、パスワード文字を使用して編集可能なユーザー入力を隠すことができます。</span><span class="sxs-lookup"><span data-stu-id="6d280-711">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6d280-712">この方法では、通常、パスワード文字によってユーザーインターフェイスで保護されている情報が明らかになる可能性があるため、機微なユーザーデータが誤って漏洩するのを防ぐため、細心の注意を払って使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6d280-712">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="6d280-713"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> は、入力パラメーターに不整合がある場合に、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="6d280-713"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="6d280-714">`startPos` が0未満の場合、開始位置は0に設定されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-714">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="6d280-715">`startPos` が書式設定された文字列の実際の <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 以上の場合は、<xref:System.String.Empty> 文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-715">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="6d280-716">`length` が、開始位置を超えた残りの文字数を超えている場合は、残りの文字だけが返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-716">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="6d280-717">`length` が0以下の場合は、<xref:System.String.Empty> 文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-717">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool includePrompt, bool includeLiterals, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (includePrompt As Boolean, includeLiterals As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (includePrompt, includeLiterals, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="includePrompt"><span data-ttu-id="6d280-718">返される文字列にプロンプト文字が含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-718"><see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <param name="includeLiterals"><span data-ttu-id="6d280-719">返される文字列にリテラル文字が含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-719"><see langword="true" /> to include literal characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <param name="startPosition"><span data-ttu-id="6d280-720">出力を開始する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-720">The zero-based position in the formatted string where the output begins.</span></span></param>
        <param name="length"><span data-ttu-id="6d280-721">返される文字数。</span><span class="sxs-lookup"><span data-stu-id="6d280-721">The number of characters to return.</span></span></param>
        <summary><span data-ttu-id="6d280-722">書式設定された文字列の部分文字列を返します。プロンプト文字やリテラル文字が含まれる場合もあります。</span><span class="sxs-lookup"><span data-stu-id="6d280-722">Returns a substring of the formatted string, optionally including prompt and literal characters.</span></span></summary>
        <returns><span data-ttu-id="6d280-723">正常に実行された場合は、割り当てられたすべての文字値、および場合によってはリテラルとプロンプトを含む、書式設定された <see cref="T:System.String" /> の部分文字列。それ以外の場合は <see cref="F:System.String.Empty" /> 文字列。</span><span class="sxs-lookup"><span data-stu-id="6d280-723">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values and optionally includes literals and prompts; otherwise the <see cref="F:System.String.Empty" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-724">このバージョンのオーバーロードされた <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> メソッドは、書式設定された文字列の部分文字列を返します。その際、`startPos` 位置から、`length` パラメーターで指定した後続の文字数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="6d280-724">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="6d280-725">返される文字列には、`IncludePrompt` パラメーターと `IncludeLiterals` パラメーターの値に応じたプロンプトとリテラルがそれぞれ含まれています。</span><span class="sxs-lookup"><span data-stu-id="6d280-725">The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="6d280-726">これらのパラメーターは、<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> プロパティの値よりも優先されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="6d280-726">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="6d280-727">このメソッドは、常に元の入力文字を返します。 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> プロパティの値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-727">This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6d280-728">このメソッドでは、通常、パスワード文字によってユーザーインターフェイスで保護されている情報が明らかになるため、機密性の高いユーザーデータが誤って漏洩するのを防ぐために、細心の注意を払って使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6d280-728">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="6d280-729"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> は、入力パラメーターに不整合がある場合に、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="6d280-729"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="6d280-730">`startPos` が0未満の場合、開始位置は0に設定されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-730">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="6d280-731">`startPos` が書式設定された文字列の実際の <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 以上の場合は、<xref:System.String.Empty> 文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-731">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="6d280-732">`length` が、開始位置を超えた残りの文字数を超えている場合は、残りの文字だけが返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-732">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="6d280-733">`length` が0以下の場合は、<xref:System.String.Empty> 文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-733">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean, includePrompt As Boolean, includeLiterals As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool * bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (ignorePasswordChar, includePrompt, includeLiterals, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar"><span data-ttu-id="6d280-734">実際の編集可能な文字を返す場合は <see langword="true" />。<see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> プロパティが有効であることを示す場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-734"><see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span></span></param>
        <param name="includePrompt"><span data-ttu-id="6d280-735">返される文字列にプロンプト文字が含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-735"><see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <param name="includeLiterals"><span data-ttu-id="6d280-736">返される文字列にリテラル文字が含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-736"><see langword="true" /> to return literal characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <param name="startPosition"><span data-ttu-id="6d280-737">出力を開始する、書式設定された文字列内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-737">The zero-based position in the formatted string where the output begins.</span></span></param>
        <param name="length"><span data-ttu-id="6d280-738">返される文字数。</span><span class="sxs-lookup"><span data-stu-id="6d280-738">The number of characters to return.</span></span></param>
        <summary><span data-ttu-id="6d280-739">書式設定された文字列の部分文字列を返します。プロンプト文字、リテラル文字、およびパスワード文字が含まれる場合もあります。</span><span class="sxs-lookup"><span data-stu-id="6d280-739">Returns a substring of the formatted string, optionally including prompt, literal, and password characters.</span></span></summary>
        <returns><span data-ttu-id="6d280-740">正常に実行された場合は、割り当てられたすべての文字値、および場合によってはリテラル、プロンプト、パスワード文字を含む、書式設定された <see cref="T:System.String" /> の部分文字列。それ以外の場合は <see cref="F:System.String.Empty" /> 文字列。</span><span class="sxs-lookup"><span data-stu-id="6d280-740">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values and optionally includes literals, prompts, and password characters; otherwise the <see cref="F:System.String.Empty" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-741">このバージョンのオーバーロードされた <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> メソッドは、書式設定された文字列の部分文字列を返します。その際、`startPos` 位置から、`length` パラメーターで指定した後続の文字数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="6d280-741">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="6d280-742">返される文字列には、`IncludePrompt` パラメーターと `IncludeLiterals` パラメーターの値に応じたプロンプトとリテラルがそれぞれ含まれています。</span><span class="sxs-lookup"><span data-stu-id="6d280-742">The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="6d280-743">これらのパラメーターは、<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> と <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> のプロパティの値よりも優先されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="6d280-743">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and  <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="6d280-744">`ignorePasswordChar` パラメーターが `true`の場合、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> プロパティの値を無視して、元の入力文字が返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-744">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="6d280-745">このパラメーターを `false`すると、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> プロパティが `null`以外の値に設定されている場合、パスワード文字を使用して編集可能なユーザー入力を隠すことができます。</span><span class="sxs-lookup"><span data-stu-id="6d280-745">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6d280-746">この方法では、通常、パスワード文字によってユーザーインターフェイスで保護されている情報が明らかになる可能性があるため、機微なユーザーデータが誤って漏洩するのを防ぐため、細心の注意を払って使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6d280-746">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="6d280-747"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> は、入力パラメーターに不整合がある場合に、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="6d280-747"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="6d280-748">`startPos` が0未満の場合、開始位置は0に設定されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-748">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="6d280-749">`startPos` が書式設定された文字列の実際の <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 以上の場合は、<xref:System.String.Empty> 文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-749">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="6d280-750">`length` が、開始位置を超えた残りの文字数を超えている場合は、残りの文字だけが返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-750">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="6d280-751">`length` が0以下の場合は、<xref:System.String.Empty> 文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-751">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="VerifyChar">
      <MemberSignature Language="C#" Value="public bool VerifyChar (char input, int position, out System.ComponentModel.MaskedTextResultHint hint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyChar(char input, int32 position, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyChar (input As Char, position As Integer, ByRef hint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyChar(char input, int position, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % hint);" />
      <MemberSignature Language="F#" Value="member this.VerifyChar : char * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.VerifyChar (input, position, hint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="hint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d280-752">テストする <see cref="T:System.Char" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6d280-752">The <see cref="T:System.Char" /> value to test.</span></span></param>
        <param name="position"><span data-ttu-id="6d280-753">入力文字をテストするマスク内の位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-753">The position in the mask to test the input character against.</span></span></param>
        <param name="hint"><span data-ttu-id="6d280-754">操作の結果を簡潔に示す <see cref="T:System.ComponentModel.MaskedTextResultHint" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-754">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="6d280-755">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-755">An output parameter.</span></span></param>
        <summary><span data-ttu-id="6d280-756">指定した文字を指定した位置に正常に設定できるかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="6d280-756">Tests whether the specified character could be set successfully at the specified position.</span></span></summary>
        <returns><span data-ttu-id="6d280-757">指定した文字が指定した位置に対して有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-757"><see langword="true" /> if the specified character is valid for the specified position; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-758"><xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> メソッドは、1文字の値が、書式設定された文字列内の指定した位置にある有効な入力を表しているかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="6d280-758">The <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> method tests whether a single character value represents valid input at the specified position in the formatted string.</span></span> <span data-ttu-id="6d280-759">このメソッドは、次の理由により `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-759">This method will return `false` for the following reasons:</span></span>  
  
-   <span data-ttu-id="6d280-760">`pos` パラメーターが0未満か、または <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>の <xref:System.ComponentModel.MaskedTextProvider.Length%2A> を超えています。</span><span class="sxs-lookup"><span data-stu-id="6d280-760">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span></span>  
  
-   <span data-ttu-id="6d280-761">`input` 文字は、<xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A> メソッドによって決定される有効な入力文字ではありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-761">The character `input` is not a valid input character, as determined by the <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A> method.</span></span>  
  
-   <span data-ttu-id="6d280-762">`input` は、指定された位置 (`pos`) の mask 要素と互換性がありません。</span><span class="sxs-lookup"><span data-stu-id="6d280-762">The `input` is not compatible with the mask element at the specified position, `pos`.</span></span>  
  
 <span data-ttu-id="6d280-763">最後の条件は、<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>、<xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>、<xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>、および <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> の各プロパティの現在の値によって異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="6d280-763">The last condition may depend on the current value of the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> and <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> properties.</span></span>  
  
 <span data-ttu-id="6d280-764">マスクに対して入力文字列全体をテストするには、代わりに <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> メソッドのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="6d280-764">To test an entire input string against the mask, use one of the <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> methods instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="VerifyEscapeChar">
      <MemberSignature Language="C#" Value="public bool VerifyEscapeChar (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyEscapeChar(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyEscapeChar (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyEscapeChar(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.VerifyEscapeChar : char * int -&gt; bool" Usage="maskedTextProvider.VerifyEscapeChar (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d280-765">テストする <see cref="T:System.Char" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6d280-765">The <see cref="T:System.Char" /> value to test.</span></span></param>
        <param name="position"><span data-ttu-id="6d280-766">入力文字をテストするマスク内の位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-766">The position in the mask to test the input character against.</span></span></param>
        <summary><span data-ttu-id="6d280-767">指定した文字が指定した位置でエスケープされるかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="6d280-767">Tests whether the specified character would be escaped at the specified position.</span></span></summary>
        <returns><span data-ttu-id="6d280-768">指定した文字が指定した位置でエスケープされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-768"><see langword="true" /> if the specified character would be escaped at the specified position; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-769">文字は、有効な入力であるにもかかわらず、書式設定された文字列内のその位置に割り当てられていない場合、*エスケープ*されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-769">A character is said to be *escaped* if it is valid input, but is not assigned to that position in the formatted string.</span></span> <span data-ttu-id="6d280-770">エスケープ文字は、次の3つのカテゴリに分類されます。</span><span class="sxs-lookup"><span data-stu-id="6d280-770">Escaped characters fall into the following three categories:</span></span>  
  
-   <span data-ttu-id="6d280-771"><xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> プロパティが `true`場合、プロンプト文字はエスケープされます。</span><span class="sxs-lookup"><span data-stu-id="6d280-771">Prompt characters are escaped if the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property is `true`.</span></span>  
  
-   <span data-ttu-id="6d280-772">入力文字は、マスク内のリテラルと同じ値を持つ場合、および <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> プロパティが `true`場合にエスケープされます。</span><span class="sxs-lookup"><span data-stu-id="6d280-772">Input characters are escaped if they have the same value as the literal in the mask, and if the <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> property is `true`.</span></span>  
  
-   <span data-ttu-id="6d280-773"><xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> プロパティが `true`場合、スペース文字はエスケープされます。</span><span class="sxs-lookup"><span data-stu-id="6d280-773">Space characters are escaped if the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="6d280-774"><xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A> メソッドは、`pos` パラメーターが0未満であるか、または <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>の <xref:System.ComponentModel.MaskedTextProvider.Length%2A> を超える場合にも `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-774">The <xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A> method will also return `false` if the `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d280-775">指定した文字列を正常に設定できるかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="6d280-775">Tests whether the specified string could be set successfully.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyString">
      <MemberSignature Language="C#" Value="public bool VerifyString (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyString(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyString (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyString(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.VerifyString : string -&gt; bool" Usage="maskedTextProvider.VerifyString input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d280-776">テストする <see cref="T:System.String" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6d280-776">The <see cref="T:System.String" /> value to test.</span></span></param>
        <summary><span data-ttu-id="6d280-777">指定した文字列を正常に設定できるかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="6d280-777">Tests whether the specified string could be set successfully.</span></span></summary>
        <returns><span data-ttu-id="6d280-778">指定した文字列が有効な入力を表している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-778"><see langword="true" /> if the specified string represents valid input; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-779"><xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> は、書式設定された文字列を実際には変更せずにマスクに対して `input` 文字列を適用し、`input` が対応する <xref:System.ComponentModel.MaskedTextProvider.Set%2A> 操作で有効であるかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="6d280-779">The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation.</span></span> <span data-ttu-id="6d280-780">このメソッドは、入力が `null` 場合、または長さが0の場合にも `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-780">This method also returns `true` if input is `null` or has zero length.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
      </Docs>
    </Member>
    <Member MemberName="VerifyString">
      <MemberSignature Language="C#" Value="public bool VerifyString (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyString(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyString (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyString(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.VerifyString : string * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.VerifyString (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d280-781">テストする <see cref="T:System.String" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6d280-781">The <see cref="T:System.String" /> value to test.</span></span></param>
        <param name="testPosition"><span data-ttu-id="6d280-782">正常に実行された場合は、実際にテストされた最後の文字のインデックス番号が 0 から始まる位置。それ以外の場合は、テストが失敗した最初の位置。</span><span class="sxs-lookup"><span data-stu-id="6d280-782">If successful, the zero-based position of the last character actually tested; otherwise, the first position where the test failed.</span></span> <span data-ttu-id="6d280-783">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-783">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="6d280-784">テスト操作の結果を簡潔に示す <see cref="T:System.ComponentModel.MaskedTextResultHint" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-784">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the test operation.</span></span> <span data-ttu-id="6d280-785">出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6d280-785">An output parameter.</span></span></param>
        <summary><span data-ttu-id="6d280-786">指定した文字列を正常に設定できるかどうかをテストし、位置と説明の情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="6d280-786">Tests whether the specified string could be set successfully, and then outputs position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="6d280-787">指定した文字列が有効な入力を表している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d280-787"><see langword="true" /> if the specified string represents valid input; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d280-788"><xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> は、書式設定された文字列を実際には変更せずにマスクに対して `input` 文字列を適用し、`input` が対応する <xref:System.ComponentModel.MaskedTextProvider.Set%2A> 操作で有効であるかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="6d280-788">The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation.</span></span> <span data-ttu-id="6d280-789">このメソッドは、入力が `null` 場合、または長さが0の場合にも `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="6d280-789">This method also returns `true` if input is `null` or has zero length.</span></span>  
  
 <span data-ttu-id="6d280-790">このバージョンの <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> には、メソッドの操作に関する詳細情報を伝えるために、2つの出力パラメーターが追加されています。</span><span class="sxs-lookup"><span data-stu-id="6d280-790">This version of <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
      </Docs>
    </Member>
  </Members>
</Type>
