<Type Name="LicenseProvider" FullName="System.ComponentModel.LicenseProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fdbfec57c9de7a624793b6d9493d462c29f89cc1" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75146597" /></Metadata><TypeSignature Language="C#" Value="public abstract class LicenseProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LicenseProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.LicenseProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LicenseProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LicenseProvider abstract" />
  <TypeSignature Language="F#" Value="type LicenseProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a36e6-101">ライセンス プロバイダーを実装するための <see langword="abstract" /> 基本クラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="a36e6-101">Provides the <see langword="abstract" /> base class for implementing a license provider.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a36e6-102">次のコード例では、<xref:System.ComponentModel.LicenseManager.Validate%2A> メソッドを使用して、ライセンスされたコントロールを作成します。</span><span class="sxs-lookup"><span data-stu-id="a36e6-102">The following code example creates a licensed control using the <xref:System.ComponentModel.LicenseManager.Validate%2A> method.</span></span> <span data-ttu-id="a36e6-103"><xref:System.ComponentModel.LicFileLicenseProvider> クラスによって実装されている <xref:System.ComponentModel.LicenseProvider> を使用します。</span><span class="sxs-lookup"><span data-stu-id="a36e6-103">It uses a <xref:System.ComponentModel.LicenseProvider> that is implemented by the <xref:System.ComponentModel.LicFileLicenseProvider> class.</span></span>  
  
 [!code-cpp[Classic LicenseManager Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic LicenseManager Example/CPP/source.cpp#1)]
 [!code-csharp[Classic LicenseManager Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic LicenseManager Example/CS/source.cs#1)]
 [!code-vb[Classic LicenseManager Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic LicenseManager Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="a36e6-104"><see cref="T:System.ComponentModel.LicenseProvider" />から継承する場合は、<see cref="M:System.ComponentModel.LicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)" /> メソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a36e6-104">When you inherit from <see cref="T:System.ComponentModel.LicenseProvider" />, you must override the <see cref="M:System.ComponentModel.LicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)" /> method.</span></span>  
  
<span data-ttu-id="a36e6-105">このクラスの実装については、「<see cref="T:System.ComponentModel.LicFileLicenseProvider" />」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a36e6-105">See <see cref="T:System.ComponentModel.LicFileLicenseProvider" /> for an implementation of this class.</span></span> <span data-ttu-id="a36e6-106">ライセンスの詳細については、「[方法: ライセンスコンポーネントとコントロール](https://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a36e6-106">For more information on licensing, see [How to: License Components and Controls](https://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</span></span></para></block>
    <altmember cref="T:System.ComponentModel.License" />
    <altmember cref="T:System.ComponentModel.LicenseContext" />
    <altmember cref="T:System.ComponentModel.LicenseException" />
    <altmember cref="T:System.ComponentModel.LicenseManager" />
    <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
    <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LicenseProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LicenseProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a36e6-107"><see cref="T:System.ComponentModel.LicenseProvider" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a36e6-107">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseProvider" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLicense">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.License GetLicense (System.ComponentModel.LicenseContext context, Type type, object instance, bool allowExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.License GetLicense(class System.ComponentModel.LicenseContext context, class System.Type type, object instance, bool allowExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ComponentModel::License ^ GetLicense(System::ComponentModel::LicenseContext ^ context, Type ^ type, System::Object ^ instance, bool allowExceptions);" />
      <MemberSignature Language="F#" Value="abstract member GetLicense : System.ComponentModel.LicenseContext * Type * obj * bool -&gt; System.ComponentModel.License" Usage="licenseProvider.GetLicense (context, type, instance, allowExceptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.License</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.LicenseContext" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="allowExceptions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="a36e6-108">ライセンス付きのオブジェクトを使用できる位置を指定する <see cref="T:System.ComponentModel.LicenseContext" />。</span><span class="sxs-lookup"><span data-stu-id="a36e6-108">A <see cref="T:System.ComponentModel.LicenseContext" /> that specifies where you can use the licensed object.</span></span></param>
        <param name="type"><span data-ttu-id="a36e6-109">ライセンスを要求しているコンポーネントを表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a36e6-109">A <see cref="T:System.Type" /> that represents the component requesting the license.</span></span></param>
        <param name="instance"><span data-ttu-id="a36e6-110">ライセンスを要求しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a36e6-110">An object that is requesting the license.</span></span></param>
        <param name="allowExceptions"><span data-ttu-id="a36e6-111">コンポーネントにライセンスが与えられなかったときに <see langword="true" /> をスローする必要がある場合は <see cref="T:System.ComponentModel.LicenseException" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a36e6-111"><see langword="true" /> if a <see cref="T:System.ComponentModel.LicenseException" /> should be thrown when the component cannot be granted a license; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a36e6-112">派生クラスでオーバーライドされた場合、コンテキストと、ライセンスが拒否された場合に例外がスローされるかどうかが指定されたときに、コンポーネントのインスタンスまたは型に対するライセンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="a36e6-112">When overridden in a derived class, gets a license for an instance or type of component, when given a context and whether the denial of a license throws an exception.</span></span></summary>
        <returns><span data-ttu-id="a36e6-113">有効な <see cref="T:System.ComponentModel.License" />。</span><span class="sxs-lookup"><span data-stu-id="a36e6-113">A valid <see cref="T:System.ComponentModel.License" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a36e6-114"><see cref="T:System.ComponentModel.LicenseProvider" />から継承する場合は、<see cref="M:System.ComponentModel.LicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)" /> をオーバーライドして、ライセンスキーの検証メソッドを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a36e6-114">When you inherit from <see cref="T:System.ComponentModel.LicenseProvider" />, you must override <see cref="M:System.ComponentModel.LicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)" /> to implement a validation method for the license key.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.License.Dispose" />
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
  </Members>
</Type>
