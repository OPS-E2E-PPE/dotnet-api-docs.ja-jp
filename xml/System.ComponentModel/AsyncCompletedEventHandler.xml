<Type Name="AsyncCompletedEventHandler" FullName="System.ComponentModel.AsyncCompletedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="49b9a3206a1b17e2864e89281554f6eb8a2b1f30" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83917323" /></Metadata><TypeSignature Language="C#" Value="public delegate void AsyncCompletedEventHandler(object sender, AsyncCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AsyncCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AsyncCompletedEventHandler(sender As Object, e As AsyncCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AsyncCompletedEventHandler(System::Object ^ sender, AsyncCompletedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type AsyncCompletedEventHandler = delegate of obj * AsyncCompletedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System" FromVersion="4.0.0.0" To="System.ComponentModel.EventBasedAsync" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.EventBasedAsync" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="b9075-101">イベントのソースです。</span><span class="sxs-lookup"><span data-stu-id="b9075-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="b9075-102">イベント データを格納している <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="b9075-102">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="b9075-103">非同期操作の *MethodName*<see langword="Completed" /> イベントを処理するメソッドを表します。</span><span class="sxs-lookup"><span data-stu-id="b9075-103">Represents the method that will handle the *MethodName*<see langword="Completed" /> event of an asynchronous operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9075-104"><xref:System.ComponentModel.AsyncCompletedEventHandler> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="b9075-104">When you create an <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="b9075-105">イベント ハンドラーにイベントを関連付けるには、イベントにデリゲートのインスタンスを追加します。</span><span class="sxs-lookup"><span data-stu-id="b9075-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="b9075-106">イベントハンドラーメソッドは、デリゲートを削除しない限り、イベントが発生するたびに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b9075-106">The event-handler method is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="b9075-107">イベントハンドラーデリゲートの詳細については、「[イベントの処理と発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b9075-107">For more information about event-handler delegates, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="b9075-108">コンポーネント内の*methodname*という非同期メソッドの場合は、対応する*methodname*`Completed` イベントと、オプションの*methodname*`CompletedEventArgs` クラスがあります。</span><span class="sxs-lookup"><span data-stu-id="b9075-108">For an asynchronous method, called *MethodName*, in your component, you will have a corresponding *MethodName*`Completed` event, and an optional *MethodName*`CompletedEventArgs` class.</span></span>  
  
 <span data-ttu-id="b9075-109">非同期メソッドの複数の同時呼び出しをサポートするコンポーネントの場合、クライアントは一意のトークン (タスク ID) を指定して、特定のイベントを発生させている非同期タスクを区別できます。</span><span class="sxs-lookup"><span data-stu-id="b9075-109">For a component that supports multiple concurrent invocations of its asynchronous methods, the client can supply a unique token, or task ID, to distinguish which asynchronous task is raising particular events.</span></span> <span data-ttu-id="b9075-110">クライアントの <xref:System.ComponentModel.AsyncCompletedEventHandler> は <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> プロパティを読み取って、完了を報告しているタスクを特定できます。</span><span class="sxs-lookup"><span data-stu-id="b9075-110">The client's <xref:System.ComponentModel.AsyncCompletedEventHandler> can read the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> property to determine which task is reporting completion.</span></span> <span data-ttu-id="b9075-111">実装では、<xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> を使用して、クライアントのタスク Id を保留中の非同期タスクに関連付ける <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> を作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9075-111">Your implementation should use the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that associates the client's task IDs with pending asynchronous tasks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9075-112"><xref:System.ComponentModel.AsyncCompletedEventHandler> デリゲートのコード例については、<xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> クラスの例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b9075-112">For a code example of the <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, see the example in the <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
    <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="b9075-113">コンポーネントの非同期パターン</span><span class="sxs-lookup"><span data-stu-id="b9075-113">Asynchronous Pattern for Components</span></span></related>
  </Docs>
</Type>
