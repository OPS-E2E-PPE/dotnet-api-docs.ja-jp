<Type Name="TypeDescriptor" FullName="System.ComponentModel.TypeDescriptor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7c45b841b53f24bd52ea944f0e371cf35a3f3b5e" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75145830" /></Metadata><TypeSignature Language="C#" Value="public sealed class TypeDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeDescriptor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDescriptor sealed" />
  <TypeSignature Language="F#" Value="type TypeDescriptor = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="56f1a-101">属性、プロパティ、イベントなど、コンポーネントの特性に関する情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-101">Provides information about the characteristics for a component, such as its attributes, properties, and events.</span></span> <span data-ttu-id="56f1a-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-103">.NET Framework には、型のメタデータにアクセスする2つの方法が用意されています。 <xref:System.Reflection?displayProperty=nameWithType> 名前空間に用意されているリフレクション API と <xref:System.ComponentModel.TypeDescriptor> クラスです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-103">The .NET Framework provides two ways to access metadata on a type: the reflection API provided in the <xref:System.Reflection?displayProperty=nameWithType> namespace, and the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="56f1a-104">リフレクションは、ルート <xref:System.Object> クラスの <xref:System.Object.GetType%2A> メソッドにその基礎が確立されているため、すべての型で使用できる一般的な機構です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-104">Reflection is a general mechanism available to all types because its foundation is established in the <xref:System.Object.GetType%2A> method of the root <xref:System.Object> class.</span></span> <span data-ttu-id="56f1a-105">型に対して返される情報は拡張可能ではありませんが、ターゲット型のコンパイル後に変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-105">The information it returns for a type is not extensible, in that it cannot be modified after compilation of the target type.</span></span> <span data-ttu-id="56f1a-106">詳細については、「[リフレクション](~/docs/framework/reflection-and-codedom/reflection.md)」のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="56f1a-106">For more information, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
 <span data-ttu-id="56f1a-107">これに対し、<xref:System.ComponentModel.TypeDescriptor> は、コンポーネントの拡張可能な検査機構で、<xref:System.ComponentModel.IComponent> インターフェイスを実装するクラスです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-107">In contrast, <xref:System.ComponentModel.TypeDescriptor> is an extensible inspection mechanism for components: those classes that implement the <xref:System.ComponentModel.IComponent> interface.</span></span> <span data-ttu-id="56f1a-108">リフレクションとは異なり、メソッドを検査しません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-108">Unlike reflection, it does not inspect for methods.</span></span> <span data-ttu-id="56f1a-109">ターゲットコンポーネントの <xref:System.ComponentModel.Component.Site%2A>を通じて使用できる複数のサービスによって、<xref:System.ComponentModel.TypeDescriptor> を動的に拡張できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-109"><xref:System.ComponentModel.TypeDescriptor> can be dynamically extended by several services available through the target component's <xref:System.ComponentModel.Component.Site%2A>.</span></span> <span data-ttu-id="56f1a-110">次の表は、これらのサービスを示しています。</span><span class="sxs-lookup"><span data-stu-id="56f1a-110">The following table shows these services.</span></span>  
  
|<span data-ttu-id="56f1a-111">サービス名</span><span class="sxs-lookup"><span data-stu-id="56f1a-111">Service name</span></span>|<span data-ttu-id="56f1a-112">説明</span><span class="sxs-lookup"><span data-stu-id="56f1a-112">Description</span></span>|  
|------------------|-----------------|  
|<xref:System.ComponentModel.IExtenderProvider>|<span data-ttu-id="56f1a-113">コンポーネントに追加のプロパティを提供するために、<xref:System.Windows.Forms.ToolTip>などの別のクラスを有効にします。</span><span class="sxs-lookup"><span data-stu-id="56f1a-113">Enables another class, such as <xref:System.Windows.Forms.ToolTip>, to provide extra properties to a component.</span></span>|  
|<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|<span data-ttu-id="56f1a-114">コンポーネントによって公開されている標準メタデータを別のオブジェクトが変更できるようにします。</span><span class="sxs-lookup"><span data-stu-id="56f1a-114">Enables another object to modify the standard metadata that is exposed by a component.</span></span>|  
|<xref:System.ComponentModel.ICustomTypeDescriptor>|<span data-ttu-id="56f1a-115">クラスが独自のメタデータを完全かつ動的に指定できるようにします。これにより、<xref:System.ComponentModel.TypeDescriptor>の標準検査機構が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-115">Enables a class to completely and dynamically specify its own metadata, replacing the standard inspection mechanism of <xref:System.ComponentModel.TypeDescriptor>.</span></span>|  
  
 <span data-ttu-id="56f1a-116"><xref:System.ComponentModel.TypeDescriptor> によって提供される機能拡張により、コンポーネントのデザイン時表現を実際の実行時表現とは異なるものにすることができます。これにより、デザイン時インフラストラクチャの構築に役立つ <xref:System.ComponentModel.TypeDescriptor> ます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-116">The extensibility provided by <xref:System.ComponentModel.TypeDescriptor> allows the design-time representation of a component to differ from its actual run-time representation, which makes <xref:System.ComponentModel.TypeDescriptor> useful for building design-time infrastructure.</span></span>  
  
 <span data-ttu-id="56f1a-117"><xref:System.ComponentModel.TypeDescriptor> 内のすべてのメソッドが `static`ます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-117">All the methods in <xref:System.ComponentModel.TypeDescriptor> are `static`.</span></span> <span data-ttu-id="56f1a-118">このクラスのインスタンスを作成することはできません。このクラスを継承することはできません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-118">You cannot create an instance of this class, and this class cannot be inherited.</span></span>  
  
 <span data-ttu-id="56f1a-119">プロパティとイベントの値は、2つの異なる方法で設定できます。コンポーネントクラスで指定する方法と、デザイン時に変更する方法です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-119">You can set property and event values two different ways: specify them in the component class or change them at design time.</span></span> <span data-ttu-id="56f1a-120">これらの値は2つの方法で設定できるため、<xref:System.ComponentModel.TypeDescriptor> のオーバーロードされたメソッドは、クラス型またはオブジェクトインスタンスという2つの異なる型のパラメーターを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-120">Because you can set these values two ways, the overloaded methods of <xref:System.ComponentModel.TypeDescriptor> take two different types of parameters: a class type or an object instance.</span></span>  
  
 <span data-ttu-id="56f1a-121"><xref:System.ComponentModel.TypeDescriptor> 情報にアクセスし、オブジェクトのインスタンスがある場合は、コンポーネントを呼び出すメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-121">When you want to access <xref:System.ComponentModel.TypeDescriptor> information and you have an instance of the object, use the method that calls for a component.</span></span> <span data-ttu-id="56f1a-122">オブジェクトのインスタンスがない場合にのみ、クラス型を呼び出すメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-122">Use the method that calls for the class type only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="56f1a-123">プロパティとイベントは、速度のために <xref:System.ComponentModel.TypeDescriptor> によってキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-123">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="56f1a-124">通常、これらは、オブジェクトの有効期間中は定数です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-124">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="56f1a-125">ただし、拡張プロバイダーおよびデザイナーは、オブジェクトのプロパティのセットを変更できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-125">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="56f1a-126">この場合は、<xref:System.ComponentModel.TypeDescriptor.Refresh%2A> メソッドを呼び出してキャッシュを更新する必要があります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-126">If this is the case, then the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method must be called to update the cache.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="N:System.Reflection" />
    <altmember cref="T:System.ComponentModel.IComponent" />
    <altmember cref="T:System.ComponentModel.ISite" />
    <related type="Article" href="https://msdn.microsoft.com/library/e81b8e2f-e06e-44fa-8129-7bdb0230101f"><span data-ttu-id="56f1a-127">型記述子の概要</span><span class="sxs-lookup"><span data-stu-id="56f1a-127">Type Descriptor Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/d1a58e7f-fb39-4d50-bf84-e3b8f9bf9775"><span data-ttu-id="56f1a-128">リフレクション</span><span class="sxs-lookup"><span data-stu-id="56f1a-128">Reflection</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddAttributes">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56f1a-129">対象コンポーネントにクラス レベルの属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-129">Adds class-level attributes to the target component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider AddAttributes (object instance, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider AddAttributes(object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAttributes (instance As Object, ParamArray attributes As Attribute()) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ AddAttributes(System::Object ^ instance, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member AddAttributes : obj * Attribute[] -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.AddAttributes (instance, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Attribute[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="56f1a-130">対象コンポーネントのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="56f1a-130">An instance of the target component.</span></span></param>
        <param name="attributes"><span data-ttu-id="56f1a-131">コンポーネントのクラスに追加する <see cref="T:System.Attribute" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="56f1a-131">An array of <see cref="T:System.Attribute" /> objects to add to the component's class.</span></span></param>
        <summary><span data-ttu-id="56f1a-132">対象コンポーネントのインスタンスにクラス レベルの属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-132">Adds class-level attributes to the target component instance.</span></span></summary>
        <returns><span data-ttu-id="56f1a-133">指定された属性の追加に使用された、新しく作成された <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-133">The newly created <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that was used to add the specified attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-134"><xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29> メソッドは、コンポーネントの指定したインスタンスにクラスレベルの属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-134">The <xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29> method adds class-level attributes to the specified instance of a component.</span></span> <span data-ttu-id="56f1a-135">これは、Visual Studio Windows フォームデザイナーとプロパティウィンドウを使用するアプリケーションの一般的な要件であるため、このメソッドは、指定された属性と既に存在する属性をマージする型説明のプロバイダーを作成することによって、ショートカットを提供します。はクラスに存在します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-135">Because this is a common requirement of applications using the Visual Studio Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</span></span> <span data-ttu-id="56f1a-136">戻り値は、属性の追加に使用された型説明のプロバイダーです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-136">The return value is the type description provider that was used to add the attributes.</span></span> <span data-ttu-id="56f1a-137">追加した属性が不要になった場合は、後でこのプロバイダーを <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> メソッドに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-137">This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method when the added attributes are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-138">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-138">One or both of the parameters is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="56f1a-139">システムリソースにフルアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-139">for full access to system resources.</span></span> <span data-ttu-id="56f1a-140">要求の値: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-140">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="56f1a-141">関連付けられた状態:</span><span class="sxs-lookup"><span data-stu-id="56f1a-141">Associated state:</span></span></permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider AddAttributes (Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider AddAttributes(class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ AddAttributes(Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member AddAttributes : Type * Attribute[] -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.AddAttributes (type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Attribute[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="56f1a-142">対象コンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-142">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="attributes"><span data-ttu-id="56f1a-143">コンポーネントのクラスに追加する <see cref="T:System.Attribute" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="56f1a-143">An array of <see cref="T:System.Attribute" /> objects to add to the component's class.</span></span></param>
        <summary><span data-ttu-id="56f1a-144">対象コンポーネントの型にクラス レベルの属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-144">Adds class-level attributes to the target component type.</span></span></summary>
        <returns><span data-ttu-id="56f1a-145">指定された属性の追加に使用された、新しく作成された <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-145">The newly created <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that was used to add the specified attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-146"><xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29> メソッドは、指定されたコンポーネントの型にクラスレベルの属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-146">The <xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29> method adds class-level attributes to the specified type of a component.</span></span> <span data-ttu-id="56f1a-147">これは、Visual Studio Windows フォームデザイナーとプロパティウィンドウを使用するアプリケーションの一般的な要件であるため、このメソッドは、指定された属性と既に存在する属性をマージする型説明のプロバイダーを作成することによって、ショートカットを提供します。はクラスに存在します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-147">Because this is a common requirement of applications using the Visual Studio Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</span></span> <span data-ttu-id="56f1a-148">戻り値は、属性の追加に使用された型説明のプロバイダーです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-148">The return value is the type description provider that was used to add the attributes.</span></span> <span data-ttu-id="56f1a-149">追加した属性が不要になった場合は、後でこのプロバイダーを <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> メソッドに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-149">This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method when the added attributes are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-150">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-150">One or both of the parameters is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="56f1a-151">システムリソースにフルアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-151">for full access to system resources.</span></span> <span data-ttu-id="56f1a-152">要求の値: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-152">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="56f1a-153">関連付けられた状態:</span><span class="sxs-lookup"><span data-stu-id="56f1a-153">Associated state:</span></span></permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AddEditorTable">
      <MemberSignature Language="C#" Value="public static void AddEditorTable (Type editorBaseType, System.Collections.Hashtable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddEditorTable(class System.Type editorBaseType, class System.Collections.Hashtable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddEditorTable (editorBaseType As Type, table As Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddEditorTable(Type ^ editorBaseType, System::Collections::Hashtable ^ table);" />
      <MemberSignature Language="F#" Value="static member AddEditorTable : Type * System.Collections.Hashtable -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddEditorTable (editorBaseType, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
        <Parameter Name="table" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="editorBaseType"><span data-ttu-id="56f1a-154">エディター テーブルを追加する対象のエディター基本型。</span><span class="sxs-lookup"><span data-stu-id="56f1a-154">The editor base type to add the editor table for.</span></span> <span data-ttu-id="56f1a-155">この型のテーブルが既存の場合、このメソッドは何もしません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-155">If a table already exists for this type, this method will do nothing.</span></span></param>
        <param name="table"><span data-ttu-id="56f1a-156">追加する <see cref="T:System.Collections.Hashtable" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-156">The <see cref="T:System.Collections.Hashtable" /> to add.</span></span></param>
        <summary><span data-ttu-id="56f1a-157">指定されたエディターの基本型のエディター テーブルを追加します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-157">Adds an editor table for the given editor base type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-158"><xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A> メソッドは、指定されたエディターの基本型のエディターテーブルを追加します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-158">The <xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A> method adds an editor table for the given editor base type.</span></span> <span data-ttu-id="56f1a-159">通常、エディターはコンポーネントのメタデータとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-159">Typically, editors are specified as metadata on a component.</span></span> <span data-ttu-id="56f1a-160">ただし、要求されたエディターの基本型のメタデータがコンポーネントで見つからない場合は、関連付けられた <xref:System.ComponentModel.TypeDescriptor> によって、エディターの種類のエディターテーブルが検索されます (見つかった場合)。</span><span class="sxs-lookup"><span data-stu-id="56f1a-160">However, if no metadata for a requested editor base type can be found on the component, the associated <xref:System.ComponentModel.TypeDescriptor> will search an editor table for the editor type, if one can be found.</span></span> <span data-ttu-id="56f1a-161">エディターテーブルを型記述子に追加すると、そのテーブルは削除できず、型記述子によって所有されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-161">Once an editor table has been added to a type descriptor, it cannot be removed and is owned by the type descriptor.</span></span> <span data-ttu-id="56f1a-162">型記述子は、このテーブルに対して自由に変更を加えることができます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-162">The type descriptor may freely make modifications to this table.</span></span>  
  
 <span data-ttu-id="56f1a-163">エディターテーブルの形式では、データ型がキーとエディターとして値として使用されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-163">The format for an editor table uses data types as keys and editors as values.</span></span> <span data-ttu-id="56f1a-164">テーブル内のエントリの値部分は、エディターインスタンスを表します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-164">The value portion of an entry in the table represents an editor instance.</span></span> <span data-ttu-id="56f1a-165">3つの値のいずれかを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-165">It can have one of three values.</span></span> <span data-ttu-id="56f1a-166">文字列が含まれている場合、型記述子はこれが型の完全修飾名であると見なし、オブジェクトの型を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-166">If it contains a string, the type descriptor will assume this is a fully qualified name of a type, and then load the type for the object.</span></span> <span data-ttu-id="56f1a-167">型が含まれている場合は、エディターを取得するためにこの型のインスタンスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-167">If it contains a type, an instance of this type will be created to obtain an editor.</span></span> <span data-ttu-id="56f1a-168">最後に、値の部分には実際のエディターインスタンスが含まれる場合があります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-168">Finally, the value portion may contain an actual editor instance.</span></span> <span data-ttu-id="56f1a-169">型記述子によってエディターがインスタンスに解決されると、後で使用するためにインスタンスがテーブルに保存されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-169">If the type descriptor resolves an editor to an instance, it will store the instance back into the table for future use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56f1a-170">この型記述子プロバイダーの一覧に、型説明プロバイダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-170">Adds a type description provider to the list of providers for this type descriptor.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProvider(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddProvider (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member AddProvider : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="56f1a-171">追加する <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-171">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span></span></param>
        <param name="instance"><span data-ttu-id="56f1a-172">対象コンポーネントのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="56f1a-172">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="56f1a-173">コンポーネントの単一インスタンスの型説明の提供元を追加します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-173">Adds a type description provider for a single instance of a component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-174"><xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> メソッドは、コンポーネントの1つのインスタンスの型情報を提供する型説明のプロバイダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-174">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method adds a type description provider that supplies type information for a single instance of a component.</span></span> <span data-ttu-id="56f1a-175">このメソッドによってプロバイダーが追加されると、インスタンスが既に存在するため、プロバイダーの <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> メソッドは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-175">If a provider is added by this method, the provider's <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will not be called because the instance already exists.</span></span>  
  
 <span data-ttu-id="56f1a-176">このメソッドは、コンポーネントへのハード参照を保持しないので、コンポーネントが終了するのを防ぐことはできません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-176">This method does not maintain a hard reference to the component, so it does not prevent the component from finalizing.</span></span>  
  
 <span data-ttu-id="56f1a-177">同じ型またはオブジェクトに対して、複数の型説明のプロバイダーを追加することができます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-177">It is possible to add multiple type description providers for the same type or object.</span></span> <span data-ttu-id="56f1a-178">このような場合は、型情報を提供する最初の型説明のプロバイダーが、排他的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-178">If this occurs, the first type description provider encountered that provides type information will be used exclusively.</span></span> <span data-ttu-id="56f1a-179">型情報プロバイダーはスタックに格納されるため、最後に追加されたプロバイダーが最初にクエリを実行します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-179">Since type information providers are stored in a stack, the last provider added will be the first one queried.</span></span> <span data-ttu-id="56f1a-180">この動作により、<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> および <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> メソッドを使用して、特定のシナリオで必要に応じて、型説明のプロバイダーをプッシュおよびポップすることができます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-180">This behavior enables the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.</span></span>  
  
 <span data-ttu-id="56f1a-181">成功した場合、このメソッドは `instance` パラメーターの <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-181">If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29> method on the `instance` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56f1a-182">このメソッドの2つのバージョンでは、異なるスコープの結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-182">The two versions of this method produce results with different scopes.</span></span> <span data-ttu-id="56f1a-183"><xref:System.Object> パラメーターを受け取る <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> メソッドは、指定されたコンポーネントの1つのインスタンスだけに影響します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-183">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified.</span></span> <span data-ttu-id="56f1a-184">これに対し、<xref:System.Type> パラメーターを受け取るもう1つのオーバーロードは、その型によって記述されるコンポーネントのすべてのインスタンスに影響します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-184">In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.</span></span>  
  
 <span data-ttu-id="56f1a-185">部分的に信頼されたコードから呼び出す必要がある場合は、<xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-185">Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-186">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-186">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="56f1a-187">システムリソースにフルアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-187">for full access to system resources.</span></span> <span data-ttu-id="56f1a-188">要求の値: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-188">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="56f1a-189">関連付けられた状態:</span><span class="sxs-lookup"><span data-stu-id="56f1a-189">Associated state:</span></span></permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProvider(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member AddProvider : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProvider (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="56f1a-190">追加する <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-190">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span></span></param>
        <param name="type"><span data-ttu-id="56f1a-191">対象コンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-191">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="56f1a-192">コンポーネント クラスの型説明プロバイダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-192">Adds a type description provider for a component class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-193"><xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> メソッドは、指定されたクラス、派生クラス、およびこれらの型のすべてのインスタンスの型情報を提供する型説明のプロバイダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-193">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method adds a type description provider that supplies type information for the specified class, derived classes, and all instances of these types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56f1a-194">`type` パラメーターには、インターフェイスを含む任意の型を指定できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-194">The `type` parameter can be any type, including an interface.</span></span> <span data-ttu-id="56f1a-195">たとえば、すべてのコンポーネントに対してカスタムの型とインスタンスの情報を提供するには、`typeof(IComponent)`を指定します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-195">For example, to provide custom type and instance information for all components, you would specify `typeof(IComponent)`.</span></span> <span data-ttu-id="56f1a-196">`typeof(object)` を渡すと、プロバイダーが呼び出され、すべての型の型情報が提供されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-196">Passing `typeof(object)` will call the provider to supply type information for all types.</span></span>  
  
 <span data-ttu-id="56f1a-197">このメソッドは、オブジェクトへのハード参照を保持しないため、オブジェクトの終了を防ぐことはできません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-197">This method does not maintain a hard reference to any object, so it does not prevent objects from finalizing.</span></span>  
  
 <span data-ttu-id="56f1a-198">同じ型またはオブジェクトに対して、複数の型説明のプロバイダーを追加することができます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-198">It is possible to add multiple type description providers for the same type or object.</span></span> <span data-ttu-id="56f1a-199">このような場合は、型情報を提供する最初の型説明のプロバイダーが、排他的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-199">If this occurs, the first type description provider encountered that provides type information will be used exclusively.</span></span> <span data-ttu-id="56f1a-200">型情報プロバイダーはスタックに格納されるため、最後に追加されたプロバイダーが最初にクエリを実行します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-200">Because type information providers are stored in a stack, the last provider added will be the first one queried.</span></span> <span data-ttu-id="56f1a-201">この動作により、<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> および <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> メソッドを使用して、特定のシナリオで必要に応じて、型説明のプロバイダーをプッシュおよびポップすることができます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-201">This behavior enables the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.</span></span>  
  
 <span data-ttu-id="56f1a-202">成功した場合、このメソッドは `type` パラメーターの <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-202">If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29> method on the `type` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56f1a-203">このメソッドの2つのバージョンでは、異なるスコープの結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-203">The two versions of this method produce results with different scopes.</span></span> <span data-ttu-id="56f1a-204"><xref:System.Object> パラメーターを受け取る <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> メソッドは、指定されたコンポーネントの1つのインスタンスだけに影響します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-204">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified.</span></span> <span data-ttu-id="56f1a-205">これに対し、<xref:System.Type> パラメーターを受け取るもう1つのオーバーロードは、その型によって記述されるコンポーネントのすべてのインスタンスに影響します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-205">In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.</span></span>  
  
 <span data-ttu-id="56f1a-206">部分的に信頼されたコードから呼び出す必要がある場合は、<xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-206">Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-207">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-207">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="56f1a-208">システムリソースにフルアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-208">for full access to system resources.</span></span> <span data-ttu-id="56f1a-209">要求の値: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-209">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="56f1a-210">関連付けられた状態:</span><span class="sxs-lookup"><span data-stu-id="56f1a-210">Associated state:</span></span></permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddProviderTransparent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56f1a-211">この型記述子プロバイダーの一覧に、型説明プロバイダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-211">Adds a type description provider to the list of providers for this type descriptor.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddProviderTransparent">
      <MemberSignature Language="C#" Value="public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddProviderTransparent (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member AddProviderTransparent : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProviderTransparent (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="56f1a-212">追加する <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-212">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span></span></param>
        <param name="instance"><span data-ttu-id="56f1a-213">対象コンポーネントのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="56f1a-213">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="56f1a-214">コンポーネントの単一インスタンスの型説明の提供元を追加します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-214">Adds a type description provider for a single instance of a component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-215">このメソッドは、部分的に信頼されているコードから呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-215">This method can be called from partially trusted code.</span></span> <span data-ttu-id="56f1a-216"><xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> が定義されている場合、呼び出し元は、その型が部分的に信頼されている場合に、指定したインスタンスのプロバイダーを登録できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-216">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</span></span>  
  
 <span data-ttu-id="56f1a-217">部分的に信頼されたコードからを呼び出す必要がない場合は、<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-217">Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-218">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-218">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission"><span data-ttu-id="56f1a-219">レジストリアクセスの場合。</span><span class="sxs-lookup"><span data-stu-id="56f1a-219">For registry access.</span></span> <span data-ttu-id="56f1a-220">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-220">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="56f1a-221">関連付けられた列挙型: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span><span class="sxs-lookup"><span data-stu-id="56f1a-221">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span></span></permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet"><span data-ttu-id="56f1a-222">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-222">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="56f1a-223">関連付けられた型: <paramref name="instance" /> パラメーターの型を定義するアセンブリに必要な <see cref="T:System.Security.PermissionSet" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-223">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines the <paramref name="instance" /> parameter's type.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AddProviderTransparent">
      <MemberSignature Language="C#" Value="public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member AddProviderTransparent : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProviderTransparent (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="56f1a-224">追加する <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-224">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span></span></param>
        <param name="type"><span data-ttu-id="56f1a-225">対象コンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-225">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="56f1a-226">コンポーネント クラスの型説明プロバイダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-226">Adds a type description provider for a component class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-227">このメソッドは、部分的に信頼されているコードから呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-227">This method can be called from partially trusted code.</span></span> <span data-ttu-id="56f1a-228"><xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> が定義されている場合、呼び出し元は、部分的に信頼されている場合は、指定された型のプロバイダーを登録できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-228">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified type if it is also partially trusted.</span></span>  
  
 <span data-ttu-id="56f1a-229">部分的に信頼されたコードからを呼び出す必要がない場合は、<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-229">Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-230">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-230">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission"><span data-ttu-id="56f1a-231">レジストリアクセスの場合。</span><span class="sxs-lookup"><span data-stu-id="56f1a-231">For registry access.</span></span> <span data-ttu-id="56f1a-232">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-232">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="56f1a-233">関連付けられた列挙型: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span><span class="sxs-lookup"><span data-stu-id="56f1a-233">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span></span></permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet"><span data-ttu-id="56f1a-234">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-234">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="56f1a-235">関連付けられた型: <paramref name="type" />を定義するアセンブリに必要な <see cref="T:System.Security.PermissionSet" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-235">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines <paramref name="type" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ComNativeDescriptorHandler">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ComNativeDescriptorHandler As IComNativeDescriptorHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ComponentModel::IComNativeDescriptorHandler ^ ComNativeDescriptorHandler { System::ComponentModel::IComNativeDescriptorHandler ^ get(); void set(System::ComponentModel::IComNativeDescriptorHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ComNativeDescriptorHandler : System.ComponentModel.IComNativeDescriptorHandler with get, set" Usage="System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("This property has been deprecated.  Use a type description provider to supply type information for COM types instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This property has been deprecated.  Use a type description provider to supply type information for COM types instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("This property has been deprecated.  Use a type description provider to supply type information for COM types instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComNativeDescriptorHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56f1a-236">ターゲット コンポーネントの Component Object Model (COM) 型情報のプロバイダーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-236">Gets or sets the provider for the Component Object Model (COM) type information for the target component.</span></span></summary>
        <value><span data-ttu-id="56f1a-237">COM 型情報プロバイダーを表す <see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="56f1a-237">An <see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /> instance representing the COM type information provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-238"><xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A> プロパティと <xref:System.ComponentModel.IComNativeDescriptorHandler> インターフェイスは互換性のために残されています。</span><span class="sxs-lookup"><span data-stu-id="56f1a-238">The <xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A> property and the <xref:System.ComponentModel.IComNativeDescriptorHandler> interface are obsolete.</span></span> <span data-ttu-id="56f1a-239">詳細については、<xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="56f1a-239">For more information, see the <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="56f1a-240">システムリソースにフルアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-240">for full access to system resources.</span></span> <span data-ttu-id="56f1a-241">要求の値: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-241">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="56f1a-242">関連付けられた状態:</span><span class="sxs-lookup"><span data-stu-id="56f1a-242">Associated state:</span></span></permission>
        <altmember cref="P:System.ComponentModel.TypeDescriptor.ComObjectType" />
      </Docs>
    </Member>
    <Member MemberName="ComObjectType">
      <MemberSignature Language="C#" Value="public static Type ComObjectType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type ComObjectType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.ComObjectType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ComObjectType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ ComObjectType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComObjectType : Type" Usage="System.ComponentModel.TypeDescriptor.ComObjectType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56f1a-243">対象となるコンポーネントによって表されるコンポーネント オブジェクト モデル (COM) の型を取得します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-243">Gets the type of the Component Object Model (COM) object represented by the target component.</span></span></summary>
        <value><span data-ttu-id="56f1a-244">このコンポーネントによって表される COM オブジェクトの <see cref="T:System.Type" />。COM 以外のオブジェクトの場合 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-244">The <see cref="T:System.Type" /> of the COM object represented by this component, or <see langword="null" /> for non-COM objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-245"><xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> プロパティは、COM 型の型説明のプロバイダーを定義するために <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> メソッドに渡すことができる型を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-245">The <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property returns a type that can be passed to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method to define a type description provider for COM types.</span></span>  
  
 <span data-ttu-id="56f1a-246">このクラスの <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> プロパティとその他のメンバーは、互換性のために残されている <xref:System.ComponentModel.IComNativeDescriptorHandler> インターフェイスの機能を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-246">The <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property and other members in this class replace the functionality in the obsolete <xref:System.ComponentModel.IComNativeDescriptorHandler> interface.</span></span> <span data-ttu-id="56f1a-247">COM オブジェクトと <xref:System.ComponentModel.TypeDescriptor>の間にマッピングレイヤーを実装するには <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>型を処理する <xref:System.ComponentModel.TypeDescriptionProvider> を追加します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-247">To implement a mapping layer between a COM object and <xref:System.ComponentModel.TypeDescriptor>, add a <xref:System.ComponentModel.TypeDescriptionProvider> to handle type <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      </Docs>
    </Member>
    <Member MemberName="CreateAssociation">
      <MemberSignature Language="C#" Value="public static void CreateAssociation (object primary, object secondary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateAssociation(object primary, object secondary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateAssociation (primary As Object, secondary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateAssociation(System::Object ^ primary, System::Object ^ secondary);" />
      <MemberSignature Language="F#" Value="static member CreateAssociation : obj * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.CreateAssociation (primary, secondary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="secondary" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="primary"><span data-ttu-id="56f1a-248">プライマリ <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-248">The primary <see cref="T:System.Object" />.</span></span></param>
        <param name="secondary"><span data-ttu-id="56f1a-249">セカンダリ <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-249">The secondary <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="56f1a-250">2 つのオブジェクトの間のプライマリとセカンダリの関連付けを作成します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-250">Creates a primary-secondary association between two objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-251"><xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> メソッドは、プライマリオブジェクトとセカンダリオブジェクトの間の関連付けを作成します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-251">The <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method creates an association between a primary and a secondary object.</span></span> <span data-ttu-id="56f1a-252">関連付けが作成されると、デザイナーまたは他のフィルター処理メカニズムによって、いずれかのオブジェクトにルーティングされるプロパティをプライマリオブジェクトのプロパティセットに追加できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-252">Once an association is created, a designer or other filtering mechanism can add properties that route to either object into the primary object's property set.</span></span> <span data-ttu-id="56f1a-253">プライマリオブジェクトに対してプロパティの呼び出しが行われると、その型パラメーターに関連付けられている実際のオブジェクトインスタンスを解決するために、<xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-253">When a property invocation is made against the primary object, the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method will be called to resolve the actual object instance that is related to its type parameter.</span></span>  
  
 <span data-ttu-id="56f1a-254"><xref:System.WeakReference> は、プライマリオブジェクトとセカンダリオブジェクトの間の関連付けを維持するために使用されます。したがって、このメソッドは、いずれかのオブジェクトがガベージコレクションによって完了され、解放されるのを防ぐことはできません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-254">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either object from being finalized and reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-255">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-255">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56f1a-256"><paramref name="primary" /> と <paramref name="secondary" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-256"><paramref name="primary" /> is equal to <paramref name="secondary" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="56f1a-257">システムリソースにフルアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-257">for full access to system resources.</span></span> <span data-ttu-id="56f1a-258">要求の値: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-258">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="56f1a-259">関連付けられた状態:</span><span class="sxs-lookup"><span data-stu-id="56f1a-259">Associated state:</span></span></permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesigner">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, Type designerBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Design.IDesigner CreateDesigner(class System.ComponentModel.IComponent component, class System.Type designerBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDesigner (component As IComponent, designerBaseType As Type) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Design::IDesigner ^ CreateDesigner(System::ComponentModel::IComponent ^ component, Type ^ designerBaseType);" />
      <MemberSignature Language="F#" Value="static member CreateDesigner : System.ComponentModel.IComponent * Type -&gt; System.ComponentModel.Design.IDesigner" Usage="System.ComponentModel.TypeDescriptor.CreateDesigner (component, designerBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="designerBaseType" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-260">デザイナーに関連付けるコンポーネントを指定する <see cref="T:System.ComponentModel.IComponent" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-260">An <see cref="T:System.ComponentModel.IComponent" /> that specifies the component to associate with the designer.</span></span></param>
        <param name="designerBaseType"><span data-ttu-id="56f1a-261">作成するデザイナーの型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-261">A <see cref="T:System.Type" /> that represents the type of designer to create.</span></span></param>
        <summary><span data-ttu-id="56f1a-262">指定したコンポーネントに関連するデザイナーおよび指定した型のデザイナーのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-262">Creates an instance of the designer associated with the specified component and of the specified type of designer.</span></span></summary>
        <returns><span data-ttu-id="56f1a-263">コンポーネントのデザイナーのインスタンスである <see cref="T:System.ComponentModel.Design.IDesigner" />。デザイナーが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-263">An <see cref="T:System.ComponentModel.Design.IDesigner" /> that is an instance of the designer for the component, or <see langword="null" /> if no designer can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-264">このメソッドが有効な <xref:System.ComponentModel.DesignerAttribute>を見つけることができない場合は、デザイナーのクラス階層を検索します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-264">If this method cannot find a valid <xref:System.ComponentModel.DesignerAttribute>, it searches up the class hierarchy for a designer.</span></span> <span data-ttu-id="56f1a-265">クラス階層内でデザイナーが見つからない場合は、`null`を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-265">If it cannot find a designer in the class hierarchy, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEvent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56f1a-266">既存のイベント記述子と同じである新しいイベント記述子を作成します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-266">Creates a new event descriptor that is identical to an existing event descriptor.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, System.ComponentModel.EventDescriptor oldEventDescriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor CreateEvent(class System.Type componentType, class System.ComponentModel.EventDescriptor oldEventDescriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEvent (componentType As Type, oldEventDescriptor As EventDescriptor, ParamArray attributes As Attribute()) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ CreateEvent(Type ^ componentType, System::ComponentModel::EventDescriptor ^ oldEventDescriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateEvent : Type * System.ComponentModel.EventDescriptor * Attribute[] -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateEvent (componentType, oldEventDescriptor, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="oldEventDescriptor" Type="System.ComponentModel.EventDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="56f1a-267">新しいイベントを作成する対象のコンポーネントの種類。</span><span class="sxs-lookup"><span data-stu-id="56f1a-267">The type of the component for which to create the new event.</span></span></param>
        <param name="oldEventDescriptor"><span data-ttu-id="56f1a-268">既存のイベント情報。</span><span class="sxs-lookup"><span data-stu-id="56f1a-268">The existing event information.</span></span></param>
        <param name="attributes"><span data-ttu-id="56f1a-269">新しい属性。</span><span class="sxs-lookup"><span data-stu-id="56f1a-269">The new attributes.</span></span></param>
        <summary><span data-ttu-id="56f1a-270">既存の <see cref="T:System.ComponentModel.EventDescriptor" /> が渡された場合、既存のイベント記述子と同じである新しいイベント記述子を作成します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-270">Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <see cref="T:System.ComponentModel.EventDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="56f1a-271">指定されたメタデータ属性と既存のメタデータ属性をマージした新しい <see cref="T:System.ComponentModel.EventDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-271">A new <see cref="T:System.ComponentModel.EventDescriptor" /> that has merged the specified metadata attributes with the existing metadata attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="56f1a-272">コンポーネントのパブリックでないメンバーを検査するために必要です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-272">Required to inspect non-public members of the component.</span></span> <span data-ttu-id="56f1a-273"><see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> の種類 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />には、リンク確認要求のアクセス権が必要です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-273">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, string name, Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor CreateEvent(class System.Type componentType, string name, class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ CreateEvent(Type ^ componentType, System::String ^ name, Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateEvent : Type * string * Type * Attribute[] -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateEvent (componentType, name, type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="56f1a-274">イベントが存在するコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="56f1a-274">The type of the component the event lives on.</span></span></param>
        <param name="name"><span data-ttu-id="56f1a-275">イベントの名前です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-275">The name of the event.</span></span></param>
        <param name="type"><span data-ttu-id="56f1a-276">イベントを処理するデリゲートの型。</span><span class="sxs-lookup"><span data-stu-id="56f1a-276">The type of the delegate that handles the event.</span></span></param>
        <param name="attributes"><span data-ttu-id="56f1a-277">このイベントの属性。</span><span class="sxs-lookup"><span data-stu-id="56f1a-277">The attributes for this event.</span></span></param>
        <summary><span data-ttu-id="56f1a-278">型で指定したイベントから記述子情報を動的に生成することによって既存のイベント記述子と同じになる新しいイベント記述子を作成します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-278">Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.</span></span></summary>
        <returns><span data-ttu-id="56f1a-279">型にバインドされている <see cref="T:System.ComponentModel.EventDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-279">An <see cref="T:System.ComponentModel.EventDescriptor" /> that is bound to a type.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="56f1a-280">コンポーネントのパブリックでないメンバーを検査するために必要です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-280">Required to inspect non-public members of the component.</span></span> <span data-ttu-id="56f1a-281"><see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> の種類 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />には、リンク確認要求のアクセス権が必要です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-281">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.IServiceProvider provider, class System.Type objectType, class System.Type[] argTypes, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(IServiceProvider ^ provider, Type ^ objectType, cli::array &lt;Type ^&gt; ^ argTypes, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : IServiceProvider * Type * Type[] * obj[] -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.CreateInstance (provider, objectType, argTypes, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="objectType" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="argTypes" Type="System.Type[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="56f1a-282"><see cref="T:System.ComponentModel.TypeDescriptionProvider" /> サービスを提供するサービス プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="56f1a-282">The service provider that provides a <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> service.</span></span> <span data-ttu-id="56f1a-283">このパラメーターは、<see langword="null" /> に設定できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-283">This parameter can be <see langword="null" />.</span></span></param>
        <param name="objectType"><span data-ttu-id="56f1a-284">作成するオブジェクトの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-284">The <see cref="T:System.Type" /> of object to create.</span></span></param>
        <param name="argTypes"><span data-ttu-id="56f1a-285">オブジェクトのコンストラクターに渡されるパラメーターの型の省略可能な配列。</span><span class="sxs-lookup"><span data-stu-id="56f1a-285">An optional array of parameter types to be passed to the object's constructor.</span></span> <span data-ttu-id="56f1a-286">このパラメーターには <see langword="null" /> か、長さがゼロの配列を設定することができます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-286">This parameter can be <see langword="null" /> or an array of zero length.</span></span></param>
        <param name="args"><span data-ttu-id="56f1a-287">オブジェクトのコンストラクターに渡すパラメーターの値の省略可能な配列。</span><span class="sxs-lookup"><span data-stu-id="56f1a-287">An optional array of parameter values to pass to the object's constructor.</span></span> <span data-ttu-id="56f1a-288"><see langword="null" /> でない場合、要素の数は <paramref name="argTypes" /> と同じでなければなりません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-288">If not <see langword="null" />, the number of elements must be the same as <paramref name="argTypes" />.</span></span></param>
        <summary><span data-ttu-id="56f1a-289">別のデータ型の代わりに使用できるオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-289">Creates an object that can substitute for another data type.</span></span></summary>
        <returns><span data-ttu-id="56f1a-290">関連付けられた <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> が検出される場合は代替のデータ型のインスタンス。それ以外の場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-290">An instance of the substitute data type if an associated <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> is found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-291"><xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> メソッドは、指定された `objectType` データ型に関連付けられている <xref:System.ComponentModel.TypeDescriptionProvider> を検索します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-291">The <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will search for a <xref:System.ComponentModel.TypeDescriptionProvider> that is associated with the specified `objectType` data type.</span></span> <span data-ttu-id="56f1a-292">このメソッドは、まず、`provider` パラメーターから型説明のプロバイダーを取得しようとします。</span><span class="sxs-lookup"><span data-stu-id="56f1a-292">This method first tries to obtain a type description provider from the `provider` parameter.</span></span> <span data-ttu-id="56f1a-293">失敗した場合は、プロバイダーの内部テーブルを検索します (これらのエントリは、以前に <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>を呼び出して作成されています)。</span><span class="sxs-lookup"><span data-stu-id="56f1a-293">If this fails, it searches its own internal tables for a provider (these entries were created through previous calls to <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>).</span></span> <span data-ttu-id="56f1a-294">プロバイダーが見つかった場合、このメソッドはそのオブジェクトへの作成呼び出しを委任します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-294">If it finds a provider, this method will delegate the creation call to that object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-295"><paramref name="objectType" /> は <see langword="null" /> です。<paramref name="args" /> が <see langword="null" /> でない場合、<paramref name="argTypes" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-295"><paramref name="objectType" /> is <see langword="null" />, or <paramref name="args" /> is <see langword="null" /> when <paramref name="argTypes" /> is not <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56f1a-296"><paramref name="argTypes" /> と <paramref name="args" /> の要素数が異なります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-296"><paramref name="argTypes" /> and <paramref name="args" /> have different number of elements.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="56f1a-297">派生クラスが代替のインスタンスを提供しない場合、このメソッドは基本実装を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-297">If the derived class does not provide a substitute instance, this method should call the base implementation.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProperty">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56f1a-298">コンポーネントの既存のプロパティのための新しいプロパティ記述子を作成します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-298">Creates a new property descriptor for an existing property of a component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor CreateProperty(class System.Type componentType, class System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProperty (componentType As Type, oldPropertyDescriptor As PropertyDescriptor, ParamArray attributes As Attribute()) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ CreateProperty(Type ^ componentType, System::ComponentModel::PropertyDescriptor ^ oldPropertyDescriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateProperty : Type * System.ComponentModel.PropertyDescriptor * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateProperty (componentType, oldPropertyDescriptor, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="oldPropertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="56f1a-299">プロパティのメンバーであるコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-299">The <see cref="T:System.Type" /> of the component that the property is a member of.</span></span></param>
        <param name="oldPropertyDescriptor"><span data-ttu-id="56f1a-300">既存のプロパティ記述子。</span><span class="sxs-lookup"><span data-stu-id="56f1a-300">The existing property descriptor.</span></span></param>
        <param name="attributes"><span data-ttu-id="56f1a-301">このプロパティの新しい属性。</span><span class="sxs-lookup"><span data-stu-id="56f1a-301">The new attributes for this property.</span></span></param>
        <summary><span data-ttu-id="56f1a-302">指定された既存の <see cref="T:System.ComponentModel.PropertyDescriptor" /> と属性の配列を指定を使用して、既存のプロパティ記述子から新しいプロパティ記述子を作成します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-302">Creates a new property descriptor from an existing property descriptor, using the specified existing <see cref="T:System.ComponentModel.PropertyDescriptor" /> and attribute array.</span></span></summary>
        <returns><span data-ttu-id="56f1a-303">既存のメタデータ属性とマージされた指定されたメタデータ属性を持つ新しい <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-303">A new <see cref="T:System.ComponentModel.PropertyDescriptor" /> that has the specified metadata attributes merged with the existing metadata attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="56f1a-304">コンポーネントのパブリックでないメンバーを検査するために必要です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-304">Required to inspect non-public members of the component.</span></span> <span data-ttu-id="56f1a-305"><see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> の種類 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />には、リンク確認要求のアクセス権が必要です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-305">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, string name, Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor CreateProperty(class System.Type componentType, string name, class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ CreateProperty(Type ^ componentType, System::String ^ name, Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateProperty : Type * string * Type * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateProperty (componentType, name, type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="56f1a-306">プロパティのメンバーであるコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-306">The <see cref="T:System.Type" /> of the component that the property is a member of.</span></span></param>
        <param name="name"><span data-ttu-id="56f1a-307">プロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="56f1a-307">The name of the property.</span></span></param>
        <param name="type"><span data-ttu-id="56f1a-308">プロパティの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-308">The <see cref="T:System.Type" /> of the property.</span></span></param>
        <param name="attributes"><span data-ttu-id="56f1a-309">このプロパティの新しい属性。</span><span class="sxs-lookup"><span data-stu-id="56f1a-309">The new attributes for this property.</span></span></param>
        <summary><span data-ttu-id="56f1a-310">指定したプロパティ名、型、属性の配列を使用して、プロパティ記述子を作成し、型に動的にバインドします。</span><span class="sxs-lookup"><span data-stu-id="56f1a-310">Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.</span></span></summary>
        <returns><span data-ttu-id="56f1a-311">既存のメタデータ属性とマージされた指定されたメタデータ属性を持つ、指定された型にバインドされた <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-311">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="56f1a-312">コンポーネントのパブリックでないメンバーを検査するために必要です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-312">Required to inspect non-public members of the component.</span></span> <span data-ttu-id="56f1a-313"><see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> の種類 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />には、リンク確認要求のアクセス権が必要です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-313">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetAssociation">
      <MemberSignature Language="C#" Value="public static object GetAssociation (Type type, object primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetAssociation(class System.Type type, object primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetAssociation(Type ^ type, System::Object ^ primary);" />
      <MemberSignature Language="F#" Value="static member GetAssociation : Type * obj -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetAssociation (type, primary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="primary" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="56f1a-314">対象コンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-314">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="primary"><span data-ttu-id="56f1a-315">関連付けのプライマリ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="56f1a-315">The primary object of the association.</span></span></param>
        <summary><span data-ttu-id="56f1a-316">指定されたプライマリ オブジェクトに関連付けられている型のインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-316">Returns an instance of the type associated with the specified primary object.</span></span></summary>
        <returns><span data-ttu-id="56f1a-317">関連付けが存在する場合は、プライマリ オブジェクトに関連付けられているセカンダリの型のインスタンス。それ以外で、関連付けが指定されていない場合は、<paramref name="primary" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-317">An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <paramref name="primary" /> if no specified association exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-318"><xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> メソッドを使用して `type` パラメーターに対して以前の関連付けが行われている場合、<xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> メソッドは、要求された型に対して呼び出す正しいセカンダリオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-318">If a previous association has been made for the `type` parameter using the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method, then the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method returns the correct secondary object to invoke for the requested type.</span></span> <span data-ttu-id="56f1a-319">それ以外の場合、<xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> は `type` の互換性のあるデザイナーを検索し、デザイナーが見つかった場合はそれを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-319">Otherwise, <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> searches for a compatible designer for `type` and returns the designer if one is found.</span></span> <span data-ttu-id="56f1a-320">このメソッドが `null` を返すことはありません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-320">This method never returns `null`.</span></span>  
  
 <span data-ttu-id="56f1a-321"><xref:System.WeakReference> は、プライマリオブジェクトとセカンダリオブジェクトの間の関連付けを維持するために使用されます。したがって、このメソッドでは、プライマリまたはセカンダリオブジェクトがガベージコレクションによって完了され、解放されるのを防ぐことはできません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-321">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either the primary or secondary object from being finalized and reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-322">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-322">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttributes">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56f1a-323">コンポーネントまたは型の属性のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-323">Returns the collection of attributes for a component or a type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (component As Object) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : obj -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-324">属性を取得するコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="56f1a-324">The component for which you want to get attributes.</span></span></param>
        <summary><span data-ttu-id="56f1a-325">指定されたコンポーネントの属性のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-325">Returns the collection of attributes for the specified component.</span></span></summary>
        <returns><span data-ttu-id="56f1a-326">コンポーネントの属性を格納している <see cref="T:System.ComponentModel.AttributeCollection" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-326">An <see cref="T:System.ComponentModel.AttributeCollection" /> containing the attributes for the component.</span></span> <span data-ttu-id="56f1a-327"><paramref name="component" /> が <see langword="null" /> の場合、このメソッドは空のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-327">If <paramref name="component" /> is <see langword="null" />, this method returns an empty collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-328"><xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> メソッドによって返される属性は、拡張プロバイダー (<xref:System.ComponentModel.IExtenderProvider>)、フィルターサービス (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>)、および属性フィルターによって元のコンポーネントのソースリストから動的に変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-328">The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original component's source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.</span></span>  
  
 <span data-ttu-id="56f1a-329"><xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> を `true`に設定してカスタム属性を定義する場合は、<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> プロパティをオーバーライドして一意にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-329">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="56f1a-330">属性のすべてのインスタンスが一意である場合は、<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> をオーバーライドして、属性のオブジェクト id を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-330">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="56f1a-331">属性の一部のインスタンスのみが一意である場合は、そのような場合に等価性を返す <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> から値を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-331">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="56f1a-332">たとえば、一部の属性には、一意のキーとして機能するコンストラクターパラメーターがあります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-332">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="56f1a-333">これらの属性については、<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> プロパティからコンストラクターパラメーターの値を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-333">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56f1a-334"><xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> の既定の実装では、<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> プロパティの値に関係なく、型 id が返されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-334">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="56f1a-335"><xref:System.ComponentModel.AttributeCollection>から <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 属性の複数のインスタンスを返すには、属性で <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> プロパティをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-335">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56f1a-336">このメソッドの例については、<xref:System.ComponentModel.AttributeCollection.Matches%2A> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="56f1a-336">For an example of this method, see the <xref:System.ComponentModel.AttributeCollection.Matches%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (componentType As Type) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : Type -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="56f1a-337">対象コンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-337">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="56f1a-338">指定されたコンポーネントの型の属性のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-338">Returns a collection of attributes for the specified type of component.</span></span></summary>
        <returns><span data-ttu-id="56f1a-339">このコンポーネントの型の属性を持つ <see cref="T:System.ComponentModel.AttributeCollection" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-339">An <see cref="T:System.ComponentModel.AttributeCollection" /> with the attributes for the type of the component.</span></span> <span data-ttu-id="56f1a-340">コンポーネントが <see langword="null" /> の場合、このメソッドは空のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-340">If the component is <see langword="null" />, this method returns an empty collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-341">オブジェクトのインスタンスがない場合にのみ、このバージョンのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-341">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="56f1a-342"><xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> が `true`に設定されている属性では、属性コレクションによって重複するインスタンスが削除されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-342">For attributes with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, the attribute collection removes duplicate instances.</span></span> <span data-ttu-id="56f1a-343">これらは、<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> プロパティが等しい値を返すインスタンスです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-343">These are instances in which the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property returns equal values.</span></span>  
  
 <span data-ttu-id="56f1a-344"><xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> を `true`に設定してカスタム属性を定義する場合は、<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> プロパティをオーバーライドして一意にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-344">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="56f1a-345">属性のすべてのインスタンスが一意である場合は、<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> をオーバーライドして、属性のオブジェクト id を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-345">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="56f1a-346">属性の一部のインスタンスのみが一意である場合は、そのような場合に等価性を返す <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> から値を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-346">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="56f1a-347">たとえば、一部の属性には、一意のキーとして機能するコンストラクターパラメーターがあります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-347">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="56f1a-348">これらの属性については、<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> プロパティからコンストラクターパラメーターの値を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-348">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56f1a-349"><xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> の既定の実装では、<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> プロパティの値に関係なく、型 id が返されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-349">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="56f1a-350"><xref:System.ComponentModel.AttributeCollection>から <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 属性の複数のインスタンスを返すには、属性で <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> プロパティをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-350">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (component As Object, noCustomTypeDesc As Boolean) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : obj * bool -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-351">属性を取得するコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="56f1a-351">The component for which you want to get attributes.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="56f1a-352"><see langword="true" /> が <paramref name="component" /> 型であるときにカスタム型記述子の基準となる属性セットを使用する場合は <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-352"><see langword="true" /> to use a baseline set of attributes from the custom type descriptor if <paramref name="component" /> is of type <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="56f1a-353">指定されたコンポーネントの属性のコレクション、およびカスタム型記述子が作成されたことを示すブール値を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-353">Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.</span></span></summary>
        <returns><span data-ttu-id="56f1a-354">コンポーネントの属性を使用する <see cref="T:System.ComponentModel.AttributeCollection" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-354">An <see cref="T:System.ComponentModel.AttributeCollection" /> with the attributes for the component.</span></span> <span data-ttu-id="56f1a-355">コンポーネントが <see langword="null" /> の場合、このメソッドは空のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-355">If the component is <see langword="null" />, this method returns an empty collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-356"><xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> メソッドによって返される属性は、拡張プロバイダー (<xref:System.ComponentModel.IExtenderProvider>)、フィルターサービス (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>)、および属性フィルターによる元のコンポーネントソースリストから動的に変更できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-356">The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original components source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.</span></span>  
  
 <span data-ttu-id="56f1a-357"><xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> を `true`に設定してカスタム属性を定義する場合は、<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> プロパティをオーバーライドして一意にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-357">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="56f1a-358">属性のすべてのインスタンスが一意である場合は、<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> をオーバーライドして、属性のオブジェクト id を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-358">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="56f1a-359">属性の一部のインスタンスのみが一意である場合は、そのような場合に等価性を返す <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> から値を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-359">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="56f1a-360">たとえば、一部の属性には、一意のキーとして機能するコンストラクターパラメーターがあります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-360">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="56f1a-361">これらの属性については、<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> プロパティからコンストラクターパラメーターの値を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-361">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56f1a-362"><xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> の既定の実装では、<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> プロパティの値に関係なく、型 id が返されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-362">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="56f1a-363"><xref:System.ComponentModel.AttributeCollection>から <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 属性の複数のインスタンスを返すには、属性で <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> プロパティをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-363">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetClassName">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56f1a-364">指定したコンポーネントのクラス名を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-364">Returns the name of the class for the specified component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetClassName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-365">必要なクラス名に対応する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-365">The <see cref="T:System.Object" /> for which you want the class name.</span></span></param>
        <summary><span data-ttu-id="56f1a-366">既定の型記述子を使用して、指定されたコンポーネントのクラスの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-366">Returns the name of the class for the specified component using the default type descriptor.</span></span></summary>
        <returns><span data-ttu-id="56f1a-367">指定したコンポーネントのクラス名を含む <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-367">A <see cref="T:System.String" /> containing the name of the class for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-368">通常、このメソッドは、`component` パラメーター型の完全な <xref:System.Type> 名を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-368">Typically, this method returns the full <xref:System.Type> name for the `component` parameter type.</span></span> <span data-ttu-id="56f1a-369">たとえば、ボタンのクラス名は、"system.string" になります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-369">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="56f1a-370">`component` が <xref:System.ComponentModel.ICustomTypeDescriptor>を実装している場合は、代替名を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-370">If `component` implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.</span></span>  
  
 <span data-ttu-id="56f1a-371">このメソッドは、`false`の2番目のパラメーターを使用して、オーバーロードされた <xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29> メソッドに相当します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-371">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-372"><paramref name="component" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-372"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (componentType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetClassName : Type -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="56f1a-373">対象コンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-373">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="56f1a-374">指定した型のクラス名を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-374">Returns the name of the class for the specified type.</span></span></summary>
        <returns><span data-ttu-id="56f1a-375">指定したコンポーネント型のクラス名を含む <see cref="T:System.String" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-375">A <see cref="T:System.String" /> containing the name of the class for the specified component type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-376">このメソッドは、指定した型に対してキャッシュされたカスタム型記述子を使用して、関連付けられているクラス名を検出します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-376">This method uses the cached custom type descriptor for the specified type to discover the associated class name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-377"><paramref name="componentType" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-377"><paramref name="componentType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (component As Object, noCustomTypeDesc As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetClassName : obj * bool -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-378">必要なクラス名に対応する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-378">The <see cref="T:System.Object" /> for which you want the class name.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="56f1a-379">カスタム型説明情報を検討する <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-379"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="56f1a-380">カスタムの型記述子を使用して、指定されたコンポーネントのクラスの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-380">Returns the name of the class for the specified component using a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="56f1a-381">指定したコンポーネントのクラス名を含む <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-381">A <see cref="T:System.String" /> containing the name of the class for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-382">通常、このメソッドは、`component` パラメーター型の完全な <xref:System.Type> 名を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-382">Typically, this method returns the full <xref:System.Type> name for the `component` parameter type.</span></span> <span data-ttu-id="56f1a-383">たとえば、ボタンのクラス名は、"system.string" になります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-383">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="56f1a-384">`component` パラメーターが <xref:System.ComponentModel.ICustomTypeDescriptor>を実装している場合は、代替名を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-384">If the `component` parameter implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-385"><paramref name="component" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-385"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56f1a-386"><paramref name="component" /> はプロセス間リモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-386"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetComponentName">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56f1a-387">指定したコンポーネントの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-387">Returns the name of the specified component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetComponentName">
      <MemberSignature Language="C#" Value="public static string GetComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetComponentName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-388">必要なクラス名に対応する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-388">The <see cref="T:System.Object" /> for which you want the class name.</span></span></param>
        <summary><span data-ttu-id="56f1a-389">既定の型記述子を使用して、指定されたコンポーネントの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-389">Returns the name of the specified component using the default type descriptor.</span></span></summary>
        <returns><span data-ttu-id="56f1a-390">指定したコンポーネントの名前を内容とする <see cref="T:System.String" />。コンポーネント名が存在しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-390">A <see cref="T:System.String" /> containing the name of the specified component, or <see langword="null" /> if there is no component name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-391">通常、このメソッドは、コンポーネントが存在する場合は、そのサイトの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-391">Typically, this method returns the name for the site of the component, if one exists.</span></span> <span data-ttu-id="56f1a-392">たとえば、ボタンのクラス名は、"system.string" になります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-392">For example, the class name for a button is "System.Windows.Forms.Button".</span></span>  
  
 <span data-ttu-id="56f1a-393">このメソッドは、`false`の2番目のパラメーターを使用して、オーバーロードされた <xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29> メソッドに相当します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-393">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 <span data-ttu-id="56f1a-394">このメソッドは、デザイン時にコンポーネントのインスタンスの名前を取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-394">This method is used at design time to retrieve the name of an instance of a component.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-395"><paramref name="component" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-395"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56f1a-396"><paramref name="component" /> はプロセス間リモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-396"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetComponentName">
      <MemberSignature Language="C#" Value="public static string GetComponentName (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComponentName(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComponentName (component As Object, noCustomTypeDesc As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetComponentName(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetComponentName : obj * bool -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetComponentName (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-397">必要なクラス名に対応する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-397">The <see cref="T:System.Object" /> for which you want the class name.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="56f1a-398">カスタム型説明情報を検討する <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-398"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="56f1a-399">カスタムの型記述子を使用して、指定されたコンポーネントの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-399">Returns the name of the specified component using a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="56f1a-400">指定したコンポーネントのクラスの名前、またはコンポーネント名が存在しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-400">The name of the class for the specified component, or <see langword="null" /> if there is no component name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-401">このメソッドは、デザイン時にコンポーネントのインスタンスの名前を取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-401">This method is used at design time to retrieve the name of an instance of a component.</span></span> <span data-ttu-id="56f1a-402">通常、このメソッドは、コンポーネントが存在する場合は、そのサイトの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-402">Typically, this method returns the name for the site of the component, if one exists.</span></span> <span data-ttu-id="56f1a-403">たとえば、ボタンのクラス名は、"system.string" になります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-403">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="56f1a-404">コンポーネントが <xref:System.ComponentModel.ICustomTypeDescriptor> インターフェイスを実装している場合は、代替名を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-404">If the component implements the <xref:System.ComponentModel.ICustomTypeDescriptor> interface, it can return an alternate name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-405"><paramref name="component" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-405"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56f1a-406"><paramref name="component" /> はプロセス間リモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-406"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConverter">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56f1a-407">コンポーネントまたは型の型コンバーターを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-407">Returns a type converter for a component or a type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConverter (component As Object) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetConverter : obj -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-408">コンバーターを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="56f1a-408">A component to get the converter for.</span></span></param>
        <summary><span data-ttu-id="56f1a-409">指定したコンポーネントの型の型コンバーターを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-409">Returns a type converter for the type of the specified component.</span></span></summary>
        <returns><span data-ttu-id="56f1a-410">指定されたコンポーネントの <see cref="T:System.ComponentModel.TypeConverter" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-410">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-411">このメソッドは、<xref:System.ComponentModel.TypeConverterAttribute>を検索することによって、適切な型コンバーターを見つけます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-411">This method locates an appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="56f1a-412"><xref:System.ComponentModel.TypeConverterAttribute>が見つからない場合は、プリミティブ型が見つかるまでクラスの基本クラスの階層を走査します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-412">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 <span data-ttu-id="56f1a-413">このメソッドは、`false`の2番目のパラメーターを使用して、オーバーロードされた <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> メソッドに相当します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-413">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method with a second parameter of `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56f1a-414">このメソッドの使用例については、<xref:System.ComponentModel.TypeConverter> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="56f1a-414">For an example of using this method, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-415"><paramref name="component" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-415"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56f1a-416"><paramref name="component" /> はプロセス間リモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-416"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetConverter : Type -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="56f1a-417">対象コンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-417">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="56f1a-418">指定した型の型コンバーターを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-418">Returns a type converter for the specified type.</span></span></summary>
        <returns><span data-ttu-id="56f1a-419">指定した型の <see cref="T:System.ComponentModel.TypeConverter" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-419">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-420">オブジェクトのインスタンスがない場合にのみ、このバージョンのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-420">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="56f1a-421">このメソッドは、<xref:System.ComponentModel.TypeConverterAttribute>を検索することによって、適切な型コンバーターを探します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-421">This method looks for the appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="56f1a-422"><xref:System.ComponentModel.TypeConverterAttribute>が見つからない場合は、プリミティブ型が見つかるまでクラスの基本クラスの階層を走査します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-422">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-423"><paramref name="type" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-423"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConverter (component As Object, noCustomTypeDesc As Boolean) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetConverter : obj * bool -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-424">コンバーターを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="56f1a-424">A component to get the converter for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="56f1a-425">カスタム型説明情報を検討する <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-425"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="56f1a-426">カスタム型記述子を使用して、指定されたコンポーネントの型の型コンバーターを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-426">Returns a type converter for the type of the specified component with a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="56f1a-427">指定されたコンポーネントの <see cref="T:System.ComponentModel.TypeConverter" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-427">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-428">このメソッドは、<xref:System.ComponentModel.TypeConverterAttribute>を検索することによって、適切な型コンバーターを検索します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-428">This method looks for the appropriate type converter by trying to find a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="56f1a-429"><xref:System.ComponentModel.TypeConverterAttribute>が見つからない場合は、プリミティブ型が見つかるまでクラスの基本クラスの階層を走査します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-429">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-430"><paramref name="component" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-430"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56f1a-431"><paramref name="component" /> はプロセス間リモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-431"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDefaultEvent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56f1a-432">コンポーネントまたは型の既定のイベントを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-432">Returns the default event for a component or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (component As Object) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : obj -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-433">取得するイベントの対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="56f1a-433">The component to get the event for.</span></span></param>
        <summary><span data-ttu-id="56f1a-434">指定したコンポーネントの既定のイベントを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-434">Returns the default event for the specified component.</span></span></summary>
        <returns><span data-ttu-id="56f1a-435">既定のイベントを伴う <see cref="T:System.ComponentModel.EventDescriptor" />。イベントがない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-435">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-436">このメソッドは、`false`の2番目のパラメーターを使用して、オーバーロードされた <xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29> メソッドに相当します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-436">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-437"><paramref name="component" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-437"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56f1a-438"><paramref name="component" /> はプロセス間リモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-438"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (componentType As Type) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : Type -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="56f1a-439">対象コンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-439">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="56f1a-440">指定した型のコンポーネントの既定のイベントを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-440">Returns the default event for the specified type of component.</span></span></summary>
        <returns><span data-ttu-id="56f1a-441">既定のイベントを伴う <see cref="T:System.ComponentModel.EventDescriptor" />。イベントがない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-441">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-442">オブジェクトのインスタンスがない場合にのみ、このバージョンのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-442">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-443"><paramref name="componentType" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-443"><paramref name="componentType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (component As Object, noCustomTypeDesc As Boolean) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : obj * bool -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-444">取得するイベントの対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="56f1a-444">The component to get the event for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="56f1a-445">カスタム型説明情報を検討する <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-445"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="56f1a-446">カスタム型記述子を使用して、コンポーネントの既定のイベントを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-446">Returns the default event for a component with a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="56f1a-447">既定のイベントを伴う <see cref="T:System.ComponentModel.EventDescriptor" />。イベントがない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-447">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-448"><paramref name="component" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-448"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56f1a-449"><paramref name="component" /> はプロセス間リモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-449"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDefaultProperty">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56f1a-450">コンポーネントの既定のプロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-450">Returns the default property for a component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (component As Object) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : obj -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-451">既定のプロパティを取得するコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="56f1a-451">The component to get the default property for.</span></span></param>
        <summary><span data-ttu-id="56f1a-452">指定したコンポーネントの既定のプロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-452">Returns the default property for the specified component.</span></span></summary>
        <returns><span data-ttu-id="56f1a-453">既定のプロパティがある場合は <see cref="T:System.ComponentModel.PropertyDescriptor" />。プロパティがない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-453">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-454">`component` パラメーターが `null`の場合、このメソッドは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-454">If the `component` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56f1a-455"><paramref name="component" /> はプロセス間リモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-455"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (componentType As Type) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : Type -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="56f1a-456">取得したプロパティの適用先となるクラスを表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-456">A <see cref="T:System.Type" /> that represents the class to get the property for.</span></span></param>
        <summary><span data-ttu-id="56f1a-457">指定した型のコンポーネントの既定のプロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-457">Returns the default property for the specified type of component.</span></span></summary>
        <returns><span data-ttu-id="56f1a-458">既定のプロパティがある場合は <see cref="T:System.ComponentModel.PropertyDescriptor" />。プロパティがない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-458">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-459">オブジェクトのインスタンスがない場合にのみ、このバージョンのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-459">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="56f1a-460">`componentType` パラメーターが `null`の場合、このメソッドは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-460">If the `componentType` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : obj * bool -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-461">既定のプロパティを取得するコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="56f1a-461">The component to get the default property for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="56f1a-462">カスタム型説明情報を検討する <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-462"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="56f1a-463">カスタム型記述子を使用して、指定したコンポーネントの既定のプロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-463">Returns the default property for the specified component with a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="56f1a-464">既定のプロパティがある場合は <see cref="T:System.ComponentModel.PropertyDescriptor" />。プロパティがない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-464">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-465">`component` パラメーターが `null`の場合、このメソッドは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-465">If the `component` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56f1a-466"><paramref name="component" /> はプロセス間リモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-466"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEditor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56f1a-467">指定した基本型のエディターを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-467">Returns an editor with the specified base type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (object component, Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(object component, class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEditor (component As Object, editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(System::Object ^ component, Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="static member GetEditor : obj * Type -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (component, editorBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-468">取得するエディターの対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="56f1a-468">The component to get the editor for.</span></span></param>
        <param name="editorBaseType"><span data-ttu-id="56f1a-469">検索するエディターの基本型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-469">A <see cref="T:System.Type" /> that represents the base type of the editor you want to find.</span></span></param>
        <summary><span data-ttu-id="56f1a-470">指定した基本型を持ち、指定したコンポーネントで使用されるエディターを取得します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-470">Gets an editor with the specified base type for the specified component.</span></span></summary>
        <returns><span data-ttu-id="56f1a-471">指定したエディターの型にキャストできるエディターのインスタンス。要求された型のエディターが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-471">An instance of the editor that can be cast to the specified editor type, or <see langword="null" /> if no editor of the requested type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-472">`editorBaseType` の種類は通常 <xref:System.Drawing.Design.UITypeEditor>ですが、他の種類 (<xref:System.ComponentModel.ComponentEditor> や <xref:System.ComponentModel.InstanceCreationEditor>など) を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-472">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example, <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="56f1a-473">1つのプロパティに対して複数のエディターを定義できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-473">You can define multiple editors for a property.</span></span> <span data-ttu-id="56f1a-474">このメソッドを使用して、使用するエディターを選択します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-474">You use this method to select the editor you want to use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-475"><paramref name="component" /> または <paramref name="editorBaseType" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-475"><paramref name="component" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56f1a-476"><paramref name="component" /> はプロセス間リモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-476"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/f068b4ea-6e8c-4c0b-aefd-188b337240da"><span data-ttu-id="56f1a-477">ユーザー インターフェイス型エディターの概要</span><span class="sxs-lookup"><span data-stu-id="56f1a-477">User Interface Type Editors Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (Type type, Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(class System.Type type, class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(Type ^ type, Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="static member GetEditor : Type * Type -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (type, editorBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="56f1a-478">対象コンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-478">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="editorBaseType"><span data-ttu-id="56f1a-479">検索を試みているエディターの基本型を表わす <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-479">A <see cref="T:System.Type" /> that represents the base type of the editor you are trying to find.</span></span></param>
        <summary><span data-ttu-id="56f1a-480">指定した基本型を持つ、指定した型に関するエディターを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-480">Returns an editor with the specified base type for the specified type.</span></span></summary>
        <returns><span data-ttu-id="56f1a-481">指定した基本型にキャストできるエディター オブジェクトのインスタンス。要求された型のエディターが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-481">An instance of the editor object that can be cast to the given base type, or <see langword="null" /> if no editor of the requested type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-482">`editorBaseType` の種類は通常 <xref:System.Drawing.Design.UITypeEditor>ですが、他の種類 (<xref:System.ComponentModel.ComponentEditor> や <xref:System.ComponentModel.InstanceCreationEditor>など) を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-482">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="56f1a-483">1つの型に対して複数のエディターを定義できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-483">You can define multiple editors for a type.</span></span> <span data-ttu-id="56f1a-484">このメソッドを使用して、使用するものを選択します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-484">You use this method to select the one you want to use.</span></span>  
  
 <span data-ttu-id="56f1a-485">オブジェクトのインスタンスがない場合にのみ、このバージョンのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-485">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-486"><paramref name="type" /> または <paramref name="editorBaseType" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-486"><paramref name="type" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/f068b4ea-6e8c-4c0b-aefd-188b337240da"><span data-ttu-id="56f1a-487">ユーザー インターフェイス型エディターの概要</span><span class="sxs-lookup"><span data-stu-id="56f1a-487">User Interface Type Editors Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (object component, Type editorBaseType, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(object component, class System.Type editorBaseType, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEditor (component As Object, editorBaseType As Type, noCustomTypeDesc As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(System::Object ^ component, Type ^ editorBaseType, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEditor : obj * Type * bool -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (component, editorBaseType, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="editorBaseType" Type="System.Type" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-488">取得するエディターの対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="56f1a-488">The component to get the editor for.</span></span></param>
        <param name="editorBaseType"><span data-ttu-id="56f1a-489">検索するエディターの基本型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-489">A <see cref="T:System.Type" /> that represents the base type of the editor you want to find.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="56f1a-490">カスタムの型の記述情報を考慮する必要があるかどうかを示すフラグ。</span><span class="sxs-lookup"><span data-stu-id="56f1a-490">A flag indicating whether custom type description information should be considered.</span></span></param>
        <summary><span data-ttu-id="56f1a-491">指定したコンポーネント用のカスタムの型記述子が関連付けられている、指定した基本データ型のエディターを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-491">Returns an editor with the specified base type and with a custom type descriptor for the specified component.</span></span></summary>
        <returns><span data-ttu-id="56f1a-492">指定したエディターの型にキャストできるエディターのインスタンス。要求された型のエディターが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-492">An instance of the editor that can be cast to the specified editor type, or <see langword="null" /> if no editor of the requested type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-493">`editorBaseType` の種類は通常 <xref:System.Drawing.Design.UITypeEditor>ですが、他の種類 (<xref:System.ComponentModel.ComponentEditor> や <xref:System.ComponentModel.InstanceCreationEditor>など) を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-493">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="56f1a-494">1つのプロパティに対して複数のエディターを定義できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-494">You can define multiple editors for a property.</span></span> <span data-ttu-id="56f1a-495">このメソッドを使用して、使用するエディターを選択します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-495">You use this method to select the editor you want to use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-496"><paramref name="component" /> または <paramref name="editorBaseType" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-496"><paramref name="component" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56f1a-497"><paramref name="component" /> はプロセス間リモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-497"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/f068b4ea-6e8c-4c0b-aefd-188b337240da"><span data-ttu-id="56f1a-498">ユーザー インターフェイス型エディターの概要</span><span class="sxs-lookup"><span data-stu-id="56f1a-498">User Interface Type Editors Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56f1a-499">コンポーネントまたは型のイベントのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-499">Returns the collection of events for a component or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-500">イベントを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="56f1a-500">A component to get the events for.</span></span></param>
        <summary><span data-ttu-id="56f1a-501">指定されたコンポーネントのイベントのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-501">Returns the collection of events for the specified component.</span></span></summary>
        <returns><span data-ttu-id="56f1a-502">このコンポーネントのイベントを伴う <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-502">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-503">指定された `component` パラメーターインスタンスが提供するイベントのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-503">Retrieves a collection of events that the given `component` parameter instance provides.</span></span> <span data-ttu-id="56f1a-504">このコレクションは、クラスが提供するイベントのセットとは異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-504">This collection can differ from the set of events the class provides.</span></span> <span data-ttu-id="56f1a-505">`component` パラメーターが配置されている場合は、サイトで追加または追加のイベントを削除できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-505">If the `component` parameter is sited, the site can add or remove additional events.</span></span>  
  
 <span data-ttu-id="56f1a-506">`component` が `null`場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-506">If `component` is `null`, then an empty collection is returned.</span></span>  
  
 <span data-ttu-id="56f1a-507">返されるコレクションの順序は、呼び出し間で同一であるとは限りません。そのため、使用する前に常に順序を指定してください。</span><span class="sxs-lookup"><span data-stu-id="56f1a-507">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56f1a-508">このメソッドの例については、<xref:System.ComponentModel.EventDescriptorCollection.Count%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="56f1a-508">For an example of this method, see the <xref:System.ComponentModel.EventDescriptorCollection.Count%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56f1a-509"><paramref name="component" /> はプロセス間リモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-509"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (componentType As Type) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetEvents : Type -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="56f1a-510">対象コンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-510">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="56f1a-511">指定されたコンポーネント型のイベントのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-511">Returns the collection of events for a specified type of component.</span></span></summary>
        <returns><span data-ttu-id="56f1a-512">このコンポーネントのイベントを伴う <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-512">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-513">オブジェクトのインスタンスがない場合にのみ、このバージョンのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-513">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="56f1a-514">`componentType` パラメーターが `null`場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-514">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="56f1a-515">返されるコレクションの順序は、呼び出し間で同一であるとは限りません。そのため、使用する前に常に順序を指定してください。</span><span class="sxs-lookup"><span data-stu-id="56f1a-515">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-516">イベントを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="56f1a-516">A component to get the events for.</span></span></param>
        <param name="attributes"><span data-ttu-id="56f1a-517">フィルターとして使用できる <see cref="T:System.Attribute" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="56f1a-517">An array of type <see cref="T:System.Attribute" /> that you can use as a filter.</span></span></param>
        <summary><span data-ttu-id="56f1a-518">指定された属性配列をフィルターとして使用して、指定されたコンポーネントのイベント コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-518">Returns the collection of events for a specified component using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="56f1a-519">このコンポーネントの指定した属性と一致するイベントを持つ <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-519">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-520">`component` パラメーターのイベントは、クラスのイベントとは異なる場合があります。これは、`component` パラメーターが配置されている場合に、サイトがイベントを追加または削除できるためです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-520">The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="56f1a-521">`attributes` 配列には、<xref:System.Type> オブジェクトと <xref:System.Attribute> オブジェクトを混在させることができます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-521">The `attributes` array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="56f1a-522">フィルター処理は、次の規則によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-522">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="56f1a-523"><xref:System.Type> は、ワイルドカードとして扱われます。属性のセットに <xref:System.Type> があるすべてのイベントと一致します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-523">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="56f1a-524">イベントに同じクラスの <xref:System.Attribute> がない場合、返される配列にはイベントが含まれません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-524">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="56f1a-525">属性が <xref:System.Attribute> クラスのインスタンスである場合、イベントは完全に一致している必要があります。そうでない場合、返された配列には含まれません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-525">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="56f1a-526"><xref:System.Attribute> インスタンスが指定されていて、それが既定のイベントである場合は、イベントに <xref:System.Attribute> のインスタンスがない場合でも、返された配列に含まれます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-526">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="56f1a-527">`component` が `null`場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-527">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="56f1a-528">返されるコレクションの順序は、呼び出し間で同一であるとは限りません。そのため、使用する前に常に順序を指定してください。</span><span class="sxs-lookup"><span data-stu-id="56f1a-528">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56f1a-529"><paramref name="component" /> はプロセス間リモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-529"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, noCustomTypeDesc As Boolean) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * bool -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-530">イベントを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="56f1a-530">A component to get the events for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="56f1a-531">カスタム型説明情報を検討する <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-531"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="56f1a-532">カスタム型記述子を持つ、指定されたコンポーネントのイベントのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-532">Returns the collection of events for a specified component with a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="56f1a-533">このコンポーネントのイベントを伴う <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-533">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-534">このメソッドは、指定された `component` パラメーターインスタンスが提供するイベントのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-534">This method retrieves a collection of events that the given `component` parameter instance provides.</span></span> <span data-ttu-id="56f1a-535">これは、クラスが提供するイベントのセットとは異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-535">This can differ from the set of events the class provides.</span></span> <span data-ttu-id="56f1a-536">`component` パラメーターが配置されている場合は、サイトで追加または追加のイベントを削除できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-536">If the `component` parameter is sited, the site can add or remove additional events.</span></span>  
  
 <span data-ttu-id="56f1a-537">`component` が `null`場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-537">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="56f1a-538">返されるコレクションの順序は、呼び出し間で同一であるとは限りません。そのため、使用する前に常に順序を指定してください。</span><span class="sxs-lookup"><span data-stu-id="56f1a-538">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56f1a-539"><paramref name="component" /> はプロセス間リモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-539"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(class System.Type componentType, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (componentType As Type, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(Type ^ componentType, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEvents : Type * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (componentType, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="56f1a-540">対象コンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-540">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="attributes"><span data-ttu-id="56f1a-541">フィルターとして使用できる <see cref="T:System.Attribute" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="56f1a-541">An array of type <see cref="T:System.Attribute" /> that you can use as a filter.</span></span></param>
        <summary><span data-ttu-id="56f1a-542">指定された属性配列をフィルターとして使用して、指定されたコンポーネント型のイベント コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-542">Returns the collection of events for a specified type of component using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="56f1a-543">このコンポーネントの指定した属性と一致するイベントを持つ <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-543">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-544">オブジェクトのインスタンスがない場合にのみ、このバージョンのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-544">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="56f1a-545">`attributes` パラメーター配列には、<xref:System.Type> オブジェクトと <xref:System.Attribute> オブジェクトを混在させることができます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-545">The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="56f1a-546">フィルター処理は、次の規則によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-546">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="56f1a-547"><xref:System.Type> は、ワイルドカードとして扱われます。属性のセットに <xref:System.Type> があるすべてのイベントと一致します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-547">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="56f1a-548">イベントに同じクラスの <xref:System.Attribute> がない場合、返される配列にはイベントが含まれません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-548">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="56f1a-549">属性が <xref:System.Attribute> クラスのインスタンスである場合、イベントは完全に一致している必要があります。そうでない場合、返された配列には含まれません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-549">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="56f1a-550"><xref:System.Attribute> インスタンスが指定されていて、それが既定のイベントである場合は、イベントに <xref:System.Attribute> のインスタンスがない場合でも、返された配列に含まれます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-550">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="56f1a-551">`componentType` パラメーターが `null`場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-551">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="56f1a-552">返されるコレクションの順序は、呼び出し間で同一であるとは限りません。そのため、使用する前に常に順序を指定してください。</span><span class="sxs-lookup"><span data-stu-id="56f1a-552">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class System.Attribute[] attributes, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * Attribute[] * bool -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, attributes, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-553">イベントを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="56f1a-553">A component to get the events for.</span></span></param>
        <param name="attributes"><span data-ttu-id="56f1a-554">フィルターとして使用する型 <see cref="T:System.Attribute" /> の配列。</span><span class="sxs-lookup"><span data-stu-id="56f1a-554">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="56f1a-555">カスタム型説明情報を検討する <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-555"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="56f1a-556">指定された属性配列をフィルターとして使用し、カスタム型記述子を使用して、指定されたコンポーネントのイベントのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-556">Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="56f1a-557">このコンポーネントの指定した属性と一致するイベントを持つ <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-557">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-558">`component` パラメーターのイベントは、クラスのイベントとは異なる場合があります。これは、`component` パラメーターが配置されている場合に、サイトがイベントを追加または削除できるためです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-558">The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="56f1a-559">`attributes` パラメーター配列には、<xref:System.Type> オブジェクトと <xref:System.Attribute> オブジェクトを混在させることができます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-559">The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="56f1a-560">フィルター処理は、次の規則によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-560">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="56f1a-561"><xref:System.Type> は、ワイルドカードとして扱われます。属性のセットに <xref:System.Type> があるすべてのイベントと一致します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-561">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="56f1a-562">イベントに同じクラスの <xref:System.Attribute> がない場合、返される配列にはイベントが含まれません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-562">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="56f1a-563">属性が <xref:System.Attribute> クラスのインスタンスである場合、イベントは完全に一致している必要があります。そうでない場合、返された配列には含まれません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-563">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="56f1a-564"><xref:System.Attribute> インスタンスが指定されていて、それが既定のイベントである場合は、イベントに <xref:System.Attribute> のインスタンスがない場合でも、返された配列に含まれます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-564">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="56f1a-565">`component` が `null`場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-565">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="56f1a-566">返されるコレクションの順序は、呼び出し間で同一であるとは限りません。そのため、使用する前に常に順序を指定してください。</span><span class="sxs-lookup"><span data-stu-id="56f1a-566">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56f1a-567"><paramref name="component" /> はプロセス間リモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-567"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetFullComponentName">
      <MemberSignature Language="C#" Value="public static string GetFullComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFullComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFullComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFullComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetFullComponentName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetFullComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-568">名前を検索する <see cref="T:System.ComponentModel.Component" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-568">The <see cref="T:System.ComponentModel.Component" /> to find the name for.</span></span></param>
        <summary><span data-ttu-id="56f1a-569">コンポーネントの完全修飾名を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-569">Returns the fully qualified name of the component.</span></span></summary>
        <returns><span data-ttu-id="56f1a-570">指定されたコンポーネントの完全修飾名。コンポーネントに名前がない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-570">The fully qualified name of the specified component, or <see langword="null" /> if the component has no name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-571">多くの場合、<xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A> メソッドは、<xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> メソッドと同じ値を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-571">In many cases, the <xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A> method will return the same value as the <xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> method.</span></span> <span data-ttu-id="56f1a-572">ただし、コンポーネントが入れ子になったコンテナーに存在する場合、または入れ子になった他のセマンティクスがある場合、別の完全修飾名が返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-572">However, if the component resides in a nested container or has other nested semantics, it may return a different fully qualified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-573"><paramref name="component" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-573"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56f1a-574">コンポーネントまたは型のプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-574">Returns the collection of properties on a component or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-575">プロパティを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="56f1a-575">A component to get the properties for.</span></span></param>
        <summary><span data-ttu-id="56f1a-576">指定されたコンポーネントのプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-576">Returns the collection of properties for a specified component.</span></span></summary>
        <returns><span data-ttu-id="56f1a-577">指定されたコンポーネントのプロパティを持つ <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-577">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-578">コンポーネントが配置されている場合は、サイトでプロパティを追加または削除できるため、コンポーネントのプロパティはクラスのプロパティとは異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-578">The properties for a component can differ from the properties of a class, because the site can add or remove properties if the component is sited.</span></span>  
  
 <span data-ttu-id="56f1a-579">`component` パラメーターが `null`場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-579">If the `component` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="56f1a-580">返されるコレクションの順序は、呼び出し間で同一であるとは限りません。そのため、使用する前に常に順序を指定してください。</span><span class="sxs-lookup"><span data-stu-id="56f1a-580">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56f1a-581">次のコード例は、<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> メソッドを使用して、コントロールのプロパティにアクセスする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="56f1a-581">The following code example demonstrates the use of the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method to access the properties of a control.</span></span> <span data-ttu-id="56f1a-582">このコード例は、<xref:System.ComponentModel.Design.ComponentDesigner> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-582">This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.ComponentDesigner> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.DesignerServices#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/CS/Form1.cs#8)]
 [!code-vb[System.ComponentModel.Design.DesignerServices#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56f1a-583"><paramref name="component" /> はプロセス間リモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-583"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <related type="Article" href="https://msdn.microsoft.com/library/c186c4b6-076c-438d-9ed3-f13da29c8c1f"><span data-ttu-id="56f1a-584">方法: デザイン時サービスにアクセスする</span><span class="sxs-lookup"><span data-stu-id="56f1a-584">How to: Access Design-time Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (componentType As Type) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetProperties : Type -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="56f1a-585">プロパティを取得する対象のコンポーネントを表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-585">A <see cref="T:System.Type" /> that represents the component to get properties for.</span></span></param>
        <summary><span data-ttu-id="56f1a-586">指定された型のコンポーネントのプロパティ コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-586">Returns the collection of properties for a specified type of component.</span></span></summary>
        <returns><span data-ttu-id="56f1a-587">指定された型のコンポーネントのプロパティを格納する <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-587">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for a specified type of component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-588">オブジェクトのインスタンスがない場合にのみ、このバージョンのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-588">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="56f1a-589">`componentType` パラメーターが `null`場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-589">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="56f1a-590">返されるコレクションの順序は、呼び出し間で同一であるとは限りません。そのため、使用する前に常に順序を指定してください。</span><span class="sxs-lookup"><span data-stu-id="56f1a-590">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-591">プロパティを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="56f1a-591">A component to get the properties for.</span></span></param>
        <param name="attributes"><span data-ttu-id="56f1a-592">フィルターとして使用する型 <see cref="T:System.Attribute" /> の配列。</span><span class="sxs-lookup"><span data-stu-id="56f1a-592">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <summary><span data-ttu-id="56f1a-593">指定された属性配列をフィルターとして使用して、指定されたコンポーネントのプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-593">Returns the collection of properties for a specified component using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="56f1a-594">指定のコンポーネントの指定した属性と一致するプロパティを持つ <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-594">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-595">`component` パラメーターのプロパティは、クラスのプロパティとは異なる場合があります。これは、`component` パラメーターが配置されている場合に、サイトでプロパティを追加または削除できるためです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-595">The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="56f1a-596">配列をフィルター処理するには、`attributes` パラメーター配列を使用します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-596">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="56f1a-597">フィルター処理は、次の規則によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-597">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="56f1a-598">プロパティに同じクラスの <xref:System.Attribute> がない場合、返される配列にはプロパティが含まれません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-598">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="56f1a-599">属性が <xref:System.Attribute> クラスのインスタンスである場合、プロパティは完全に一致している必要があります。そうでない場合は、返された配列には含まれません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-599">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="56f1a-600"><xref:System.Attribute> インスタンスが指定されていて、それが既定のプロパティである場合は、プロパティに <xref:System.Attribute> のインスタンスがない場合でも、返された配列に含まれます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-600">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="56f1a-601">`attributes` に default 属性がある場合、<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> メソッドは、プロパティに属性が適用されていない場合と一致します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-601">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="56f1a-602">`component` が `null`場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-602">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="56f1a-603">返されるコレクションの順序は、呼び出し間で同一であるとは限りません。そのため、使用する前に常に順序を指定してください。</span><span class="sxs-lookup"><span data-stu-id="56f1a-603">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56f1a-604"><xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> メソッドを実装する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-604">The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method.</span></span> <span data-ttu-id="56f1a-605">このコード例は、<xref:System.Windows.Forms.Design.PropertyTab> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-605">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.</span></span>  
  
 [!code-cpp[PropertyTabExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyTabExample/CPP/class1.cpp#2)]
 [!code-csharp[PropertyTabExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyTabExample/CS/class1.cs#2)]
 [!code-vb[PropertyTabExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyTabExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56f1a-606"><paramref name="component" /> はプロセス間リモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-606"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * bool -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-607">プロパティを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="56f1a-607">A component to get the properties for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="56f1a-608">カスタム型の説明情報を検討しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-608"><see langword="true" /> to not consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="56f1a-609">既定の型記述子を使用して、指定されたコンポーネントのプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-609">Returns the collection of properties for a specified component using the default type descriptor.</span></span></summary>
        <returns><span data-ttu-id="56f1a-610">指定されたコンポーネントのプロパティを持つ <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-610">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for a specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-611">`component` パラメーターのプロパティは、クラスのプロパティとは異なる場合があります。これは、`component` パラメーターが配置されている場合に、サイトでプロパティを追加または削除できるためです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-611">The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="56f1a-612">`component` が `null`場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-612">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="56f1a-613">返されるコレクションの順序は、呼び出し間で同一であるとは限りません。そのため、使用する前に常に順序を指定してください。</span><span class="sxs-lookup"><span data-stu-id="56f1a-613">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56f1a-614"><paramref name="component" /> はプロセス間リモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-614"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.Type componentType, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (componentType As Type, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(Type ^ componentType, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetProperties : Type * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (componentType, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="56f1a-615">対象コンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-615">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="attributes"><span data-ttu-id="56f1a-616">フィルターとして使用する型 <see cref="T:System.Attribute" /> の配列。</span><span class="sxs-lookup"><span data-stu-id="56f1a-616">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <summary><span data-ttu-id="56f1a-617">指定された属性配列をフィルターとして使用して、指定されたコンポーネント型のプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-617">Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="56f1a-618">この型のコンポーネントの指定された属性に一致するプロパティを伴う <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-618">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for this type of component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-619">オブジェクトのインスタンスがない場合にのみ、このバージョンのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-619">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="56f1a-620">配列をフィルター処理するには、`attributes` パラメーター配列を使用します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-620">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="56f1a-621">フィルター処理は、次の規則によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-621">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="56f1a-622">プロパティに同じクラスの <xref:System.Attribute> がない場合、返される配列にはプロパティが含まれません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-622">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="56f1a-623">属性が <xref:System.Attribute> クラスのインスタンスである場合、プロパティは完全に一致している必要があります。そうでない場合は、返された配列には含まれません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-623">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="56f1a-624"><xref:System.Attribute> インスタンスが指定されていて、それが既定のプロパティである場合は、プロパティに <xref:System.Attribute> のインスタンスがない場合でも、返された配列に含まれます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-624">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="56f1a-625">`attributes` に default 属性がある場合、<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> メソッドは、プロパティに属性が適用されていない場合と一致します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-625">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="56f1a-626">`componentType` パラメーターが `null`場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-626">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="56f1a-627">返されるコレクションの順序は、呼び出し間で同一であるとは限りません。そのため、使用する前に常に順序を指定してください。</span><span class="sxs-lookup"><span data-stu-id="56f1a-627">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56f1a-628"><xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> メソッドを実装する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-628">The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method.</span></span> <span data-ttu-id="56f1a-629">このコード例は、<xref:System.Windows.Forms.Design.PropertyTab> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-629">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.</span></span>  
  
 [!code-cpp[PropertyTabExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyTabExample/CPP/class1.cpp#2)]
 [!code-csharp[PropertyTabExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyTabExample/CS/class1.cs#2)]
 [!code-vb[PropertyTabExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyTabExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class System.Attribute[] attributes, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * Attribute[] * bool -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, attributes, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-630">プロパティを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="56f1a-630">A component to get the properties for.</span></span></param>
        <param name="attributes"><span data-ttu-id="56f1a-631">フィルターとして使用する型 <see cref="T:System.Attribute" /> の配列。</span><span class="sxs-lookup"><span data-stu-id="56f1a-631">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="56f1a-632">カスタム型説明情報を検討する <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-632"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="56f1a-633">指定された属性配列をフィルターとして使用し、カスタム型記述子を使用して、指定されたコンポーネントのプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-633">Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="56f1a-634">指定のコンポーネントの指定した属性と一致するイベントを持つ <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-634">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the events that match the specified attributes for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-635">`component` のプロパティは、クラスのプロパティとは異なる場合があります。これは、`component` が配置されている場合に、サイトでプロパティを追加または削除できるためです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-635">The properties for a `component` can differ from the properties of a class, because the site can add or remove properties if the `component` is sited.</span></span>  
  
 <span data-ttu-id="56f1a-636">配列をフィルター処理するには、`attributes` パラメーター配列を使用します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-636">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="56f1a-637">フィルター処理は、次の規則によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-637">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="56f1a-638">プロパティに同じクラスの <xref:System.Attribute> がない場合、返される配列にはプロパティが含まれません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-638">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="56f1a-639">属性が <xref:System.Attribute> クラスのインスタンスである場合、プロパティは完全に一致している必要があります。そうでない場合は、返された配列には含まれません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-639">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="56f1a-640"><xref:System.Attribute> インスタンスが指定されていて、それが既定のプロパティである場合は、プロパティに <xref:System.Attribute> のインスタンスがない場合でも、返された配列に含まれます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-640">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="56f1a-641">`attributes` に default 属性がある場合、<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> メソッドは、プロパティに属性が適用されていない場合と一致します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-641">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="56f1a-642">`component` パラメーターが `null`場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-642">If the `component` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="56f1a-643">返されるコレクションの順序は、呼び出し間で同一であるとは限りません。そのため、使用する前に常に順序を指定してください。</span><span class="sxs-lookup"><span data-stu-id="56f1a-643">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56f1a-644"><paramref name="component" /> はプロセス間リモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-644"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56f1a-645">コンポーネントまたは型の型説明プロバイダーを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-645">Returns the type description provider for the component or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider GetProvider (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider GetProvider(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProvider (instance As Object) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetProvider(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetProvider : obj -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.GetProvider instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="56f1a-646">対象コンポーネントのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="56f1a-646">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="56f1a-647">指定されたコンポーネントの型説明プロバイダーを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-647">Returns the type description provider for the specified component.</span></span></summary>
        <returns><span data-ttu-id="56f1a-648">指定されたコンポーネントに関連付けられた <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-648">A <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associated with the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-649"><xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> メソッドは常に型の説明のプロバイダーを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-649">The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider.</span></span> <span data-ttu-id="56f1a-650">既定の <xref:System.ComponentModel.TypeDescriptor> 実装は、<xref:System.ComponentModel.TypeDescriptionProvider>に基づいて構築されています。</span><span class="sxs-lookup"><span data-stu-id="56f1a-650">Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-651"><paramref name="instance" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-651"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider GetProvider (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider GetProvider(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetProvider(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetProvider : Type -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.GetProvider type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="56f1a-652">対象コンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-652">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="56f1a-653">指定した型の型説明プロバイダーを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-653">Returns the type description provider for the specified type.</span></span></summary>
        <returns><span data-ttu-id="56f1a-654">指定した型に関連付けられた <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-654">A <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associated with the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-655"><xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> メソッドは常に型の説明のプロバイダーを返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-655">The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider.</span></span> <span data-ttu-id="56f1a-656">既定の <xref:System.ComponentModel.TypeDescriptor> 実装は、<xref:System.ComponentModel.TypeDescriptionProvider>に基づいて構築されています。</span><span class="sxs-lookup"><span data-stu-id="56f1a-656">Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-657"><paramref name="type" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-657"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReflectionType">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56f1a-658">リフレクションを実行するために使用できる <see cref="T:System.Type" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-658">Returns a <see cref="T:System.Type" /> that can be used to perform reflection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public static Type GetReflectionType (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetReflectionType(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetReflectionType (instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetReflectionType(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetReflectionType : obj -&gt; Type" Usage="System.ComponentModel.TypeDescriptor.GetReflectionType instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="56f1a-659">対象コンポーネントのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="56f1a-659">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="56f1a-660">特定のオブジェクトについて、リフレクションを実行するために使用できる <see cref="T:System.Type" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-660">Returns a <see cref="T:System.Type" /> that can be used to perform reflection, given an object.</span></span></summary>
        <returns><span data-ttu-id="56f1a-661">指定されたオブジェクトの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-661">A <see cref="T:System.Type" /> for the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-662"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> メソッドは、<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> メソッドの低レベルバージョンです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-662">The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="56f1a-663"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> は、通常、オブジェクトに対してカスタム型記述子が配置されていない場合に、そのオブジェクトに対して標準のリフレクションを実行するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-663"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against an object when no custom type descriptor can be located for it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-664"><paramref name="instance" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-664"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public static Type GetReflectionType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetReflectionType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetReflectionType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetReflectionType : Type -&gt; Type" Usage="System.ComponentModel.TypeDescriptor.GetReflectionType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="56f1a-665">対象コンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-665">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="56f1a-666">クラス型で指定された、リフレクションを実行するために使用できる <see cref="T:System.Type" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-666">Returns a <see cref="T:System.Type" /> that can be used to perform reflection, given a class type.</span></span></summary>
        <returns><span data-ttu-id="56f1a-667">指定したクラスの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-667">A <see cref="T:System.Type" /> of the specified class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-668"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> メソッドは、<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> メソッドの低レベルバージョンです。</span><span class="sxs-lookup"><span data-stu-id="56f1a-668">The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="56f1a-669"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> は、通常、カスタム型記述子を配置できない場合に、クラスに対して標準のリフレクションを実行するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-669"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against a class when no custom type descriptor can be located for it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-670"><paramref name="type" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-670"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public static Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.ComponentModel.TypeDescriptor.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56f1a-671">すべてのインターフェイスの種類について型説明のプロバイダーを表す型を取得します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-671">Gets a type that represents a type description provider for all interface types.</span></span></summary>
        <value><span data-ttu-id="56f1a-672">すべてのインターフェイスの種類についてカスタム型説明のプロバイダーを表す <see cref="T:System.Type" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-672">A <see cref="T:System.Type" /> that represents a custom type description provider for all interface types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-673"><xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A> プロパティは、インターフェイス型の型説明のプロバイダーを定義するために <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> メソッドに渡すことができる <xref:System.Type> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-673">The <xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A> property gets a <xref:System.Type> object that you can pass to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods to define a type description provider for interface types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56f1a-674">プロパティとイベントをキャッシュからクリアします。</span><span class="sxs-lookup"><span data-stu-id="56f1a-674">Clears the properties and events from the cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member Refresh : obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56f1a-675">プロパティまたはイベントが変更されているコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="56f1a-675">A component for which the properties or events have changed.</span></span></param>
        <summary><span data-ttu-id="56f1a-676">指定されたコンポーネントのプロパティとイベントをキャッシュからクリアします。</span><span class="sxs-lookup"><span data-stu-id="56f1a-676">Clears the properties and events for the specified component from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-677">プロパティとイベントは、速度のために <xref:System.ComponentModel.TypeDescriptor> によってキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-677">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="56f1a-678">通常、これらは、オブジェクトの有効期間中は定数です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-678">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="56f1a-679">ただし、拡張プロバイダーおよびデザイナーは、オブジェクトのプロパティのセットを変更できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-679">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="56f1a-680">存在する場合は、このメソッドを呼び出して、オブジェクトのプロパティとイベント記述子をクリアする必要があります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-680">If they do, they should call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="56f1a-681">このメソッドは、デザイン時にだけ使用されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-681">This method is used only at design time.</span></span> <span data-ttu-id="56f1a-682">実行時には使用されません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-682">It is not used during run time.</span></span>  
  
 <span data-ttu-id="56f1a-683">このメソッドは、コンポーネントのプロパティまたはイベントが変更された場合にも <xref:System.ComponentModel.TypeDescriptor.Refreshed> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-683">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change.</span></span> <span data-ttu-id="56f1a-684">このイベントは、情報をキャッシュした <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> または <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> メソッドへの以前の呼び出しがあった場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-684">This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56f1a-685">このメソッドの使用例については、<xref:System.ComponentModel.RefreshEventHandler> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="56f1a-685">For an example of using this method, see the <xref:System.ComponentModel.RefreshEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member Refresh : System.Reflection.Assembly -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="56f1a-686">更新するアセンブリを表す <see cref="T:System.Reflection.Assembly" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-686">The <see cref="T:System.Reflection.Assembly" /> that represents the assembly to refresh.</span></span> <span data-ttu-id="56f1a-687">このアセンブリの各 <see cref="T:System.Type" /> が更新されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-687">Each <see cref="T:System.Type" /> in this assembly will be refreshed.</span></span></param>
        <summary><span data-ttu-id="56f1a-688">指定されたアセンブリのプロパティとイベントをキャッシュからクリアします。</span><span class="sxs-lookup"><span data-stu-id="56f1a-688">Clears the properties and events for the specified assembly from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-689">プロパティとイベントは、速度のために <xref:System.ComponentModel.TypeDescriptor> によってキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-689">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="56f1a-690">通常、これらは、オブジェクトの有効期間中は定数です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-690">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="56f1a-691">ただし、拡張プロバイダーおよびデザイナーは、オブジェクトのプロパティのセットを変更できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-691">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="56f1a-692">実行されている場合は、このメソッドを呼び出して、オブジェクトのプロパティとイベント記述子を消去できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-692">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="56f1a-693">このメソッドは、デザイン時にだけ使用されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-693">This method is used only at design time.</span></span> <span data-ttu-id="56f1a-694">実行時には使用されません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-694">It is not used during run time.</span></span>  
  
 <span data-ttu-id="56f1a-695"><xref:System.ComponentModel.TypeDescriptor.Refresh%2A> メソッドを呼び出してキャッシュをクリアする前に、特定のアセンブリの <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> メソッドを呼び出して、最初に情報をキャッシュする必要があります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-695">Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific assembly to cache the information first.</span></span>  
  
 <span data-ttu-id="56f1a-696">また、このメソッドは、コンポーネントのプロパティセットが変更されたときに通知を受けるすべてのクラスに通知するために、<xref:System.ComponentModel.TypeDescriptor.Refreshed> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-696">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Assembly" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (System.Reflection.Module module);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Reflection.Module module) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Reflection::Module ^ module);" />
      <MemberSignature Language="F#" Value="static member Refresh : System.Reflection.Module -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh module" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="module"><span data-ttu-id="56f1a-697">更新するモジュールを表す <see cref="T:System.Reflection.Module" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-697">The <see cref="T:System.Reflection.Module" /> that represents the module to refresh.</span></span> <span data-ttu-id="56f1a-698">このモジュールの各 <see cref="T:System.Type" /> が更新されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-698">Each <see cref="T:System.Type" /> in this module will be refreshed.</span></span></param>
        <summary><span data-ttu-id="56f1a-699">指定されたモジュールのプロパティとイベントをキャッシュからクリアします。</span><span class="sxs-lookup"><span data-stu-id="56f1a-699">Clears the properties and events for the specified module from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-700">プロパティとイベントは、速度のために <xref:System.ComponentModel.TypeDescriptor> によってキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-700">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="56f1a-701">通常、これらは、オブジェクトの有効期間中は定数です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-701">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="56f1a-702">ただし、拡張プロバイダーおよびデザイナーは、オブジェクトのプロパティのセットを変更できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-702">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="56f1a-703">実行されている場合は、このメソッドを呼び出して、オブジェクトのプロパティとイベント記述子を消去できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-703">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="56f1a-704">このメソッドは、デザイン時にだけ使用されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-704">This method is used only at design time.</span></span> <span data-ttu-id="56f1a-705">実行時には使用されません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-705">It is not used during run time.</span></span>  
  
 <span data-ttu-id="56f1a-706"><xref:System.ComponentModel.TypeDescriptor.Refresh%2A> メソッドを呼び出してキャッシュをクリアする前に、特定のモジュールの <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> メソッドを呼び出して、最初に情報をキャッシュする必要があります。</span><span class="sxs-lookup"><span data-stu-id="56f1a-706">Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific module to cache the information first.</span></span>  
  
 <span data-ttu-id="56f1a-707">また、このメソッドは、コンポーネントのプロパティセットが変更されたときに通知を受けるすべてのクラスに通知するために、<xref:System.ComponentModel.TypeDescriptor.Refreshed> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-707">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Module" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Refresh : Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="56f1a-708">対象コンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-708">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="56f1a-709">コンポーネントの指定された型のプロパティとイベントをキャッシュからクリアします。</span><span class="sxs-lookup"><span data-stu-id="56f1a-709">Clears the properties and events for the specified type of component from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-710">オブジェクトのインスタンスがない場合にのみ、このバージョンのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-710">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="56f1a-711">プロパティとイベントは、速度のために <xref:System.ComponentModel.TypeDescriptor> によってキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-711">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="56f1a-712">通常、これらは、オブジェクトの有効期間中は定数です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-712">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="56f1a-713">ただし、拡張プロバイダーおよびデザイナーは、オブジェクトのプロパティのセットを変更できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-713">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="56f1a-714">実行されている場合は、このメソッドを呼び出して、オブジェクトのプロパティとイベント記述子を消去できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-714">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="56f1a-715">このメソッドは、デザイン時にだけ使用されます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-715">This method is used only at design time.</span></span> <span data-ttu-id="56f1a-716">実行時には使用されません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-716">It is not used during run time.</span></span>  
  
 <span data-ttu-id="56f1a-717">このメソッドは、コンポーネントのプロパティまたはイベントが変更された場合にも <xref:System.ComponentModel.TypeDescriptor.Refreshed> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-717">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change.</span></span> <span data-ttu-id="56f1a-718">このイベントは、情報をキャッシュした <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> または <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> メソッドへの以前の呼び出しがあった場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-718">This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refreshed">
      <MemberSignature Language="C#" Value="public static event System.ComponentModel.RefreshEventHandler Refreshed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.RefreshEventHandler Refreshed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Refreshed As RefreshEventHandler " FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::ComponentModel::RefreshEventHandler ^ Refreshed;" />
      <MemberSignature Language="F#" Value="member this.Refreshed : System.ComponentModel.RefreshEventHandler " Usage="member this.Refreshed : System.ComponentModel.RefreshEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Shared Event Refreshed As RefreshEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.RefreshEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56f1a-719">コンポーネントのキャッシュが消去されると発生します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-719">Occurs when the cache for a component is cleared.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-720">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-720">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56f1a-721">このイベントの使用例については、<xref:System.ComponentModel.RefreshEventHandler> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="56f1a-721">For an example of using this event, see the <xref:System.ComponentModel.RefreshEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAssociation">
      <MemberSignature Language="C#" Value="public static void RemoveAssociation (object primary, object secondary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAssociation(object primary, object secondary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAssociation (primary As Object, secondary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAssociation(System::Object ^ primary, System::Object ^ secondary);" />
      <MemberSignature Language="F#" Value="static member RemoveAssociation : obj * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveAssociation (primary, secondary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="secondary" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="primary"><span data-ttu-id="56f1a-722">プライマリ <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-722">The primary <see cref="T:System.Object" />.</span></span></param>
        <param name="secondary"><span data-ttu-id="56f1a-723">セカンダリ <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-723">The secondary <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="56f1a-724">2 つのオブジェクトの間の関連付けを削除します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-724">Removes an association between two objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-725"><xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A> メソッドは、<xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> メソッドによって形成される2つのオブジェクト間の関連付けを削除します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-725">The <xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A> method removes an association between two objects formed by the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.</span></span>  
  
 <span data-ttu-id="56f1a-726"><xref:System.WeakReference> は、プライマリオブジェクトとセカンダリオブジェクトの間の関連付けを維持するために使用されます。このため、いずれかのオブジェクトがガベージコレクションによって終了または解放された場合、このメソッドは影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-726">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either object is finalized or reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-727">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-727">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="56f1a-728">システムリソースにフルアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-728">for full access to system resources.</span></span> <span data-ttu-id="56f1a-729">要求の値: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-729">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="56f1a-730">関連付けられた状態:</span><span class="sxs-lookup"><span data-stu-id="56f1a-730">Associated state:</span></span></permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAssociations">
      <MemberSignature Language="C#" Value="public static void RemoveAssociations (object primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAssociations(object primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAssociations (primary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAssociations(System::Object ^ primary);" />
      <MemberSignature Language="F#" Value="static member RemoveAssociations : obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveAssociations primary" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="primary"><span data-ttu-id="56f1a-731">関連付けのプライマリ <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-731">The primary <see cref="T:System.Object" /> in an association.</span></span></param>
        <summary><span data-ttu-id="56f1a-732">プライマリ オブジェクトのすべての関連付けを削除します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-732">Removes all associations for a primary object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-733"><xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A> メソッドは、<xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> メソッドの呼び出しによって作成された、プライマリオブジェクトとそのすべてのセカンダリオブジェクトとの間のすべての関連付けを削除します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-733">The <xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A> method removes all associations between a primary object and all of its secondary objects, created by calls to the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.</span></span>  
  
 <span data-ttu-id="56f1a-734"><xref:System.WeakReference> は、プライマリオブジェクトとセカンダリオブジェクトの間の関連付けを維持するために使用されます。したがって、このメソッドは、セカンダリオブジェクトのプライマリがガベージコレクションによって完了または回収された場合には影響を及ぼしません。</span><span class="sxs-lookup"><span data-stu-id="56f1a-734">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either the primary of secondary objects are finalized or reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-735"><paramref name="primary" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-735"><paramref name="primary" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="56f1a-736">システムリソースにフルアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-736">for full access to system resources.</span></span> <span data-ttu-id="56f1a-737">要求の値: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-737">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="56f1a-738">関連付けられた状態:</span><span class="sxs-lookup"><span data-stu-id="56f1a-738">Associated state:</span></span></permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56f1a-739">以前に追加した型説明のプロバイダーを削除します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-739">Removes a previously added type description provider.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProvider(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveProvider (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member RemoveProvider : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="56f1a-740">削除する <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-740">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span></span></param>
        <param name="instance"><span data-ttu-id="56f1a-741">対象コンポーネントのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="56f1a-741">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="56f1a-742">指定したオブジェクトに関連付けられている、以前に追加された型説明プロバイダーを削除します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-742">Removes a previously added type description provider that is associated with the specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-743">このメソッドは、前に <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> メソッドを使用して追加した型説明のプロバイダーを削除します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-743">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method.</span></span> <span data-ttu-id="56f1a-744">プロバイダーを削除すると、関連付けられているオブジェクトに対して <xref:System.ComponentModel.TypeDescriptor.Refreshed> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-744">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.</span></span>  
  
 <span data-ttu-id="56f1a-745">部分的に信頼されたコードから呼び出す必要がある場合は、<xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-745">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-746">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-746">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="56f1a-747">システムリソースにフルアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-747">for full access to system resources.</span></span> <span data-ttu-id="56f1a-748">要求の値: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-748">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="56f1a-749">関連付けられた状態:</span><span class="sxs-lookup"><span data-stu-id="56f1a-749">Associated state:</span></span></permission>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProvider(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member RemoveProvider : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProvider (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="56f1a-750">削除する <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-750">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span></span></param>
        <param name="type"><span data-ttu-id="56f1a-751">対象コンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-751">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="56f1a-752">指定した型に関連付けられている、以前に追加された型説明プロバイダーを削除します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-752">Removes a previously added type description provider that is associated with the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-753">このメソッドは、前に <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> メソッドを使用して追加した型説明のプロバイダーを削除します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-753">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method.</span></span> <span data-ttu-id="56f1a-754">プロバイダーを削除すると、関連付けられている型に対して <xref:System.ComponentModel.TypeDescriptor.Refreshed> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-754">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.</span></span>  
  
 <span data-ttu-id="56f1a-755">部分的に信頼されたコードから呼び出す必要がある場合は、<xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-755">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-756">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-756">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="56f1a-757">システムリソースにフルアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-757">for full access to system resources.</span></span> <span data-ttu-id="56f1a-758">要求の値: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-758">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="56f1a-759">関連付けられた状態:</span><span class="sxs-lookup"><span data-stu-id="56f1a-759">Associated state:</span></span></permission>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveProviderTransparent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56f1a-760">以前に追加した型説明のプロバイダーを削除します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-760">Removes a previously added type description provider.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveProviderTransparent">
      <MemberSignature Language="C#" Value="public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveProviderTransparent (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member RemoveProviderTransparent : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProviderTransparent (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="56f1a-761">削除する <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-761">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span></span></param>
        <param name="instance"><span data-ttu-id="56f1a-762">対象コンポーネントのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="56f1a-762">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="56f1a-763">指定したオブジェクトに関連付けられている、以前に追加された型説明プロバイダーを削除します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-763">Removes a previously added type description provider that is associated with the specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-764">このメソッドは、前に <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> メソッドを使用して追加した型説明のプロバイダーを削除します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-764">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method.</span></span> <span data-ttu-id="56f1a-765">プロバイダーを削除すると、関連付けられているオブジェクトに対して <xref:System.ComponentModel.TypeDescriptor.Refreshed> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-765">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.</span></span>  
  
 <span data-ttu-id="56f1a-766">このメソッドは、部分的に信頼されているコードから呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-766">This method can be called from partially trusted code.</span></span> <span data-ttu-id="56f1a-767"><xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> が定義されている場合、呼び出し元は、その型が部分的に信頼されている場合に、指定したインスタンスのプロバイダーを登録できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-767">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</span></span>  
  
 <span data-ttu-id="56f1a-768">部分的に信頼されたコードからを呼び出す必要がない場合は、<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-768">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-769">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-769">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission"><span data-ttu-id="56f1a-770">レジストリアクセスの場合。</span><span class="sxs-lookup"><span data-stu-id="56f1a-770">For registry access.</span></span> <span data-ttu-id="56f1a-771">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-771">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="56f1a-772">関連付けられた列挙型: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span><span class="sxs-lookup"><span data-stu-id="56f1a-772">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span></span></permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet"><span data-ttu-id="56f1a-773">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-773">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="56f1a-774">関連付けられた型: <paramref name="instance" /> パラメーターの型を定義するアセンブリに必要な <see cref="T:System.Security.PermissionSet" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-774">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines the <paramref name="instance" /> parameter's type.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="RemoveProviderTransparent">
      <MemberSignature Language="C#" Value="public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member RemoveProviderTransparent : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProviderTransparent (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="56f1a-775">削除する <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-775">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span></span></param>
        <param name="type"><span data-ttu-id="56f1a-776">対象コンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-776">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="56f1a-777">指定した型に関連付けられている、以前に追加された型説明プロバイダーを削除します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-777">Removes a previously added type description provider that is associated with the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56f1a-778">このメソッドは、前に <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> メソッドを使用して追加した型説明のプロバイダーを削除します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-778">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method.</span></span> <span data-ttu-id="56f1a-779">プロバイダーを削除すると、関連付けられている型に対して <xref:System.ComponentModel.TypeDescriptor.Refreshed> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-779">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.</span></span>  
  
 <span data-ttu-id="56f1a-780">このメソッドは、部分的に信頼されているコードから呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-780">This method can be called from partially trusted code.</span></span> <span data-ttu-id="56f1a-781"><xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> が定義されている場合、呼び出し元は、部分的に信頼されている場合に、指定された型のプロバイダーの登録を解除できます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-781">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can unregister a provider for the specified type if it is also partially trusted.</span></span>  
  
 <span data-ttu-id="56f1a-782">部分的に信頼されたコードからを呼び出す必要がない場合は、<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="56f1a-782">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-783">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-783">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission"><span data-ttu-id="56f1a-784">レジストリアクセスの場合。</span><span class="sxs-lookup"><span data-stu-id="56f1a-784">For registry access.</span></span> <span data-ttu-id="56f1a-785">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-785">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="56f1a-786">関連付けられた列挙型: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span><span class="sxs-lookup"><span data-stu-id="56f1a-786">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span></span></permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet"><span data-ttu-id="56f1a-787">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-787">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="56f1a-788">関連付けられた型: <paramref name="type" />を定義するアセンブリに必要な <see cref="T:System.Security.PermissionSet" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-788">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines <paramref name="type" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SortDescriptorArray">
      <MemberSignature Language="C#" Value="public static void SortDescriptorArray (System.Collections.IList infos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SortDescriptorArray(class System.Collections.IList infos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SortDescriptorArray (infos As IList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SortDescriptorArray(System::Collections::IList ^ infos);" />
      <MemberSignature Language="F#" Value="static member SortDescriptorArray : System.Collections.IList -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.SortDescriptorArray infos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infos" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="infos"><span data-ttu-id="56f1a-789">並べ替える記述子が含まれている <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="56f1a-789">An <see cref="T:System.Collections.IList" /> that contains the descriptors to sort.</span></span></param>
        <summary><span data-ttu-id="56f1a-790">記述子の名前を使用して、記述子を並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="56f1a-790">Sorts descriptors using the name of the descriptor.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56f1a-791"><paramref name="infos" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="56f1a-791"><paramref name="infos" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      </Docs>
    </Member>
  </Members>
</Type>
