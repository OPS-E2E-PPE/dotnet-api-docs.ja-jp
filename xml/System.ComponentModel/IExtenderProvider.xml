<Type Name="IExtenderProvider" FullName="System.ComponentModel.IExtenderProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="799aa4b15a768e4e6443e34e181b9cd01b5501ba" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75147039" /></Metadata><TypeSignature Language="C#" Value="public interface IExtenderProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExtenderProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExtenderProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IExtenderProvider" />
  <TypeSignature Language="F#" Value="type IExtenderProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>プロパティの適用範囲をコンテナー内のほかのコンポーネントまで拡張するインターフェイスを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 拡張プロバイダーは、他のコンポーネントにプロパティを提供するコンポーネントです。 たとえば、<xref:System.Windows.Forms.ToolTip> コントロールは拡張プロバイダーです。 <xref:System.Windows.Forms.Form>に <xref:System.Windows.Forms.ToolTip> コントロールを追加すると、フォーム上の他のすべてのコントロールには、プロパティの一覧に <xref:System.Windows.Forms.ToolTip> プロパティが追加されます。  
  
 エクステンダープロパティを提供するコンポーネントは、<xref:System.ComponentModel.IExtenderProvider>を実装する必要があります。 その後、ビジュアルデザイナーは <xref:System.ComponentModel.IExtenderProvider.CanExtend%2A> を呼び出して、コンテナー内のどのオブジェクトが extender プロパティを受け取る必要があるかを判断できます。  
  
 拡張プロバイダーの詳細については、「[方法: 拡張プロバイダーを実装](https://msdn.microsoft.com/library/d824f40e-b20b-464c-ac22-97974d5ab4fe)する」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.ComponentModel.IExtenderProvider> インターフェイスを実装する方法を示しています。 この例は、 [「方法: HelpLabel Extender プロバイダーを実装する](https://msdn.microsoft.com/library/21e34929-ff78-4f3f-aee8-a16a4ef5ac9d)」で説明されている、より大きな例の一部です。  
  
 [!code-csharp[System.Windows.Forms.HelpLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HelpLabel/CS/HelpLabel.cs#1)]
 [!code-vb[System.Windows.Forms.HelpLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HelpLabel/VB/HelpLabel.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanExtend">
      <MemberSignature Language="C#" Value="public bool CanExtend (object extendee);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExtend(object extendee) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExtend (extendee As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExtend(System::Object ^ extendee);" />
      <MemberSignature Language="F#" Value="abstract member CanExtend : obj -&gt; bool" Usage="iExtenderProvider.CanExtend extendee" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extendee" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="extendee">エクステンダー プロパティを受け取る <see cref="T:System.Object" />。</param>
        <summary>オブジェクトが、指定したオブジェクトに対してエクステンダー プロパティを提供できるかどうかを指定します。</summary>
        <returns>オブジェクトが、指定したオブジェクトに対してエクステンダー プロパティを提供できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Extender プロパティの詳細については、「[方法: 拡張プロバイダーを実装](https://msdn.microsoft.com/library/d824f40e-b20b-464c-ac22-97974d5ab4fe)する」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.ComponentModel.IExtenderProvider.CanExtend%2A> プロパティを実装する方法を示しています。 この例は、 [「方法: HelpLabel Extender プロバイダーを実装する](https://msdn.microsoft.com/library/21e34929-ff78-4f3f-aee8-a16a4ef5ac9d)」で説明されている、より大きな例の一部です。  
  
 [!code-csharp[System.Windows.Forms.HelpLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HelpLabel/CS/HelpLabel.cs#1)]
 [!code-vb[System.Windows.Forms.HelpLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HelpLabel/VB/HelpLabel.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
