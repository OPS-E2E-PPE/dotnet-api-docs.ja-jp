<Type Name="IEditableCollectionView" FullName="System.ComponentModel.IEditableCollectionView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8453b65ce24181f0257beb671b88d6d7c4bd8726" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82468123" /></Metadata><TypeSignature Language="C#" Value="public interface IEditableCollectionView" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEditableCollectionView" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.IEditableCollectionView" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEditableCollectionView" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEditableCollectionView" />
  <TypeSignature Language="F#" Value="type IEditableCollectionView = interface" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="eee8f-101">コレクションに編集機能を提供するために <see cref="T:System.Windows.Data.CollectionView" /> に実装されるメソッドとプロパティを定義します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-101">Defines methods and properties that a <see cref="T:System.Windows.Data.CollectionView" /> implements to provide editing capabilities to a collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eee8f-102">コレクションビューで <xref:System.ComponentModel.IEditableCollectionView> インターフェイスが実装されている場合は、コレクションの型に関係なく、<xref:System.ComponentModel.IEditableCollectionView> が公開するメソッドとプロパティを使用して、基になるコレクションを変更できる場合は、そのコレクションを直接変更できます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-102">When a collection view implements the <xref:System.ComponentModel.IEditableCollectionView> interface, you can directly change the underlying collection, if it allows changes to be made, by using the methods and properties that <xref:System.ComponentModel.IEditableCollectionView> exposes, regardless of the collection's type.</span></span>  
  
 <span data-ttu-id="eee8f-103"><xref:System.Windows.Controls.ItemCollection>、<xref:System.Windows.Data.BindingListCollectionView>、および <xref:System.Windows.Data.ListCollectionView> 型は、<xref:System.Windows.Data.CollectionView>から継承する [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] と共に出荷される型です。</span><span class="sxs-lookup"><span data-stu-id="eee8f-103">The types <xref:System.Windows.Controls.ItemCollection>, <xref:System.Windows.Data.BindingListCollectionView>, and <xref:System.Windows.Data.ListCollectionView> are the types that ship with [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] that inherit from <xref:System.Windows.Data.CollectionView>.</span></span>  <span data-ttu-id="eee8f-104">これらの型は <xref:System.ComponentModel.IEditableCollectionView>も実装しているので、これらの型のいずれかを使用するコレクションを編集できます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-104">These types also implement the <xref:System.ComponentModel.IEditableCollectionView>, so you can edit a collection that uses one of those types.</span></span>  <span data-ttu-id="eee8f-105">特に、<xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=nameWithType> プロパティは <xref:System.Windows.Controls.ItemCollection>であるため、<xref:System.Windows.Controls.ItemCollection>はよく使用されます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-105"><xref:System.Windows.Controls.ItemCollection>, in particular, is often used because the <xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=nameWithType> property is an <xref:System.Windows.Controls.ItemCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eee8f-106">次の例では、<xref:System.ComponentModel.IEditableCollectionView>によって定義されたメソッドを使用して、コレクションに項目を追加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-106">The following example shows how to add an item to a collection by using methods that are defined by <xref:System.ComponentModel.IEditableCollectionView>.</span></span>  <span data-ttu-id="eee8f-107">このアプリケーションでは、販売する項目の一覧を表示し、項目を追加、編集、または削除するためのオプションをユーザーに提供します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-107">This application displays a list of items for sale and gives the user the option of adding, editing, or removing an item.</span></span>  <span data-ttu-id="eee8f-108">ユーザーが項目を追加または編集すると、新しい項目を入力するようにユーザーに求めるフォームが表示されます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-108">When the user adds or edits an item, a form prompts the user to enter a new item.</span></span>  <span data-ttu-id="eee8f-109">ユーザーがフォームを送信すると、アイテムはコレクションにコミットされます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-109">If the user submits the form, the item is committed to the collection.</span></span>  <span data-ttu-id="eee8f-110">ユーザーがフォームをキャンセルした場合、その項目は破棄されます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-110">If the user cancels the form, the item is discarded.</span></span> <span data-ttu-id="eee8f-111">サンプル全体については、「 [IEditableCollectionView サンプルを使用したコレクションの変更](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="eee8f-111">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AddNew();" />
      <MemberSignature Language="F#" Value="abstract member AddNew : unit -&gt; obj" Usage="iEditableCollectionView.AddNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eee8f-112">新しい項目をコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-112">Adds a new item to the collection.</span></span></summary>
        <returns><span data-ttu-id="eee8f-113">コレクションに追加された新しい項目。</span><span class="sxs-lookup"><span data-stu-id="eee8f-113">The new item that is added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eee8f-114"><xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> を呼び出すと、追加トランザクションが開始されます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-114">Calling <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> begins an add transaction.</span></span>  <span data-ttu-id="eee8f-115">Add transaction を終了するには、<xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> または <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="eee8f-115">You should call <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to end the add transaction.</span></span> <span data-ttu-id="eee8f-116">コレクションビューには、常に新しい項目が表示されます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-116">A new item always appears in the collection view.</span></span> <span data-ttu-id="eee8f-117"><xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> が呼び出されると、ビューに適用されているフィルター処理、並べ替え、またはグループ化が新しい項目に適用されます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-117">Any filtering, sorting, or grouping that is applied to the view is applied to the new item when <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eee8f-118">次の例では、新しい項目を追加するようにユーザーに求める <xref:System.Windows.Window> を作成します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-118">The following example creates a <xref:System.Windows.Window> that prompts the user to add a new item.</span></span>  <span data-ttu-id="eee8f-119">次に、<xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> を呼び出して新しいオブジェクトを作成し、<xref:System.Windows.Window> の <xref:System.Windows.FrameworkElement.DataContext%2A> をそのオブジェクトに設定します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-119">Then it calls <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> to create a new object and sets the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Window> to that object.</span></span> <span data-ttu-id="eee8f-120">サンプル全体については、「 [IEditableCollectionView サンプルを使用したコレクションの変更](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="eee8f-120">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAddNew">
      <MemberSignature Language="C#" Value="public bool CanAddNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanAddNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanAddNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanAddNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanAddNew { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanAddNew : bool" Usage="System.ComponentModel.IEditableCollectionView.CanAddNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eee8f-121">新しい項目をコレクションに追加できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-121">Gets a value that indicates whether a new item can be added to the collection.</span></span></summary>
        <value><span data-ttu-id="eee8f-122">新しい項目をコレクションに追加できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eee8f-122"><see langword="true" /> if a new item can be added to the collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eee8f-123">次の条件に該当する場合、<xref:System.ComponentModel.IEditableCollectionView> は新しい項目を追加できます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-123">An <xref:System.ComponentModel.IEditableCollectionView> can add a new item if the following are true:</span></span>  
  
-   <span data-ttu-id="eee8f-124">基になるコレクションに項目を追加できます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-124">An item can be added to the underlying collection.</span></span>  <span data-ttu-id="eee8f-125">たとえば、コレクションが読み取り専用の場合、<xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> は `false`です。</span><span class="sxs-lookup"><span data-stu-id="eee8f-125">For example, if the collection is read-only, <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> is `false`.</span></span>  
  
-   <span data-ttu-id="eee8f-126"><xref:System.ComponentModel.IEditableCollectionView> は、コレクション内の型のオブジェクトを作成できます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-126">The <xref:System.ComponentModel.IEditableCollectionView> can create an object of the type that is in the collection.</span></span>  <span data-ttu-id="eee8f-127">たとえば、コレクションの型が <xref:System.Collections.ObjectModel.ObservableCollection%601>の場合、<xref:System.ComponentModel.IEditableCollectionView> は `T`型のオブジェクトを作成できる必要があります。</span><span class="sxs-lookup"><span data-stu-id="eee8f-127">For example, if the collection is of type <xref:System.Collections.ObjectModel.ObservableCollection%601>, the <xref:System.ComponentModel.IEditableCollectionView> must be able to create an object of type `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eee8f-128">次の例では、項目をコレクションに追加できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-128">The following example checks whether an item can be added to the collection.</span></span>  <span data-ttu-id="eee8f-129"><xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> が `false`場合、この例では、項目を追加できないことがユーザーに通知されます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-129">If <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> is `false`, the example tells the user that an item cannot be added.</span></span>  <span data-ttu-id="eee8f-130">それ以外の場合は、新しい項目を追加するようにユーザーに求めるフォームが表示されます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-130">Otherwise, it shows a form that prompts the user to add a new item.</span></span> <span data-ttu-id="eee8f-131">サンプル全体については、「 [IEditableCollectionView サンプルを使用したコレクションの変更](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="eee8f-131">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCancelEdit">
      <MemberSignature Language="C#" Value="public bool CanCancelEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanCancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanCancelEdit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanCancelEdit : bool" Usage="System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eee8f-132">コレクション ビューが保留中の変更を破棄して、編集されたオブジェクトの元の値を復元できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-132">Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</span></span></summary>
        <value><span data-ttu-id="eee8f-133">コレクション ビューが保留中の変更を破棄して、編集されたオブジェクトの元の値を復元できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eee8f-133"><see langword="true" /> if the collection view can discard pending changes and restore the original values of an edited object; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eee8f-134">現在編集されている項目の "保留中の変更" の概念をビューがサポートしている場合は、<xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> が `true` ます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-134"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `true` if the view supports the notion of "pending changes" on the currently edited item.</span></span>   <span data-ttu-id="eee8f-135">たとえば、コレクションビューは、編集された項目が <xref:System.ComponentModel.IEditableObject>を実装している場合、またはビューに変更をロールバックするために使用できる項目の状態に関する情報が含まれている場合に `true` を返すことがあります。</span><span class="sxs-lookup"><span data-stu-id="eee8f-135">For example, a collection view might return `true` if the edited item implements <xref:System.ComponentModel.IEditableObject>, or if the view has information about the item's state that it can use to roll back changes.</span></span> <span data-ttu-id="eee8f-136">ビューでオブジェクトの変更を元に戻すことができない場合は、<xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> が `false` ます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-136"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `false` if the view cannot revert changes on an object.</span></span>  <span data-ttu-id="eee8f-137">その場合は、<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> を呼び出して、ビューが編集状態を終了し、編集されたオブジェクトに対する変更を元に戻すロジックを提供します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-137">In that case, call <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> to cause the view to exit the edit state and provide logic to revert the changes on the object that was edited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eee8f-138">次の例では、<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>を呼び出す前に、編集された項目の元の値を復元できるかどうかを確認するために <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> を取得します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-138">The following example gets <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> to check whether the original values of the edited item can be restored before it calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  <span data-ttu-id="eee8f-139">値を復元できない場合は、追加のロジックを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="eee8f-139">If the values cannot be restored, you must supply additional logic to do so.</span></span>  <span data-ttu-id="eee8f-140">値がの場合、この例で <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>を呼び出すと、値が復元されます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-140">If they can be, the values are restored when the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>   <span data-ttu-id="eee8f-141">サンプル全体については、「 [IEditableCollectionView サンプルを使用したコレクションの変更](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="eee8f-141">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="abstract member CancelEdit : unit -&gt; unit" Usage="iEditableCollectionView.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eee8f-142">編集トランザクションを終了し、可能な場合は、項目の元の値を復元します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-142">Ends the edit transaction and, if possible, restores the original value to the item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eee8f-143"><xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> を `null` に設定し、コレクションビューが編集状態を終了するように <xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A> します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-143"><xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> sets <xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A> to `null` and causes the collection view to exit the edit state.</span></span>  <span data-ttu-id="eee8f-144"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> が `true`場合、<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> は編集されたオブジェクトの元の値も復元します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-144">If <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `true`, <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> also restores the original values of the edited object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eee8f-145">次の例では、<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>を呼び出す前に、編集された項目の元の値を復元できるかどうかを確認するために <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> を取得します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-145">The following example gets <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> to check whether the original values of the edited item can be restored before it calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  <span data-ttu-id="eee8f-146">値を復元できない場合は、追加のロジックを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="eee8f-146">If the values cannot be restored, you must supply additional logic to do so.</span></span>  <span data-ttu-id="eee8f-147">値がの場合、この例で <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>を呼び出すと、値が復元されます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-147">If they can be, the values are restored when the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span> <span data-ttu-id="eee8f-148">サンプル全体については、「 [IEditableCollectionView サンプルを使用したコレクションの変更](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="eee8f-148">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public void CancelNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CancelNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelNew();" />
      <MemberSignature Language="F#" Value="abstract member CancelNew : unit -&gt; unit" Usage="iEditableCollectionView.CancelNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eee8f-149">追加トランザクションを終了し、保留中の新しい項目を破棄します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-149">Ends the add transaction and discards the pending new item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eee8f-150">次の例では、新しい項目を追加するようにユーザーに求めるフォームを表示します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-150">The following example displays a form that prompts the user to add a new item.</span></span>  <span data-ttu-id="eee8f-151">ユーザーがフォームを送信した場合、この例では <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> を呼び出してコレクションに項目を追加します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-151">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> to add the item to the collection.</span></span>  <span data-ttu-id="eee8f-152">ユーザーがフォームをキャンセルした場合、この例では <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> を呼び出して項目を破棄します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-152">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to discard the item.</span></span> <span data-ttu-id="eee8f-153">サンプル全体については、「 [IEditableCollectionView サンプルを使用したコレクションの変更](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="eee8f-153">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRemove" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanRemove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRemove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRemove : bool" Usage="System.ComponentModel.IEditableCollectionView.CanRemove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eee8f-154">コレクションから項目を削除できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-154">Gets a value that indicates whether an item can be removed from the collection.</span></span></summary>
        <value><span data-ttu-id="eee8f-155">コレクションから項目を削除できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eee8f-155"><see langword="true" /> if an item can be removed from the collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eee8f-156">基になるコレクションが読み取り専用の場合は、<xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> が `false` ます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-156"><xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> is `false` if the underlying collection is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eee8f-157">次の例では、<xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> を呼び出して、コレクションから項目を削除できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-157">The following example calls <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> to check whether an item can be removed from the collection.</span></span>  <span data-ttu-id="eee8f-158">項目を削除できる場合、この例では、操作を確認するようにユーザーに要求し、ユーザーが **[はい]** をクリックした場合に <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-158">If an item can be removed, the example prompts the user to confirm the action and calls <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> if the user clicks **Yes**.</span></span> <span data-ttu-id="eee8f-159">サンプル全体については、「 [IEditableCollectionView サンプルを使用したコレクションの変更](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="eee8f-159">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#removeitem)]
 [!code-vb[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#removeitem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public void CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitEdit();" />
      <MemberSignature Language="F#" Value="abstract member CommitEdit : unit -&gt; unit" Usage="iEditableCollectionView.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eee8f-160">編集トランザクションを終了し、保留中の変更を保存します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-160">Ends the edit transaction and saves the pending changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eee8f-161">次の例では、既存の項目を編集するようにユーザーに求めるフォームを作成します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-161">The following example creates a form that prompts the user to edit an existing item.</span></span>  <span data-ttu-id="eee8f-162">ユーザーがフォームを送信した場合、この例では <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> を呼び出して、変更をコレクションに保存します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-162">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> to save the changes to the collection.</span></span>  <span data-ttu-id="eee8f-163">ユーザーがフォームをキャンセルした場合、この例では <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> を呼び出して変更を破棄します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-163">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> to discard the changes.</span></span> <span data-ttu-id="eee8f-164">サンプル全体については、「 [IEditableCollectionView サンプルを使用したコレクションの変更](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="eee8f-164">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#EditItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#edititem)]
 [!code-vb[EditingCollectionsSnippets#EditItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#edititem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitNew">
      <MemberSignature Language="C#" Value="public void CommitNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CommitNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitNew();" />
      <MemberSignature Language="F#" Value="abstract member CommitNew : unit -&gt; unit" Usage="iEditableCollectionView.CommitNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eee8f-165">追加トランザクションを終了し、保留中の新しい項目を保存します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-165">Ends the add transaction and saves the pending new item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eee8f-166"><xref:System.Windows.Data.CollectionView> に適用されるフィルター処理、並べ替え、またはグループ化は、<xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> の呼び出し時に新しい項目に適用されます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-166">Any filtering, sorting, or grouping that is applied to the <xref:System.Windows.Data.CollectionView> is applied to the new item when <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eee8f-167">次の例では、新しい項目を追加するようにユーザーに求めるフォームを表示します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-167">The following example displays a form that prompts the user to add a new item.</span></span>  <span data-ttu-id="eee8f-168">ユーザーがフォームを送信した場合、この例では <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> を呼び出してコレクションに項目を追加します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-168">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> to add the item to the collection.</span></span>  <span data-ttu-id="eee8f-169">ユーザーがフォームをキャンセルした場合、この例では <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> を呼び出して項目を破棄します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-169">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to discard the item.</span></span> <span data-ttu-id="eee8f-170">サンプル全体については、「 [IEditableCollectionView サンプルを使用したコレクションの変更](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="eee8f-170">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentAddItem">
      <MemberSignature Language="C#" Value="public object CurrentAddItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentAddItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentAddItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentAddItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentAddItem : obj" Usage="System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eee8f-171">現在の追加トランザクション処理中に追加される項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-171">Gets the item that is being added during the current add transaction.</span></span></summary>
        <value><span data-ttu-id="eee8f-172"><see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> が <see langword="true" /> の場合は追加される項目、それ以外の場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eee8f-172">The item that is being added if <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> is <see langword="true" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentEditItem">
      <MemberSignature Language="C#" Value="public object CurrentEditItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentEditItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentEditItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentEditItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentEditItem : obj" Usage="System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eee8f-173">編集されているコレクション内の項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-173">Gets the item in the collection that is being edited.</span></span></summary>
        <value><span data-ttu-id="eee8f-174"><see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> が <see langword="true" /> である場合は、編集されているコレクション内の項目。それ以外の場合は、<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eee8f-174">The item in the collection that is being edited if <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> is <see langword="true" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItem">
      <MemberSignature Language="C#" Value="public void EditItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EditItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EditItem (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EditItem(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member EditItem : obj -&gt; unit" Usage="iEditableCollectionView.EditItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="eee8f-175">編集する項目。</span><span class="sxs-lookup"><span data-stu-id="eee8f-175">The item to edit.</span></span></param>
        <summary><span data-ttu-id="eee8f-176">指定した項目の編集トランザクションを開始します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-176">Begins an edit transaction of the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eee8f-177">次の例では、既存の項目を編集するようにユーザーに求めるフォームを作成します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-177">The following example creates a form that prompts the user to edit an existing item.</span></span>  <span data-ttu-id="eee8f-178">ユーザーがフォームを送信すると、変更がコレクションにコミットされます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-178">If the user submits the form, the changes are committed to the collection.</span></span>  <span data-ttu-id="eee8f-179">ユーザーがフォームをキャンセルした場合、変更は破棄されます。</span><span class="sxs-lookup"><span data-stu-id="eee8f-179">If the user cancels the form, the changes are discarded.</span></span> <span data-ttu-id="eee8f-180">サンプル全体については、「 [IEditableCollectionView サンプルを使用したコレクションの変更](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="eee8f-180">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#EditItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#edititem)]
 [!code-vb[EditingCollectionsSnippets#EditItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#edititem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddingNew">
      <MemberSignature Language="C#" Value="public bool IsAddingNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddingNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAddingNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddingNew { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAddingNew : bool" Usage="System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eee8f-181">追加トランザクションが実行中かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-181">Gets a value that indicates whether an add transaction is in progress.</span></span></summary>
        <value><span data-ttu-id="eee8f-182">追加トランザクションが実行中の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eee8f-182"><see langword="true" /> if an add transaction is in progress; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eee8f-183">Add transaction を開始するには、<xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> を呼び出し、<xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> または <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>を呼び出して追加トランザクションを終了します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-183">You begin an add transaction by calling <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> and end the add transaction by calling <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditingItem">
      <MemberSignature Language="C#" Value="public bool IsEditingItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditingItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditingItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditingItem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEditingItem : bool" Usage="System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eee8f-184">編集トランザクションが実行中かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-184">Gets a value that indicates whether an edit transaction is in progress.</span></span></summary>
        <value><span data-ttu-id="eee8f-185">編集トランザクションが実行中の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eee8f-185"><see langword="true" /> if an edit transaction is in progress; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eee8f-186"><xref:System.ComponentModel.IEditableCollectionView.EditItem%2A> を呼び出し、<xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> または <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>を呼び出すことによってトランザクションを終了することで、編集トランザクションを開始します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-186">You begin an edit transaction by calling <xref:System.ComponentModel.IEditableCollectionView.EditItem%2A> and end the transaction by calling <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewItemPlaceholderPosition">
      <MemberSignature Language="C#" Value="public System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property NewItemPlaceholderPosition As NewItemPlaceholderPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::NewItemPlaceholderPosition NewItemPlaceholderPosition { System::ComponentModel::NewItemPlaceholderPosition get(); void set(System::ComponentModel::NewItemPlaceholderPosition value); };" />
      <MemberSignature Language="F#" Value="member this.NewItemPlaceholderPosition : System.ComponentModel.NewItemPlaceholderPosition with get, set" Usage="System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.NewItemPlaceholderPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eee8f-187">コレクション ビューにある新しい項目のプレースホルダーの位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-187">Gets or sets the position of the new item placeholder in the collection view.</span></span></summary>
        <value><span data-ttu-id="eee8f-188">コレクション ビューにある新しい項目のプレースホルダーの位置を指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="eee8f-188">One of the enumeration values that specifies the position of the new item placeholder in the collection view.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit" Usage="iEditableCollectionView.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="eee8f-189">削除するアイテムです。</span><span class="sxs-lookup"><span data-stu-id="eee8f-189">The item to remove.</span></span></param>
        <summary><span data-ttu-id="eee8f-190">指定した項目をコレクションから削除します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-190">Removes the specified item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eee8f-191">`item` がコレクションに含まれていない場合、<xref:System.ComponentModel.IEditableCollectionView.Remove%2A> は何も行いません。</span><span class="sxs-lookup"><span data-stu-id="eee8f-191">If `item` is not in the collection, <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> does nothing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eee8f-192">次の例では、<xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> を呼び出して、コレクションから項目を削除できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-192">The following example calls <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> to check whether an item can be removed from the collection.</span></span>  <span data-ttu-id="eee8f-193">項目を削除できる場合、この例では、操作を確認するようにユーザーに要求し、ユーザーが **[はい]** をクリックした場合に <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-193">If an item can be removed, the example prompts the user to confirm the action and calls <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> if the user clicks **Yes**.</span></span> <span data-ttu-id="eee8f-194">サンプル全体については、「 [IEditableCollectionView サンプルを使用したコレクションの変更](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="eee8f-194">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#removeitem)]
 [!code-vb[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#removeitem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iEditableCollectionView.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="eee8f-195">削除する項目の位置。</span><span class="sxs-lookup"><span data-stu-id="eee8f-195">The position of the item to remove.</span></span></param>
        <summary><span data-ttu-id="eee8f-196">コレクション内の指定した位置にある項目を削除します。</span><span class="sxs-lookup"><span data-stu-id="eee8f-196">Removes the item at the specified position from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eee8f-197">`index` は、コレクションではなく、コレクションビューを基準としています。</span><span class="sxs-lookup"><span data-stu-id="eee8f-197">`index` is relative to the collection view, not the collection.</span></span>  <span data-ttu-id="eee8f-198">たとえば、コレクションに10個の項目があり、そのビューに <xref:System.ComponentModel.ICollectionView.Filter%2A> が含まれていて、7つの項目が表示される場合、`index` の有効な値は 0 ~ 6 になります。</span><span class="sxs-lookup"><span data-stu-id="eee8f-198">For example, if the collection has 10 items and the view has a <xref:System.ComponentModel.ICollectionView.Filter%2A> so that 7 items appear, the valid values of `index` are 0 through 6.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eee8f-199"><paramref name="index" /> が 0 未満か、コレクション ビュー内の項目数を超えています。</span><span class="sxs-lookup"><span data-stu-id="eee8f-199"><paramref name="index" /> is less than 0 or greater than the number of items in the collection view.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
