<Type Name="PolicyHttpMessageHandler" FullName="Microsoft.Extensions.Http.PolicyHttpMessageHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="36423f670c10acb286626c42461c08ca51698a26" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75155008" /></Metadata><TypeSignature Language="C#" Value="public class PolicyHttpMessageHandler : System.Net.Http.DelegatingHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PolicyHttpMessageHandler extends System.Net.Http.DelegatingHandler" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class PolicyHttpMessageHandler&#xA;Inherits DelegatingHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class PolicyHttpMessageHandler : System::Net::Http::DelegatingHandler" />
  <TypeSignature Language="F#" Value="type PolicyHttpMessageHandler = class&#xA;    inherit DelegatingHandler" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.DelegatingHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="74268-101"><see cref="T:System.Net.Http.DelegatingHandler" /> で囲まれた要求処理を実行する <see cref="T:Polly.Policy" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="74268-101">A <see cref="T:System.Net.Http.DelegatingHandler" /> implementation that executes request processing surrounded by a <see cref="T:Polly.Policy" />.</span></span></summary>
    <remarks><para>
<span data-ttu-id="74268-102">このメッセージハンドラーの実装では、一時的なエラー処理と回復性のために、このライブラリによって提供されるポリシーの使用をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="74268-102">This message handler implementation supports the use of policies provided by the Polly library for transient-fault-handling and resiliency.</span></span>
            </para>
      <para>
<span data-ttu-id="74268-103">ここで提供されているドキュメントは、<see cref="T:System.Net.Http.IHttpClientFactory" />と共に使用する方法に焦点を合わせたものです。</span><span class="sxs-lookup"><span data-stu-id="74268-103">The documentation provided here is focused guidance for using Polly together with the <see cref="T:System.Net.Http.IHttpClientFactory" />.</span></span> <span data-ttu-id="74268-104">Polly 関するプロジェクトとそのドキュメント (https://github.com/app-vnext/Polly) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="74268-104">See the Polly project and its documentation (https://github.com/app-vnext/Polly) for authoritative information on Polly.</span></span>
            </para>
      <para>
<span data-ttu-id="74268-105"><see cref="T:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions" /> の拡張メソッドは、<see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />を作成するための便利で正しい方法として設計されています。</span><span class="sxs-lookup"><span data-stu-id="74268-105">The extension methods on <see cref="T:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions" /> are designed as a convenient and correct way to create a <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />.</span></span>
            </para>
      <para>
<span data-ttu-id="74268-106"><see cref="M:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddPolicyHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage})" /> メソッドは、任意の種類のポリシーの <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> の作成をサポートします。</span><span class="sxs-lookup"><span data-stu-id="74268-106">The <see cref="M:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddPolicyHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage})" /> method supports the creation of a <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> for any kind of policy.</span></span> <span data-ttu-id="74268-107">これには、タイムアウトやキャッシュなどの非対応のポリシーが含まれます。このポリシーでは、基になる要求を最初に失敗させる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="74268-107">This includes non-reactive policies, such as Timeout or Cache, which don't require the underlying request to fail first.</span></span>
            </para>
      <para><span data-ttu-id="74268-108">
        <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> と <see cref="T:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions" /> の便利なメソッドは、汎用 <see cref="T:Polly.IAsyncPolicy\`1" />のみ受け入れます。</span><span class="sxs-lookup"><span data-stu-id="74268-108">
        <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> and the <see cref="T:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions" /> convenience methods only accept the generic <see cref="T:Polly.IAsyncPolicy`1" />.</span></span> <span data-ttu-id="74268-109">汎用ポリシーインスタンスは、<see cref="M:Polly.Policy.TimeoutAsync``1(System.Int32)" />などの <see cref="T:Polly.Policy" /> のジェネリックメソッドを使用して作成できます。</span><span class="sxs-lookup"><span data-stu-id="74268-109">Generic policy instances can be created by using the generic methods on <see cref="T:Polly.Policy" /> such as <see cref="M:Polly.Policy.TimeoutAsync``1(System.Int32)" />.</span></span>
            </para>
      <para>
<span data-ttu-id="74268-110">既存の非ジェネリック <see cref="T:Polly.IAsyncPolicy" />を適合させるには、次のようなコードを使用します。</span><span class="sxs-lookup"><span data-stu-id="74268-110">To adapt an existing non-generic <see cref="T:Polly.IAsyncPolicy" />, use code like the following:</span></span> <example>
<span data-ttu-id="74268-111">非ジェネリックの<c>Iasyncpolicy ポリシー</c>を <see cref="T:Polly.IAsyncPolicy`1" />に変換しています。</span><span class="sxs-lookup"><span data-stu-id="74268-111">Converting a non-generic <c>IAsyncPolicy policy</c> to <see cref="T:Polly.IAsyncPolicy`1" />.</span></span>
            <code>
            policy.AsAsyncPolicy&lt;HttpResponseMessage&gt;()
            </code></example></para>
      <para>
<span data-ttu-id="74268-112"><see cref="M:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddTransientHttpErrorPolicy(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{Polly.PolicyBuilder{System.Net.Http.HttpResponseMessage},Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}})" /> メソッドは、接続エラーまたはサーバーエラー (5XX HTTP 状態コード) が原因で失敗した要求のポリシーの適用をサポートするこだわりの便利な方法です。</span><span class="sxs-lookup"><span data-stu-id="74268-112">The <see cref="M:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddTransientHttpErrorPolicy(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{Polly.PolicyBuilder{System.Net.Http.HttpResponseMessage},Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}})" /> method is an opinionated convenience method that supports the application of a policy for requests that fail due to a connection failure or server error (5XX HTTP status code).</span></span> <span data-ttu-id="74268-113">この種類の方法では、再試行、サーキットブレーカー、フォールバックなどのリアクティブポリシーのみがサポートされます。</span><span class="sxs-lookup"><span data-stu-id="74268-113">This kind of method supports only reactive policies such as Retry, Circuit-Breaker or Fallback.</span></span> <span data-ttu-id="74268-114">このメソッドは便宜上提供されています。要件を満たしていない場合は、必要に応じて独自のポリシーを作成することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="74268-114">This method is only provided for convenience; we recommend creating your own policies as needed if this does not meet your requirements.</span></span>
            </para>
      <para>
<span data-ttu-id="74268-115">HttpClient が <see cref="P:System.Net.Http.HttpClient.Timeout" />による独自のタイムアウトを提供するため、再試行やタイムアウトなどのポリシーを使用する場合は注意が必要です。</span><span class="sxs-lookup"><span data-stu-id="74268-115">Take care when using policies such as Retry or Timeout together as HttpClient provides its own timeout via <see cref="P:System.Net.Http.HttpClient.Timeout" />.</span></span>  <span data-ttu-id="74268-116">再試行とタイムアウトを組み合わせると、<see cref="P:System.Net.Http.HttpClient.Timeout" /> はすべての試行でタイムアウトとして機能します。構成シーケンスの再試行ポリシーの後に、試行ごとのタイムアウトを指定するように、ポリシーを構成することができます。</span><span class="sxs-lookup"><span data-stu-id="74268-116">When combining Retry and Timeout, <see cref="P:System.Net.Http.HttpClient.Timeout" /> will act as a timeout across all tries; a Polly Timeout policy can be configured after a Retry policy in the configuration sequence, to provide a timeout-per-try.</span></span>
            </para>
      <para>
<span data-ttu-id="74268-117">Polly によって提供されるすべてのポリシーは、長期的な方法で使用する場合に効率的になるように設計されています。</span><span class="sxs-lookup"><span data-stu-id="74268-117">All policies provided by Polly are designed to be efficient when used in a long-lived way.</span></span> <span data-ttu-id="74268-118">バルクヘッドやサーキットブレーカーなどの特定のポリシーは状態を維持し、Bulkhead またはサーキットブレーカーの状態を共有する呼び出しの範囲を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74268-118">Certain policies such as the Bulkhead and Circuit-Breaker maintain state and should be scoped across calls you wish to share the Bulkhead or Circuit-Breaker state.</span></span> <span data-ttu-id="74268-119">カスタムシナリオでポリシーとメッセージハンドラーを一緒に使用する場合は、適切な有効期間を確保するように注意してください。</span><span class="sxs-lookup"><span data-stu-id="74268-119">Take care to ensure the correct lifetimes when using policies and message handlers together in custom scenarios.</span></span> <span data-ttu-id="74268-120"><see cref="T:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions" /> によって提供される拡張メソッドは、ポリシーに長い有効期間を割り当て、ハンドラーローテーション機能がアクティブなときに使用できるようにすることを目的としています。</span><span class="sxs-lookup"><span data-stu-id="74268-120">The extension methods provided by <see cref="T:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions" /> are designed to assign a long lifetime to policies and ensure that they can be used when the handler rotation feature is active.</span></span>
            </para>
      <para>
<span data-ttu-id="74268-121"><see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> は、<see cref="T:Polly.Policy" />を実行する前にコンテキストを <see cref="T:System.Net.Http.HttpRequestMessage" /> にアタッチします (存在しない場合)。</span><span class="sxs-lookup"><span data-stu-id="74268-121">The <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> will attach a context to the <see cref="T:System.Net.Http.HttpRequestMessage" /> prior to executing a <see cref="T:Polly.Policy" />, if one does not already exist.</span></span> <span data-ttu-id="74268-122"><see cref="T:Polly.Context" /> は、<see cref="T:Polly.Policy" /> とその他のメッセージハンドラーの内部で使用するために、ポリシーに提供されます。</span><span class="sxs-lookup"><span data-stu-id="74268-122">The <see cref="T:Polly.Context" /> will be provided to the policy for use inside the <see cref="T:Polly.Policy" /> and in other message handlers.</span></span>
            </para></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PolicyHttpMessageHandler (Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt; policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Polly.IAsyncPolicy`1&lt;class System.Net.Http.HttpResponseMessage&gt; policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.PolicyHttpMessageHandler.#ctor(Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (policy As IAsyncPolicy(Of HttpResponseMessage))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PolicyHttpMessageHandler(Polly::IAsyncPolicy&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ policy);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Http.PolicyHttpMessageHandler : Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt; -&gt; Microsoft.Extensions.Http.PolicyHttpMessageHandler" Usage="new Microsoft.Extensions.Http.PolicyHttpMessageHandler policy" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="policy" Type="Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="74268-123">ポリシーです。</span><span class="sxs-lookup"><span data-stu-id="74268-123">The policy.</span></span></param>
        <summary><span data-ttu-id="74268-124">新しい<see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />を作成します。</span><span class="sxs-lookup"><span data-stu-id="74268-124">Creates a new <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PolicyHttpMessageHandler (Func&lt;System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt; policySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;class System.Net.Http.HttpRequestMessage, class Polly.IAsyncPolicy`1&lt;class System.Net.Http.HttpResponseMessage&gt;&gt; policySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.PolicyHttpMessageHandler.#ctor(System.Func{System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (policySelector As Func(Of HttpRequestMessage, IAsyncPolicy(Of HttpResponseMessage)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PolicyHttpMessageHandler(Func&lt;System::Net::Http::HttpRequestMessage ^, Polly::IAsyncPolicy&lt;System::Net::Http::HttpResponseMessage ^&gt; ^&gt; ^ policySelector);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Http.PolicyHttpMessageHandler : Func&lt;System.Net.Http.HttpRequestMessage, Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt; -&gt; Microsoft.Extensions.Http.PolicyHttpMessageHandler" Usage="new Microsoft.Extensions.Http.PolicyHttpMessageHandler policySelector" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="policySelector" Type="System.Func&lt;System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="policySelector"><span data-ttu-id="74268-125">特定の <see cref="T:System.Net.Http.HttpRequestMessage" /> に必要なポリシーを選択できる関数。</span><span class="sxs-lookup"><span data-stu-id="74268-125">A function which can select the desired policy for a given <see cref="T:System.Net.Http.HttpRequestMessage" />.</span></span></param>
        <summary><span data-ttu-id="74268-126">新しい<see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />を作成します。</span><span class="sxs-lookup"><span data-stu-id="74268-126">Creates a new <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.PolicyHttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;&#xA;override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="policyHttpMessageHandler.SendAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SendCoreAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendCoreAsync (System.Net.Http.HttpRequestMessage request, Polly.Context context, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendCoreAsync(class System.Net.Http.HttpRequestMessage request, class Polly.Context context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.PolicyHttpMessageHandler.SendCoreAsync(System.Net.Http.HttpRequestMessage,Polly.Context,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendCoreAsync(System::Net::Http::HttpRequestMessage ^ request, Polly::Context ^ context, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member SendCoreAsync : System.Net.Http.HttpRequestMessage * Polly.Context * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;&#xA;override this.SendCoreAsync : System.Net.Http.HttpRequestMessage * Polly.Context * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="policyHttpMessageHandler.SendCoreAsync (request, context, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="context" Type="Polly.Context" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="74268-127"><see cref="T:System.Net.Http.HttpRequestMessage" />。</span><span class="sxs-lookup"><span data-stu-id="74268-127">The <see cref="T:System.Net.Http.HttpRequestMessage" />.</span></span></param>
        <param name="context"><span data-ttu-id="74268-128"><see cref="T:Polly.Context" />。</span><span class="sxs-lookup"><span data-stu-id="74268-128">The <see cref="T:Polly.Context" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="74268-129"><see cref="T:System.Threading.CancellationToken" />。</span><span class="sxs-lookup"><span data-stu-id="74268-129">The <see cref="T:System.Threading.CancellationToken" />.</span></span></param>
        <summary><span data-ttu-id="74268-130"><see cref="T:Polly.Policy" /> の実行中に呼び出され、要求処理を実行します。</span><span class="sxs-lookup"><span data-stu-id="74268-130">Called inside the execution of the <see cref="T:Polly.Policy" /> to perform request processing.</span></span></summary>
        <returns><span data-ttu-id="74268-131">完了時に応答を生成する <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="74268-131">Returns a <see cref="T:System.Threading.Tasks.Task`1" /> that will yield a response when completed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
