<Type Name="SqlCommand" FullName="System.Data.SqlClient.SqlCommand">
  <Metadata><Meta Name="ms.openlocfilehash" Value="00b82bf2339abf99fb84c2610f1bac27f057a555" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83912999" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlCommand : System.Data.Common.DbCommand, ICloneable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlCommand extends System.Data.Common.DbCommand implements class System.ICloneable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlCommand sealed : System::Data::Common::DbCommand, ICloneable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type SqlCommand = class&#xA;    inherit DbCommand&#xA;    interface ICloneable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C#" Value="public sealed class SqlCommand : System.Data.Common.DbCommand" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlCommand extends System.Data.Common.DbCommand" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlCommand&#xA;Inherits DbCommand" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlCommand sealed : System::Data::Common::DbCommand" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="F#" Value="type SqlCommand = class&#xA;    inherit DbCommand" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C#" Value="public sealed class SqlCommand : System.ComponentModel.Component, ICloneable, IDisposable, System.Data.IDbCommand" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlCommand extends System.ComponentModel.Component implements class System.Data.IDbCommand, class System.ICloneable, class System.IDisposable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlCommand&#xA;Inherits Component&#xA;Implements ICloneable, IDbCommand, IDisposable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlCommand sealed : System::ComponentModel::Component, ICloneable, IDisposable, System::Data::IDbCommand" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type SqlCommand = class&#xA;    inherit Component&#xA;    interface IDbCommand&#xA;    interface IDisposable&#xA;    interface ICloneable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C#" Value="public sealed class SqlCommand : System.Data.Common.DbCommand, ICloneable, IDisposable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlCommand extends System.Data.Common.DbCommand implements class System.Data.IDbCommand, class System.ICloneable, class System.IDisposable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable, IDisposable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlCommand sealed : System::Data::Common::DbCommand, ICloneable, IDisposable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type SqlCommand = class&#xA;    inherit DbCommand&#xA;    interface IDbCommand&#xA;    interface ICloneable&#xA;    interface IDisposable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.1</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbCommand</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Drawing.Design.ToolboxItem, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Drawing.Design.ToolboxItem, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4913a-101">SQL Server データベースに対して実行する Transact-SQL ステートメントまたはストアド プロシージャを表します。</span><span class="sxs-lookup"><span data-stu-id="4913a-101">Represents a Transact-SQL statement or stored procedure to execute against a SQL Server database.</span></span> <span data-ttu-id="4913a-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="4913a-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-103"><xref:System.Data.SqlClient.SqlCommand> のインスタンスが作成されると、読み取り/書き込みプロパティが初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-103">When an instance of <xref:System.Data.SqlClient.SqlCommand> is created, the read/write properties are set to their initial values.</span></span> <span data-ttu-id="4913a-104">これらの値の一覧については、<xref:System.Data.SqlClient.SqlCommand> コンストラクターを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-104">For a list of these values, see the <xref:System.Data.SqlClient.SqlCommand> constructor.</span></span>  
  
 <span data-ttu-id="4913a-105"><xref:System.Data.SqlClient.SqlCommand> には、SQL Server データベースでコマンドを実行するための次のメソッドがあります。</span><span class="sxs-lookup"><span data-stu-id="4913a-105"><xref:System.Data.SqlClient.SqlCommand> features the following methods for executing commands at a SQL Server database:</span></span>  
  
|<span data-ttu-id="4913a-106">アイテム</span><span class="sxs-lookup"><span data-stu-id="4913a-106">Item</span></span>|<span data-ttu-id="4913a-107">説明</span><span class="sxs-lookup"><span data-stu-id="4913a-107">Description</span></span>|  
|----------|-----------------|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>|<span data-ttu-id="4913a-108">この <xref:System.Data.SqlClient.SqlCommand>によって定義された Transact-sql ステートメントまたはストアドプロシージャの非同期実行を開始します。通常は、INSERT、DELETE、UPDATE、SET ステートメントなどのコマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="4913a-108">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand>, generally executing commands such as INSERT, DELETE, UPDATE, and SET statements.</span></span> <span data-ttu-id="4913a-109"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> の各呼び出しは、通常は別のスレッドで操作を完了する <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> の呼び出しとペアにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-109">Each call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> must be paired with a call to <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> which finishes the operation, typically on a separate thread.</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>|<span data-ttu-id="4913a-110">この <xref:System.Data.SqlClient.SqlCommand> によって定義された Transact-sql ステートメントまたはストアドプロシージャの非同期実行を開始し、サーバーから1つ以上の結果セットを取得します。</span><span class="sxs-lookup"><span data-stu-id="4913a-110">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand> and retrieves one or more results sets from the server.</span></span> <span data-ttu-id="4913a-111"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> の各呼び出しは、通常は別のスレッドで操作を完了する <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> の呼び出しとペアにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-111">Each call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> must be paired with a call to <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> which finishes the operation, typically on a separate thread.</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>|<span data-ttu-id="4913a-112">この <xref:System.Data.SqlClient.SqlCommand> によって定義された Transact-SQL ステートメントまたはストアド プロシージャの非同期実行を開始します。</span><span class="sxs-lookup"><span data-stu-id="4913a-112">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand>.</span></span> <span data-ttu-id="4913a-113">`BeginExecuteXmlReader` の各呼び出しは、`EndExecuteXmlReader`の呼び出しとペアにする必要があります。これにより、通常は別のスレッドで操作が完了し、<xref:System.Xml.XmlReader> オブジェクトが返されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-113">Each call to `BeginExecuteXmlReader` must be paired with a call to `EndExecuteXmlReader`, which finishes the operation, typically on a separate thread, and returns an <xref:System.Xml.XmlReader> object.</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>|<span data-ttu-id="4913a-114">行を返すコマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="4913a-114">Executes commands that return rows.</span></span> <span data-ttu-id="4913a-115">パフォーマンスを向上させるために、<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Transact-sql `sp_executesql` システムストアドプロシージャを使用してコマンドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4913a-115">For increased performance, <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> invokes commands using the Transact-SQL `sp_executesql` system stored procedure.</span></span> <span data-ttu-id="4913a-116">そのため、Transact-sql SET ステートメントなどのコマンドを実行するために使用する場合、<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> には影響がない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-116">Therefore, <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> might not have the effect that you want if used to execute commands such as Transact-SQL SET statements.</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>|<span data-ttu-id="4913a-117">Transact-sql の INSERT、DELETE、UPDATE、SET ステートメントなどのコマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="4913a-117">Executes commands such as Transact-SQL INSERT, DELETE, UPDATE, and SET statements.</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>|<span data-ttu-id="4913a-118">データベースから単一の値 (たとえば、集計値) を取得します。</span><span class="sxs-lookup"><span data-stu-id="4913a-118">Retrieves a single value (for example, an aggregate value) from a database.</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>|<span data-ttu-id="4913a-119"><xref:System.Data.SqlClient.SqlCommand.CommandText%2A> を <xref:System.Data.SqlClient.SqlCommand.Connection%2A> に送信し、<xref:System.Xml.XmlReader> オブジェクトを構築します。</span><span class="sxs-lookup"><span data-stu-id="4913a-119">Sends the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> to the <xref:System.Data.SqlClient.SqlCommand.Connection%2A> and builds an <xref:System.Xml.XmlReader> object.</span></span>|  
  
 <span data-ttu-id="4913a-120"><xref:System.Data.SqlClient.SqlCommand.CommandText%2A> プロパティをリセットし、<xref:System.Data.SqlClient.SqlCommand> オブジェクトを再利用することができます。</span><span class="sxs-lookup"><span data-stu-id="4913a-120">You can reset the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property and reuse the <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="4913a-121">ただし、新規または前のコマンドを実行する前に、<xref:System.Data.SqlClient.SqlDataReader> を閉じる必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-121">However, you must close the <xref:System.Data.SqlClient.SqlDataReader> before you can execute a new or previous command.</span></span>  
  
 <span data-ttu-id="4913a-122"><xref:System.Data.SqlClient.SqlCommand>を実行しているメソッドによって <xref:System.Data.SqlClient.SqlException> が生成された場合、重大度レベルが19以下の場合、<xref:System.Data.SqlClient.SqlConnection> は開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="4913a-122">If a <xref:System.Data.SqlClient.SqlException> is generated by the method executing a <xref:System.Data.SqlClient.SqlCommand>, the <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less.</span></span> <span data-ttu-id="4913a-123">重大度レベルが20以上の場合、サーバーは通常、<xref:System.Data.SqlClient.SqlConnection>を閉じます。</span><span class="sxs-lookup"><span data-stu-id="4913a-123">When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>.</span></span> <span data-ttu-id="4913a-124">ただし、ユーザーは接続を再び開き、続行できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-124">However, the user can reopen the connection and continue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4913a-125">名前のない (序数とも呼ばれます) パラメーターは、SQL Server の .NET Framework Data Provider ではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="4913a-125">Nameless, also called ordinal, parameters are not supported by the .NET Framework Data Provider for SQL Server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4913a-126">次の例では、<xref:System.Data.SqlClient.SqlConnection>、<xref:System.Data.SqlClient.SqlCommand>、および <xref:System.Data.SqlClient.SqlDataReader>を作成します。</span><span class="sxs-lookup"><span data-stu-id="4913a-126">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="4913a-127">この例では、データを読み取り、コンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="4913a-127">The example reads through the data, writing it to the console.</span></span> <span data-ttu-id="4913a-128">最後に、この例では、<xref:System.Data.SqlClient.SqlDataReader> を閉じ、`Using` コードブロックを終了するときに <xref:System.Data.SqlClient.SqlConnection> を終了します。</span><span class="sxs-lookup"><span data-stu-id="4913a-128">Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader> and then the <xref:System.Data.SqlClient.SqlConnection> as it exits the `Using` code blocks.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/VB/source.vb#1)]  
  
 <span data-ttu-id="4913a-129">次の例は、さまざまな種類の SqlCommand オブジェクトを作成および実行する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4913a-129">The following sample shows how to create and execute different types of SqlCommand objects.</span></span>  
  
 <span data-ttu-id="4913a-130">まず、次のスクリプトを実行して、サンプルデータベースを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-130">First you must create the sample database, by executing the following script:</span></span>  
  
```sql
USE [master]  
GO  
  
CREATE DATABASE [MySchool]  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE procedure [dbo].[CourseExtInfo] @CourseId int  
as  
select c.CourseID,c.Title,c.Credits,d.Name as DepartmentName  
from Course as c left outer join Department as d on c.DepartmentID=d.DepartmentID  
where c.CourseID=@CourseId  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
create procedure [dbo].[DepartmentInfo] @DepartmentId int,@CourseCount int output  
as  
select @CourseCount=Count(c.CourseID)  
from course as c  
where c.DepartmentID=@DepartmentId  
  
select d.DepartmentID,d.Name,d.Budget,d.StartDate,d.Administrator  
from Department as d  
where d.DepartmentID=@DepartmentId  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
Create PROCEDURE [dbo].[GetDepartmentsOfSpecifiedYear]   
@Year int,@BudgetSum money output  
AS  
BEGIN  
        SELECT @BudgetSum=SUM([Budget])  
  FROM [MySchool].[dbo].[Department]  
  Where YEAR([StartDate])=@Year   
  
SELECT [DepartmentID]  
      ,[Name]  
      ,[Budget]  
      ,[StartDate]  
      ,[Administrator]  
  FROM [MySchool].[dbo].[Department]  
  Where YEAR([StartDate])=@Year  
  
END  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Person]([PersonID] [int] IDENTITY(1,1) NOT NULL,  
[LastName] [nvarchar](50) NOT NULL,  
[FirstName] [nvarchar](50) NOT NULL,  
[HireDate] [datetime] NULL,  
[EnrollmentDate] [datetime] NULL,  
 CONSTRAINT [PK_School.Student] PRIMARY KEY CLUSTERED   
(  
[PersonID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[StudentGrade]([EnrollmentID] [int] IDENTITY(1,1) NOT NULL,  
[CourseID] [nvarchar](10) NOT NULL,  
[StudentID] [int] NOT NULL,  
[Grade] [decimal](3, 2) NOT NULL,  
 CONSTRAINT [PK_StudentGrade] PRIMARY KEY CLUSTERED   
(  
[EnrollmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
create view [dbo].[EnglishCourse]  
as  
select c.CourseID,c.Title,c.Credits,c.DepartmentID  
from Course as c join Department as d on c.DepartmentID=d.DepartmentID  
where d.Name=N'English'  
  
GO  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
SET IDENTITY_INSERT [dbo].[Person] ON   
  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (1, N'Hu', N'Nan', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (2, N'Norman', N'Laura', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (3, N'Olivotto', N'Nino', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (4, N'Anand', N'Arturo', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (5, N'Jai', N'Damien', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (6, N'Holt', N'Roger', CAST(0x000097F100000000 AS DateTime), NULL)  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (7, N'Martin', N'Randall', CAST(0x00008B1A00000000 AS DateTime), NULL)  
SET IDENTITY_INSERT [dbo].[Person] OFF  
SET IDENTITY_INSERT [dbo].[StudentGrade] ON   
  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (1, N'C1045', 1, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (2, N'C1045', 2, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (3, N'C1045', 3, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (4, N'C1045', 4, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (5, N'C1045', 5, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (6, N'C1061', 1, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (7, N'C1061', 3, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (8, N'C1061', 4, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (9, N'C1061', 5, CAST(1.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (10, N'C2021', 1, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (11, N'C2021', 2, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (12, N'C2021', 4, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (13, N'C2021', 5, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (14, N'C2042', 1, CAST(2.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (15, N'C2042', 2, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (16, N'C2042', 3, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (17, N'C2042', 5, CAST(3.00 AS Decimal(3, 2)))  
SET IDENTITY_INSERT [dbo].[StudentGrade] OFF  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
ALTER TABLE [dbo].[StudentGrade]  WITH CHECK ADD  CONSTRAINT [FK_StudentGrade_Student] FOREIGN KEY([StudentID])  
REFERENCES [dbo].[Person] ([PersonID])  
GO  
ALTER TABLE [dbo].[StudentGrade] CHECK CONSTRAINT [FK_StudentGrade_Student]  
GO  
```  
  
 <span data-ttu-id="4913a-131">次に、次のものをコンパイルして実行します。</span><span class="sxs-lookup"><span data-stu-id="4913a-131">Next, compile and execute the following:</span></span>  
  
```csharp
using System;  
using System.Data;  
using System.Data.SqlClient;  
using System.Threading.Tasks;  
  
class Program {  
  
   static class SqlHelper {  
      // Set the connection, command, and then execute the command with non query.  
      public static Int32 ExecuteNonQuery(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         using (SqlConnection conn = new SqlConnection(connectionString)) {  
            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
               // There're three command types: StoredProcedure, Text, TableDirect. The TableDirect   
               // type is only for OLE DB.    
               cmd.CommandType = commandType;  
               cmd.Parameters.AddRange(parameters);  
  
               conn.Open();  
               return cmd.ExecuteNonQuery();  
            }  
         }  
      }  
  
      // Set the connection, command, and then execute the command and only return one value.  
      public static Object ExecuteScalar(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         using (SqlConnection conn = new SqlConnection(connectionString)) {  
            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
               cmd.CommandType = commandType;  
               cmd.Parameters.AddRange(parameters);  
  
               conn.Open();  
               return cmd.ExecuteScalar();  
            }  
         }  
      }  
  
      // Set the connection, command, and then execute the command with query and return the reader.  
      public static SqlDataReader ExecuteReader(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         SqlConnection conn = new SqlConnection(connectionString);  
  
         using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
            cmd.CommandType = commandType;  
            cmd.Parameters.AddRange(parameters);  
  
            conn.Open();  
            // When using CommandBehavior.CloseConnection, the connection will be closed when the   
            // IDataReader is closed.  
            SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.CloseConnection);  
  
            return reader;  
         }  
      }  
   }  
  
   static void Main(string[] args) {  
      String connectionString = "Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;";  
  
      CountCourses(connectionString, 2012);  
      Console.WriteLine();  
  
      Console.WriteLine("Following result is the departments that started from 2007:");  
      GetDepartments(connectionString, 2007);  
      Console.WriteLine();  
  
      Console.WriteLine("Add the credits when the credits of course is lower than 4.");  
      AddCredits(connectionString, 4);  
      Console.WriteLine();  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   static void CountCourses(String connectionString, Int32 year) {  
      String commandText = "Select Count([CourseID]) FROM [MySchool].[dbo].[Course] Where Year=@Year";  
      SqlParameter parameterYear = new SqlParameter("@Year", SqlDbType.Int);  
      parameterYear.Value = year;  
  
      Object oValue = SqlHelper.ExecuteScalar(connectionString, commandText, CommandType.Text, parameterYear);  
      Int32 count;  
      if (Int32.TryParse(oValue.ToString(), out count))  
         Console.WriteLine("There {0} {1} course{2} in {3}.", count > 1 ? "are" : "is", count, count > 1 ? "s" : null, year);  
   }  
  
   // Display the Departments that start from the specified year.  
   static void GetDepartments(String connectionString, Int32 year) {  
      String commandText = "dbo.GetDepartmentsOfSpecifiedYear";  
  
      // Specify the year of StartDate  
      SqlParameter parameterYear = new SqlParameter("@Year", SqlDbType.Int);  
      parameterYear.Value = year;  
  
      // When the direction of parameter is set as Output, you can get the value after   
      // executing the command.  
      SqlParameter parameterBudget = new SqlParameter("@BudgetSum", SqlDbType.Money);  
      parameterBudget.Direction = ParameterDirection.Output;  
  
      using (SqlDataReader reader = SqlHelper.ExecuteReader(connectionString, commandText,  
          CommandType.StoredProcedure, parameterYear, parameterBudget)) {  
         Console.WriteLine("{0,-20}{1,-20}{2,-20}{3,-20}", "Name", "Budget", "StartDate",  
             "Administrator");  
         while (reader.Read()) {  
            Console.WriteLine("{0,-20}{1,-20:C}{2,-20:d}{3,-20}", reader["Name"],  
                reader["Budget"], reader["StartDate"], reader["Administrator"]);  
         }  
      }  
      Console.WriteLine("{0,-20}{1,-20:C}", "Sum:", parameterBudget.Value);  
   }  
  
   // If credits of course is lower than the certain value, the method will add the credits.  
   static void AddCredits(String connectionString, Int32 creditsLow) {  
      String commandText = "Update [MySchool].[dbo].[Course] Set Credits=Credits+1 Where Credits<@Credits";  
  
      SqlParameter parameterCredits = new SqlParameter("@Credits", creditsLow);  
  
      Int32 rows = SqlHelper.ExecuteNonQuery(connectionString, commandText, CommandType.Text, parameterCredits);  
  
      Console.WriteLine("{0} row{1} {2} updated.", rows, rows > 1 ? "s" : null, rows > 1 ? "are" : "is");  
   }  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-132">ADO.NET でのデータの取得および変更</span><span class="sxs-lookup"><span data-stu-id="4913a-132">Retrieving and Modifying Data in ADO.NET</span></span></related>
    <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-133">SQL Server と ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4913a-133">SQL Server and ADO.NET</span></span></related>
    <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-134">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-134">ADO.NET Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4913a-135"><see cref="T:System.Data.SqlClient.SqlCommand" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4913a-135">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-136">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-136">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4913a-137"><see cref="T:System.Data.SqlClient.SqlCommand" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4913a-137">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-138">基本コンストラクターは、すべてのフィールドを既定値に初期化します。</span><span class="sxs-lookup"><span data-stu-id="4913a-138">The base constructor initializes all fields to their default values.</span></span> <span data-ttu-id="4913a-139">次の表に、<xref:System.Data.SqlClient.SqlCommand>のインスタンスのプロパティの初期値を示します。</span><span class="sxs-lookup"><span data-stu-id="4913a-139">The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.</span></span>  
  
|<span data-ttu-id="4913a-140">プロパティ</span><span class="sxs-lookup"><span data-stu-id="4913a-140">Properties</span></span>|<span data-ttu-id="4913a-141">初期値</span><span class="sxs-lookup"><span data-stu-id="4913a-141">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|<span data-ttu-id="4913a-142">空の文字列 ("")</span><span class="sxs-lookup"><span data-stu-id="4913a-142">empty string ("")</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|<span data-ttu-id="4913a-143">30</span><span class="sxs-lookup"><span data-stu-id="4913a-143">30</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|<span data-ttu-id="4913a-144">Null</span><span class="sxs-lookup"><span data-stu-id="4913a-144">Null</span></span>|  
  
 <span data-ttu-id="4913a-145">プロパティの別の呼び出しを使用して、これらのプロパティの値を変更できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-145">You can change the value for any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4913a-146">次の例では、<xref:System.Data.SqlClient.SqlCommand> を作成し、`CommandTimeout` プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-146">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets the `CommandTimeout` property.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-147">ADO.NET でのデータの取得および変更</span><span class="sxs-lookup"><span data-stu-id="4913a-147">Retrieving and Modifying Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-148">SQL Server と ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4913a-148">SQL Server and ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-149">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-149">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand cmdText" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cmdText"><span data-ttu-id="4913a-150">クエリのテキスト。</span><span class="sxs-lookup"><span data-stu-id="4913a-150">The text of the query.</span></span></param>
        <summary><span data-ttu-id="4913a-151">クエリ テキストを指定して、<see cref="T:System.Data.SqlClient.SqlCommand" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4913a-151">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class with the text of the query.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-152"><xref:System.Data.SqlClient.SqlCommand> のインスタンスが作成されると、次の読み取り/書き込みプロパティが初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-152">When an instance of <xref:System.Data.SqlClient.SqlCommand> is created, the following read/write properties are set to initial values.</span></span>  
  
|<span data-ttu-id="4913a-153">プロパティ</span><span class="sxs-lookup"><span data-stu-id="4913a-153">Properties</span></span>|<span data-ttu-id="4913a-154">初期値</span><span class="sxs-lookup"><span data-stu-id="4913a-154">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|<span data-ttu-id="4913a-155">30</span><span class="sxs-lookup"><span data-stu-id="4913a-155">30</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|<span data-ttu-id="4913a-156">null</span><span class="sxs-lookup"><span data-stu-id="4913a-156">null</span></span>|  
  
 <span data-ttu-id="4913a-157">プロパティの別の呼び出しを使用して、これらのプロパティの値を変更できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-157">You can change the value for any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4913a-158">次の例では、<xref:System.Data.SqlClient.SqlCommand>を作成し、接続文字列とコマンドテキストを渡します。</span><span class="sxs-lookup"><span data-stu-id="4913a-158">The following example creates a <xref:System.Data.SqlClient.SqlCommand>, passing in the connection string and command text.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.SqlCommand1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.SqlCommand1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-159">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-159">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-160">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-160">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-161">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-161">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="cmdText"><span data-ttu-id="4913a-162">クエリのテキスト。</span><span class="sxs-lookup"><span data-stu-id="4913a-162">The text of the query.</span></span></param>
        <param name="connection"><span data-ttu-id="4913a-163">SQL Server のインスタンスへの接続を表す <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="4913a-163">A <see cref="T:System.Data.SqlClient.SqlConnection" /> that represents the connection to an instance of SQL Server.</span></span></param>
        <summary><span data-ttu-id="4913a-164">クエリ テキストと <see cref="T:System.Data.SqlClient.SqlConnection" /> を指定して、<see cref="T:System.Data.SqlClient.SqlCommand" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4913a-164">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class with the text of the query and a <see cref="T:System.Data.SqlClient.SqlConnection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-165">次の表に、<xref:System.Data.SqlClient.SqlCommand>のインスタンスのプロパティの初期値を示します。</span><span class="sxs-lookup"><span data-stu-id="4913a-165">The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.</span></span>  
  
|<span data-ttu-id="4913a-166">プロパティ</span><span class="sxs-lookup"><span data-stu-id="4913a-166">Properties</span></span>|<span data-ttu-id="4913a-167">初期値</span><span class="sxs-lookup"><span data-stu-id="4913a-167">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|<span data-ttu-id="4913a-168">30</span><span class="sxs-lookup"><span data-stu-id="4913a-168">30</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|<span data-ttu-id="4913a-169">`connection` パラメーターの値である新しい <xref:System.Data.SqlClient.SqlConnection>。</span><span class="sxs-lookup"><span data-stu-id="4913a-169">A new <xref:System.Data.SqlClient.SqlConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="4913a-170">これらのパラメーターの値を変更するには、関連するプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-170">You can change the value for any of these parameters by setting the related property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4913a-171">次の例では、<xref:System.Data.SqlClient.SqlCommand> を作成し、そのプロパティの一部を設定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-171">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.SqlCommand2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.SqlCommand2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-172">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-172">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-173">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-173">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-174">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-174">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection, class System.Data.SqlClient.SqlTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection, transaction As SqlTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection, System::Data::SqlClient::SqlTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection * System.Data.SqlClient.SqlTransaction -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection, transaction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
        <Parameter Name="transaction" Type="System.Data.SqlClient.SqlTransaction" />
      </Parameters>
      <Docs>
        <param name="cmdText"><span data-ttu-id="4913a-175">クエリのテキスト。</span><span class="sxs-lookup"><span data-stu-id="4913a-175">The text of the query.</span></span></param>
        <param name="connection"><span data-ttu-id="4913a-176">SQL Server のインスタンスへの接続を表す <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="4913a-176">A <see cref="T:System.Data.SqlClient.SqlConnection" /> that represents the connection to an instance of SQL Server.</span></span></param>
        <param name="transaction"><span data-ttu-id="4913a-177"><see cref="T:System.Data.SqlClient.SqlCommand" /> が実行される <see cref="T:System.Data.SqlClient.SqlTransaction" />。</span><span class="sxs-lookup"><span data-stu-id="4913a-177">The <see cref="T:System.Data.SqlClient.SqlTransaction" /> in which the <see cref="T:System.Data.SqlClient.SqlCommand" /> executes.</span></span></param>
        <summary><span data-ttu-id="4913a-178">クエリのテキスト、<see cref="T:System.Data.SqlClient.SqlConnection" />、および <see cref="T:System.Data.SqlClient.SqlTransaction" /> を指定して、<see cref="T:System.Data.SqlClient.SqlCommand" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4913a-178">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class with the text of the query, a <see cref="T:System.Data.SqlClient.SqlConnection" />, and the <see cref="T:System.Data.SqlClient.SqlTransaction" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-179">次の表に、<xref:System.Data.SqlClient.SqlCommand>のインスタンスのプロパティの初期値を示します。</span><span class="sxs-lookup"><span data-stu-id="4913a-179">The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.</span></span>  
  
|<span data-ttu-id="4913a-180">プロパティ</span><span class="sxs-lookup"><span data-stu-id="4913a-180">Properties</span></span>|<span data-ttu-id="4913a-181">初期値</span><span class="sxs-lookup"><span data-stu-id="4913a-181">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|<span data-ttu-id="4913a-182">30</span><span class="sxs-lookup"><span data-stu-id="4913a-182">30</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|<span data-ttu-id="4913a-183">`connection` パラメーターの値である新しい <xref:System.Data.SqlClient.SqlConnection>。</span><span class="sxs-lookup"><span data-stu-id="4913a-183">A new <xref:System.Data.SqlClient.SqlConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="4913a-184">これらのパラメーターの値を変更するには、関連するプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-184">You can change the value for any of these parameters by setting the related property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-185">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-185">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-186">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-186">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-187">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-187">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction, System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection, class System.Data.SqlClient.SqlTransaction transaction, valuetype System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection, transaction As SqlTransaction, columnEncryptionSetting As SqlCommandColumnEncryptionSetting)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection, System::Data::SqlClient::SqlTransaction ^ transaction, System::Data::SqlClient::SqlCommandColumnEncryptionSetting columnEncryptionSetting);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection * System.Data.SqlClient.SqlTransaction * System.Data.SqlClient.SqlCommandColumnEncryptionSetting -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection, transaction, columnEncryptionSetting)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" Index="0" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" Index="1" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="transaction" Type="System.Data.SqlClient.SqlTransaction" Index="2" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="columnEncryptionSetting" Type="System.Data.SqlClient.SqlCommandColumnEncryptionSetting" Index="3" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cmdText"><span data-ttu-id="4913a-188">クエリのテキスト。</span><span class="sxs-lookup"><span data-stu-id="4913a-188">The text of the query.</span></span></param>
        <param name="connection"><span data-ttu-id="4913a-189">SQL Server のインスタンスへの接続を表す <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="4913a-189">A <see cref="T:System.Data.SqlClient.SqlConnection" /> that represents the connection to an instance of SQL Server.</span></span></param>
        <param name="transaction"><span data-ttu-id="4913a-190"><see cref="T:System.Data.SqlClient.SqlTransaction" /> が実行される <see cref="T:System.Data.SqlClient.SqlCommand" /> 。</span><span class="sxs-lookup"><span data-stu-id="4913a-190">The <see cref="T:System.Data.SqlClient.SqlTransaction" /> in which the <see cref="T:System.Data.SqlClient.SqlCommand" /> executes.</span></span></param>
        <param name="columnEncryptionSetting"><span data-ttu-id="4913a-191">暗号化の設定。</span><span class="sxs-lookup"><span data-stu-id="4913a-191">The encryption setting.</span></span> <span data-ttu-id="4913a-192">詳細については、「[Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-192">For more information, see [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span></span></param>
        <summary><span data-ttu-id="4913a-193">指定されたコマンド テキスト、接続、トランザクション、暗号化の設定で、<see cref="T:System.Data.SqlClient.SqlCommand" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4913a-193">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class with specified command text, connection, transaction, and encryption setting.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteNonQuery">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4913a-194">この <see cref="T:System.Data.SqlClient.SqlCommand" /> によって定義された Transact-SQL ステートメントまたはストアド プロシージャの非同期実行を開始します。</span><span class="sxs-lookup"><span data-stu-id="4913a-194">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-195">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-195">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteNonQuery">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteNonQuery () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteNonQuery : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4913a-196">この <see cref="T:System.Data.SqlClient.SqlCommand" /> によって定義された Transact-SQL ステートメントまたはストアド プロシージャの非同期実行を開始します。</span><span class="sxs-lookup"><span data-stu-id="4913a-196">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span></summary>
        <returns><span data-ttu-id="4913a-197">結果のポーリング、待機、またはその両方に使用する <see cref="T:System.IAsyncResult" />。この値は、影響を受けた行数を返す <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> を呼び出す場合にも必要となります。</span><span class="sxs-lookup"><span data-stu-id="4913a-197">An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />, which returns the number of affected rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-198"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> メソッドは、ステートメントの実行中に他のタスクを同時に実行できるように、行を返さない [!INCLUDE[tsql](~/includes/tsql-md.md)] ステートメントまたはストアドプロシージャを非同期に実行するプロセスを開始します。</span><span class="sxs-lookup"><span data-stu-id="4913a-198">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method starts the process of asynchronously executing a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="4913a-199">ステートメントが完了したら、開発者は <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> メソッドを呼び出して操作を完了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-199">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method to finish the operation.</span></span> <span data-ttu-id="4913a-200"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> メソッドは直ちに戻りますが、コードが対応する <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> メソッド呼び出しを実行するまで、同じ <xref:System.Data.SqlClient.SqlCommand> オブジェクトに対して同期または非同期実行を開始する他の呼び出しを実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="4913a-200">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="4913a-201">コマンドの実行が完了する前に <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> を呼び出すと、実行が完了するまで <xref:System.Data.SqlClient.SqlCommand> オブジェクトがブロックされます。</span><span class="sxs-lookup"><span data-stu-id="4913a-201">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="4913a-202">コマンドテキストとパラメーターはサーバーに同期的に送信されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-202">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="4913a-203">大きなコマンドまたは多数のパラメーターが送信された場合、このメソッドは書き込み中にブロックする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-203">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="4913a-204">コマンドが送信された後、メソッドは、サーバーからの応答を待たずにすぐに制御を戻します。つまり、読み取りは非同期です。</span><span class="sxs-lookup"><span data-stu-id="4913a-204">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span>  
  
 <span data-ttu-id="4913a-205">このオーバーロードではコールバックプロシージャがサポートされないため、開発者は、<xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> メソッドによって返された <xref:System.IAsyncResult> の <xref:System.IAsyncResult.IsCompleted%2A> プロパティを使用して、コマンドが完了したかどうかを判断するためにポーリングを行う必要があります。または、返された <xref:System.IAsyncResult>の <xref:System.IAsyncResult.AsyncWaitHandle%2A> プロパティを使用して、1つまたは複数のコマンドが完了するまで待機します。</span><span class="sxs-lookup"><span data-stu-id="4913a-205">Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.</span></span>  

 <span data-ttu-id="4913a-206">このメソッドは、<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> プロパティを無視します。</span><span class="sxs-lookup"><span data-stu-id="4913a-206">This method ignores the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="4913a-207">次のコンソールアプリケーションは、 **AdventureWorks**サンプルデータベース内に更新データを作成し、その作業を非同期に実行します。</span><span class="sxs-lookup"><span data-stu-id="4913a-207">The following console application creates updates data within the **AdventureWorks** sample database, doing its work asynchronously.</span></span> <span data-ttu-id="4913a-208">長時間にわたるプロセスをエミュレートするために、この例では、コマンド テキスト内に WAITFOR ステートメントを挿入します。</span><span class="sxs-lookup"><span data-stu-id="4913a-208">In order to emulate a long-running process, this example inserts a WAITFOR statement in the command text.</span></span> <span data-ttu-id="4913a-209">通常は、コマンドの実行速度が遅くなることはありませんが、この場合、非同期動作を簡単に示すことができます。</span><span class="sxs-lookup"><span data-stu-id="4913a-209">Normally, you would not take efforts to make your commands run slower, but doing this in this case makes it easier to demonstrate the asynchronous behavior.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQuery/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQuery/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-210"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-210">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-211">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-211">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-212">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-212">-or-</span></span>

<span data-ttu-id="4913a-213"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-213">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-214">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-214">-or-</span></span>

<span data-ttu-id="4913a-215"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-215">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-216">コマンド テキストの実行中に発生したエラー。</span><span class="sxs-lookup"><span data-stu-id="4913a-216">Any error that occurred while executing the command text.</span></span>  

<span data-ttu-id="4913a-217">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-217">-or-</span></span>

<span data-ttu-id="4913a-218">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-218">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-219">ストリーミングの詳細については、 [「SqlClient ストリーミング サポート」](/dotnet/framework/data/adonet/sqlclient-streaming-support)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-219">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-220">名前と値のペア "Asynchronous Processing=true" が、この <see cref="T:System.Data.SqlClient.SqlCommand" /> の接続を定義する接続文字列に含まれていませんでした。</span><span class="sxs-lookup"><span data-stu-id="4913a-220">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span>  

<span data-ttu-id="4913a-221">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-221">-or-</span></span>

<span data-ttu-id="4913a-222">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-222">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-223">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-223">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-224">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-224">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-225">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-225">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-226">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-226">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-227">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-227">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-228">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-228">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-229">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-229">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-230">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-230">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteNonQuery">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteNonQuery (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteNonQuery(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteNonQuery (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteNonQuery(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteNonQuery : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteNonQuery (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="stateObject" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="4913a-231">コマンドの実行が完了したときに呼び出される <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="4913a-231">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the command's execution has completed.</span></span> <span data-ttu-id="4913a-232">コールバックが不要である場合は、<see langword="null" /> (Microsoft Visual Basic の場合は <see langword="Nothing" />) を渡します。</span><span class="sxs-lookup"><span data-stu-id="4913a-232">Pass <see langword="null" /> (<see langword="Nothing" /> in Microsoft Visual Basic) to indicate that no callback is required.</span></span></param>
        <param name="stateObject"><span data-ttu-id="4913a-233">コールバック プロシージャに渡されるユーザー定義の状態オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4913a-233">A user-defined state object that is passed to the callback procedure.</span></span> <span data-ttu-id="4913a-234">このオブジェクトは、コールバック プロシージャ内から、<see cref="P:System.IAsyncResult.AsyncState" /> プロパティを使用して取得します。</span><span class="sxs-lookup"><span data-stu-id="4913a-234">Retrieve this object from within the callback procedure using the <see cref="P:System.IAsyncResult.AsyncState" /> property.</span></span></param>
        <summary><span data-ttu-id="4913a-235">引数に指定されたコールバック プロシージャと状態情報に基づき、この <see cref="T:System.Data.SqlClient.SqlCommand" /> によって定義された Transact-SQL ステートメントまたはストアド プロシージャの非同期実行を開始します。</span><span class="sxs-lookup"><span data-stu-id="4913a-235">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />, given a callback procedure and state information.</span></span></summary>
        <returns><span data-ttu-id="4913a-236">結果のポーリング、待機、またはその両方に使用する <see cref="T:System.IAsyncResult" />。この値は、影響を受けた行数を返す <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> を呼び出す場合にも必要となります。</span><span class="sxs-lookup"><span data-stu-id="4913a-236">An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />, which returns the number of affected rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-237"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> メソッドは、ステートメントの実行中に他のタスクを同時に実行できるように、行を返さない Transact-sql ステートメントまたはストアドプロシージャを非同期に実行するプロセスを開始します。</span><span class="sxs-lookup"><span data-stu-id="4913a-237">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="4913a-238">ステートメントが完了したら、開発者は <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> メソッドを呼び出して操作を完了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-238">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method to finish the operation.</span></span> <span data-ttu-id="4913a-239"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> メソッドは直ちに戻りますが、コードが対応する <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> メソッド呼び出しを実行するまで、同じ <xref:System.Data.SqlClient.SqlCommand> オブジェクトに対して同期または非同期実行を開始する他の呼び出しを実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="4913a-239">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="4913a-240">コマンドの実行が完了する前に <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> を呼び出すと、実行が完了するまで <xref:System.Data.SqlClient.SqlCommand> オブジェクトがブロックされます。</span><span class="sxs-lookup"><span data-stu-id="4913a-240">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="4913a-241">`callback` パラメーターを使用すると、ステートメントが完了したときに呼び出される <xref:System.AsyncCallback> デリゲートを指定できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-241">The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed.</span></span> <span data-ttu-id="4913a-242">このデリゲートプロシージャ内、またはアプリケーション内の他の任意の場所から、<xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="4913a-242">You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method from within this delegate procedure, or from any other location within your application.</span></span> <span data-ttu-id="4913a-243">また、`asyncStateObject` パラメーターに任意のオブジェクトを渡すことができ、コールバックプロシージャは <xref:System.IAsyncResult.AsyncState%2A> プロパティを使用してこの情報を取得できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-243">In addition, you can pass any object in the `asyncStateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.</span></span>  
  
 <span data-ttu-id="4913a-244">コマンドテキストとパラメーターはサーバーに同期的に送信されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-244">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="4913a-245">大きなコマンドまたは多数のパラメーターが送信された場合、このメソッドは書き込み中にブロックする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-245">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="4913a-246">コマンドが送信された後、メソッドは、サーバーからの応答を待たずにすぐに制御を戻します。つまり、読み取りは非同期です。</span><span class="sxs-lookup"><span data-stu-id="4913a-246">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span>  
  
 <span data-ttu-id="4913a-247">コールバックプロシージャは Microsoft .NET 共通言語ランタイムによって提供されるバックグラウンドスレッド内から実行されるため、アプリケーション内でスレッド間の相互作用を処理するには、厳密なアプローチをとることが非常に重要です。</span><span class="sxs-lookup"><span data-stu-id="4913a-247">Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</span></span> <span data-ttu-id="4913a-248">たとえば、コールバックプロシージャ内からフォームの内容を操作することはできません。フォームを更新する必要がある場合は、作業を行うためにフォームのスレッドに戻す必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-248">For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work.</span></span> <span data-ttu-id="4913a-249">このトピックの例では、この動作について説明します。</span><span class="sxs-lookup"><span data-stu-id="4913a-249">The example in this topic demonstrates this behavior.</span></span>  
  
 <span data-ttu-id="4913a-250">操作の実行中に発生したすべてのエラーは、コールバックプロシージャで例外としてスローされます。</span><span class="sxs-lookup"><span data-stu-id="4913a-250">All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</span></span> <span data-ttu-id="4913a-251">この例外は、メインアプリケーションではなく、コールバックプロシージャで処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-251">You must handle the exception in the callback procedure, not in the main application.</span></span> <span data-ttu-id="4913a-252">コールバックプロシージャでの例外処理の詳細については、このトピックの例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-252">See the example in this topic for additional information on handling exceptions in the callback procedure.</span></span>  

 <span data-ttu-id="4913a-253">このメソッドは、<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> プロパティを無視します。</span><span class="sxs-lookup"><span data-stu-id="4913a-253">This method ignores the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="4913a-254">次の Windows アプリケーションは、<xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> メソッドの使用方法を示しています。これは、数秒の遅延を含む Transact-sql ステートメントを実行する (長時間実行されるコマンドをエミュレートする) ことを示しています。</span><span class="sxs-lookup"><span data-stu-id="4913a-254">The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method, executing a Transact-SQL statement that includes a delay of several seconds (emulating a long-running command).</span></span>  
  
 <span data-ttu-id="4913a-255">この例では、多くの重要な手法を示します。</span><span class="sxs-lookup"><span data-stu-id="4913a-255">This example demonstrates many important techniques.</span></span> <span data-ttu-id="4913a-256">これには、別のスレッドからフォームと対話するメソッドの呼び出しが含まれます。</span><span class="sxs-lookup"><span data-stu-id="4913a-256">This includes calling a method that interacts with the form from a separate thread.</span></span> <span data-ttu-id="4913a-257">また、この例では、ユーザーがコマンドを同時に複数回実行できないようにする方法と、コールバックプロシージャが呼び出される前にフォームが終了しないようにする方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="4913a-257">In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</span></span>  
  
 <span data-ttu-id="4913a-258">この例をセットアップするには、新しい Windows アプリケーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="4913a-258">To set up this example, create a new Windows application.</span></span> <span data-ttu-id="4913a-259">フォームに <xref:System.Windows.Forms.Button> コントロールと <xref:System.Windows.Forms.Label> コントロールを配置します (各コントロールの既定の名前を受け入れます)。</span><span class="sxs-lookup"><span data-stu-id="4913a-259">Put a <xref:System.Windows.Forms.Button> control and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control).</span></span> <span data-ttu-id="4913a-260">次のコードをフォームのクラスに追加し、環境に合わせて必要に応じて接続文字列を変更します。</span><span class="sxs-lookup"><span data-stu-id="4913a-260">Add the following code to the form's class, modifying the connection string as needed for your environment.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQueryForm/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQueryForm/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-261"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-261">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-262">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-262">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-263">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-263">-or-</span></span>

<span data-ttu-id="4913a-264"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-264">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-265">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-265">-or-</span></span>

<span data-ttu-id="4913a-266"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-266">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-267">コマンド テキストの実行中に発生したエラー。</span><span class="sxs-lookup"><span data-stu-id="4913a-267">Any error that occurred while executing the command text.</span></span>  

<span data-ttu-id="4913a-268">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-268">-or-</span></span>

<span data-ttu-id="4913a-269">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-269">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-270">ストリーミングの詳細については、 [「SqlClient ストリーミング サポート」](/dotnet/framework/data/adonet/sqlclient-streaming-support)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-270">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-271">名前と値のペア "Asynchronous Processing=true" が、この <see cref="T:System.Data.SqlClient.SqlCommand" /> の接続を定義する接続文字列に含まれていませんでした。</span><span class="sxs-lookup"><span data-stu-id="4913a-271">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span>  

<span data-ttu-id="4913a-272">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-272">-or-</span></span>

<span data-ttu-id="4913a-273">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-273">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-274">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-274">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-275">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-275">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-276">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-276">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-277">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-277">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-278">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-278">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-279">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-279">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-280">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-280">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-281">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-281">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4913a-282">この <see cref="T:System.Data.SqlClient.SqlCommand" /> で定義された Transact-SQL ステートメントまたはストアド プロシージャの非同期実行を開始し、サーバーから 1 つ以上の結果を取得します。</span><span class="sxs-lookup"><span data-stu-id="4913a-282">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />, and retrieves one or more result sets from the server.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-283">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-283">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4913a-284">この <see cref="T:System.Data.SqlClient.SqlCommand" /> で定義された Transact-SQL ステートメントまたはストアド プロシージャの非同期実行を開始し、サーバーから 1 つ以上の結果を取得します。</span><span class="sxs-lookup"><span data-stu-id="4913a-284">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />, and retrieves one or more result sets from the server.</span></span></summary>
        <returns><span data-ttu-id="4913a-285">結果のポーリング、待機、またはその両方に使用する <see cref="T:System.IAsyncResult" />。この値は <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> を呼び出すときにも必要となります。これによって返された <see cref="T:System.Data.SqlClient.SqlDataReader" /> のインスタンスを使用して、返された行を取得できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-285">An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, which returns a <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance that can be used to retrieve the returned rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-286"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> メソッドは、ステートメントの実行中に他のタスクを同時に実行できるように、行を返す Transact-sql ステートメントまたはストアドプロシージャを非同期に実行するプロセスを開始します。</span><span class="sxs-lookup"><span data-stu-id="4913a-286">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="4913a-287">ステートメントが完了したら、開発者は <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> メソッドを呼び出して操作を終了し、コマンドによって返された <xref:System.Data.SqlClient.SqlDataReader> を取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-287">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command.</span></span> <span data-ttu-id="4913a-288"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> メソッドは直ちに戻りますが、コードが対応する <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> メソッド呼び出しを実行するまで、同じ <xref:System.Data.SqlClient.SqlCommand> オブジェクトに対して同期または非同期実行を開始する他の呼び出しを実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="4913a-288">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="4913a-289">コマンドの実行が完了する前に <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> を呼び出すと、実行が完了するまで <xref:System.Data.SqlClient.SqlCommand> オブジェクトがブロックされます。</span><span class="sxs-lookup"><span data-stu-id="4913a-289">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="4913a-290">コマンドテキストとパラメーターはサーバーに同期的に送信されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-290">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="4913a-291">大きなコマンドまたは多数のパラメーターが送信された場合、このメソッドは書き込み中にブロックする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-291">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="4913a-292">コマンドが送信された後、メソッドは、サーバーからの応答を待たずにすぐに制御を戻します。つまり、読み取りは非同期です。</span><span class="sxs-lookup"><span data-stu-id="4913a-292">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span> <span data-ttu-id="4913a-293">コマンドの実行は非同期ですが、値のフェッチはまだ同期されています。</span><span class="sxs-lookup"><span data-stu-id="4913a-293">Although command execution is asynchronous, value fetching is still synchronous.</span></span> <span data-ttu-id="4913a-294">これは、より多くのデータが必要で、基になるネットワークの読み取り操作がブロックされる場合に、<xref:System.Data.SqlClient.SqlDataReader.Read%2A> の呼び出しがブロックされる可能性があることを意味します。</span><span class="sxs-lookup"><span data-stu-id="4913a-294">This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.</span></span>  
  
 <span data-ttu-id="4913a-295">このオーバーロードではコールバックプロシージャがサポートされないため、開発者は、<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> メソッドによって返された <xref:System.IAsyncResult> の <xref:System.IAsyncResult.IsCompleted%2A> プロパティを使用して、コマンドが完了したかどうかを判断するためにポーリングを行う必要があります。または、返された <xref:System.IAsyncResult>の <xref:System.IAsyncResult.AsyncWaitHandle%2A> プロパティを使用して、1つまたは複数のコマンドが完了するまで待機します。</span><span class="sxs-lookup"><span data-stu-id="4913a-295">Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.</span></span>  
  
 <span data-ttu-id="4913a-296"><xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> または <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> を使用して XML データにアクセスする場合、SQL Server は、2033文字を超える XML 結果をそれぞれ2033文字の複数の行に返します。</span><span class="sxs-lookup"><span data-stu-id="4913a-296">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="4913a-297">この動作を回避するには、<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> または <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> を使用して FOR XML クエリを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4913a-297">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span>

 <span data-ttu-id="4913a-298">このメソッドは、<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> プロパティを無視します。</span><span class="sxs-lookup"><span data-stu-id="4913a-298">This method ignores the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="4913a-299">次のコンソールアプリケーションでは、データリーダーを非同期に取得するプロセスを開始します。</span><span class="sxs-lookup"><span data-stu-id="4913a-299">The following console application starts the process of retrieving a data reader asynchronously.</span></span> <span data-ttu-id="4913a-300">結果を待機している間、この単純なアプリケーションはループ内に存在し、<xref:System.IAsyncResult.IsCompleted%2A> のプロパティ値を調査します。</span><span class="sxs-lookup"><span data-stu-id="4913a-300">While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value.</span></span> <span data-ttu-id="4913a-301">プロセスが完了するとすぐに、コードは <xref:System.Data.SqlClient.SqlDataReader> を取得し、その内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="4913a-301">As soon as the process has completed, the code retrieves the <xref:System.Data.SqlClient.SqlDataReader> and displays its contents.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReader/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-302"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-302">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-303">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-303">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-304">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-304">-or-</span></span>

<span data-ttu-id="4913a-305"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-305">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-306">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-306">-or-</span></span>

<span data-ttu-id="4913a-307"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-307">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-308">コマンド テキストの実行中に発生したエラー。</span><span class="sxs-lookup"><span data-stu-id="4913a-308">Any error that occurred while executing the command text.</span></span>  

<span data-ttu-id="4913a-309">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-309">-or-</span></span>

<span data-ttu-id="4913a-310">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-310">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-311">ストリーミングの詳細については、 [「SqlClient ストリーミング サポート」](/dotnet/framework/data/adonet/sqlclient-streaming-support)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-311">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-312">名前と値のペア "Asynchronous Processing=true" が、この <see cref="T:System.Data.SqlClient.SqlCommand" /> の接続を定義する接続文字列に含まれていませんでした。</span><span class="sxs-lookup"><span data-stu-id="4913a-312">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span>  

<span data-ttu-id="4913a-313">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-313">-or-</span></span>

<span data-ttu-id="4913a-314">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-314">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-315">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-315">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-316">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-316">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-317">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-317">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-318">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-318">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-319">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-319">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-320">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-320">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-321">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-321">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-322">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-322">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (behavior As CommandBehavior) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : System.Data.CommandBehavior -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="4913a-323">ステートメントの実行とデータ取得に対するオプションを指定する <see cref="T:System.Data.CommandBehavior" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="4913a-323">One of the <see cref="T:System.Data.CommandBehavior" /> values, indicating options for statement execution and data retrieval.</span></span></param>
        <summary><span data-ttu-id="4913a-324"><see cref="T:System.Data.CommandBehavior" /> のいずれかの値を使用し、この <see cref="T:System.Data.SqlClient.SqlCommand" /> によって定義された Transact-SQL ステートメントまたはストアド プロシージャの非同期実行を開始します。</span><span class="sxs-lookup"><span data-stu-id="4913a-324">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="4913a-325">結果のポーリング、待機、またはその両方に使用する <see cref="T:System.IAsyncResult" />。この値は <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> を呼び出すときにも必要となります。これによって返された <see cref="T:System.Data.SqlClient.SqlDataReader" /> のインスタンスを使用して、返された行を取得できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-325">An <see cref="T:System.IAsyncResult" /> that can be used to poll, wait for results, or both; this value is also needed when invoking <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, which returns a <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance that can be used to retrieve the returned rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-326"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> メソッドは、ステートメントの実行中に他のタスクを同時に実行できるように、行を返す Transact-sql ステートメントまたはストアドプロシージャを非同期に実行するプロセスを開始します。</span><span class="sxs-lookup"><span data-stu-id="4913a-326">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="4913a-327">ステートメントが完了したら、開発者は <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> メソッドを呼び出して操作を終了し、コマンドによって返された <xref:System.Data.SqlClient.SqlDataReader> を取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-327">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command.</span></span> <span data-ttu-id="4913a-328"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> メソッドは直ちに戻りますが、コードが対応する <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> メソッド呼び出しを実行するまで、同じ <xref:System.Data.SqlClient.SqlCommand> オブジェクトに対して同期または非同期実行を開始する他の呼び出しを実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="4913a-328">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="4913a-329">コマンドの実行が完了する前に <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> を呼び出すと、実行が完了するまで <xref:System.Data.SqlClient.SqlCommand> オブジェクトがブロックされます。</span><span class="sxs-lookup"><span data-stu-id="4913a-329">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="4913a-330">`behavior` パラメーターを使用すると、コマンドとその接続の動作を制御するオプションを指定できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-330">The `behavior` parameter lets you specify options that control the behavior of the command and its connection.</span></span> <span data-ttu-id="4913a-331">これらの値は、(プログラミング言語の `OR` 演算子を使用して) 組み合わせることができます。通常、開発者は、`CommandBehavior.CloseConnection` 値を使用して、<xref:System.Data.SqlClient.SqlDataReader> が閉じられたときに、ランタイムによって接続が閉じられるようにします。</span><span class="sxs-lookup"><span data-stu-id="4913a-331">These values can be combined together (using the programming language's `OR` operator); generally, developers use the `CommandBehavior.CloseConnection` value to make sure that the connection is closed by the runtime when the <xref:System.Data.SqlClient.SqlDataReader> is closed.</span></span>  
  
 <span data-ttu-id="4913a-332">コマンドテキストとパラメーターはサーバーに同期的に送信されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-332">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="4913a-333">大きなコマンドまたは多数のパラメーターが送信された場合、このメソッドは書き込み中にブロックする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-333">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="4913a-334">コマンドが送信された後、メソッドは、サーバーからの応答を待たずにすぐに制御を戻します。つまり、読み取りは非同期です。</span><span class="sxs-lookup"><span data-stu-id="4913a-334">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span> <span data-ttu-id="4913a-335">コマンドの実行は非同期ですが、値のフェッチはまだ同期されています。</span><span class="sxs-lookup"><span data-stu-id="4913a-335">Although command execution is asynchronous, value fetching is still synchronous.</span></span> <span data-ttu-id="4913a-336">これは、より多くのデータが必要で、基になるネットワークの読み取り操作がブロックされる場合に、<xref:System.Data.SqlClient.SqlDataReader.Read%2A> の呼び出しがブロックされる可能性があることを意味します。</span><span class="sxs-lookup"><span data-stu-id="4913a-336">This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.</span></span>  
  
 <span data-ttu-id="4913a-337">このオーバーロードではコールバックプロシージャがサポートされないため、開発者は、<xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> メソッドによって返された <xref:System.IAsyncResult> の <xref:System.IAsyncResult.IsCompleted%2A> プロパティを使用して、コマンドが完了したかどうかを判断するためにポーリングを行う必要があります。または、返された <xref:System.IAsyncResult>の <xref:System.IAsyncResult.AsyncWaitHandle%2A> プロパティを使用して、1つまたは複数のコマンドが完了するまで待機します。</span><span class="sxs-lookup"><span data-stu-id="4913a-337">Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.</span></span>  
  
 <span data-ttu-id="4913a-338"><xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> または <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> を使用して XML データにアクセスする場合、SQL Server は、2033文字を超える XML 結果をそれぞれ2033文字の複数の行に返します。</span><span class="sxs-lookup"><span data-stu-id="4913a-338">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="4913a-339">この動作を回避するには、<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> または <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> を使用して FOR XML クエリを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4913a-339">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span>

 <span data-ttu-id="4913a-340">このメソッドは、<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> プロパティを無視します。</span><span class="sxs-lookup"><span data-stu-id="4913a-340">This method ignores the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property.</span></span>
   
  
## Examples  
 <span data-ttu-id="4913a-341">次のコンソールアプリケーションでは、データリーダーを非同期に取得するプロセスを開始します。</span><span class="sxs-lookup"><span data-stu-id="4913a-341">The following console application starts the process of retrieving a data reader asynchronously.</span></span> <span data-ttu-id="4913a-342">結果を待機している間、この単純なアプリケーションはループ内に存在し、<xref:System.IAsyncResult.IsCompleted%2A> のプロパティ値を調査します。</span><span class="sxs-lookup"><span data-stu-id="4913a-342">While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value.</span></span> <span data-ttu-id="4913a-343">プロセスが完了すると、コードは <xref:System.Data.SqlClient.SqlDataReader> を取得し、その内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="4913a-343">Once the process has completed, the code retrieves the <xref:System.Data.SqlClient.SqlDataReader> and displays its contents.</span></span>  
  
 <span data-ttu-id="4913a-344">また、この例では、behavior パラメーターに `CommandBehavior.CloseConnection` と `CommandBehavior.SingleRow` の値を渡して、返された <xref:System.Data.SqlClient.SqlDataReader> を閉じた状態で接続を閉じ、単一行の結果を最適化します。</span><span class="sxs-lookup"><span data-stu-id="4913a-344">This example also passes the `CommandBehavior.CloseConnection` and `CommandBehavior.SingleRow` values in the behavior parameter, causing the connection to be closed with the returned <xref:System.Data.SqlClient.SqlDataReader> is closed, and to optimize for a single row result.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncSimple/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncSimple/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-345"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-345">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-346">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-346">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-347">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-347">-or-</span></span>

<span data-ttu-id="4913a-348"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-348">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-349">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-349">-or-</span></span>

<span data-ttu-id="4913a-350"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-350">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-351">コマンド テキストの実行中に発生したエラー。</span><span class="sxs-lookup"><span data-stu-id="4913a-351">Any error that occurred while executing the command text.</span></span>  

<span data-ttu-id="4913a-352">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-352">-or-</span></span>

<span data-ttu-id="4913a-353">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-353">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-354">ストリーミングの詳細については、 [「SqlClient ストリーミング サポート」](/dotnet/framework/data/adonet/sqlclient-streaming-support)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-354">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-355">名前と値のペア "Asynchronous Processing=true" が、この <see cref="T:System.Data.SqlClient.SqlCommand" /> の接続を定義する接続文字列に含まれていませんでした。</span><span class="sxs-lookup"><span data-stu-id="4913a-355">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span>  

<span data-ttu-id="4913a-356">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-356">-or-</span></span>

<span data-ttu-id="4913a-357">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-357">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-358">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-358">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-359">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-359">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-360">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-360">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-361">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-361">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-362">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-362">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-363">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-363">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-364">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-364">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-365">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-365">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="stateObject" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="4913a-366">コマンドの実行が完了したときに呼び出される <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="4913a-366">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the command's execution has completed.</span></span> <span data-ttu-id="4913a-367">コールバックが不要である場合は、<see langword="null" /> (Microsoft Visual Basic の場合は <see langword="Nothing" />) を渡します。</span><span class="sxs-lookup"><span data-stu-id="4913a-367">Pass <see langword="null" /> (<see langword="Nothing" /> in Microsoft Visual Basic) to indicate that no callback is required.</span></span></param>
        <param name="stateObject"><span data-ttu-id="4913a-368">コールバック プロシージャに渡されるユーザー定義の状態オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4913a-368">A user-defined state object that is passed to the callback procedure.</span></span> <span data-ttu-id="4913a-369">このオブジェクトは、コールバック プロシージャ内から、<see cref="P:System.IAsyncResult.AsyncState" /> プロパティを使用して取得します。</span><span class="sxs-lookup"><span data-stu-id="4913a-369">Retrieve this object from within the callback procedure using the <see cref="P:System.IAsyncResult.AsyncState" /> property.</span></span></param>
        <summary><span data-ttu-id="4913a-370">この <see cref="T:System.Data.SqlClient.SqlCommand" /> によって定義された Transact-SQL ステートメントまたはストアド プロシージャの非同期実行を開始し、引数に指定されたコールバック プロシージャと状態情報に基づき、サーバーから 1 つまたは複数の結果を取得します。</span><span class="sxs-lookup"><span data-stu-id="4913a-370">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" /> and retrieves one or more result sets from the server, given a callback procedure and state information.</span></span></summary>
        <returns><span data-ttu-id="4913a-371">結果のポーリング、待機、またはその両方に使用できる <see cref="T:System.IAsyncResult" />。この値は <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> を呼び出すときにも必要となります。これによって返された <see cref="T:System.Data.SqlClient.SqlDataReader" /> のインスタンスを使用して、返された行を取得できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-371">An <see cref="T:System.IAsyncResult" /> that can be used to poll, wait for results, or both; this value is also needed when invoking <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, which returns a <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance which can be used to retrieve the returned rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-372"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> メソッドは、ステートメントの実行中に他のタスクを同時に実行できるように、行を返す Transact-sql ステートメントまたはストアドプロシージャを非同期に実行するプロセスを開始します。</span><span class="sxs-lookup"><span data-stu-id="4913a-372">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="4913a-373">ステートメントが完了したら、開発者は <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> メソッドを呼び出して操作を終了し、コマンドによって返された <xref:System.Data.SqlClient.SqlDataReader> を取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-373">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command.</span></span> <span data-ttu-id="4913a-374"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> メソッドは直ちに戻りますが、コードが対応する <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> メソッド呼び出しを実行するまで、同じ <xref:System.Data.SqlClient.SqlCommand> オブジェクトに対して同期または非同期実行を開始する他の呼び出しを実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="4913a-374">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="4913a-375">コマンドの実行が完了する前に <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> を呼び出すと、実行が完了するまで <xref:System.Data.SqlClient.SqlCommand> オブジェクトがブロックされます。</span><span class="sxs-lookup"><span data-stu-id="4913a-375">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed cause the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="4913a-376">`callback` パラメーターを使用すると、ステートメントが完了したときに呼び出される <xref:System.AsyncCallback> デリゲートを指定できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-376">The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed.</span></span> <span data-ttu-id="4913a-377">このデリゲートプロシージャ内、またはアプリケーション内の他の任意の場所から、<xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="4913a-377">You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method from within this delegate procedure, or from any other location within your application.</span></span> <span data-ttu-id="4913a-378">また、`stateObject` パラメーターに任意のオブジェクトを渡すことができ、コールバックプロシージャは <xref:System.IAsyncResult.AsyncState%2A> プロパティを使用してこの情報を取得できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-378">In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.</span></span>  
  
 <span data-ttu-id="4913a-379">コマンドテキストとパラメーターはサーバーに同期的に送信されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-379">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="4913a-380">大きなコマンドまたは多数のパラメーターが送信された場合、このメソッドは書き込み中にブロックする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-380">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="4913a-381">コマンドが送信された後、メソッドは、サーバーからの応答を待たずにすぐに制御を戻します。つまり、読み取りは非同期です。</span><span class="sxs-lookup"><span data-stu-id="4913a-381">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span> <span data-ttu-id="4913a-382">コマンドの実行は非同期ですが、値のフェッチはまだ同期されています。</span><span class="sxs-lookup"><span data-stu-id="4913a-382">Although command execution is asynchronous, value fetching is still synchronous.</span></span> <span data-ttu-id="4913a-383">これは、より多くのデータが必要で、基になるネットワークの読み取り操作がブロックされる場合に、<xref:System.Data.SqlClient.SqlDataReader.Read%2A> の呼び出しがブロックされる可能性があることを意味します。</span><span class="sxs-lookup"><span data-stu-id="4913a-383">This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.</span></span>  
  
 <span data-ttu-id="4913a-384">コールバックプロシージャは Microsoft .NET ランタイムによって提供されるバックグラウンドスレッド内から実行されるため、アプリケーション内でスレッド間の相互作用を処理するには、厳密なアプローチをとることが非常に重要です。</span><span class="sxs-lookup"><span data-stu-id="4913a-384">Because the callback procedure executes from within a background thread supplied by the Microsoft .NET runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</span></span> <span data-ttu-id="4913a-385">たとえば、コールバックプロシージャ内からフォームの内容を操作することはできません。フォームを更新する必要がある場合は、作業を行うためにフォームのスレッドに戻す必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-385">For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work.</span></span> <span data-ttu-id="4913a-386">このトピックの例では、この動作について説明します。</span><span class="sxs-lookup"><span data-stu-id="4913a-386">The example in this topic demonstrates this behavior.</span></span>  
  
 <span data-ttu-id="4913a-387">操作の実行中に発生したすべてのエラーは、コールバックプロシージャで例外としてスローされます。</span><span class="sxs-lookup"><span data-stu-id="4913a-387">All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</span></span> <span data-ttu-id="4913a-388">この例外は、メインアプリケーションではなく、コールバックプロシージャで処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-388">You must handle the exception in the callback procedure, not in the main application.</span></span> <span data-ttu-id="4913a-389">コールバックプロシージャでの例外処理の詳細については、このトピックの例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-389">See the example in this topic for additional information on handling exceptions in the callback procedure.</span></span>  
  
 <span data-ttu-id="4913a-390"><xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> または <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> を使用して XML データにアクセスする場合、SQL Server は、2033文字を超える XML 結果をそれぞれ2033文字の複数の行に返します。</span><span class="sxs-lookup"><span data-stu-id="4913a-390">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="4913a-391">この動作を回避するには、<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> または <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> を使用して FOR XML クエリを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4913a-391">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span>

 <span data-ttu-id="4913a-392">このメソッドは、<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> プロパティを無視します。</span><span class="sxs-lookup"><span data-stu-id="4913a-392">This method ignores the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="4913a-393">次の Windows アプリケーションは、<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> メソッドを使って、数秒の遅れを伴う (時間のかかるコマンドをエミュレートする) Transact-SQL ステートメントを実行する例を示しています。</span><span class="sxs-lookup"><span data-stu-id="4913a-393">The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command).</span></span> <span data-ttu-id="4913a-394">このサンプルではコマンドを非同期に実行するため、結果を待機している間はフォームの応答性が維持されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-394">Because the sample executes the command asynchronously, the form remains responsive while awaiting the results.</span></span> <span data-ttu-id="4913a-395">この例では、実行中の <xref:System.Data.SqlClient.SqlCommand> オブジェクトを `stateObject` パラメーターとして渡します。これにより、コールバックプロシージャ内から <xref:System.Data.SqlClient.SqlCommand> オブジェクトを簡単に取得できるようになり、<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>への最初の呼び出しに対応する <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> メソッドをコードが呼び出せるようになります。</span><span class="sxs-lookup"><span data-stu-id="4913a-395">This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter; doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method corresponding to the initial call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="4913a-396">この例では、多くの重要な手法を示します。</span><span class="sxs-lookup"><span data-stu-id="4913a-396">This example demonstrates many important techniques.</span></span> <span data-ttu-id="4913a-397">これには、別のスレッドからフォームと対話するメソッドの呼び出しが含まれます。</span><span class="sxs-lookup"><span data-stu-id="4913a-397">This includes calling a method that interacts with the form from a separate thread.</span></span> <span data-ttu-id="4913a-398">また、この例では、ユーザーがコマンドを同時に複数回実行できないようにする方法と、コールバックプロシージャが呼び出される前にフォームが終了しないようにする方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="4913a-398">In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</span></span>  
  
 <span data-ttu-id="4913a-399">この例をセットアップするには、新しい Windows アプリケーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="4913a-399">To set up this example, create a new Windows application.</span></span> <span data-ttu-id="4913a-400"><xref:System.Windows.Forms.Button> コントロール、<xref:System.Windows.Forms.DataGridView> コントロール、および <xref:System.Windows.Forms.Label> コントロールをフォームに配置します (各コントロールの既定の名前を受け入れます)。</span><span class="sxs-lookup"><span data-stu-id="4913a-400">Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.DataGridView> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control).</span></span> <span data-ttu-id="4913a-401">次のコードをフォームのクラスに追加し、環境に合わせて必要に応じて接続文字列を変更します。</span><span class="sxs-lookup"><span data-stu-id="4913a-401">Add the following code to the form's class, modifying the connection string as needed for your environment.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsync/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsync/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-402"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-402">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-403">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-403">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-404">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-404">-or-</span></span>

<span data-ttu-id="4913a-405"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-405">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-406">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-406">-or-</span></span>

<span data-ttu-id="4913a-407"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-407">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-408">コマンド テキストの実行中に発生したエラー。</span><span class="sxs-lookup"><span data-stu-id="4913a-408">Any error that occurred while executing the command text.</span></span>  

<span data-ttu-id="4913a-409">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-409">-or-</span></span>

<span data-ttu-id="4913a-410">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-410">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-411">ストリーミングの詳細については、 [「SqlClient ストリーミング サポート」](/dotnet/framework/data/adonet/sqlclient-streaming-support)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-411">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-412">名前と値のペア "Asynchronous Processing=true" が、この <see cref="T:System.Data.SqlClient.SqlCommand" /> の接続を定義する接続文字列に含まれていませんでした。</span><span class="sxs-lookup"><span data-stu-id="4913a-412">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span>  

<span data-ttu-id="4913a-413">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-413">-or-</span></span>

<span data-ttu-id="4913a-414">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-414">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-415">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-415">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-416">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-416">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-417">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-417">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-418">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-418">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-419">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-419">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-420">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-420">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-421">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-421">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-422">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-422">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(class System.AsyncCallback callback, object stateObject, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (callback As AsyncCallback, stateObject As Object, behavior As CommandBehavior) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(AsyncCallback ^ callback, System::Object ^ stateObject, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : AsyncCallback * obj * System.Data.CommandBehavior -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader (callback, stateObject, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="stateObject" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="4913a-423">コマンドの実行が完了したときに呼び出される <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="4913a-423">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the command's execution has completed.</span></span> <span data-ttu-id="4913a-424">コールバックが不要である場合は、<see langword="null" /> (Microsoft Visual Basic の場合は <see langword="Nothing" />) を渡します。</span><span class="sxs-lookup"><span data-stu-id="4913a-424">Pass <see langword="null" /> (<see langword="Nothing" /> in Microsoft Visual Basic) to indicate that no callback is required.</span></span></param>
        <param name="stateObject"><span data-ttu-id="4913a-425">コールバック プロシージャに渡されるユーザー定義の状態オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4913a-425">A user-defined state object that is passed to the callback procedure.</span></span> <span data-ttu-id="4913a-426">このオブジェクトは、コールバック プロシージャ内から、<see cref="P:System.IAsyncResult.AsyncState" /> プロパティを使用して取得します。</span><span class="sxs-lookup"><span data-stu-id="4913a-426">Retrieve this object from within the callback procedure using the <see cref="P:System.IAsyncResult.AsyncState" /> property.</span></span></param>
        <param name="behavior"><span data-ttu-id="4913a-427">ステートメントの実行とデータ取得に対するオプションを指定する <see cref="T:System.Data.CommandBehavior" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="4913a-427">One of the <see cref="T:System.Data.CommandBehavior" /> values, indicating options for statement execution and data retrieval.</span></span></param>
        <summary><span data-ttu-id="4913a-428">引数に指定されたコールバック プロシージャと状態情報に基づき、<see langword="CommandBehavior" /> 値の 1 つを使用し、サーバーから 1 つまたは複数の結果セットを取得して、この <see cref="T:System.Data.SqlClient.SqlCommand" /> によって記述された Transact-SQL ステートメントまたはストアド プロシージャの非同期実行を開始します。</span><span class="sxs-lookup"><span data-stu-id="4913a-428">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />, using one of the <see langword="CommandBehavior" /> values, and retrieving one or more result sets from the server, given a callback procedure and state information.</span></span></summary>
        <returns><span data-ttu-id="4913a-429">結果のポーリング、待機、またはその両方に使用する <see cref="T:System.IAsyncResult" />。この値は <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> を呼び出す際にも必要となります。これによって返された <see cref="T:System.Data.SqlClient.SqlDataReader" /> のインスタンスを使用して、返された行を取得できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-429">An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, which returns a <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance which can be used to retrieve the returned rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-430"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> メソッドは、ステートメントの実行中に他のタスクを同時に実行できるように、行を返す Transact-sql ステートメントまたはストアドプロシージャを非同期に実行するプロセスを開始します。</span><span class="sxs-lookup"><span data-stu-id="4913a-430">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="4913a-431">ステートメントが完了したら、開発者は <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> メソッドを呼び出して操作を終了し、コマンドによって返された <xref:System.Data.SqlClient.SqlDataReader> を取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-431">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command.</span></span> <span data-ttu-id="4913a-432"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> メソッドは直ちに戻りますが、コードが対応する <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> メソッド呼び出しを実行するまで、同じ <xref:System.Data.SqlClient.SqlCommand> オブジェクトに対して同期または非同期実行を開始する他の呼び出しを実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="4913a-432">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="4913a-433">コマンドの実行が完了する前に <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> を呼び出すと、実行が完了するまで <xref:System.Data.SqlClient.SqlCommand> オブジェクトがブロックされます。</span><span class="sxs-lookup"><span data-stu-id="4913a-433">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="4913a-434">`callback` パラメーターを使用すると、ステートメントが完了したときに呼び出される <xref:System.AsyncCallback> デリゲートを指定できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-434">The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed.</span></span> <span data-ttu-id="4913a-435">このデリゲートプロシージャ内、またはアプリケーション内の他の任意の場所から、<xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="4913a-435">You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method from within this delegate procedure, or from any other location within your application.</span></span> <span data-ttu-id="4913a-436">また、`stateObject` パラメーターに任意のオブジェクトを渡すことができ、コールバックプロシージャは <xref:System.IAsyncResult.AsyncState%2A> プロパティを使用してこの情報を取得できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-436">In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.</span></span>  
  
 <span data-ttu-id="4913a-437">`behavior` パラメーターを使用すると、コマンドとその接続の動作を制御するオプションを指定できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-437">The `behavior` parameter lets you specify options that control the behavior of the command and its connection.</span></span> <span data-ttu-id="4913a-438">これらの値は、(プログラミング言語の `Or` 演算子を使用して) 組み合わせることができます。通常、開発者は、`CloseConnection` 値を使用して、<xref:System.Data.SqlClient.SqlDataReader> が閉じられたときに、ランタイムによって接続が閉じられるようにします。</span><span class="sxs-lookup"><span data-stu-id="4913a-438">These values can be combined together (using the programming language's `Or` operator); generally, developers use the `CloseConnection` value to make sure that the connection is closed by the runtime when the <xref:System.Data.SqlClient.SqlDataReader> is closed.</span></span> <span data-ttu-id="4913a-439">開発者は、Transact-sql ステートメントまたはストアドプロシージャが単一行のみを返すことが事前にわかっている場合に `SingleRow` の値を指定することによって、<xref:System.Data.SqlClient.SqlDataReader> の動作を最適化することもできます。</span><span class="sxs-lookup"><span data-stu-id="4913a-439">Developers can also optimize the behavior of the <xref:System.Data.SqlClient.SqlDataReader> by specifying the `SingleRow` value when it is known in advance that the Transact-SQL statement or stored procedure only returns a single row.</span></span>  
  
 <span data-ttu-id="4913a-440">コマンドテキストとパラメーターはサーバーに同期的に送信されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-440">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="4913a-441">大きなコマンドまたは多数のパラメーターが送信された場合、このメソッドは書き込み中にブロックする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-441">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="4913a-442">コマンドが送信された後、メソッドは、サーバーからの応答を待たずにすぐに制御を戻します。つまり、読み取りは非同期です。</span><span class="sxs-lookup"><span data-stu-id="4913a-442">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span> <span data-ttu-id="4913a-443">コマンドの実行は非同期ですが、値のフェッチはまだ同期されています。</span><span class="sxs-lookup"><span data-stu-id="4913a-443">Although command execution is asynchronous, value fetching is still synchronous.</span></span> <span data-ttu-id="4913a-444">これは、より多くのデータが必要で、基になるネットワークの読み取り操作がブロックされる場合に、<xref:System.Data.SqlClient.SqlDataReader.Read%2A> の呼び出しがブロックされる可能性があることを意味します。</span><span class="sxs-lookup"><span data-stu-id="4913a-444">This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.</span></span>  
  
 <span data-ttu-id="4913a-445">コールバックプロシージャは Microsoft .NET 共通言語ランタイムによって提供されるバックグラウンドスレッド内から実行されるため、アプリケーション内でスレッド間の相互作用を処理するには、厳密なアプローチをとることが非常に重要です。</span><span class="sxs-lookup"><span data-stu-id="4913a-445">Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</span></span> <span data-ttu-id="4913a-446">たとえば、フォームの内容をコールバックプロシージャ内から操作しないでください。フォームを更新する必要がある場合は、作業を行うためにフォームのスレッドに戻す必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-446">For example, you must not interact with a form's contents from within your callback procedure--should you have to update the form, you must switch back to the form's thread in order to do your work.</span></span> <span data-ttu-id="4913a-447">このトピックの例では、この動作について説明します。</span><span class="sxs-lookup"><span data-stu-id="4913a-447">The example in this topic demonstrates this behavior.</span></span>  
  
 <span data-ttu-id="4913a-448">操作の実行中に発生したすべてのエラーは、コールバックプロシージャで例外としてスローされます。</span><span class="sxs-lookup"><span data-stu-id="4913a-448">All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</span></span> <span data-ttu-id="4913a-449">この例外は、メインアプリケーションではなく、コールバックプロシージャで処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-449">You must handle the exception in the callback procedure, not in the main application.</span></span> <span data-ttu-id="4913a-450">コールバックプロシージャでの例外処理の詳細については、このトピックの例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-450">See the example in this topic for additional information on handling exceptions in the callback procedure.</span></span>  
  
 <span data-ttu-id="4913a-451"><xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> または <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> を使用して XML データにアクセスする場合、SQL Server は、2033文字を超える XML 結果をそれぞれ2033文字の複数の行に返します。</span><span class="sxs-lookup"><span data-stu-id="4913a-451">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="4913a-452">この動作を回避するには、<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> または <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> を使用して FOR XML クエリを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4913a-452">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span>

 <span data-ttu-id="4913a-453">このメソッドは、<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> プロパティを無視します。</span><span class="sxs-lookup"><span data-stu-id="4913a-453">This method ignores the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="4913a-454">次の Windows アプリケーションは、<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> メソッドを使って、数秒の遅れを伴う (時間のかかるコマンドをエミュレートする) Transact-SQL ステートメントを実行する例を示しています。</span><span class="sxs-lookup"><span data-stu-id="4913a-454">The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command).</span></span> <span data-ttu-id="4913a-455">このサンプルではコマンドを非同期に実行するため、結果を待機している間はフォームの応答性が維持されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-455">Because the sample executes the command asynchronously, the form remains responsive while awaiting the results.</span></span> <span data-ttu-id="4913a-456">この例では、実行中の <xref:System.Data.SqlClient.SqlCommand> オブジェクトを `stateObject` パラメーターとして渡します。これにより、コールバックプロシージャ内から <xref:System.Data.SqlClient.SqlCommand> オブジェクトを簡単に取得できるようになり、<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>への最初の呼び出しに対応する <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> メソッドをコードが呼び出せるようになります。</span><span class="sxs-lookup"><span data-stu-id="4913a-456">This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter; doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method corresponding to the initial call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="4913a-457">この例では、多くの重要な手法を示します。</span><span class="sxs-lookup"><span data-stu-id="4913a-457">This example demonstrates many important techniques.</span></span> <span data-ttu-id="4913a-458">これには、別のスレッドからフォームと対話するメソッドの呼び出しが含まれます。</span><span class="sxs-lookup"><span data-stu-id="4913a-458">This includes calling a method that interacts with the form from a separate thread.</span></span> <span data-ttu-id="4913a-459">また、この例では、ユーザーがコマンドを同時に複数回実行できないようにする方法と、コールバックプロシージャが呼び出される前にフォームが終了しないようにする方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="4913a-459">In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</span></span>  
  
 <span data-ttu-id="4913a-460">この例をセットアップするには、新しい Windows アプリケーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="4913a-460">To set up this example, create a new Windows application.</span></span> <span data-ttu-id="4913a-461"><xref:System.Windows.Forms.Button> コントロール、<xref:System.Windows.Forms.DataGridView> コントロール、および <xref:System.Windows.Forms.Label> コントロールをフォームに配置します (各コントロールの既定の名前を受け入れます)。</span><span class="sxs-lookup"><span data-stu-id="4913a-461">Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.DataGridView> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control).</span></span> <span data-ttu-id="4913a-462">次のコードをフォームのクラスに追加し、環境に合わせて必要に応じて接続文字列を変更します。</span><span class="sxs-lookup"><span data-stu-id="4913a-462">Add the following code to the form's class, modifying the connection string as needed for your environment.</span></span>  
  
 <span data-ttu-id="4913a-463">この例では、`behavior` パラメーターに `CommandBehavior.CloseConnection` 値を渡して、返された <xref:System.Data.SqlClient.SqlDataReader> が閉じられたときに、その接続を自動的に閉じます。</span><span class="sxs-lookup"><span data-stu-id="4913a-463">This example passes the `CommandBehavior.CloseConnection` value in the `behavior` parameter, causing the returned <xref:System.Data.SqlClient.SqlDataReader> to automatically close its connection when it is closed.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-464"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-464">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-465">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-465">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-466">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-466">-or-</span></span>

<span data-ttu-id="4913a-467"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-467">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-468">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-468">-or-</span></span>

<span data-ttu-id="4913a-469"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-469">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-470">コマンド テキストの実行中に発生したエラー。</span><span class="sxs-lookup"><span data-stu-id="4913a-470">Any error that occurred while executing the command text.</span></span>  

<span data-ttu-id="4913a-471">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-471">-or-</span></span>

<span data-ttu-id="4913a-472">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-472">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-473">ストリーミングの詳細については、 [「SqlClient ストリーミング サポート」](/dotnet/framework/data/adonet/sqlclient-streaming-support)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-473">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-474">名前と値のペア "Asynchronous Processing=true" が、この <see cref="T:System.Data.SqlClient.SqlCommand" /> の接続を定義する接続文字列に含まれていませんでした。</span><span class="sxs-lookup"><span data-stu-id="4913a-474">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span>  

<span data-ttu-id="4913a-475">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-475">-or-</span></span>

<span data-ttu-id="4913a-476">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-476">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-477">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-477">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-478">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-478">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-479">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-479">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-480">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-480">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-481">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-481">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-482">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-482">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-483">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-483">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-484">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-484">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteXmlReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4913a-485">この <see cref="T:System.Data.SqlClient.SqlCommand" /> によって定義された Transact-SQL ステートメントまたはストアド プロシージャの非同期実行を開始し、結果を <see cref="T:System.Xml.XmlReader" /> オブジェクトとして返します。</span><span class="sxs-lookup"><span data-stu-id="4913a-485">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" /> and returns results as an <see cref="T:System.Xml.XmlReader" /> object.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-486">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-486">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteXmlReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteXmlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteXmlReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteXmlReader () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteXmlReader();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteXmlReader : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteXmlReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4913a-487">この <see cref="T:System.Data.SqlClient.SqlCommand" /> によって定義された Transact-SQL ステートメントまたはストアド プロシージャの非同期実行を開始し、結果を <see cref="T:System.Xml.XmlReader" /> オブジェクトとして返します。</span><span class="sxs-lookup"><span data-stu-id="4913a-487">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" /> and returns results as an <see cref="T:System.Xml.XmlReader" /> object.</span></span></summary>
        <returns><span data-ttu-id="4913a-488">結果のポーリング、待機、またはその両方に使用する <see cref="T:System.IAsyncResult" />。この値は、単一の XML 値を取得する <see langword="EndExecuteXmlReader" /> を呼び出す場合にも必要となります。</span><span class="sxs-lookup"><span data-stu-id="4913a-488">An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see langword="EndExecuteXmlReader" />, which returns a single XML value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-489"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> メソッドは、ステートメントの実行中に他のタスクを同時に実行できるように、行を XML として返す Transact-sql ステートメントを非同期で実行するプロセスを開始します。</span><span class="sxs-lookup"><span data-stu-id="4913a-489">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method starts the process of asynchronously executing a Transact-SQL statement that returns rows as XML, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="4913a-490">ステートメントが完了したら、開発者は `EndExecuteXmlReader` メソッドを呼び出して、操作を終了し、コマンドによって返された XML を取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-490">When the statement has completed, developers must call the `EndExecuteXmlReader` method to finish the operation and retrieve the XML returned by the command.</span></span> <span data-ttu-id="4913a-491"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> メソッドは直ちに戻りますが、コードが対応する `EndExecuteXmlReader` メソッド呼び出しを実行するまで、同じ <xref:System.Data.SqlClient.SqlCommand> オブジェクトに対して同期または非同期実行を開始する他の呼び出しを実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="4913a-491">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method returns immediately, but until the code executes the corresponding `EndExecuteXmlReader` method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="4913a-492">コマンドの実行が完了する前に `EndExecuteXmlReader` を呼び出すと、実行が完了するまで <xref:System.Data.SqlClient.SqlCommand> オブジェクトがブロックされます。</span><span class="sxs-lookup"><span data-stu-id="4913a-492">Calling the `EndExecuteXmlReader` before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="4913a-493"><xref:System.Data.SqlClient.SqlCommand.CommandText%2A> プロパティは、通常、有効な FOR XML 句を含む Transact-sql ステートメントを指定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-493">The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause.</span></span> <span data-ttu-id="4913a-494">ただし、`CommandText` は、有効な XML を含む `ntext` データを返すステートメントを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="4913a-494">However, `CommandText` can also specify a statement that returns `ntext` data that contains valid XML.</span></span>  
  
 <span data-ttu-id="4913a-495">一般的な <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> クエリは、次C#の例のように書式設定できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-495">A typical <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> query can be formatted as in the following C# example:</span></span>  
  
```csharp
SqlCommand command = new SqlCommand("SELECT ContactID, FirstName, LastName FROM dbo.Contact FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 <span data-ttu-id="4913a-496">このメソッドを使用して、単一行、単一列の結果セットを取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="4913a-496">This method can also be used to retrieve a single-row, single-column result set.</span></span> <span data-ttu-id="4913a-497">この場合、複数の行が返されると、`EndExecuteXmlReader` メソッドは、<xref:System.Xml.XmlReader> を最初の行の値にアタッチし、結果セットの残りの部分を破棄します。</span><span class="sxs-lookup"><span data-stu-id="4913a-497">In this case, if more than one row is returned, the `EndExecuteXmlReader` method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.</span></span>  
  
 <span data-ttu-id="4913a-498">複数のアクティブな結果セット (MARS) 機能により、複数のアクションで同じ接続を使用できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-498">The multiple active result set (MARS) feature lets multiple actions use the same connection.</span></span>  
  
 <span data-ttu-id="4913a-499">コマンドテキストとパラメーターはサーバーに同期的に送信されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-499">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="4913a-500">大きなコマンドまたは多数のパラメーターが送信された場合、このメソッドは書き込み中にブロックする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-500">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="4913a-501">コマンドが送信された後、メソッドは、サーバーからの応答を待たずにすぐに制御を戻します。つまり、読み取りは非同期です。</span><span class="sxs-lookup"><span data-stu-id="4913a-501">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span> <span data-ttu-id="4913a-502">コマンドの実行は非同期ですが、値のフェッチはまだ同期されています。</span><span class="sxs-lookup"><span data-stu-id="4913a-502">Although command execution is asynchronous, value fetching is still synchronous.</span></span>  
  
 <span data-ttu-id="4913a-503">このオーバーロードではコールバックプロシージャはサポートされないため、開発者は、<xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> メソッドによって返された <xref:System.IAsyncResult> の <xref:System.IAsyncResult.IsCompleted%2A> プロパティを使用して、コマンドが完了したかどうかを確認するためにポーリングを行う必要があります。または、返された <xref:System.IAsyncResult>の <xref:System.IAsyncResult.AsyncWaitHandle%2A> プロパティを使用して、1つまたは複数のコマンドが完了するまで待機します。</span><span class="sxs-lookup"><span data-stu-id="4913a-503">Because this overload does not support a callback procedure, developers need to either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.</span></span>  
  
 <span data-ttu-id="4913a-504"><xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> または <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> を使用して XML データにアクセスする場合、SQL Server は、2033文字を超える XML 結果をそれぞれ2033文字の複数の行に返します。</span><span class="sxs-lookup"><span data-stu-id="4913a-504">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="4913a-505">この動作を回避するには、<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> または <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> を使用して FOR XML クエリを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4913a-505">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span>

 <span data-ttu-id="4913a-506">このメソッドは、<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> プロパティを無視します。</span><span class="sxs-lookup"><span data-stu-id="4913a-506">This method ignores the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="4913a-507">次のコンソールアプリケーションでは、XML データを非同期に取得するプロセスを開始します。</span><span class="sxs-lookup"><span data-stu-id="4913a-507">The following console application starts the process of retrieving XML data asynchronously.</span></span> <span data-ttu-id="4913a-508">結果を待機している間、この単純なアプリケーションはループ内に存在し、<xref:System.IAsyncResult.IsCompleted%2A> のプロパティ値を調査します。</span><span class="sxs-lookup"><span data-stu-id="4913a-508">While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value.</span></span> <span data-ttu-id="4913a-509">プロセスが完了すると、コードは XML を取得し、その内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="4913a-509">Once the process has completed, the code retrieves the XML and displays its contents.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReader/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-510"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-510">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-511">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-511">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-512">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-512">-or-</span></span>

<span data-ttu-id="4913a-513"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-513">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-514">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-514">-or-</span></span>

<span data-ttu-id="4913a-515"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-515">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-516">コマンド テキストの実行中に発生したエラー。</span><span class="sxs-lookup"><span data-stu-id="4913a-516">Any error that occurred while executing the command text.</span></span>  

<span data-ttu-id="4913a-517">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-517">-or-</span></span>

<span data-ttu-id="4913a-518">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-518">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-519">ストリーミングの詳細については、 [「SqlClient ストリーミング サポート」](/dotnet/framework/data/adonet/sqlclient-streaming-support)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-519">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-520">名前と値のペア "Asynchronous Processing=true" が、この <see cref="T:System.Data.SqlClient.SqlCommand" /> の接続を定義する接続文字列に含まれていませんでした。</span><span class="sxs-lookup"><span data-stu-id="4913a-520">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span>  

<span data-ttu-id="4913a-521">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-521">-or-</span></span>

<span data-ttu-id="4913a-522">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-522">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-523">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-523">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-524">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-524">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-525">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-525">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-526">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-526">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-527">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-527">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-528">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-528">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-529">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-529">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-530">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-530">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteXmlReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteXmlReader (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteXmlReader(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteXmlReader (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteXmlReader(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteXmlReader : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteXmlReader (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="stateObject" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="4913a-531">コマンドの実行が完了したときに呼び出される <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="4913a-531">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the command's execution has completed.</span></span> <span data-ttu-id="4913a-532">コールバックが不要である場合は、<see langword="null" /> (Microsoft Visual Basic の場合は <see langword="Nothing" />) を渡します。</span><span class="sxs-lookup"><span data-stu-id="4913a-532">Pass <see langword="null" /> (<see langword="Nothing" /> in Microsoft Visual Basic) to indicate that no callback is required.</span></span></param>
        <param name="stateObject"><span data-ttu-id="4913a-533">コールバック プロシージャに渡されるユーザー定義の状態オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4913a-533">A user-defined state object that is passed to the callback procedure.</span></span> <span data-ttu-id="4913a-534">このオブジェクトは、コールバック プロシージャ内から、<see cref="P:System.IAsyncResult.AsyncState" /> プロパティを使用して取得します。</span><span class="sxs-lookup"><span data-stu-id="4913a-534">Retrieve this object from within the callback procedure using the <see cref="P:System.IAsyncResult.AsyncState" /> property.</span></span></param>
        <summary><span data-ttu-id="4913a-535">この <see cref="T:System.Data.SqlClient.SqlCommand" /> によって定義された Transact-SQL ステートメントまたはストアド プロシージャの非同期実行を開始し、コールバック プロシージャを使用して結果を <see cref="T:System.Xml.XmlReader" /> オブジェクトとして返します。</span><span class="sxs-lookup"><span data-stu-id="4913a-535">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" /> and returns results as an <see cref="T:System.Xml.XmlReader" /> object, using a callback procedure.</span></span></summary>
        <returns><span data-ttu-id="4913a-536">結果のポーリング、待機、またはその両方に使用する <see cref="T:System.IAsyncResult" />。この値は、コマンドの結果を XML として返す <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> を呼び出す場合にも必要となります。</span><span class="sxs-lookup"><span data-stu-id="4913a-536">An <see cref="T:System.IAsyncResult" /> that can be used to poll, wait for results, or both; this value is also needed when the <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> is called, which returns the results of the command as XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-537"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> メソッドは、ステートメントの実行中に他のタスクを同時に実行できるように、行を XML として返す Transact-sql ステートメントまたはストアドプロシージャを非同期に実行するプロセスを開始します。</span><span class="sxs-lookup"><span data-stu-id="4913a-537">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows as XML, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="4913a-538">ステートメントが完了したら、開発者は <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> メソッドを呼び出して、操作を完了し、要求された XML データを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-538">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method to finish the operation and retrieve the requested XML data.</span></span> <span data-ttu-id="4913a-539"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> メソッドは直ちに戻りますが、コードが対応する <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> メソッド呼び出しを実行するまで、同じ <xref:System.Data.SqlClient.SqlCommand> オブジェクトに対して同期または非同期実行を開始する他の呼び出しを実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="4913a-539">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="4913a-540">コマンドの実行が完了する前に <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> を呼び出すと、実行が完了するまで <xref:System.Data.SqlClient.SqlCommand> オブジェクトがブロックされます。</span><span class="sxs-lookup"><span data-stu-id="4913a-540">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="4913a-541"><xref:System.Data.SqlClient.SqlCommand.CommandText%2A> プロパティは、通常、有効な FOR XML 句を含む Transact-sql ステートメントを指定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-541">The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause.</span></span> <span data-ttu-id="4913a-542">ただし、`CommandText` は、有効な XML を含むデータを返すステートメントを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="4913a-542">However, `CommandText` can also specify a statement that returns data that contains valid XML.</span></span> <span data-ttu-id="4913a-543">このメソッドを使用して、単一行、単一列の結果セットを取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="4913a-543">This method can also be used to retrieve a single-row, single-column result set.</span></span> <span data-ttu-id="4913a-544">この場合、複数の行が返されると、<xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> メソッドは、<xref:System.Xml.XmlReader> を最初の行の値にアタッチし、結果セットの残りの部分を破棄します。</span><span class="sxs-lookup"><span data-stu-id="4913a-544">In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.</span></span>  
  
 <span data-ttu-id="4913a-545">一般的な <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> クエリは、次C#の例のように書式設定できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-545">A typical <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> query can be formatted as in the following C# example:</span></span>  
  
```csharp
SqlCommand command = new SqlCommand("SELECT ContactID, FirstName, LastName FROM Contact FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 <span data-ttu-id="4913a-546">このメソッドを使用して、単一行、単一列の結果セットを取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="4913a-546">This method can also be used to retrieve a single-row, single-column result set.</span></span> <span data-ttu-id="4913a-547">この場合、複数の行が返されると、<xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> メソッドは、<xref:System.Xml.XmlReader> を最初の行の値にアタッチし、結果セットの残りの部分を破棄します。</span><span class="sxs-lookup"><span data-stu-id="4913a-547">In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.</span></span>  
  
 <span data-ttu-id="4913a-548">複数のアクティブな結果セット (MARS) 機能により、複数のアクションで同じ接続を使用できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-548">The multiple active result set (MARS) feature lets multiple actions use the same connection.</span></span>  
  
 <span data-ttu-id="4913a-549">`callback` パラメーターを使用すると、ステートメントが完了したときに呼び出される <xref:System.AsyncCallback> デリゲートを指定できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-549">The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed.</span></span> <span data-ttu-id="4913a-550">このデリゲートプロシージャ内、またはアプリケーション内の他の任意の場所から、<xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="4913a-550">You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method from within this delegate procedure, or from any other location within your application.</span></span> <span data-ttu-id="4913a-551">また、`stateObject` パラメーターに任意のオブジェクトを渡すことができ、コールバックプロシージャは <xref:System.IAsyncResult.AsyncState%2A> プロパティを使用してこの情報を取得できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-551">In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.</span></span>  
  
 <span data-ttu-id="4913a-552">コマンドテキストとパラメーターはサーバーに同期的に送信されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-552">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="4913a-553">大きなコマンドまたは多数のパラメーターが送信された場合、このメソッドは書き込み中にブロックする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-553">If a large command or many parameters is sent, this method may block during writes.</span></span> <span data-ttu-id="4913a-554">コマンドが送信された後、メソッドは、サーバーからの応答を待たずにすぐに制御を戻します。つまり、読み取りは非同期です。</span><span class="sxs-lookup"><span data-stu-id="4913a-554">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span>  
  
 <span data-ttu-id="4913a-555">操作の実行中に発生したすべてのエラーは、コールバックプロシージャで例外としてスローされます。</span><span class="sxs-lookup"><span data-stu-id="4913a-555">All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</span></span> <span data-ttu-id="4913a-556">この例外は、メインアプリケーションではなく、コールバックプロシージャで処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-556">You must handle the exception in the callback procedure, not in the main application.</span></span> <span data-ttu-id="4913a-557">コールバックプロシージャでの例外処理の詳細については、このトピックの例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-557">See the example in this topic for additional information on handling exceptions in the callback procedure.</span></span>  
  
 <span data-ttu-id="4913a-558"><xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> または <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> を使用して XML データにアクセスする場合、SQL Server は、2033文字を超える XML 結果をそれぞれ2033文字の複数の行に返します。</span><span class="sxs-lookup"><span data-stu-id="4913a-558">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="4913a-559">この動作を回避するには、<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> または <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> を使用して FOR XML クエリを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4913a-559">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span>

 <span data-ttu-id="4913a-560">このメソッドは、<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> プロパティを無視します。</span><span class="sxs-lookup"><span data-stu-id="4913a-560">This method ignores the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="4913a-561">次の Windows アプリケーションは、<xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> メソッドを使って、数秒の遅れを伴う (時間のかかるコマンドをエミュレートする) Transact-SQL ステートメントを実行する例を示しています。</span><span class="sxs-lookup"><span data-stu-id="4913a-561">The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command).</span></span> <span data-ttu-id="4913a-562">この例では、実行中の <xref:System.Data.SqlClient.SqlCommand> オブジェクトを `stateObject` パラメーターとして渡します。これにより、コールバックプロシージャ内から <xref:System.Data.SqlClient.SqlCommand> オブジェクトを簡単に取得できるようになります。これにより、コードは <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>の最初の呼び出しに対応する <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> メソッドを呼び出すことができるようになります。</span><span class="sxs-lookup"><span data-stu-id="4913a-562">This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter--doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method corresponding to the initial call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.</span></span>  
  
 <span data-ttu-id="4913a-563">この例では、多くの重要な手法を示します。</span><span class="sxs-lookup"><span data-stu-id="4913a-563">This example demonstrates many important techniques.</span></span> <span data-ttu-id="4913a-564">これには、別のスレッドからフォームと対話するメソッドの呼び出しが含まれます。</span><span class="sxs-lookup"><span data-stu-id="4913a-564">This includes calling a method that interacts with the form from a separate thread.</span></span> <span data-ttu-id="4913a-565">また、この例では、ユーザーがコマンドを同時に複数回実行できないようにする方法と、コールバックプロシージャが呼び出される前にフォームが終了しないようにする方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="4913a-565">In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</span></span>  
  
 <span data-ttu-id="4913a-566">この例をセットアップするには、新しい Windows アプリケーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="4913a-566">To set up this example, create a new Windows application.</span></span> <span data-ttu-id="4913a-567"><xref:System.Windows.Forms.Button> コントロール、<xref:System.Windows.Forms.ListBox> コントロール、および <xref:System.Windows.Forms.Label> コントロールをフォームに配置します (各コントロールの既定の名前を受け入れます)。</span><span class="sxs-lookup"><span data-stu-id="4913a-567">Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.ListBox> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control).</span></span> <span data-ttu-id="4913a-568">次のコードをフォームのクラスに追加し、環境に合わせて必要に応じて接続文字列を変更します。</span><span class="sxs-lookup"><span data-stu-id="4913a-568">Add the following code to the form's class, modifying the connection string as needed for your environment.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReaderAsync/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReaderAsync/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-569"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-569">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-570">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-570">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-571">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-571">-or-</span></span>

<span data-ttu-id="4913a-572"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-572">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-573">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-573">-or-</span></span>

<span data-ttu-id="4913a-574"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-574">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-575">コマンド テキストの実行中に発生したエラー。</span><span class="sxs-lookup"><span data-stu-id="4913a-575">Any error that occurred while executing the command text.</span></span>  

<span data-ttu-id="4913a-576">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-576">-or-</span></span>

<span data-ttu-id="4913a-577">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-577">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-578">ストリーミングの詳細については、 [「SqlClient ストリーミング サポート」](/dotnet/framework/data/adonet/sqlclient-streaming-support)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-578">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-579">名前と値のペア "Asynchronous Processing=true" が、この <see cref="T:System.Data.SqlClient.SqlCommand" /> の接続を定義する接続文字列に含まれていませんでした。</span><span class="sxs-lookup"><span data-stu-id="4913a-579">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span>  

<span data-ttu-id="4913a-580">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-580">-or-</span></span>

<span data-ttu-id="4913a-581">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-581">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-582">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-582">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-583">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-583">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-584">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-584">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-585">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-585">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-586">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-586">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <altmember cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />
        <altmember cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-587">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-587">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Cancel : unit -&gt; unit" Usage="sqlCommand.Cancel " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public void Cancel ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Cancel();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member Cancel : unit -&gt; unit&#xA;override this.Cancel : unit -&gt; unit" Usage="sqlCommand.Cancel " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.Cancel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4913a-588"><see cref="T:System.Data.SqlClient.SqlCommand" /> の実行の取り消しを試行します。</span><span class="sxs-lookup"><span data-stu-id="4913a-588">Tries to cancel the execution of a <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-589">キャンセルする対象がない場合は、何も行われません。</span><span class="sxs-lookup"><span data-stu-id="4913a-589">If there is nothing to cancel, nothing occurs.</span></span> <span data-ttu-id="4913a-590">ただし、処理中のコマンドが存在し、キャンセルの試行が失敗した場合でも、例外は生成されません。</span><span class="sxs-lookup"><span data-stu-id="4913a-590">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
 <span data-ttu-id="4913a-591">場合によっては、<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>を呼び出した後で <xref:System.Data.SqlClient.SqlDataReader.Close%2A> (暗黙的または明示的に) を呼び出してから <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>を呼び出した後、<xref:System.Data.SqlClient.SqlCommand.Cancel%2A>を呼び出すと、cancel コマンドが SQL Server に送信されず、<xref:System.Data.SqlClient.SqlConnection.Close%2A>を呼び出した後も結果セットをストリーム継続できるようになります。</span><span class="sxs-lookup"><span data-stu-id="4913a-591">In some rare cases, if you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>, then call <xref:System.Data.SqlClient.SqlDataReader.Close%2A> (implicitly or explicitly) before calling <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, and then call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, the cancel command will not be sent to SQL Server and the result set can continue to stream after you call <xref:System.Data.SqlClient.SqlConnection.Close%2A>.</span></span> <span data-ttu-id="4913a-592">これを回避するには、リーダーまたは接続を閉じる前に <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-592">To avoid this, make sure that you call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> before closing the reader or connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4913a-593"><xref:System.Data.SqlClient.SqlCommand.Cancel%2A> メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4913a-593">The following example demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.Cancel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Cancel/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Cancel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Cancel/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-594">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-594">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-595">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-595">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-596">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-596">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlCommand.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4913a-597">現在のインスタンスのコピーである新しい <see cref="T:System.Data.SqlClient.SqlCommand" /> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="4913a-597">Creates a new <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="4913a-598">このインスタンスのコピーである新しい <see cref="T:System.Data.SqlClient.SqlCommand" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4913a-598">A new <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is a copy of this instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-599">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-599">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-600">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-600">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-601">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-601">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionSetting">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnEncryptionSetting As SqlCommandColumnEncryptionSetting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { System::Data::SqlClient::SqlCommandColumnEncryptionSetting get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionSetting : System.Data.SqlClient.SqlCommandColumnEncryptionSetting" Usage="System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommandColumnEncryptionSetting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4913a-602">このコマンドの列の暗号化の設定を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-602">Gets or sets the column encryption setting for this command.</span></span></summary>
        <value><span data-ttu-id="4913a-603">このコマンドの列の暗号化の設定。</span><span class="sxs-lookup"><span data-stu-id="4913a-603">The column encryption setting for this command.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.CommandText : string with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandText" />
      <MemberSignature Language="C#" Value="public string CommandText { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandText As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandText")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4913a-604">データ ソースで実行する Transact-SQL ステートメント、テーブル名、またはストアド プロシージャを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-604">Gets or sets the Transact-SQL statement, table name or stored procedure to execute at the data source.</span></span></summary>
        <value><span data-ttu-id="4913a-605">実行する Transact-SQL ステートメントまたはストアド プロシージャ。</span><span class="sxs-lookup"><span data-stu-id="4913a-605">The Transact-SQL statement or stored procedure to execute.</span></span> <span data-ttu-id="4913a-606">既定値は空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="4913a-606">The default is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-607"><xref:System.Data.SqlClient.SqlCommand.CommandType%2A> プロパティが `StoredProcedure` に設定されている場合は、<xref:System.Data.SqlClient.SqlCommand.CommandText%2A> プロパティをストアド プロシージャの名前に設定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-607">When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="4913a-608">ストアド プロシージャ名に特殊文字が含まれている場合、エスケープ文字構文を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-608">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="4913a-609">このストアドプロシージャは、`Execute` メソッドの1つを呼び出すと、コマンドによって実行されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-609">The command executes this stored procedure when you call one of the `Execute` methods.</span></span>  
  
 <span data-ttu-id="4913a-610">SQL Server 用の Microsoft .NET Framework Data Provider では、Transact-sql ステートメントまたは `CommandType.Text`のコマンドによって呼び出されるストアドプロシージャにパラメーターを渡すための疑問符 (?) プレースホルダーはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="4913a-610">The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a Transact-SQL statement or a stored procedure called by a command of `CommandType.Text`.</span></span> <span data-ttu-id="4913a-611">この場合は、名前付きパラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-611">In this case, named parameters must be used.</span></span> <span data-ttu-id="4913a-612">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="4913a-612">For example:</span></span>  
  
```sql
SELECT * FROM dbo.Customers WHERE CustomerID = @CustomerID  
```  
  
 <span data-ttu-id="4913a-613">詳細については、「[パラメーターおよびパラメーターデータ型の構成](/dotnet/framework/data/adonet/configuring-parameters-and-parameter-data-types)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-613">For more information, see [Configuring Parameters and Parameter Data Types](/dotnet/framework/data/adonet/configuring-parameters-and-parameter-data-types).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4913a-614">次の例では、<xref:System.Data.SqlClient.SqlCommand> を作成し、そのプロパティの一部を設定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-614">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.CommandText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.CommandText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-615">ADO.NET でのデータの取得および変更</span><span class="sxs-lookup"><span data-stu-id="4913a-615">Retrieving and Modifying Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-616">SQL Server と ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4913a-616">SQL Server and ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-617">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-617">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandTimeout" />
      <MemberSignature Language="C#" Value="public int CommandTimeout { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Integer" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CommandTimeout { int get(); void set(int value); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(30)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4913a-618">コマンド実行の試行を終了してエラーを生成するまでの待機時間 (秒単位) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-618">Gets or sets the wait time (in seconds) before terminating the attempt to execute a command and generating an error.</span></span></summary>
        <value><span data-ttu-id="4913a-619">コマンドの実行を待機する時間 (秒単位)。</span><span class="sxs-lookup"><span data-stu-id="4913a-619">The time in seconds to wait for the command to execute.</span></span> <span data-ttu-id="4913a-620">既定値は 30 秒です。</span><span class="sxs-lookup"><span data-stu-id="4913a-620">The default is 30 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-621">値0は制限がないことを示します (コマンドを実行しようとすると、無制限に待機します)。</span><span class="sxs-lookup"><span data-stu-id="4913a-621">A value of 0 indicates no limit (an attempt to execute a command will wait indefinitely).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4913a-622"><xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> プロパティは、以前の APM (非同期プログラミングモデル) の非同期メソッド呼び出し (<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>など) によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-622">The <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property will be ignored by older APM (Asynchronous Programming Model) asynchronous method calls such as <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.</span></span> <span data-ttu-id="4913a-623">これは、<xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A>などの新しい TAP (タスク非同期プログラミング) メソッドによって受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="4913a-623">It will be honored by newer TAP (Task Asynchronous Programming) methods such as <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A>.</span></span>
  
 <span data-ttu-id="4913a-624">コンテキスト接続に対してコマンドが実行された場合、<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> は無効になります (接続文字列で "context connection = true" を使用して開いた <xref:System.Data.SqlClient.SqlConnection>)。</span><span class="sxs-lookup"><span data-stu-id="4913a-624"><xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect when the command is executed against a context connection (a <xref:System.Data.SqlClient.SqlConnection> opened with "context connection=true" in the connection string).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4913a-625">このプロパティは、コマンドの実行時または結果の処理中にすべてのネットワーク読み取りを行うために、(メソッドの呼び出し中に読み取られるすべてのネットワークパケットの) 累積タイムアウトです。</span><span class="sxs-lookup"><span data-stu-id="4913a-625">This property is the cumulative time-out (for all network packets that are read during the invocation of a method) for all network reads during command execution or processing of the results.</span></span> <span data-ttu-id="4913a-626">最初の行が返された後もタイムアウトが発生する可能性があり、ユーザーの処理時間は含まれず、ネットワークの読み取り時間のみです。</span><span class="sxs-lookup"><span data-stu-id="4913a-626">A time-out can still occur after the first row is returned, and does not include user processing time, only network read time.</span></span>  
>   
>  <span data-ttu-id="4913a-627">たとえば、30秒のタイムアウトの場合、<xref:System.Data.SqlClient.SqlDataReader.Read%2A> に2つのネットワークパケットが必要な場合は、両方のネットワークパケットを読み取るのに30秒かかります。</span><span class="sxs-lookup"><span data-stu-id="4913a-627">For example, with a 30 second time out, if <xref:System.Data.SqlClient.SqlDataReader.Read%2A> requires two network packets, then it has 30 seconds to read both network packets.</span></span> <span data-ttu-id="4913a-628"><xref:System.Data.SqlClient.SqlDataReader.Read%2A> を再度呼び出すと、必要なデータの読み取りに30秒がかかります。</span><span class="sxs-lookup"><span data-stu-id="4913a-628">If you call <xref:System.Data.SqlClient.SqlDataReader.Read%2A> again, it will have another 30 seconds to read any data that it requires.</span></span>  
  
```csharp
using System;  
using System.Data.SqlClient;  
///   
public class A {  
   ///   
   public static void Main() {  
      string connectionString = "";  
      // Wait for 5 second delay in the command  
      string queryString = "waitfor delay '00:00:05'";  
      using (SqlConnection connection = new SqlConnection(connectionString)) {  
         connection.Open();  
         SqlCommand command = new SqlCommand(queryString, connection);  
         // Setting command timeout to 1 second  
         command.CommandTimeout = 1;  
         try {  
            command.ExecuteNonQuery();  
         }  
         catch (SqlException e) {  
            Console.WriteLine("Got expected SqlException due to command timeout ");  
            Console.WriteLine(e);  
         }  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-629">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-629">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-630">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-630">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-631">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-631">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.CommandType : System.Data.CommandType with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandType" />
      <MemberSignature Language="C#" Value="public System.Data.CommandType CommandType { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandType As CommandType" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4913a-632"><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> プロパティの解釈方法を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-632">Gets or sets a value indicating how the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> property is to be interpreted.</span></span></summary>
        <value><span data-ttu-id="4913a-633"><see cref="T:System.Data.CommandType" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="4913a-633">One of the <see cref="T:System.Data.CommandType" /> values.</span></span> <span data-ttu-id="4913a-634">既定値は、<see langword="Text" /> です。</span><span class="sxs-lookup"><span data-stu-id="4913a-634">The default is <see langword="Text" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-635"><xref:System.Data.SqlClient.SqlCommand.CommandType%2A> プロパティを `StoredProcedure`に設定する場合は、<xref:System.Data.SqlClient.SqlCommand.CommandText%2A> プロパティをストアドプロシージャの名前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-635">When you set the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property to `StoredProcedure`, you should set the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="4913a-636">Execute メソッドのいずれかを呼び出すと、コマンドによりこのストアド プロシージャが実行されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-636">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="4913a-637">SQL Server 用の Microsoft .NET Framework Data Provider では、<xref:System.Data.CommandType.Text>の <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> で呼び出される SQL ステートメントまたはストアドプロシージャにパラメーターを渡すための疑問符 (?) プレースホルダーはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="4913a-637">The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called with a <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> of <xref:System.Data.CommandType.Text>.</span></span> <span data-ttu-id="4913a-638">この場合は、名前付きパラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-638">In this case, named parameters must be used.</span></span> <span data-ttu-id="4913a-639">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="4913a-639">For example:</span></span>  
  
 <span data-ttu-id="4913a-640">SELECT \* FROM Customers WHERE CustomerID = @CustomerID</span><span class="sxs-lookup"><span data-stu-id="4913a-640">SELECT \* FROM Customers WHERE CustomerID = @CustomerID</span></span>  
  
 <span data-ttu-id="4913a-641">詳細については、「[パラメーターおよびパラメーターデータ型の構成](/dotnet/framework/data/adonet/configuring-parameters-and-parameter-data-types)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-641">For more information, see [Configuring Parameters and Parameter Data Types](/dotnet/framework/data/adonet/configuring-parameters-and-parameter-data-types).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4913a-642">次の例では、<xref:System.Data.SqlClient.SqlCommand> を作成し、そのプロパティの一部を設定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-642">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4913a-643">値が正しい <see cref="T:System.Data.CommandType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="4913a-643">The value was not a valid <see cref="T:System.Data.CommandType" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-644">ADO.NET でのデータの取得および変更</span><span class="sxs-lookup"><span data-stu-id="4913a-644">Retrieving and Modifying Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-645">SQL Server と ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4913a-645">SQL Server and ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-646">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-646">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As SqlConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlConnection ^ Connection { System::Data::SqlClient::SqlConnection ^ get(); void set(System::Data::SqlClient::SqlConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.SqlClient.SqlConnection with get, set" Usage="System.Data.SqlClient.SqlCommand.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Connection")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4913a-647">この <see cref="T:System.Data.SqlClient.SqlCommand" /> のインスタンスで使用する <see cref="T:System.Data.SqlClient.SqlConnection" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-647">Gets or sets the <see cref="T:System.Data.SqlClient.SqlConnection" /> used by this instance of the <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span></summary>
        <value><span data-ttu-id="4913a-648">データ ソースへの接続。</span><span class="sxs-lookup"><span data-stu-id="4913a-648">The connection to a data source.</span></span> <span data-ttu-id="4913a-649">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4913a-649">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-650">コマンドが既存のトランザクションに参加していて、接続が変更された場合、コマンドを実行しようとすると <xref:System.InvalidOperationException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="4913a-650">If the command is enlisted in an existing transaction, and the connection is changed, trying to execute the command will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="4913a-651"><xref:System.Data.SqlClient.SqlCommand.Transaction%2A> プロパティが NULL でない場合、トランザクションが既にコミット済みまたはロールバック済みであれば、<xref:System.Data.SqlClient.SqlCommand.Transaction%2A> は NULL に設定されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-651">If the <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> property is not null and the transaction has already been committed or rolled back, <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> is set to null.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4913a-652">次の例では、<xref:System.Data.SqlClient.SqlCommand> を作成し、そのプロパティの一部を設定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-652">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.Connection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Connection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Connection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Connection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-653">コマンドがトランザクションに登録されていた間に、<see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> プロパティが変更されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-653">The <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> property was changed while the command was enlisted in a transaction.</span></span></exception>
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandText" />
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" />
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandType" />
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-654">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-654">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateDbParameter : unit -&gt; System.Data.Common.DbParameter" Usage="sqlCommand.CreateDbParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As SqlParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlParameter ^ CreateParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateParameter : unit -&gt; System.Data.SqlClient.SqlParameter" Usage="sqlCommand.CreateParameter " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.CreateParameter : unit -&gt; System.Data.SqlClient.SqlParameter" Usage="sqlCommand.CreateParameter " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4913a-655"><see cref="T:System.Data.SqlClient.SqlParameter" /> オブジェクトの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="4913a-655">Creates a new instance of a <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</span></span></summary>
        <returns><span data-ttu-id="4913a-656"><see cref="T:System.Data.SqlClient.SqlParameter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4913a-656">A <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-657"><xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A> メソッドは、厳密に型指定された <xref:System.Data.IDbCommand.CreateParameter%2A>のバージョンです。</span><span class="sxs-lookup"><span data-stu-id="4913a-657">The <xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A> method is a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-658">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-658">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-659">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-659">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-660">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-660">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbConnection : System.Data.Common.DbConnection with get, set" Usage="System.Data.SqlClient.SqlCommand.DbConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbParameterCollection : System.Data.Common.DbParameterCollection" Usage="System.Data.SqlClient.SqlCommand.DbParameterCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbTransaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.SqlClient.SqlCommand.DbTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.DesignTimeVisible : bool with get, set" Usage="System.Data.SqlClient.SqlCommand.DesignTimeVisible" />
      <MemberSignature Language="C#" Value="public bool DesignTimeVisible { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Property DesignTimeVisible As Boolean" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DesignTimeVisible { bool get(); void set(bool value); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4913a-661">コマンド オブジェクトを Windows フォーム デザイナー コントロールに表示する必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-661">Gets or sets a value indicating whether the command object should be visible in a Windows Form Designer control.</span></span></summary>
        <value><span data-ttu-id="4913a-662">コマンド オブジェクトをコントロールに表示する必要があるかどうかを示す値。</span><span class="sxs-lookup"><span data-stu-id="4913a-662">A value indicating whether the command object should be visible in a control.</span></span> <span data-ttu-id="4913a-663">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="4913a-663">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-664">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-664">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sqlCommand.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteNonQuery">
      <MemberSignature Language="C#" Value="public int EndExecuteNonQuery (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndExecuteNonQuery(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteNonQuery (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndExecuteNonQuery(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteNonQuery : IAsyncResult -&gt; int" Usage="sqlCommand.EndExecuteNonQuery asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="4913a-665"><see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> への呼び出しで返される <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="4913a-665">The <see cref="T:System.IAsyncResult" /> returned by the call to <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />.</span></span></param>
        <summary><span data-ttu-id="4913a-666">Transact-SQL ステートメントの非同期実行を完了します。</span><span class="sxs-lookup"><span data-stu-id="4913a-666">Finishes asynchronous execution of a Transact-SQL statement.</span></span></summary>
        <returns><span data-ttu-id="4913a-667">影響を受けた行の数 (<see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" /> と同じ動作)。</span><span class="sxs-lookup"><span data-stu-id="4913a-667">The number of rows affected (the same behavior as <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-668"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> を呼び出して [!INCLUDE[tsql](~/includes/tsql-md.md)] ステートメントを実行する場合は、操作を完了するために <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-668">When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> to execute a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> in order to complete the operation.</span></span> <span data-ttu-id="4913a-669">コマンドを実行するプロセスがまだ完了していない場合、このメソッドは操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="4913a-669">If the process of executing the command has not yet finished, this method blocks until the operation is complete.</span></span> <span data-ttu-id="4913a-670">ユーザーは、<xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> メソッドによって返された <xref:System.IAsyncResult> インスタンスを使用して、コマンドの操作が完了したことを確認できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-670">Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method.</span></span> <span data-ttu-id="4913a-671"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>の呼び出しでコールバックプロシージャが指定されている場合は、このメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-671">If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>, this method must be called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4913a-672"><xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> メソッドの使用方法を示す例については、「<xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-672">For examples demonstrating the use of the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4913a-673"><paramref name="asyncResult" /> パラメーターは null です (Microsoft Visual Basic では <see langword="Nothing" /> です)。</span><span class="sxs-lookup"><span data-stu-id="4913a-673"><paramref name="asyncResult" /> parameter is null (<see langword="Nothing" /> in Microsoft Visual Basic)</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-674"><see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> が 1 回のコマンドの実行に対して複数回呼び出されました。または、メソッドが実行メソッドに対して一致しませんでした (たとえば、<see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /> に対する呼び出しを実行するためにコードが <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> を呼び出しました)。</span><span class="sxs-lookup"><span data-stu-id="4913a-674"><see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> to complete execution of a call to <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-675"><see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> で指定された時間が経過しましたが、<see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> で指定された非同期操作が完了していません。</span><span class="sxs-lookup"><span data-stu-id="4913a-675">The amount of time specified in <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> elapsed and the asynchronous operation specified with <see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> is not complete.</span></span>  
 
<span data-ttu-id="4913a-676">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-676">-or-</span></span>

<span data-ttu-id="4913a-677">状況によっては、<see cref="T:System.IAsyncResult" /> が誤って <see langword="IsCompleted" /> に設定されている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-677">In some situations, <see cref="T:System.IAsyncResult" /> can be set to <see langword="IsCompleted" /> incorrectly.</span></span> <span data-ttu-id="4913a-678">これが発生して <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> が呼び出された場合、<see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> で指定された時間が経過したにもかかわらず <see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> で指定した非同期操作が完了していないと、EndExecuteNonQuery が SqlException エラーを発生させることがあります。</span><span class="sxs-lookup"><span data-stu-id="4913a-678">If this occurs and <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> is called, EndExecuteNonQuery could raise a SqlException error if the amount of time specified in <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> elapsed and the asynchronous operation specified with <see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> is not complete.</span></span> <span data-ttu-id="4913a-679">このような状況を修正するには、CommandTimeout の値を大きくするか、非同期操作で実行されている作業を軽減する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-679">To correct this situation, you should either increase the value of CommandTimeout or reduce the work being done by the asynchronous operation.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-680">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-680">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-681">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-681">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-682">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-682">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader EndExecuteReader (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader EndExecuteReader(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteReader (asyncResult As IAsyncResult) As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ EndExecuteReader(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteReader : IAsyncResult -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.EndExecuteReader asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="4913a-683"><see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" /> への呼び出しで返される <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="4913a-683">The <see cref="T:System.IAsyncResult" /> returned by the call to <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" />.</span></span></param>
        <summary><span data-ttu-id="4913a-684">Transact-SQL ステートメントの非同期実行を完了し、要求された <see cref="T:System.Data.SqlClient.SqlDataReader" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="4913a-684">Finishes asynchronous execution of a Transact-SQL statement, returning the requested <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="4913a-685">要求された行を取得するための <see cref="T:System.Data.SqlClient.SqlDataReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4913a-685">A <see cref="T:System.Data.SqlClient.SqlDataReader" /> object that can be used to retrieve the requested rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-686"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> を呼び出して Transact-sql ステートメントを実行する場合は、操作を完了するために <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-686">When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to execute a Transact-SQL statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> in order to complete the operation.</span></span> <span data-ttu-id="4913a-687">コマンドを実行するプロセスがまだ完了していない場合、このメソッドは操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="4913a-687">If the process of executing the command has not yet finished, this method blocks until the operation is complete.</span></span> <span data-ttu-id="4913a-688">ユーザーは、<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> メソッドによって返された <xref:System.IAsyncResult> インスタンスを使用して、コマンドの操作が完了したことを確認できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-688">Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method.</span></span> <span data-ttu-id="4913a-689"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>の呼び出しでコールバックプロシージャが指定されている場合は、このメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-689">If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>, this method must be called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4913a-690"><xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> メソッドの使用方法を示す例については、「<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-690">For examples demonstrating the use of the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4913a-691"><paramref name="asyncResult" /> パラメーターは null です (Microsoft Visual Basic では <see langword="Nothing" /> です)。</span><span class="sxs-lookup"><span data-stu-id="4913a-691"><paramref name="asyncResult" /> parameter is null (<see langword="Nothing" /> in Microsoft Visual Basic)</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-692"><see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> が 1 回のコマンドの実行に対して複数回呼び出されました。または、メソッドが実行メソッドに対して一致しませんでした (たとえば、<see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /> に対する呼び出しを実行するためにコードが <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> を呼び出しました)。</span><span class="sxs-lookup"><span data-stu-id="4913a-692"><see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> to complete execution of a call to <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-693">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-693">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-694">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-694">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-695">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-695">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteXmlReader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader EndExecuteXmlReader (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader EndExecuteXmlReader(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteXmlReader (asyncResult As IAsyncResult) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ EndExecuteXmlReader(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteXmlReader : IAsyncResult -&gt; System.Xml.XmlReader" Usage="sqlCommand.EndExecuteXmlReader asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="4913a-696"><see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /> への呼び出しで返される <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="4913a-696">The <see cref="T:System.IAsyncResult" /> returned by the call to <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />.</span></span></param>
        <summary><span data-ttu-id="4913a-697">Transact-SQL ステートメントの非同期実行を完了し、要求されたデータを XML として返します。</span><span class="sxs-lookup"><span data-stu-id="4913a-697">Finishes asynchronous execution of a Transact-SQL statement, returning the requested data as XML.</span></span></summary>
        <returns><span data-ttu-id="4913a-698">結果の XML データをフェッチするときに使用できる <see cref="T:System.Xml.XmlReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4913a-698">An <see cref="T:System.Xml.XmlReader" /> object that can be used to fetch the resulting XML data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-699"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> を呼び出して Transact-sql ステートメントを実行する場合は、操作を完了するために <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-699">When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to execute a Transact-SQL statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> in order to complete the operation.</span></span> <span data-ttu-id="4913a-700">コマンドを実行するプロセスがまだ完了していない場合、このメソッドは操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="4913a-700">If the process of executing the command has not yet finished, this method blocks until the operation is complete.</span></span> <span data-ttu-id="4913a-701">ユーザーは、<xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> メソッドによって返された <xref:System.IAsyncResult> インスタンスを使用して、コマンドの操作が完了したことを確認できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-701">Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method.</span></span> <span data-ttu-id="4913a-702"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>の呼び出しでコールバックプロシージャが指定されている場合は、このメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-702">If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>, this method must be called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4913a-703"><xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> メソッドの使用方法を示す例については、「<xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-703">For examples demonstrating the use of the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4913a-704"><paramref name="asyncResult" /> パラメーターは null です (Microsoft Visual Basic では <see langword="Nothing" /> です)。</span><span class="sxs-lookup"><span data-stu-id="4913a-704"><paramref name="asyncResult" /> parameter is null (<see langword="Nothing" /> in Microsoft Visual Basic)</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-705"><see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> が 1 回のコマンドの実行に対して複数回呼び出されました。または、メソッドが実行メソッドに対して一致しませんでした (たとえば、<see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> に対する呼び出しを実行するためにコードが <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> を呼び出しました)。</span><span class="sxs-lookup"><span data-stu-id="4913a-705"><see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> to complete execution of a call to <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-706">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-706">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-707">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-707">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-708">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-708">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReader : System.Data.CommandBehavior -&gt; System.Data.Common.DbDataReader" Usage="sqlCommand.ExecuteDbDataReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReaderAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt; ExecuteDbDataReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Data.Common.DbDataReader&gt; ExecuteDbDataReaderAsync(valuetype System.Data.CommandBehavior behavior, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReaderAsync (behavior As CommandBehavior, cancellationToken As CancellationToken) As Task(Of DbDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;System::Data::Common::DbDataReader ^&gt; ^ ExecuteDbDataReaderAsync(System::Data::CommandBehavior behavior, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReaderAsync : System.Data.CommandBehavior * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;" Usage="sqlCommand.ExecuteDbDataReaderAsync (behavior, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQuery : unit -&gt; int" Usage="sqlCommand.ExecuteNonQuery " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public int ExecuteNonQuery ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ExecuteNonQuery() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteNonQuery () As Integer" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ExecuteNonQuery();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member ExecuteNonQuery : unit -&gt; int&#xA;override this.ExecuteNonQuery : unit -&gt; int" Usage="sqlCommand.ExecuteNonQuery " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteNonQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4913a-709">接続に対して Transact-SQL ステートメントを実行し、影響を受けた行数を返します。</span><span class="sxs-lookup"><span data-stu-id="4913a-709">Executes a Transact-SQL statement against the connection and returns the number of rows affected.</span></span></summary>
        <returns><span data-ttu-id="4913a-710">影響を受けた行の数。</span><span class="sxs-lookup"><span data-stu-id="4913a-710">The number of rows affected.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-711">この <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> を使用すると、カタログ操作 (たとえば、データベースの構造に対してクエリを実行したり、テーブルなどのデータベースオブジェクトを作成したり) を実行したり、UPDATE、INSERT、または DELETE ステートメントを実行して、<xref:System.Data.DataSet> を使用せずにデータベース内のデータを変更したりできます。</span><span class="sxs-lookup"><span data-stu-id="4913a-711">You can use the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="4913a-712"><xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> は行を返しませんが、パラメーターにマップされた出力パラメーターまたは戻り値にはデータが設定されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-712">Although the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> returns no rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="4913a-713">UPDATE、INSERT、DELETE の各ステートメントで、戻り値はそのコマンドの影響を受ける行の数です。</span><span class="sxs-lookup"><span data-stu-id="4913a-713">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="4913a-714">その他のすべての種類のステートメントでは、戻り値は -1 です。</span><span class="sxs-lookup"><span data-stu-id="4913a-714">For all other types of statements, the return value is -1.</span></span>

<span data-ttu-id="4913a-715">挿入または更新するテーブルにトリガーが存在する場合、戻り値には、挿入操作または更新操作によって影響を受けた行数と、トリガーまたはトリガーの影響を受けた行数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="4913a-715">When a trigger exists on a table being inserted or updated, the return value includes the number of rows affected by both the insert or update operation and the number of rows affected by the trigger or triggers.</span></span>

<span data-ttu-id="4913a-716">接続に対して SET NOCOUNT ON が設定されている場合 (コマンドの実行前または実行の一部として、またはコマンドの実行によって開始されるトリガーの一部として)、個々のステートメントの影響を受ける行は、このメソッドによって返される影響を受ける行の数に影響を与えなくなります。</span><span class="sxs-lookup"><span data-stu-id="4913a-716">When SET NOCOUNT ON is set on the connection (before or as part of executing the command, or as part of a trigger initiated by the execution of the command) the rows affected by individual statements stop contributing to the count of rows affected that is returned by this method.</span></span>

<span data-ttu-id="4913a-717">カウントに寄与するステートメントが検出されなかった場合、戻り値は-1 になります。</span><span class="sxs-lookup"><span data-stu-id="4913a-717">If no statements are detected that contribute to the count, the return value is -1.</span></span> <span data-ttu-id="4913a-718">ロールバックが発生した場合、戻り値も-1 になります。</span><span class="sxs-lookup"><span data-stu-id="4913a-718">If a rollback occurs, the return value is also -1.</span></span>



## Examples  
 <span data-ttu-id="4913a-719">次の例では、<xref:System.Data.SqlClient.SqlCommand> を作成し、<xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>を使用して実行します。</span><span class="sxs-lookup"><span data-stu-id="4913a-719">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>.</span></span> <span data-ttu-id="4913a-720">この例には、Transact-sql ステートメント (UPDATE、INSERT、DELETE など) と、データソースへの接続に使用する文字列が渡されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-720">The example is passed a string that is a Transact-SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-721"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-721">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-722">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-722">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-723">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-723">-or-</span></span>

<span data-ttu-id="4913a-724"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-724">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-725">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-725">-or-</span></span>

<span data-ttu-id="4913a-726"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-726">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-727">ロックされた行に対するコマンドの実行中に、例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-727">An exception occurred while executing the command against a locked row.</span></span> <span data-ttu-id="4913a-728">Microsoft .NET Framework バージョン 1.0 を使用している場合は、この例外は生成されません。</span><span class="sxs-lookup"><span data-stu-id="4913a-728">This exception is not generated when you are using Microsoft .NET Framework version 1.0.</span></span>  

<span data-ttu-id="4913a-729">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-729">-or-</span></span>

<span data-ttu-id="4913a-730">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-730">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-731">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-731">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-732">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-732">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-733">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-733">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-734">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-734">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-735">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-735">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-736">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-736">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-737">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-737">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-738">ADO.NET でのデータの取得および変更</span><span class="sxs-lookup"><span data-stu-id="4913a-738">Retrieving and Modifying Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-739">SQL Server と ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4913a-739">SQL Server and ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-740">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-740">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQueryAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ExecuteNonQueryAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ExecuteNonQueryAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQueryAsync (cancellationToken As CancellationToken) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ExecuteNonQueryAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQueryAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="sqlCommand.ExecuteNonQueryAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="4913a-741">取り消し命令。</span><span class="sxs-lookup"><span data-stu-id="4913a-741">The cancellation instruction.</span></span></param>
        <summary><span data-ttu-id="4913a-742">接続に対して [!INCLUDE[tsql](~/includes/tsql-md.md)] ステートメントを実行し、影響を受ける行の数を返す <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" /> の非同期バージョン。</span><span class="sxs-lookup"><span data-stu-id="4913a-742">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />, which executes a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement against the connection and returns the number of rows affected.</span></span> <span data-ttu-id="4913a-743">キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄するように要求できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-743">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span>  <span data-ttu-id="4913a-744">例外は、返されたタスク オブジェクトによって報告されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-744">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="4913a-745">非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="4913a-745">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-746">SQL Server の .NET Framework Data Provider での非同期プログラミングの詳細については、「[非同期プログラミング](/dotnet/framework/data/adonet/asynchronous-programming)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-746">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](/dotnet/framework/data/adonet/asynchronous-programming).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-747"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-747">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-748">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-748">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-749">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-749">-or-</span></span>

<span data-ttu-id="4913a-750"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-750">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-751">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-751">-or-</span></span>

<span data-ttu-id="4913a-752"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-752">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-753">タスクの完了前に、同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> を複数回呼び出しています。</span><span class="sxs-lookup"><span data-stu-id="4913a-753">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span></span>  

<span data-ttu-id="4913a-754">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-754">-or-</span></span>

<span data-ttu-id="4913a-755">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-755">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-756">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-756">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-757">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-757">-or-</span></span> 
 <span data-ttu-id="4913a-758"><see langword="Context Connection=true" /> は接続文字列で指定されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-758"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-759">SQL Server がコマンド テキストの実行中にエラーを返しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-759">SQL Server returned an error while executing the command text.</span></span>  

<span data-ttu-id="4913a-760">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-760">-or-</span></span> 
<span data-ttu-id="4913a-761">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-761">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-762">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-762">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-763">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-763">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-764">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-764">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-765">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-765">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-766">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-766">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-767">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-767">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4913a-768"><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> を <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> に送信し、<see cref="T:System.Data.SqlClient.SqlDataReader" /> を構築します。</span><span class="sxs-lookup"><span data-stu-id="4913a-768">Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-769">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-769">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ ExecuteReader();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : unit -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.ExecuteReader " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.ExecuteReader : unit -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.ExecuteReader " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4913a-770"><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> を <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> に送信し、<see cref="T:System.Data.SqlClient.SqlDataReader" /> を構築します。</span><span class="sxs-lookup"><span data-stu-id="4913a-770">Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="4913a-771"><see cref="T:System.Data.SqlClient.SqlDataReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4913a-771">A <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-772"><xref:System.Data.SqlClient.SqlCommand.CommandType%2A> プロパティが `StoredProcedure` に設定されている場合は、<xref:System.Data.SqlClient.SqlCommand.CommandText%2A> プロパティをストアド プロシージャの名前に設定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-772">When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="4913a-773"><xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> を呼び出すときに、コマンドによってこのストアド プロシージャが実行されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-773">The command executes this stored procedure when you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4913a-774">トランザクションがデッドロックされている場合、<xref:System.Data.SqlClient.SqlDataReader.Read%2A> が呼び出されるまで例外がスローされない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-774">If a transaction is deadlocked, an exception may not be thrown until <xref:System.Data.SqlClient.SqlDataReader.Read%2A> is called.</span></span>  
  
 <span data-ttu-id="4913a-775">複数のアクティブな結果セット (MARS) 機能により、同じ接続を使用して複数のアクションを実行できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-775">The multiple active result set (MARS) feature allows for multiple actions using the same connection.</span></span>  
  
 <span data-ttu-id="4913a-776"><xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> または <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> を使用して XML データにアクセスする場合、SQL Server は、2033文字を超える XML 結果をそれぞれ2033文字の複数の行に返します。</span><span class="sxs-lookup"><span data-stu-id="4913a-776">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="4913a-777">この動作を回避するには、<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> または <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> を使用して FOR XML クエリを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4913a-777">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="4913a-778">次の例では、<xref:System.Data.SqlClient.SqlCommand>を作成し、Transact-sql SELECT ステートメントである文字列と、データソースへの接続に使用する文字列を渡して実行します。</span><span class="sxs-lookup"><span data-stu-id="4913a-778">The following example creates a <xref:System.Data.SqlClient.SqlCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteReader Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-779"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-779">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-780">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-780">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-781">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-781">-or-</span></span>

<span data-ttu-id="4913a-782"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-782">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-783">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-783">-or-</span></span>

<span data-ttu-id="4913a-784"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-784">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-785">ロックされた行に対するコマンドの実行中に、例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-785">An exception occurred while executing the command against a locked row.</span></span> <span data-ttu-id="4913a-786">Microsoft .NET Framework バージョン 1.0 を使用している場合は、この例外は生成されません。</span><span class="sxs-lookup"><span data-stu-id="4913a-786">This exception is not generated when you are using Microsoft .NET Framework version 1.0.</span></span>  

<span data-ttu-id="4913a-787">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-787">-or-</span></span>

<span data-ttu-id="4913a-788">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-788">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-789">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-789">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-790">現在の接続の状態は "終了" です。</span><span class="sxs-lookup"><span data-stu-id="4913a-790">The current state of the connection is closed.</span></span> <span data-ttu-id="4913a-791"><see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /> には開いている <see cref="T:System.Data.SqlClient.SqlConnection" /> が必要です。</span><span class="sxs-lookup"><span data-stu-id="4913a-791"><see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /> requires an open <see cref="T:System.Data.SqlClient.SqlConnection" />.</span></span>  

<span data-ttu-id="4913a-792">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-792">-or-</span></span>

<span data-ttu-id="4913a-793">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-793">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-794">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-794">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-795">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-795">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-796">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-796">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-797">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-797">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-798">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-798">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-799">ADO.NET でのデータの取得および変更</span><span class="sxs-lookup"><span data-stu-id="4913a-799">Retrieving and Modifying Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-800">SQL Server と ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4913a-800">SQL Server and ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-801">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-801">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.ExecuteReader behavior" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.ExecuteReader behavior" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="4913a-802"><see cref="T:System.Data.CommandBehavior" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="4913a-802">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="4913a-803"><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> を <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> に送信し、<see cref="T:System.Data.CommandBehavior" /> 値のいずれかを使用して <see cref="T:System.Data.SqlClient.SqlDataReader" /> を構築します。</span><span class="sxs-lookup"><span data-stu-id="4913a-803">Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />, and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="4913a-804"><see cref="T:System.Data.SqlClient.SqlDataReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4913a-804">A <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-805"><xref:System.Data.SqlClient.SqlCommand.CommandType%2A> プロパティが `StoredProcedure` に設定されている場合は、<xref:System.Data.SqlClient.SqlCommand.CommandText%2A> プロパティをストアド プロシージャの名前に設定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-805">When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="4913a-806"><xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> を呼び出すときに、コマンドによってこのストアド プロシージャが実行されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-806">The command executes this stored procedure when you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4913a-807"><xref:System.Data.CommandBehavior.SequentialAccess> を使用して、大きな値とバイナリデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="4913a-807">Use <xref:System.Data.CommandBehavior.SequentialAccess> to retrieve large values and binary data.</span></span> <span data-ttu-id="4913a-808">それ以外の場合、<xref:System.OutOfMemoryException> が発生し、接続が閉じられる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-808">Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.</span></span>  
  
 <span data-ttu-id="4913a-809">複数のアクティブな結果セット (MARS) 機能により、同じ接続を使用して複数のアクションを実行できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-809">The multiple active result set (MARS) feature allows for multiple actions using the same connection.</span></span>  
  
 <span data-ttu-id="4913a-810"><xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> または <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> を使用して XML データにアクセスする場合、SQL Server は、2033文字を超える XML 結果をそれぞれ2033文字の複数の行に返します。</span><span class="sxs-lookup"><span data-stu-id="4913a-810">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="4913a-811">この動作を回避するには、<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> または <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> を使用して FOR XML クエリを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4913a-811">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="4913a-812">次の例では、<xref:System.Data.SqlClient.SqlCommand>を作成し、Transact-sql SELECT ステートメントである文字列と、データソースへの接続に使用する文字列を渡して実行します。</span><span class="sxs-lookup"><span data-stu-id="4913a-812">The following example creates a <xref:System.Data.SqlClient.SqlCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.</span></span> <span data-ttu-id="4913a-813"><xref:System.Data.CommandBehavior> が <xref:System.Data.CommandBehavior.CloseConnection> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-813"><xref:System.Data.CommandBehavior> is set to <xref:System.Data.CommandBehavior.CloseConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-814"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-814">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-815">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-815">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-816">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-816">-or-</span></span>

<span data-ttu-id="4913a-817"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-817">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-818">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-818">-or-</span></span>

<span data-ttu-id="4913a-819"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-819">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-820">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-820">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-821">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-821">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-822">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-822">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-823">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-823">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-824">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-824">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-825">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-825">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-826">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-826">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-827">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-827">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-828">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-828">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-829">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-829">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-830">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-830">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReaderAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4913a-831">この <see cref="T:System.Data.SqlClient.SqlCommand" /> によって記述された [!INCLUDE[tsql](~/includes/tsql-md.md)] ステートメントまたはストアド プロシージャの非同期実行を開始します。</span><span class="sxs-lookup"><span data-stu-id="4913a-831">Initiates the asynchronous execution of the [!INCLUDE[tsql](~/includes/tsql-md.md)] statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-832">SQL Server の .NET Framework Data Provider での非同期プログラミングの詳細については、「[非同期プログラミング](/dotnet/framework/data/adonet/asynchronous-programming)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-832">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](/dotnet/framework/data/adonet/asynchronous-programming).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-833">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-833">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReaderAsync () As Task(Of SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4913a-834"><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> に <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> を送信し <see cref="T:System.Data.SqlClient.SqlDataReader" /> を構築する、<see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /> の非同期バージョン。</span><span class="sxs-lookup"><span data-stu-id="4913a-834">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />, which sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span></span> <span data-ttu-id="4913a-835">例外は、返されたタスク オブジェクトによって報告されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-835">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="4913a-836">非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="4913a-836">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-837">SQL Server の .NET Framework Data Provider での非同期プログラミングの詳細については、「[非同期プログラミング](/dotnet/framework/data/adonet/asynchronous-programming)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-837">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](/dotnet/framework/data/adonet/asynchronous-programming).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-838"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-838">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-839">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-839">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-840">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-840">-or-</span></span>

<span data-ttu-id="4913a-841"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-841">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-842">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-842">-or-</span></span>

<span data-ttu-id="4913a-843"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-843">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4913a-844">正しくない <see cref="T:System.Data.CommandBehavior" /> 値。</span><span class="sxs-lookup"><span data-stu-id="4913a-844">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-845">タスクの完了前に、同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" /> を複数回呼び出しています。</span><span class="sxs-lookup"><span data-stu-id="4913a-845">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" /> more than once for the same instance before task completion.</span></span>  

<span data-ttu-id="4913a-846">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-846">-or-</span></span>

<span data-ttu-id="4913a-847">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-847">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-848">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-848">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-849">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-849">-or-</span></span>

 <span data-ttu-id="4913a-850"><see langword="Context Connection=true" /> は接続文字列で指定されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-850"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-851">SQL Server がコマンド テキストの実行中にエラーを返しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-851">SQL Server returned an error while executing the command text.</span></span>  

<span data-ttu-id="4913a-852">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-852">-or-</span></span>

<span data-ttu-id="4913a-853">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-853">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-854">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-854">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-855">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-855">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-856">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-856">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-857">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-857">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-858">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-858">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-859">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-859">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReaderAsync (behavior As CommandBehavior) As Task(Of SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Data.CommandBehavior -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="4913a-860">ステートメントの実行とデータ取得に関するオプション。</span><span class="sxs-lookup"><span data-stu-id="4913a-860">Options for statement execution and data retrieval.</span></span>  <span data-ttu-id="4913a-861"><see langword="Default" /> に設定されている場合、<see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> は完全なタスクを返す前に行全体を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4913a-861">When is set to <see langword="Default" />, <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> reads the entire row before returning a complete Task.</span></span></param>
        <summary><span data-ttu-id="4913a-862"><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> に <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> を送信し <see cref="T:System.Data.SqlClient.SqlDataReader" /> を構築する、<see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" /> の非同期バージョン。</span><span class="sxs-lookup"><span data-stu-id="4913a-862">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />, which sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />, and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span></span> <span data-ttu-id="4913a-863">例外は、返されたタスク オブジェクトによって報告されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-863">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="4913a-864">非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="4913a-864">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-865">SQL Server の .NET Framework Data Provider での非同期プログラミングの詳細については、「[非同期プログラミング](/dotnet/framework/data/adonet/asynchronous-programming)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-865">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](/dotnet/framework/data/adonet/asynchronous-programming).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-866"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-866">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-867">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-867">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-868">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-868">-or-</span></span>

<span data-ttu-id="4913a-869"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-869">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-870">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-870">-or-</span></span>

<span data-ttu-id="4913a-871"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-871">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4913a-872">正しくない <see cref="T:System.Data.CommandBehavior" /> 値。</span><span class="sxs-lookup"><span data-stu-id="4913a-872">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-873">タスクの完了前に、同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" /> を複数回呼び出しています。</span><span class="sxs-lookup"><span data-stu-id="4913a-873">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" /> more than once for the same instance before task completion.</span></span>  

<span data-ttu-id="4913a-874">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-874">-or-</span></span>

<span data-ttu-id="4913a-875">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-875">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-876">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-876">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-877">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-877">-or-</span></span>

 <span data-ttu-id="4913a-878"><see langword="Context Connection=true" /> は接続文字列で指定されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-878"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-879">SQL Server がコマンド テキストの実行中にエラーを返しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-879">SQL Server returned an error while executing the command text.</span></span>  

<span data-ttu-id="4913a-880">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-880">-or-</span></span>

<span data-ttu-id="4913a-881">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-881">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-882">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-882">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-883">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-883">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-884">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-884">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-885">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-885">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-886">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-886">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-887">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-887">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReaderAsync (cancellationToken As CancellationToken) As Task(Of SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="4913a-888">取り消し命令。</span><span class="sxs-lookup"><span data-stu-id="4913a-888">The cancellation instruction.</span></span></param>
        <summary><span data-ttu-id="4913a-889"><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> に <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> を送信し <see cref="T:System.Data.SqlClient.SqlDataReader" /> を構築する、<see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /> の非同期バージョン。</span><span class="sxs-lookup"><span data-stu-id="4913a-889">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />, which sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span></span>  
  
<span data-ttu-id="4913a-890">キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄するように要求できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-890">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span>  <span data-ttu-id="4913a-891">例外は、返されたタスク オブジェクトによって報告されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-891">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="4913a-892">非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="4913a-892">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-893">SQL Server の .NET Framework Data Provider での非同期プログラミングの詳細については、「[非同期プログラミング](/dotnet/framework/data/adonet/asynchronous-programming)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-893">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](/dotnet/framework/data/adonet/asynchronous-programming).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-894"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-894">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-895">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-895">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-896">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-896">-or-</span></span>

<span data-ttu-id="4913a-897"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-897">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-898">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-898">-or-</span></span> 
<span data-ttu-id="4913a-899"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-899">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4913a-900">正しくない <see cref="T:System.Data.CommandBehavior" /> 値。</span><span class="sxs-lookup"><span data-stu-id="4913a-900">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-901">タスクの完了前に、同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> を複数回呼び出しています。</span><span class="sxs-lookup"><span data-stu-id="4913a-901">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span></span>  

<span data-ttu-id="4913a-902">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-902">-or-</span></span>

<span data-ttu-id="4913a-903">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-903">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-904">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-904">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-905">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-905">-or-</span></span>

 <span data-ttu-id="4913a-906"><see langword="Context Connection=true" /> は接続文字列で指定されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-906"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-907">SQL Server がコマンド テキストの実行中にエラーを返しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-907">SQL Server returned an error while executing the command text.</span></span>  

<span data-ttu-id="4913a-908">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-908">-or-</span></span>

<span data-ttu-id="4913a-909">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-909">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-910">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-910">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-911">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-911">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-912">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-912">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-913">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-913">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-914">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-914">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-915">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-915">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Data.CommandBehavior behavior, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReaderAsync (behavior As CommandBehavior, cancellationToken As CancellationToken) As Task(Of SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Data::CommandBehavior behavior, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Data.CommandBehavior * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync (behavior, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="4913a-916">ステートメントの実行とデータ取得に関するオプション。</span><span class="sxs-lookup"><span data-stu-id="4913a-916">Options for statement execution and data retrieval.</span></span>  <span data-ttu-id="4913a-917"><see langword="Default" />に設定されている場合、 <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> は完全なタスクを返す前に行全体を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4913a-917">When is set to <see langword="Default" />, <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> reads the entire row before returning a complete Task.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="4913a-918">取り消し命令。</span><span class="sxs-lookup"><span data-stu-id="4913a-918">The cancellation instruction.</span></span></param>
        <summary><span data-ttu-id="4913a-919"><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> に <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> を送信し、<see cref="T:System.Data.SqlClient.SqlDataReader" /> を構築する、<see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" /> の非同期バージョン。</span><span class="sxs-lookup"><span data-stu-id="4913a-919">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />, which sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />, and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" /></span></span>  
  
<span data-ttu-id="4913a-920">キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄するように要求できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-920">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span>  <span data-ttu-id="4913a-921">例外は、返されたタスク オブジェクトによって報告されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-921">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="4913a-922">非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="4913a-922">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-923">SQL Server の .NET Framework Data Provider での非同期プログラミングの詳細については、「[非同期プログラミング](/dotnet/framework/data/adonet/asynchronous-programming)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-923">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](/dotnet/framework/data/adonet/asynchronous-programming).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-924"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-924">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-925">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-925">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-926">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-926">-or-</span></span>

<span data-ttu-id="4913a-927"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-927">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-928">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-928">-or-</span></span>

<span data-ttu-id="4913a-929"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-929">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4913a-930">正しくない <see cref="T:System.Data.CommandBehavior" /> 値。</span><span class="sxs-lookup"><span data-stu-id="4913a-930">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-931">タスクの完了前に、同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> を複数回呼び出しています。</span><span class="sxs-lookup"><span data-stu-id="4913a-931">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span></span>  

<span data-ttu-id="4913a-932">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-932">-or-</span></span>

<span data-ttu-id="4913a-933">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-933">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-934">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-934">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-935">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-935">-or-</span></span>

<span data-ttu-id="4913a-936"><see langword="Context Connection=true" /> は接続文字列で指定されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-936"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-937">SQL Server がコマンド テキストの実行中にエラーを返しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-937">SQL Server returned an error while executing the command text.</span></span>  

<span data-ttu-id="4913a-938">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-938">-or-</span></span>

<span data-ttu-id="4913a-939">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-939">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-940">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-940">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-941">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-941">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-942">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-942">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-943">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-943">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-944">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-944">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-945">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-945">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalar : unit -&gt; obj" Usage="sqlCommand.ExecuteScalar " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public object ExecuteScalar ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteScalar() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteScalar () As Object" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ExecuteScalar();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member ExecuteScalar : unit -&gt; obj&#xA;override this.ExecuteScalar : unit -&gt; obj" Usage="sqlCommand.ExecuteScalar " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteScalar</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4913a-946">クエリを実行し、そのクエリが返す結果セットの最初の行にある最初の列を返します。</span><span class="sxs-lookup"><span data-stu-id="4913a-946">Executes the query, and returns the first column of the first row in the result set returned by the query.</span></span> <span data-ttu-id="4913a-947">以降の列または行は無視されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-947">Additional columns or rows are ignored.</span></span></summary>
        <returns><span data-ttu-id="4913a-948">結果セットの最初の行の最初の列。結果セットが空の場合は、null 参照 (Visual Basic の <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="4913a-948">The first column of the first row in the result set, or a null reference (<see langword="Nothing" /> in Visual Basic) if the result set is empty.</span></span> <span data-ttu-id="4913a-949">最大 2,033 文字を返します。</span><span class="sxs-lookup"><span data-stu-id="4913a-949">Returns a maximum of 2033 characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-950"><xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> メソッドを使用して、データベースから1つの値 (集計値など) を取得します。</span><span class="sxs-lookup"><span data-stu-id="4913a-950">Use the <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="4913a-951">これには、<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> メソッドを使用するよりも少ないコードが必要であり、<xref:System.Data.SqlClient.SqlDataReader>によって返されるデータを使用して1つの値を生成するために必要な操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="4913a-951">This requires less code than using the <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> method, and then performing the operations that you need to generate the single value using the data returned by a <xref:System.Data.SqlClient.SqlDataReader>.</span></span>  
  
 <span data-ttu-id="4913a-952">一般的な <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> クエリは、次C#の例のように書式設定できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-952">A typical <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```csharp
cmd.CommandText = "SELECT COUNT(*) FROM dbo.region";  
Int32 count = (Int32) cmd.ExecuteScalar();  
```  
  
## Examples  
 <span data-ttu-id="4913a-953">次の例では、<xref:System.Data.SqlClient.SqlCommand> を作成し、<xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>を使用して実行します。</span><span class="sxs-lookup"><span data-stu-id="4913a-953">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="4913a-954">この例には、テーブルに挿入される新しい値を表す文字列と、データソースへの接続に使用する文字列が渡されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-954">The example is passed a string representing a new value to be inserted into a table, and a string to use to connect to the data source.</span></span> <span data-ttu-id="4913a-955">関数は、新しい行が挿入された場合は新しい**id**列の値を返し、失敗した場合は0を返します。</span><span class="sxs-lookup"><span data-stu-id="4913a-955">The function returns the new **Identity** column value if a new row was inserted, 0 on failure.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.ExecuteScalar/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.ExecuteScalar/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-956"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-956">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-957">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-957">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-958">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-958">-or-</span></span>

<span data-ttu-id="4913a-959"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-959">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-960">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-960">-or-</span></span>

<span data-ttu-id="4913a-961"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-961">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-962">ロックされた行に対するコマンドの実行中に、例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-962">An exception occurred while executing the command against a locked row.</span></span> <span data-ttu-id="4913a-963">Microsoft .NET Framework バージョン 1.0 を使用している場合は、この例外は生成されません。</span><span class="sxs-lookup"><span data-stu-id="4913a-963">This exception is not generated when you are using Microsoft .NET Framework version 1.0.</span></span>  

<span data-ttu-id="4913a-964">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-964">-or-</span></span>

<span data-ttu-id="4913a-965">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-965">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-966">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-966">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-967">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-967">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-968">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-968">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-969">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-969">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-970">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-970">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-971">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-971">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-972">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-972">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-973">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-973">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-974">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-974">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-975">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-975">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalarAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;object&gt; ExecuteScalarAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ExecuteScalarAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalarAsync (cancellationToken As CancellationToken) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ExecuteScalarAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalarAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="sqlCommand.ExecuteScalarAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="4913a-976">取り消し命令。</span><span class="sxs-lookup"><span data-stu-id="4913a-976">The cancellation instruction.</span></span></param>
        <summary><span data-ttu-id="4913a-977">クエリを非同期で実行し、クエリで返された結果セットの最初の行の最初の列を返す <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" /> の非同期バージョン。</span><span class="sxs-lookup"><span data-stu-id="4913a-977">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" />, which executes the query asynchronously and returns the first column of the first row in the result set returned by the query.</span></span> <span data-ttu-id="4913a-978">以降の列または行は無視されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-978">Additional columns or rows are ignored.</span></span>  
  
<span data-ttu-id="4913a-979">キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄するように要求できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-979">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span> <span data-ttu-id="4913a-980">例外は、返されたタスク オブジェクトによって報告されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-980">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="4913a-981">非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="4913a-981">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-982">SQL Server の .NET Framework Data Provider での非同期プログラミングの詳細については、「[非同期プログラミング](/dotnet/framework/data/adonet/asynchronous-programming)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-982">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](/dotnet/framework/data/adonet/asynchronous-programming).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-983"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-983">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-984">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-984">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-985">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-985">-or-</span></span>

<span data-ttu-id="4913a-986"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-986">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-987">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-987">-or-</span></span>

<span data-ttu-id="4913a-988"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-988">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-989">タスクの完了前に、同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> を複数回呼び出しています。</span><span class="sxs-lookup"><span data-stu-id="4913a-989">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span></span>  

<span data-ttu-id="4913a-990">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-990">-or-</span></span>

<span data-ttu-id="4913a-991">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-991">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-992">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-992">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-993">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-993">-or-</span></span>

<span data-ttu-id="4913a-994"><see langword="Context Connection=true" /> は接続文字列で指定されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-994"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-995">SQL Server がコマンド テキストの実行中にエラーを返しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-995">SQL Server returned an error while executing the command text.</span></span>  

<span data-ttu-id="4913a-996">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-996">-or-</span></span>

<span data-ttu-id="4913a-997">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-997">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-998">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-998">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-999">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-999">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-1000">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1000">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-1001">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1001">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-1002">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1002">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-1003">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-1003">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteXmlReader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader ExecuteXmlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader ExecuteXmlReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteXmlReader () As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ ExecuteXmlReader();" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReader : unit -&gt; System.Xml.XmlReader" Usage="sqlCommand.ExecuteXmlReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4913a-1004"><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> を <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> に送信し、<see cref="T:System.Xml.XmlReader" /> オブジェクトを構築します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1004">Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds an <see cref="T:System.Xml.XmlReader" /> object.</span></span></summary>
        <returns><span data-ttu-id="4913a-1005"><see cref="T:System.Xml.XmlReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4913a-1005">An <see cref="T:System.Xml.XmlReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-1006">このメソッドによって返される**XmlReader**は、非同期操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="4913a-1006">The **XmlReader** returned by this method does not support asynchronous operations.</span></span>

 <span data-ttu-id="4913a-1007"><xref:System.Data.SqlClient.SqlCommand.CommandText%2A> プロパティは、通常、有効な FOR XML 句を含む [!INCLUDE[tsql](~/includes/tsql-md.md)] ステートメントを指定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1007">The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement with a valid FOR XML clause.</span></span> <span data-ttu-id="4913a-1008">ただし、<xref:System.Data.SqlClient.SqlCommand.CommandText%2A> では、有効な XML を含むデータ `ntext`、`nvarchar` または `xml` データ型で定義された列の内容を返すステートメントを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="4913a-1008">However, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> can also specify a statement that returns `ntext` or `nvarchar` data that contains valid XML, or the contents of a column defined with the `xml` data type.</span></span>  
  
 <span data-ttu-id="4913a-1009">一般的な<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>クエリは、Microsoft Visual C# の例を次のように書式設定できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-1009">A typical <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> query can be formatted as in the following Microsoft Visual C# example:</span></span>  
  
```csharp
SqlCommand command = new SqlCommand("SELECT * FROM dbo.Customers FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 <span data-ttu-id="4913a-1010">このメソッドを使用して、XML データを含む単一行の単一列の結果セットを取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="4913a-1010">This method can also be used to retrieve a single-row, single-column result set that contains XML data.</span></span> <span data-ttu-id="4913a-1011">この場合、複数の行が返されると、<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> メソッドは、<xref:System.Xml.XmlReader> を最初の行の値にアタッチし、結果セットの残りの部分を破棄します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1011">In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.</span></span>  
  
 <span data-ttu-id="4913a-1012">複数のアクティブな結果セット (MARS) 機能により、同じ接続を使用して複数のアクションを実行できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-1012">The multiple active result set (MARS) feature allows for multiple actions using the same connection.</span></span>  
  
 <span data-ttu-id="4913a-1013"><xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> または <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> を使用して XML データにアクセスする場合、SQL Server は、2033文字を超える XML 結果をそれぞれ2033文字の複数の行に返します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1013">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="4913a-1014">この動作を回避するには、<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> または <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> を使用して FOR XML クエリを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4913a-1014">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span>


## Examples  
 <span data-ttu-id="4913a-1015">次の例では、<xref:System.Data.SqlClient.SqlCommand> を作成し、<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>を使用して実行します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1015">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>.</span></span> <span data-ttu-id="4913a-1016">この例には、Transact-sql FOR XML SELECT ステートメントである文字列と、データソースへの接続に使用する文字列が渡されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-1016">The example is passed a string that is a Transact-SQL FOR XML SELECT statement, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteXmlReader/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteXmlReader/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-1017"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1017">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-1018">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1018">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-1019">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-1019">-or-</span></span>

<span data-ttu-id="4913a-1020"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1020">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-1021">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-1021">-or-</span></span>

<span data-ttu-id="4913a-1022"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1022">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-1023">ロックされた行に対するコマンドの実行中に、例外が発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1023">An exception occurred while executing the command against a locked row.</span></span> <span data-ttu-id="4913a-1024">Microsoft .NET Framework バージョン 1.0 を使用している場合は、この例外は生成されません。</span><span class="sxs-lookup"><span data-stu-id="4913a-1024">This exception is not generated when you are using Microsoft .NET Framework version 1.0.</span></span>  

<span data-ttu-id="4913a-1025">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-1025">-or-</span></span>

<span data-ttu-id="4913a-1026">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1026">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-1027">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1027">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-1028">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1028">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-1029">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1029">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-1030">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1030">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-1031">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1031">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-1032">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1032">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-1033">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1033">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-1034">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-1034">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-1035">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-1035">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-1036">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-1036">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteXmlReaderAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4913a-1037">この <see cref="T:System.Data.SqlClient.SqlCommand" /> によって定義された Transact-SQL ステートメントまたはストアド プロシージャの非同期実行を開始し、結果を <see cref="T:System.Xml.XmlReader" /> オブジェクトとして返します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1037">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" /> and returns results as an <see cref="T:System.Xml.XmlReader" /> object.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-1038">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-1038">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteXmlReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt; ExecuteXmlReaderAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Xml.XmlReader&gt; ExecuteXmlReaderAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteXmlReaderAsync () As Task(Of XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Xml::XmlReader ^&gt; ^ ExecuteXmlReaderAsync();" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReaderAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;" Usage="sqlCommand.ExecuteXmlReaderAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4913a-1039"><see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> に <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> を送信し、<see cref="T:System.Xml.XmlReader" /> オブジェクトを構築する <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" /> の非同期バージョン。</span><span class="sxs-lookup"><span data-stu-id="4913a-1039">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />, which sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds an <see cref="T:System.Xml.XmlReader" /> object.</span></span>  
  
<span data-ttu-id="4913a-1040">例外は、返されたタスク オブジェクトによって報告されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-1040">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="4913a-1041">非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="4913a-1041">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="4913a-1042">このメソッドによって返される**XmlReader**は、非同期操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="4913a-1042">The **XmlReader** returned by this method does not support asynchronous operations.</span></span>

<span data-ttu-id="4913a-1043">SQL Server の .NET Framework Data Provider での非同期プログラミングの詳細については、「[非同期プログラミング](/dotnet/framework/data/adonet/asynchronous-programming)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1043">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](/dotnet/framework/data/adonet/asynchronous-programming).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-1044"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1044">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-1045">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1045">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-1046">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-1046">-or-</span></span>

<span data-ttu-id="4913a-1047"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1047">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-1048">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-1048">-or-</span></span>

<span data-ttu-id="4913a-1049"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1049">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-1050">タスクの完了前に、同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> を複数回呼び出しています。</span><span class="sxs-lookup"><span data-stu-id="4913a-1050">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span></span>  

<span data-ttu-id="4913a-1051">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-1051">-or-</span></span>

<span data-ttu-id="4913a-1052">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1052">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-1053">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1053">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-1054">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-1054">-or-</span></span>

<span data-ttu-id="4913a-1055"><see langword="Context Connection=true" /> は接続文字列で指定されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-1055"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-1056">SQL Server がコマンド テキストの実行中にエラーを返しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1056">SQL Server returned an error while executing the command text.</span></span>  

<span data-ttu-id="4913a-1057">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-1057">-or-</span></span>

<span data-ttu-id="4913a-1058">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1058">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-1059">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1059">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-1060">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1060">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-1061">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1061">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-1062">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1062">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-1063">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1063">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-1064">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-1064">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteXmlReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt; ExecuteXmlReaderAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Xml.XmlReader&gt; ExecuteXmlReaderAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteXmlReaderAsync (cancellationToken As CancellationToken) As Task(Of XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Xml::XmlReader ^&gt; ^ ExecuteXmlReaderAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReaderAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;" Usage="sqlCommand.ExecuteXmlReaderAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="4913a-1065">取り消し命令。</span><span class="sxs-lookup"><span data-stu-id="4913a-1065">The cancellation instruction.</span></span></param>
        <summary><span data-ttu-id="4913a-1066"><see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> に <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> を送信し、<see cref="T:System.Xml.XmlReader" /> オブジェクトを構築する <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" /> の非同期バージョン。</span><span class="sxs-lookup"><span data-stu-id="4913a-1066">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />, which sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds an <see cref="T:System.Xml.XmlReader" /> object.</span></span>  
  
<span data-ttu-id="4913a-1067">キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄するように要求できます。</span><span class="sxs-lookup"><span data-stu-id="4913a-1067">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span>  <span data-ttu-id="4913a-1068">例外は、返されたタスク オブジェクトによって報告されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-1068">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="4913a-1069">非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="4913a-1069">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="4913a-1070">このメソッドによって返される**XmlReader**は、非同期操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="4913a-1070">The **XmlReader** returned by this method does not support asynchronous operations.</span></span>

<span data-ttu-id="4913a-1071">SQL Server の .NET Framework Data Provider での非同期プログラミングの詳細については、「[非同期プログラミング](/dotnet/framework/data/adonet/asynchronous-programming)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1071">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](/dotnet/framework/data/adonet/asynchronous-programming).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4913a-1072"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.Stream" /> に設定されたときに、**Binary** でも **VarBinary** でもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1072">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="4913a-1073">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1073">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-1074">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-1074">-or-</span></span>

<span data-ttu-id="4913a-1075"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.IO.TextReader" /> に設定されたときに、**Char**、**NChar**、**NVarChar**、**VarChar**、**Xml** のいずれでもない <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1075">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="4913a-1076">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-1076">-or-</span></span>

<span data-ttu-id="4913a-1077"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が <see cref="T:System.Xml.XmlReader" /> に設定されたときに、**Xml** 以外の <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> が使用されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1077">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4913a-1078">タスクの完了前に、同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> を複数回呼び出しています。</span><span class="sxs-lookup"><span data-stu-id="4913a-1078">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span></span>  

<span data-ttu-id="4913a-1079">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-1079">-or-</span></span>

<span data-ttu-id="4913a-1080">ストリーミング操作中に、<see cref="T:System.Data.SqlClient.SqlConnection" /> が閉じられたか切断されました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1080">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="4913a-1081">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1081">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="4913a-1082">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-1082">-or-</span></span>

<span data-ttu-id="4913a-1083"><see langword="Context Connection=true" /> は接続文字列で指定されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-1083"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="4913a-1084">SQL Server がコマンド テキストの実行中にエラーを返しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1084">SQL Server returned an error while executing the command text.</span></span>  

<span data-ttu-id="4913a-1085">- または -</span><span class="sxs-lookup"><span data-stu-id="4913a-1085">-or-</span></span>

<span data-ttu-id="4913a-1086">ストリーミング操作中にタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1086">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="4913a-1087">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1087">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4913a-1088">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1088">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="4913a-1089">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1089">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4913a-1090">ストリーミング操作中に、<see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" />、または <see cref="T:System.IO.TextReader" /> オブジェクトが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1090">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="4913a-1091">ストリーミングの詳細については、「[SqlClient ストリーミング サポート](/dotnet/framework/data/adonet/sqlclient-streaming-support)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1091">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-1092">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-1092">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Notification">
      <MemberSignature Language="C#" Value="public System.Data.Sql.SqlNotificationRequest Notification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Sql.SqlNotificationRequest Notification" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Notification" />
      <MemberSignature Language="VB.NET" Value="Public Property Notification As SqlNotificationRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Sql::SqlNotificationRequest ^ Notification { System::Data::Sql::SqlNotificationRequest ^ get(); void set(System::Data::Sql::SqlNotificationRequest ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Notification : System.Data.Sql.SqlNotificationRequest with get, set" Usage="System.Data.SqlClient.SqlCommand.Notification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Sql.SqlNotificationRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4913a-1093">このコマンドにバインドされた <see cref="T:System.Data.Sql.SqlNotificationRequest" /> オブジェクトを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1093">Gets or sets a value that specifies the <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object bound to this command.</span></span></summary>
        <value><span data-ttu-id="4913a-1094">null (既定) に設定されている場合、通知を要求することはできません。</span><span class="sxs-lookup"><span data-stu-id="4913a-1094">When set to null (default), no notification should be requested.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-1095">このプロパティを有効にするには、コマンドを実行する前に、このプロパティの値を設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-1095">You must set the value for this property before the command is executed for it to take effect.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/query-notifications-in-sql-server"><span data-ttu-id="4913a-1096">クエリ通知機能の使用</span><span class="sxs-lookup"><span data-stu-id="4913a-1096">Using Query Notifications</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-1097">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-1097">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-1098">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-1098">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-1099">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-1099">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NotificationAutoEnlist">
      <MemberSignature Language="C#" Value="public bool NotificationAutoEnlist { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotificationAutoEnlist" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist" />
      <MemberSignature Language="VB.NET" Value="Public Property NotificationAutoEnlist As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotificationAutoEnlist { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotificationAutoEnlist : bool with get, set" Usage="System.Data.SqlClient.SqlCommand.NotificationAutoEnlist" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4913a-1100">共通 <see cref="T:System.Data.SqlClient.SqlDependency" /> オブジェクトからのクエリ通知をアプリケーションで自動的に受信するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1100">Gets or sets a value indicating whether the application should automatically receive query notifications from a common <see cref="T:System.Data.SqlClient.SqlDependency" /> object.</span></span></summary>
        <value><span data-ttu-id="4913a-1101">アプリケーションでクエリ通知を自動的に受信する必要があるかどうかを <see langword="true" /> します。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4913a-1101"><see langword="true" /> if the application should automatically receive query notifications; otherwise <see langword="false" />.</span></span> <span data-ttu-id="4913a-1102">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="4913a-1102">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-1103">この機能は、SQL Server に対して ASP ページで実行されるすべてのコマンドの通知を受信するために、ASP.NET アプリケーションで使用されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-1103">This feature is used in ASP.NET applications to receive notifications for all commands executed in an ASP page against SQL Server.</span></span> <span data-ttu-id="4913a-1104">これにより、ASP.NET は、ページの表示に使用されるクエリによって異なる結果が生成されるまで、ページをキャッシュできます。</span><span class="sxs-lookup"><span data-stu-id="4913a-1104">This enables ASP.NET to cache the page until the queries used to render the page would produce a different result.</span></span> <span data-ttu-id="4913a-1105">自動参加。</span><span class="sxs-lookup"><span data-stu-id="4913a-1105">Automatic enlistment.</span></span>  
  
 <span data-ttu-id="4913a-1106">このプロパティは、クエリ通知をサポートする SQL Server のバージョンにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="4913a-1106">This property applies only to versions of SQL Server that support query notifications.</span></span> <span data-ttu-id="4913a-1107">以前のバージョンの場合、このプロパティを `true` に設定しても、アプリケーションには影響しません。</span><span class="sxs-lookup"><span data-stu-id="4913a-1107">For earlier versions, setting this property to `true` has no effect on the application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/query-notifications-in-sql-server"><span data-ttu-id="4913a-1108">クエリ通知機能の使用</span><span class="sxs-lookup"><span data-stu-id="4913a-1108">Using Query Notifications</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-1109">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-1109">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-1110">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-1110">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-1111">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-1111">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As SqlParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlParameterCollection ^ Parameters { System::Data::SqlClient::SqlParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.SqlClient.SqlParameterCollection" Usage="System.Data.SqlClient.SqlCommand.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Parameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4913a-1112"><see cref="T:System.Data.SqlClient.SqlParameterCollection" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1112">Gets the <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</span></span></summary>
        <value><span data-ttu-id="4913a-1113">Transact-SQL ステートメントまたはストアド プロシージャのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="4913a-1113">The parameters of the Transact-SQL statement or stored procedure.</span></span> <span data-ttu-id="4913a-1114">既定値は空のコレクションです。</span><span class="sxs-lookup"><span data-stu-id="4913a-1114">The default is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-1115">SQL Server 用の Microsoft .NET Framework Data Provider では、`CommandType.Text`のコマンドによって呼び出される SQL ステートメントまたはストアドプロシージャにパラメーターを渡すための疑問符 (?) プレースホルダーはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="4913a-1115">The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called by a command of `CommandType.Text`.</span></span> <span data-ttu-id="4913a-1116">この場合は、名前付きパラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-1116">In this case, named parameters must be used.</span></span> <span data-ttu-id="4913a-1117">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1117">For example:</span></span>  
  
 <span data-ttu-id="4913a-1118">SELECT \* FROM Customers WHERE CustomerID = @CustomerID</span><span class="sxs-lookup"><span data-stu-id="4913a-1118">SELECT \* FROM Customers WHERE CustomerID = @CustomerID</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4913a-1119">コレクション内のパラメーターが、実行されるクエリの要件と一致しない場合、エラーが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-1119">If the parameters in the collection do not match the requirements of the query to be executed, an error may result.</span></span>  
  
 <span data-ttu-id="4913a-1120">詳細については、「[パラメーターおよびパラメーターデータ型の構成](/dotnet/framework/data/adonet/configuring-parameters-and-parameter-data-types)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1120">For more information, see [Configuring Parameters and Parameter Data Types](/dotnet/framework/data/adonet/configuring-parameters-and-parameter-data-types).</span></span>  
  
## Examples  
 <span data-ttu-id="4913a-1121">次の例では、<xref:System.Data.SqlClient.SqlCommand> を作成し、<xref:System.Data.SqlClient.SqlParameterCollection>にパラメーターを追加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1121">The following example demonstrates how to create a <xref:System.Data.SqlClient.SqlCommand> and add parameters to the <xref:System.Data.SqlClient.SqlParameterCollection>.</span></span>  
  
 [!code-csharp[DataWorks SqlParameterCollection.AddWithValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParameterCollection.AddWithValue/CS/source.cs#1)]
 [!code-vb[DataWorks SqlParameterCollection.AddWithValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParameterCollection.AddWithValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-1122">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-1122">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-1123">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-1123">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-1124">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-1124">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Prepare : unit -&gt; unit" Usage="sqlCommand.Prepare " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public void Prepare ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub Prepare ()" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Prepare();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member Prepare : unit -&gt; unit&#xA;override this.Prepare : unit -&gt; unit" Usage="sqlCommand.Prepare " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.Prepare</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4913a-1125">SQL Server のインスタンスに対する準備済みのコマンドを作成します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1125">Creates a prepared version of the command on an instance of SQL Server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-1126"><xref:System.Data.SqlClient.SqlCommand.CommandType%2A> が `StoredProcedure`に設定されている場合、<xref:System.Data.SqlClient.SqlCommand.Prepare%2A> への呼び出しは成功しますが、no op が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-1126">If <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> is set to `StoredProcedure`, the call to <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> should succeed, although it may cause a no-op.</span></span>  
  
 <span data-ttu-id="4913a-1127"><xref:System.Data.SqlClient.SqlCommand.Prepare%2A>を呼び出す前に、準備するステートメントの各パラメーターのデータ型を指定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1127">Before you call <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, specify the data type of each parameter in the statement to be prepared.</span></span> <span data-ttu-id="4913a-1128">可変長データ型のパラメーターごとに、<xref:System.Data.SqlClient.SqlParameter.Size%2A> プロパティを必要な最大サイズに設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-1128">For each parameter that has a variable length data type, you must set the <xref:System.Data.SqlClient.SqlParameter.Size%2A> property to the maximum size needed.</span></span> <span data-ttu-id="4913a-1129">これらの条件が満たされない場合、<xref:System.Data.SqlClient.SqlCommand.Prepare%2A> はエラーを返します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1129"><xref:System.Data.SqlClient.SqlCommand.Prepare%2A> returns an error if these conditions are not met.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4913a-1130">Transact-sql `USE <database>` ステートメントを実行するか、<xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> メソッドを呼び出してデータベースコンテキストを変更する場合は、<xref:System.Data.SqlClient.SqlCommand.Prepare%2A> をもう一度呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-1130">If the database context is changed by executing the Transact-SQL `USE <database>` statement, or by calling the <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> method, then <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> must be called a second time.</span></span>  
  
 <span data-ttu-id="4913a-1131"><xref:System.Data.SqlClient.SqlCommand.Prepare%2A>を呼び出した後に `Execute` メソッドを呼び出すと、<xref:System.Data.SqlClient.SqlParameter.Size%2A> プロパティによって指定された値よりも大きいパラメーター値は、パラメーターの元の指定したサイズに自動的に切り捨てられ、切り捨てエラーは返されません。</span><span class="sxs-lookup"><span data-stu-id="4913a-1131">If you call an `Execute` method after calling <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, any parameter value that is larger than the value specified by the <xref:System.Data.SqlClient.SqlParameter.Size%2A> property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.</span></span>  
  
 <span data-ttu-id="4913a-1132">出力パラメーター (準備されているかどうかにかかわらず) は、ユーザーが指定したデータ型である必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-1132">Output parameters (whether prepared or not) must have a user-specified data type.</span></span> <span data-ttu-id="4913a-1133">可変長データ型を指定する場合は、最大 <xref:System.Data.SqlClient.SqlParameter.Size%2A>も指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4913a-1133">If you specify a variable length data type, you must also specify the maximum <xref:System.Data.SqlClient.SqlParameter.Size%2A>.</span></span>  
  
 <span data-ttu-id="4913a-1134">Visual Studio 2010 より前では、<xref:System.Data.SqlClient.SqlCommand.Prepare%2A> は例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="4913a-1134">Prior to Visual Studio 2010, <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> threw an exception.</span></span>  <span data-ttu-id="4913a-1135">Visual Studio 2010 以降では、このメソッドは例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="4913a-1135">Beginning in Visual Studio 2010, this method does not throw an exception.</span></span>  
  
## Examples  
 <span data-ttu-id="4913a-1136"><xref:System.Data.SqlClient.SqlCommand.Prepare%2A> メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1136">The following example demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.Prepare#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Prepare/CS/Source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Prepare#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Prepare/VB/Source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-1137">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-1137">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-1138">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-1138">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-1139">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-1139">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberSignature Language="F#" Value="member this.ResetCommandTimeout : unit -&gt; unit" Usage="sqlCommand.ResetCommandTimeout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4913a-1140"><see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> プロパティを既定値にリセットします。</span><span class="sxs-lookup"><span data-stu-id="4913a-1140">Resets the <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> property to its default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-1141"><xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> の既定値は30秒です。</span><span class="sxs-lookup"><span data-stu-id="4913a-1141">The default value of the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> is 30 seconds.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-1142">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-1142">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-1143">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-1143">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-1144">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-1144">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StatementCompleted">
      <MemberSignature Language="C#" Value="public event System.Data.StatementCompletedEventHandler StatementCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.StatementCompletedEventHandler StatementCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StatementCompleted As StatementCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::StatementCompletedEventHandler ^ StatementCompleted;" />
      <MemberSignature Language="F#" Value="member this.StatementCompleted : System.Data.StatementCompletedEventHandler " Usage="member this.StatementCompleted : System.Data.StatementCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.StatementCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4913a-1145">Transact-SQL ステートメントの実行が完了すると発生します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1145">Occurs when the execution of a Transact-SQL statement completes.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-1146">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-1146">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.CreateParameter">
      <MemberSignature Language="C#" Value="System.Data.IDbDataParameter IDbCommand.CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbDataParameter System.Data.IDbCommand.CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#Data#IDbCommand#CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Function CreateParameter () As IDbDataParameter Implements IDbCommand.CreateParameter" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbDataParameter ^ System.Data.IDbCommand.CreateParameter() = System::Data::IDbCommand::CreateParameter;" />
      <MemberSignature Language="F#" Value="abstract member System.Data.IDbCommand.CreateParameter : unit -&gt; System.Data.IDbDataParameter&#xA;override this.System.Data.IDbCommand.CreateParameter : unit -&gt; System.Data.IDbDataParameter" Usage="sqlCommand.System.Data.IDbCommand.CreateParameter " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.CreateParameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbDataParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4913a-1147"><see cref="T:System.Data.SqlClient.SqlParameter" /> オブジェクトの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1147">Creates a new instance of a <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</span></span></summary>
        <returns><span data-ttu-id="4913a-1148"><see cref="T:System.Data.SqlClient.SqlParameter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4913a-1148">A <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#Data#IDbCommand#ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader () As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader() = System::Data::IDbCommand::ExecuteReader;" />
      <MemberSignature Language="F#" Value="abstract member System.Data.IDbCommand.ExecuteReader : unit -&gt; System.Data.IDataReader&#xA;override this.System.Data.IDbCommand.ExecuteReader : unit -&gt; System.Data.IDataReader" Usage="sqlCommand.System.Data.IDbCommand.ExecuteReader " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4913a-1149"><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> を <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> に送信し、<see cref="T:System.Data.SqlClient.SqlDataReader" /> を構築します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1149">Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />, and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="4913a-1150"><see cref="T:System.Data.SqlClient.SqlDataReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4913a-1150">A <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader (behavior As CommandBehavior) As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader(System::Data::CommandBehavior behavior) = System::Data::IDbCommand::ExecuteReader;" />
      <MemberSignature Language="F#" Value="abstract member System.Data.IDbCommand.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.IDataReader&#xA;override this.System.Data.IDbCommand.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.IDataReader" Usage="sqlCommand.System.Data.IDbCommand.ExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="4913a-1151"><see cref="T:System.Data.CommandBehavior" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="4913a-1151">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="4913a-1152"><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> を <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> に送信し、<see cref="T:System.Data.CommandBehavior" /> 値のいずれかを使用して <see cref="T:System.Data.SqlClient.SqlDataReader" /> を構築します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1152">Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />, and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="4913a-1153"><see cref="T:System.Data.SqlClient.SqlDataReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4913a-1153">A <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberSignature Language="F#" Value="abstract member System.ICloneable.Clone : unit -&gt; obj&#xA;override this.System.ICloneable.Clone : unit -&gt; obj" Usage="sqlCommand.System.ICloneable.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4913a-1154">現在のインスタンスのコピーである新しい <see cref="T:System.Data.SqlClient.SqlCommand" /> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1154">Creates a new <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="4913a-1155">このインスタンスのコピーである新しい <see cref="T:System.Data.SqlClient.SqlCommand" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4913a-1155">A new <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is a copy of this instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-1156">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-1156">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlTransaction ^ Transaction { System::Data::SqlClient::SqlTransaction ^ get(); void set(System::Data::SqlClient::SqlTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.SqlClient.SqlTransaction with get, set" Usage="System.Data.SqlClient.SqlCommand.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Transaction")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4913a-1157"><see cref="T:System.Data.SqlClient.SqlTransaction" /> が実行される <see cref="T:System.Data.SqlClient.SqlCommand" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1157">Gets or sets the <see cref="T:System.Data.SqlClient.SqlTransaction" /> within which the <see cref="T:System.Data.SqlClient.SqlCommand" /> executes.</span></span></summary>
        <value><span data-ttu-id="4913a-1158"><see cref="T:System.Data.SqlClient.SqlTransaction" />。</span><span class="sxs-lookup"><span data-stu-id="4913a-1158">The <see cref="T:System.Data.SqlClient.SqlTransaction" />.</span></span> <span data-ttu-id="4913a-1159">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4913a-1159">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-1160">既に特定の値に設定されていて、コマンドが実行中である場合は、<xref:System.Data.SqlClient.SqlCommand.Transaction%2A> プロパティを設定できません。</span><span class="sxs-lookup"><span data-stu-id="4913a-1160">You cannot set the <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing.</span></span> <span data-ttu-id="4913a-1161">トランザクションプロパティを、<xref:System.Data.SqlClient.SqlCommand> オブジェクトと同じ <xref:System.Data.SqlClient.SqlConnection> に接続されていない <xref:System.Data.SqlClient.SqlTransaction> オブジェクトに設定すると、次にステートメントを実行しようとしたときに例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="4913a-1161">If you set the transaction property to a <xref:System.Data.SqlClient.SqlTransaction> object that is not connected to the same <xref:System.Data.SqlClient.SqlConnection> as the <xref:System.Data.SqlClient.SqlCommand> object, an exception is thrown the next time that you attempt to execute a statement.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/local-transactions"><span data-ttu-id="4913a-1162">トランザクションの実行</span><span class="sxs-lookup"><span data-stu-id="4913a-1162">Performing a Transaction</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-1163">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-1163">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-1164">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-1164">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-1165">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-1165">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.UpdatedRowSource : System.Data.UpdateRowSource with get, set" Usage="System.Data.SqlClient.SqlCommand.UpdatedRowSource" />
      <MemberSignature Language="C#" Value="public System.Data.UpdateRowSource UpdatedRowSource { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdatedRowSource As UpdateRowSource" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.UpdatedRowSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_UpdatedRowSource")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4913a-1166"><see cref="T:System.Data.Common.DbDataAdapter" /> の **Update** メソッドで使用するときに、コマンドの結果を <see cref="T:System.Data.DataRow" /> に適用する方法を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4913a-1166">Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the **Update** method of the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <value><span data-ttu-id="4913a-1167"><see cref="T:System.Data.UpdateRowSource" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="4913a-1167">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4913a-1168">既定の <xref:System.Data.UpdateRowSource> 値は、コマンドが自動的に生成された場合 (<xref:System.Data.SqlClient.SqlCommandBuilder>の場合と同様) で**ない限り、既定値は** **None**です。</span><span class="sxs-lookup"><span data-stu-id="4913a-1168">The default <xref:System.Data.UpdateRowSource> value is **Both** unless the command is automatically generated (as in the case of the <xref:System.Data.SqlClient.SqlCommandBuilder>), in which case the default is **None**.</span></span>  
  
 <span data-ttu-id="4913a-1169">**UpdatedRowSource**プロパティの使用方法の詳細については、「 [DataAdapter Parameters](/dotnet/framework/data/adonet/dataadapter-parameters)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4913a-1169">For more information about using the **UpdatedRowSource** property, see [DataAdapter Parameters](/dotnet/framework/data/adonet/dataadapter-parameters).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="4913a-1170">ADO.NET でのデータの接続と取得</span><span class="sxs-lookup"><span data-stu-id="4913a-1170">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="4913a-1171">SQL Server に .NET Framework Data Provider を使用する</span><span class="sxs-lookup"><span data-stu-id="4913a-1171">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="4913a-1172">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="4913a-1172">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
