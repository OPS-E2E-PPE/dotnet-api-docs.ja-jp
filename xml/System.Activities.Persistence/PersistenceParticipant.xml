<Type Name="PersistenceParticipant" FullName="System.Activities.Persistence.PersistenceParticipant">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1229e3ac3949ceb6777a3886fe62a80e7839ebe0" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73376562" /></Metadata><TypeSignature Language="C#" Value="public abstract class PersistenceParticipant" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PersistenceParticipant extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Persistence.PersistenceParticipant" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PersistenceParticipant" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersistenceParticipant abstract" />
  <TypeSignature Language="F#" Value="type PersistenceParticipant = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="990f5-101">このクラスでは、<see cref="T:System.Activities.WorkflowApplication" /> と <see cref="T:System.ServiceModel.WorkflowServiceHost" /> の両方が永続化プロセスに参加できます。</span><span class="sxs-lookup"><span data-stu-id="990f5-101">This class allows both <see cref="T:System.Activities.WorkflowApplication" /> and <see cref="T:System.ServiceModel.WorkflowServiceHost" /> to participate in persistence process.</span></span> <span data-ttu-id="990f5-102">永続参加要素は、<see cref="T:System.Activities.Persistence.PersistenceParticipant" /> クラスまたは <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> クラス (<see cref="T:System.Activities.Persistence.PersistenceParticipant" /> クラスの派生クラス) から派生し、抽象メソッドを実装して、クラスのインスタンスをワークフロー インスタンス拡張機能として追加します。</span><span class="sxs-lookup"><span data-stu-id="990f5-102">A persistence participant derives from the <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> class or the <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> class (derived class of the <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> class), implements abstract methods, and then add an instance of the class as a workflow instance extension.</span></span> <span data-ttu-id="990f5-103"><see cref="T:System.Activities.WorkflowApplication" /> および <see cref="T:System.ServiceModel.WorkflowServiceHost" /> は、インスタンスの永続化時にこのような拡張機能を探し、適切なときに適切なメソッドを起動します。</span><span class="sxs-lookup"><span data-stu-id="990f5-103">The <see cref="T:System.Activities.WorkflowApplication" /> and <see cref="T:System.ServiceModel.WorkflowServiceHost" /> look for such extensions when persisting an instance and invoke appropriate methods at appropriate times.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="990f5-104">ホストは、インスタンスの永続化時に次の手順 (または段階) を実行します。</span><span class="sxs-lookup"><span data-stu-id="990f5-104">A host executes the following steps (or stages) when persisting an instance:</span></span>  
  
1.  <span data-ttu-id="990f5-105">永続化する値を収集します。</span><span class="sxs-lookup"><span data-stu-id="990f5-105">Collects values to be persisted.</span></span>  
  
2.  <span data-ttu-id="990f5-106">モノリシック構造値のフィールドを個々の値にマップします。</span><span class="sxs-lookup"><span data-stu-id="990f5-106">Maps fields of monolithic structured values to individual values.</span></span>  
  
3.  <span data-ttu-id="990f5-107"><xref:System.Activities.DurableInstancing.SaveWorkflowCommand> を永続化プロバイダーに発行します。</span><span class="sxs-lookup"><span data-stu-id="990f5-107">Issues the <xref:System.Activities.DurableInstancing.SaveWorkflowCommand> to the persistence provider.</span></span>  
  
4.  <span data-ttu-id="990f5-108">永続性トランザクションの下で I/O を実行します。</span><span class="sxs-lookup"><span data-stu-id="990f5-108">Performs I/O under the persistence transaction.</span></span>  
  
 <span data-ttu-id="990f5-109">ホストは、段階を完了してから次の段階を開始します。</span><span class="sxs-lookup"><span data-stu-id="990f5-109">A host completes a stage before beginning the next stage.</span></span> <span data-ttu-id="990f5-110">たとえば永続化時は、ホストは、2 番目の段階に進む前に、すべての永続参加要素から値を収集します。</span><span class="sxs-lookup"><span data-stu-id="990f5-110">For example when persisting, the host collects values from all the persistence participants before moving to the second stage.</span></span> <span data-ttu-id="990f5-111">2 番目の段階では、ホストは、マップを行うために、最初の段階で収集したすべての値を 2 番目の段階のすべての永続参加要素に提供します。</span><span class="sxs-lookup"><span data-stu-id="990f5-111">In the second stage, the host provides all the values collected in the first stage to all persistence participants in the second stage for mapping.</span></span> <span data-ttu-id="990f5-112">3 番目の段階では、ホストは、<xref:System.Activities.DurableInstancing.SaveWorkflowCommand> の起動時に、最初の段階および 2 番目の段階で収集したすべての値を永続化プロバイダーに提供します。</span><span class="sxs-lookup"><span data-stu-id="990f5-112">In the third stage, the host provides all the collected values in the first and second stages to the persistence provider when invoking the <xref:System.Activities.DurableInstancing.SaveWorkflowCommand>.</span></span> <span data-ttu-id="990f5-113">次に、4 番目の段階では、ホストは、収集したすべての値を永続性トランザクションの下で永続 IO 参加要素に提供します。</span><span class="sxs-lookup"><span data-stu-id="990f5-113">Then in the fourth stage, the host provides all the collected values to all the persistence IO participants under the persistence transaction.</span></span>  
  
 <span data-ttu-id="990f5-114">ホストは、永続化インスタンスの読み込み時に次の段階を実行します。</span><span class="sxs-lookup"><span data-stu-id="990f5-114">A host executes the following stages when loading a persistence instance:</span></span>  
  
1.  <span data-ttu-id="990f5-115"><xref:System.Activities.DurableInstancing.LoadWorkflowCommand> および <xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand> を永続化プロバイダーに発行します。</span><span class="sxs-lookup"><span data-stu-id="990f5-115">Issues the <xref:System.Activities.DurableInstancing.LoadWorkflowCommand> and <xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand> to the persistence provider.</span></span>  
  
2.  <span data-ttu-id="990f5-116">永続性トランザクションの下で I/O を実行します。</span><span class="sxs-lookup"><span data-stu-id="990f5-116">Performs I/O under the persistence transaction.</span></span>  
  
3.  <span data-ttu-id="990f5-117">読み込まれた値を発行します。</span><span class="sxs-lookup"><span data-stu-id="990f5-117">Publishes the loaded values.</span></span>  
  
 <span data-ttu-id="990f5-118">最上位レベルでは、<xref:System.Activities.Persistence.PersistenceParticipant> クラスから派生するワークフロー インスタンス拡張機能は、永続化プロセスの最初の段階 (Collect) および 2 番目の段階 (Map) と、読み込みプロセスの 3 番目の段階 (Publish) に参加できます。</span><span class="sxs-lookup"><span data-stu-id="990f5-118">At the highest level, workflow instance extensions that derive from the <xref:System.Activities.Persistence.PersistenceParticipant> class can participate in the first (Collect) and second (Map) stages of persisting process and the third stage (Publish) of loading process.</span></span>  <span data-ttu-id="990f5-119">PersistenceIOParticipant クラスから派生するワークフロー インスタンス拡張機能は、さらに、永続化プロセスの 4 番目の段階と、読み込みプロセス (I/O) の 2 番目の段階に参加できます。</span><span class="sxs-lookup"><span data-stu-id="990f5-119">Workflow instance extensions deriving from the PersistenceIOParticipant class can additionally participate in the fourth stage of the persisting process and the second stage of the loading process (I/O).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="990f5-120"><xref:System.Activities.Persistence.PersistenceParticipant> から派生したクラスの作成方法を次のコード サンプルに示します。</span><span class="sxs-lookup"><span data-stu-id="990f5-120">The following code sample demonstrates creating a class that derives from <xref:System.Activities.Persistence.PersistenceParticipant>.</span></span> <span data-ttu-id="990f5-121">この例は、[採用プロセス](~/docs/framework/windows-workflow-foundation/samples/hiring-process.md)のサンプルからのものです。</span><span class="sxs-lookup"><span data-stu-id="990f5-121">This example is from the [Hiring Process](~/docs/framework/windows-workflow-foundation/samples/hiring-process.md) sample.</span></span>  
  
 [!code-csharp[wfs_HiringRequestProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_hiringrequestprocess/cs/hiringrequestpersistenceparticipant.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PersistenceParticipant ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceParticipant.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PersistenceParticipant();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="990f5-122"><see cref="T:System.Activities.Persistence.PersistenceParticipant" /> クラスのインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="990f5-122">Initializes an instance of the <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="990f5-123"><xref:System.Activities.Persistence.PersistenceParticipant> から派生したクラスの作成方法を次のコード サンプルに示します。</span><span class="sxs-lookup"><span data-stu-id="990f5-123">The following code sample demonstrates creating a class that derives from <xref:System.Activities.Persistence.PersistenceParticipant>.</span></span> <span data-ttu-id="990f5-124">この例は、[採用プロセス](~/docs/framework/windows-workflow-foundation/samples/hiring-process.md)のサンプルからのものです。</span><span class="sxs-lookup"><span data-stu-id="990f5-124">This example is from the [Hiring Process](~/docs/framework/windows-workflow-foundation/samples/hiring-process.md) sample.</span></span>  
  
 [!code-csharp[wfs_HiringRequestProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_hiringrequestprocess/cs/hiringrequestpersistenceparticipant.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectValues">
      <MemberSignature Language="C#" Value="protected virtual void CollectValues (out System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, out System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CollectValues([out] class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt;&amp; readWriteValues, [out] class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt;&amp; writeOnlyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceParticipant.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CollectValues (ByRef readWriteValues As IDictionary(Of XName, Object), ByRef writeOnlyValues As IDictionary(Of XName, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CollectValues([Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ % readWriteValues, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ % writeOnlyValues);" />
      <MemberSignature Language="F#" Value="abstract member CollectValues : IDictionary * IDictionary -&gt; unit&#xA;override this.CollectValues : IDictionary * IDictionary -&gt; unit" Usage="persistenceParticipant.CollectValues (readWriteValues, writeOnlyValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.IPersistencePipelineModule.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" RefType="out" />
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="readWriteValues"><span data-ttu-id="990f5-125">永続化される読み取り/書き込み値。</span><span class="sxs-lookup"><span data-stu-id="990f5-125">The read-write values to be persisted.</span></span></param>
        <param name="writeOnlyValues"><span data-ttu-id="990f5-126">永続化される書き込み専用値。</span><span class="sxs-lookup"><span data-stu-id="990f5-126">The write-only values to be persisted.</span></span></param>
        <summary><span data-ttu-id="990f5-127">ホストはカスタムの永続化参加要素に対してこのメソッドを呼び出して、永続化される読み取り/書き込み値および書き込み専用値を収集します。</span><span class="sxs-lookup"><span data-stu-id="990f5-127">A host invokes this method on a custom persistence participant to collect read-write values and write-only values, to be persisted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="990f5-128">ホストは、<xref:System.Runtime.DurableInstancing.InstanceValue> コレクションの <xref:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceData*> オブジェクトとして、読み取り/書き込み値を最初のディクショナリにパッケージ化し、<xref:System.Runtime.DurableInstancing.InstanceValue> および <xref:System.Runtime.DurableInstancing.InstanceValueOptions.Optional> フラグが設定された <xref:System.Runtime.DurableInstancing.InstanceValueOptions.WriteOnly> オブジェクトとして、書き込み専用値を 2 番目のディクショナリにパッケージ化します。</span><span class="sxs-lookup"><span data-stu-id="990f5-128">The host packages read-write values in the first dictionary as <xref:System.Runtime.DurableInstancing.InstanceValue> objects of an <xref:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceData*> collection, and packages write-only values in the second dictionary as <xref:System.Runtime.DurableInstancing.InstanceValue> objects with <xref:System.Runtime.DurableInstancing.InstanceValueOptions.Optional> and <xref:System.Runtime.DurableInstancing.InstanceValueOptions.WriteOnly> flags set.</span></span> <span data-ttu-id="990f5-129">詳細については、「<xref:System.Runtime.DurableInstancing.InstanceValueOptions>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="990f5-129">For more information, see <xref:System.Runtime.DurableInstancing.InstanceValueOptions>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="990f5-130">1 つの永続化内のすべての永続参加要素について <xref:System.Activities.Persistence.PersistenceParticipant.CollectValues%2A> の実装によって形成される各値は、一意の Xname を持つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="990f5-130">Each value provided by implementations of <xref:System.Activities.Persistence.PersistenceParticipant.CollectValues%2A> across all persistence participants within one persistence episode must have a unique XName.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="990f5-131"><xref:System.Activities.Persistence.PersistenceParticipant> から派生したクラスでの CollectValues の使用方法を次のコード サンプルに示します。</span><span class="sxs-lookup"><span data-stu-id="990f5-131">The following code sample demonstrates using CollectValues in a class that derives from <xref:System.Activities.Persistence.PersistenceParticipant>.</span></span> <span data-ttu-id="990f5-132">この例は、[永続参加要素](~/docs/framework/windows-workflow-foundation/persistence-participants.md)のサンプルです。</span><span class="sxs-lookup"><span data-stu-id="990f5-132">This example is from the [Persistence Participants](~/docs/framework/windows-workflow-foundation/persistence-participants.md) sample.</span></span>  
  
 [!code-csharp[wfs_PersistenceParticipants#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_persistenceparticipants/cs/stepcountextension.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapValues">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; MapValues (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; MapValues(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceParticipant.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MapValues (readWriteValues As IDictionary(Of XName, Object), writeOnlyValues As IDictionary(Of XName, Object)) As IDictionary(Of XName, Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ MapValues(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ writeOnlyValues);" />
      <MemberSignature Language="F#" Value="abstract member MapValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt;&#xA;override this.MapValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt;" Usage="persistenceParticipant.MapValues (readWriteValues, writeOnlyValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.IPersistencePipelineModule.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="readWriteValues"><span data-ttu-id="990f5-133">永続化される読み取り/書き込み値。</span><span class="sxs-lookup"><span data-stu-id="990f5-133">The read-write values to be persisted.</span></span></param>
        <param name="writeOnlyValues"><span data-ttu-id="990f5-134">永続化される書き込み専用値。</span><span class="sxs-lookup"><span data-stu-id="990f5-134">The write-only values to be persisted.</span></span></param>
        <summary><span data-ttu-id="990f5-135">最初の段階での値の収集が終了した後に、ホストはこのメソッドを起動します。</span><span class="sxs-lookup"><span data-stu-id="990f5-135">A host invokes this method after it is done with collecting the values in the first stage.</span></span> <span data-ttu-id="990f5-136">ホストは、最初の段階 (CollectValues 段階) ですべての永続参加要素から収集した値の 2 つの読み取り専用ディクショナリを、マップのためにこのメソッドに転送します。</span><span class="sxs-lookup"><span data-stu-id="990f5-136">The host forwards two read-only dictionaries of values it collected from all persistence participants during the first stage (CollectValues stage) to this method for mapping.</span></span> <span data-ttu-id="990f5-137">ホストは、このメソッドから返されたディクショナリの値を、書き込み専用値のコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="990f5-137">The host adds values in the dictionary returned by this method to the collection of write-only values.</span></span></summary>
        <returns><span data-ttu-id="990f5-138">永続化される追加の書き込み専用値を含むディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="990f5-138">A dictionary containing additional write-only values to be persisted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="990f5-139">最初の段階 (CollectValues 段階) で収集されたすべての値を含む、すべての永続参加要素についてすべての <xref:System.Activities.Persistence.PersistenceParticipant.MapValues%2A> メソッドの実装によって形成される各値は一意の XName を持つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="990f5-139">Each value provided by implementations of all the <xref:System.Activities.Persistence.PersistenceParticipant.MapValues%2A> methods across all persistence participants including all the values collected in the first stage (CollectValues stage) must have a unique XName.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="990f5-140"><xref:System.Activities.Persistence.PersistenceParticipant> から派生したクラスでの MapValues の使用方法を次のコード サンプルに示します。</span><span class="sxs-lookup"><span data-stu-id="990f5-140">The following code sample demonstrates using MapValues in a class that derives from <xref:System.Activities.Persistence.PersistenceParticipant>.</span></span> <span data-ttu-id="990f5-141">この例は、[企業の購入プロセス](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md)サンプルからのものです。</span><span class="sxs-lookup"><span data-stu-id="990f5-141">This example is from the [Corporate Purchase Process](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) sample.</span></span>  
  
 [!code-csharp[wfs_PurchaseProcess#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_purchaseprocess/cs/xmlpersistenceparticipant.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PublishValues">
      <MemberSignature Language="C#" Value="protected virtual void PublishValues (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PublishValues(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceParticipant.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PublishValues (readWriteValues As IDictionary(Of XName, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PublishValues(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues);" />
      <MemberSignature Language="F#" Value="abstract member PublishValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; unit&#xA;override this.PublishValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; unit" Usage="persistenceParticipant.PublishValues readWriteValues" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.IPersistencePipelineModule.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="readWriteValues"><span data-ttu-id="990f5-142">永続ストアから読み込まれた読み取り/書き込み値。</span><span class="sxs-lookup"><span data-stu-id="990f5-142">The read-write values that were loaded from the persistence store.</span></span> <span data-ttu-id="990f5-143">このディクショナリは、最新の永続化で永続化された読み取り/書き込み値のディクショナリに対応します。</span><span class="sxs-lookup"><span data-stu-id="990f5-143">This dictionary corresponds to the dictionary of read-write values persisted in the most recent persistence episode.</span></span></param>
        <summary><span data-ttu-id="990f5-144">ホストは、このメソッドを起動し、<see cref="P:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceData" /> コレクション (<see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> または <see cref="T:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand" /> で埋められた) 内の読み込まれたすべての値をディクショナリ パラメーターとして渡します。</span><span class="sxs-lookup"><span data-stu-id="990f5-144">The host invokes this method and passes all the loaded values in the <see cref="P:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceData" /> collection (filled by the <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> or <see cref="T:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand" />) as a dictionary parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="990f5-145"><xref:System.Activities.Persistence.PersistenceParticipant> から派生したクラスでの PublishValues の使用方法を次のコード サンプルに示します。</span><span class="sxs-lookup"><span data-stu-id="990f5-145">The following code sample demonstrates using PublishValues in a class that derives from <xref:System.Activities.Persistence.PersistenceParticipant>.</span></span> <span data-ttu-id="990f5-146">この例は、[永続参加要素](~/docs/framework/windows-workflow-foundation/persistence-participants.md)のサンプルです。</span><span class="sxs-lookup"><span data-stu-id="990f5-146">This example is from the [Persistence Participants](~/docs/framework/windows-workflow-foundation/persistence-participants.md) sample.</span></span>  
  
 [!code-csharp[wfs_PersistenceParticipants#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_persistenceparticipants/cs/stepcountextension.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
