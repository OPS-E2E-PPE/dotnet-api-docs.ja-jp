<Type Name="FileSystemProxy" FullName="Microsoft.VisualBasic.MyServices.FileSystemProxy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d7d56db1bc55235c92822b2d743dbe4e0bb90477" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83975785" /></Metadata><TypeSignature Language="C#" Value="public class FileSystemProxy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi FileSystemProxy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.MyServices.FileSystemProxy" />
  <TypeSignature Language="VB.NET" Value="Public Class FileSystemProxy" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemProxy" />
  <TypeSignature Language="F#" Value="type FileSystemProxy = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fa761-101">ドライブ、ファイル、ディレクトリを操作するためのプロパティとメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="fa761-101">Provides properties and methods for working with drives, files, and directories.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-102">次の表に、`My.Computer.FileSystem` オブジェクトに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-102">The following table lists examples of tasks involving the `My.Computer.FileSystem` object.</span></span>  
  
|<span data-ttu-id="fa761-103">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-103">To</span></span>|<span data-ttu-id="fa761-104">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-104">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-105">テキスト ファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-105">Read from a text file</span></span>|[<span data-ttu-id="fa761-106">方法: テキスト ファイルからデータを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-106">How to: Read from Text Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files)|  
|<span data-ttu-id="fa761-107">区切られたテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-107">Read from a delimited text file</span></span>|[<span data-ttu-id="fa761-108">方法: コンマ区切りのテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-108">How to: Read From Comma-Delimited Text Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files)|  
|<span data-ttu-id="fa761-109">固定幅のテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-109">Read from a fixed-width text file</span></span>|[<span data-ttu-id="fa761-110">方法: 固定幅のテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-110">How to: Read From Fixed-width Text Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files)|  
|<span data-ttu-id="fa761-111">複数の形式を持つテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-111">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="fa761-112">方法: 複数の書式を持つテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-112">How to: Read From Text Files with Multiple Formats</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats)|  
|<span data-ttu-id="fa761-113">バイナリ ファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-113">Read from a binary file</span></span>|[<span data-ttu-id="fa761-114">方法: バイナリ ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-114">How to: Read From Binary Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-binary-files)|  
|<span data-ttu-id="fa761-115"><xref:System.IO.StreamReader> のあるテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-115">Read from a text file with a <xref:System.IO.StreamReader></span></span>|[<span data-ttu-id="fa761-116">方法: StreamReader を使用してファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-116">How to: Read Text from Files with a StreamReader</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader)|  
|<span data-ttu-id="fa761-117">テキスト ファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="fa761-117">Write to a text file</span></span>|[<span data-ttu-id="fa761-118">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="fa761-118">How to: Write Text to Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files)|  
|<span data-ttu-id="fa761-119">テキストファイルに追加する</span><span class="sxs-lookup"><span data-stu-id="fa761-119">Append to a text file</span></span>|[<span data-ttu-id="fa761-120">方法: テキスト ファイルに追記する</span><span class="sxs-lookup"><span data-stu-id="fa761-120">How to: Append to Text Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-append-to-text-files)|  
|<span data-ttu-id="fa761-121">バイナリ ファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="fa761-121">Write to a binary file</span></span>|[<span data-ttu-id="fa761-122">方法: バイナリ ファイルに書き込む</span><span class="sxs-lookup"><span data-stu-id="fa761-122">How to: Write to Binary Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-to-binary-files)|  
|<span data-ttu-id="fa761-123">**マイドキュメント**ディレクトリ内のテキストファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="fa761-123">Write to text files in the **MyDocuments** directory</span></span>|[<span data-ttu-id="fa761-124">方法: My Documents ディレクトリのファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="fa761-124">How to: Write Text to Files in the My Documents Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-in-the-my-documents-directory)|  
|<span data-ttu-id="fa761-125">`StreamWriter` を使用してテキストファイルに書き込む</span><span class="sxs-lookup"><span data-stu-id="fa761-125">Write to a text file with a `StreamWriter`</span></span>|[<span data-ttu-id="fa761-126">方法: StreamWriter を使用してファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="fa761-126">How to: Write Text to Files with a StreamWriter</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter)|  
|<span data-ttu-id="fa761-127">特定のパターンを持つファイルをコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-127">Copy files with a specific pattern</span></span>|[<span data-ttu-id="fa761-128">方法: 特定のパターンを持つファイルをディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-128">How to: Copy Files with a Specific Pattern to a Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-files-with-a-specific-pattern-to-a-directory)|  
|<span data-ttu-id="fa761-129">同じディレクトリにファイルをコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-129">Copy a file to the same directory</span></span>|[<span data-ttu-id="fa761-130">方法: ファイルのコピーを同じディレクトリに作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-130">How to: Create a Copy of a File in the Same Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory)|  
|<span data-ttu-id="fa761-131">ファイルを別のディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-131">Copy a file to a different directory</span></span>|[<span data-ttu-id="fa761-132">方法: ファイルのコピーを別のディレクトリに作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-132">How to: Create a Copy of a File in a Different Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-a-different-directory)|  
|<span data-ttu-id="fa761-133">ファイルを作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-133">Create a file</span></span>|[<span data-ttu-id="fa761-134">方法: ファイルを作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-134">How to: Create a File</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-file)|  
|<span data-ttu-id="fa761-135">ファイルを削除する</span><span class="sxs-lookup"><span data-stu-id="fa761-135">Delete a file</span></span>|[<span data-ttu-id="fa761-136">方法: ファイルを削除する</span><span class="sxs-lookup"><span data-stu-id="fa761-136">How to: Delete a File</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-delete-a-file)|  
|<span data-ttu-id="fa761-137">特定のパターンを持つファイルを検索する</span><span class="sxs-lookup"><span data-stu-id="fa761-137">Find files with a specific pattern</span></span>|[<span data-ttu-id="fa761-138">方法: 特定のパターンに一致するファイルを検索する</span><span class="sxs-lookup"><span data-stu-id="fa761-138">How to: Find Files with a Specific Pattern</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-find-files-with-a-specific-pattern)|  
|<span data-ttu-id="fa761-139">ファイルの移動</span><span class="sxs-lookup"><span data-stu-id="fa761-139">Move a file</span></span>|[<span data-ttu-id="fa761-140">方法: ファイルを移動する</span><span class="sxs-lookup"><span data-stu-id="fa761-140">How to: Move a File</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-move-a-file)|  
|<span data-ttu-id="fa761-141">ファイル名を変更する</span><span class="sxs-lookup"><span data-stu-id="fa761-141">Rename a file</span></span>|[<span data-ttu-id="fa761-142">方法: ファイルの名前を変更する</span><span class="sxs-lookup"><span data-stu-id="fa761-142">How to: Rename a File</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-rename-a-file)|  
|<span data-ttu-id="fa761-143">ディレクトリを別のディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-143">Copy a directory to another directory</span></span>|[<span data-ttu-id="fa761-144">方法: ディレクトリを別のディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-144">How to: Copy a Directory to Another Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory)|  
|<span data-ttu-id="fa761-145">ディレクトリを作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-145">Create a directory</span></span>|[<span data-ttu-id="fa761-146">方法: ディレクトリを作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-146">How to: Create a Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-directory)|  
|<span data-ttu-id="fa761-147">特定のパターンでサブディレクトリを検索する</span><span class="sxs-lookup"><span data-stu-id="fa761-147">Find subdirectories with a specific pattern</span></span>|[<span data-ttu-id="fa761-148">方法: 特定のパターンに一致するサブディレクトリを検索する</span><span class="sxs-lookup"><span data-stu-id="fa761-148">How to: Find Subdirectories with a Specific Pattern</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-find-subdirectories-with-a-specific-pattern)|  
|<span data-ttu-id="fa761-149">ディレクトリ内のファイルのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="fa761-149">Get the collection of files in a directory</span></span>|[<span data-ttu-id="fa761-150">方法: ディレクトリにあるファイルのコレクションを取得する</span><span class="sxs-lookup"><span data-stu-id="fa761-150">How to: Get the Collection of Files in a Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-get-the-collection-of-files-in-a-directory)|  
|<span data-ttu-id="fa761-151">**マイドキュメント**ディレクトリからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-151">Read from the **MyDocuments** directory</span></span>|[<span data-ttu-id="fa761-152">方法: My Documents ディレクトリの内容を取得する</span><span class="sxs-lookup"><span data-stu-id="fa761-152">How to: Retrieve the Contents of the My Documents Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-retrieve-the-contents-of-the-my-documents-directory)|  
|<span data-ttu-id="fa761-153">ファイルパスを解析する</span><span class="sxs-lookup"><span data-stu-id="fa761-153">Parse a file path</span></span>|[<span data-ttu-id="fa761-154">方法: ファイル パスを解析する</span><span class="sxs-lookup"><span data-stu-id="fa761-154">How to: Parse File Paths</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-155">この例では、フォルダー `C:\backup\logs` 存在するかどうかを確認し、そのプロパティを確認します。</span><span class="sxs-lookup"><span data-stu-id="fa761-155">This example checks to determine whether the folder `C:\backup\logs` exists and checks its properties.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#23)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" />
    <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-156">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-156">Objects (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CombinePath">
      <MemberSignature Language="C#" Value="public string CombinePath (string baseDirectory, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public instance string CombinePath(string baseDirectory, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CombinePath (baseDirectory As String, relativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CombinePath(System::String ^ baseDirectory, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="member this.CombinePath : string * string -&gt; string" Usage="fileSystemProxy.CombinePath (baseDirectory, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseDirectory" Type="System.String" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseDirectory"><span data-ttu-id="fa761-157">[https://login.microsoftonline.com/consumers/](<see langword="String" />)</span><span class="sxs-lookup"><span data-stu-id="fa761-157"><see langword="String" />.</span></span> <span data-ttu-id="fa761-158">結合する 1 つ目のパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-158">First path to be combined.</span></span></param>
        <param name="relativePath"><span data-ttu-id="fa761-159">[https://login.microsoftonline.com/consumers/](<see langword="String" />)</span><span class="sxs-lookup"><span data-stu-id="fa761-159"><see langword="String" />.</span></span> <span data-ttu-id="fa761-160">結合する 2 つ目のパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-160">Second path to be combined.</span></span></param>
        <summary><span data-ttu-id="fa761-161">2 つのパスを結合し、適切な形式のパスを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-161">Combines two paths and returns a properly formatted path.</span></span></summary>
        <returns><span data-ttu-id="fa761-162">指定されたパスの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="fa761-162">The combination of the specified paths.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-163">このメソッドは、余分なスラッシュ記号をトリムして、適切に書式設定されたパスを作成します。</span><span class="sxs-lookup"><span data-stu-id="fa761-163">This method trims excess slash-mark characters to create a properly formatted path.</span></span>  
  
 <span data-ttu-id="fa761-164">次の表に、`My.Computer.FileSystem.CombinePath` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-164">The following table lists examples of tasks involving the `My.Computer.FileSystem.CombinePath` method.</span></span>  
  
|<span data-ttu-id="fa761-165">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-165">To</span></span>|<span data-ttu-id="fa761-166">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-166">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-167">ディレクトリパスとファイル名を結合する</span><span class="sxs-lookup"><span data-stu-id="fa761-167">Combine a directory path and file name</span></span>|[<span data-ttu-id="fa761-168">方法: ファイル パスを解析する</span><span class="sxs-lookup"><span data-stu-id="fa761-168">How to: Parse File Paths</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-169">この例では、ディレクトリパスとファイル名を組み合わせて、適切に書式設定されたパスを作成します。</span><span class="sxs-lookup"><span data-stu-id="fa761-169">This example combines a directory path and file name to create a properly formatted path.</span></span>  
  
 [!code-vb[VbRefFile#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#3)]  
  
 <span data-ttu-id="fa761-170">この例では、2つのパスを結合して、適切に書式設定されたパスを作成します。</span><span class="sxs-lookup"><span data-stu-id="fa761-170">This example combines two paths to create a properly formatted path.</span></span>  
  
 [!code-vb[VbRefFile#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#4)]  
  
 <span data-ttu-id="fa761-171">この例では `C:\Dir1\Dir2\Dir4\Dir5\File.txt`が返されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-171">This example returns `C:\Dir1\Dir2\Dir4\Dir5\File.txt`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-172"><paramref name="baseDirectory" /> または <paramref name="relativePath" /> のパスの形式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-172"><paramref name="baseDirectory" /> or <paramref name="relativePath" /> are malformed paths.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-173">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-173">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyDirectory">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa761-174">あるディレクトリを別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-174">Copies a directory to another directory.</span></span></summary>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-175">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-175">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-get-the-collection-of-files-in-a-directory"><span data-ttu-id="fa761-176">方法: Visual Basic でディレクトリにあるファイルのコレクションを取得する</span><span class="sxs-lookup"><span data-stu-id="fa761-176">How to: Get the Collection of Files in a Directory in Visual Basic</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyDirectory">
      <MemberSignature Language="C#" Value="public void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void CopyDirectory(string sourceDirectoryName, string destinationDirectoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyDirectory (sourceDirectoryName As String, destinationDirectoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName);" />
      <MemberSignature Language="F#" Value="member this.CopyDirectory : string * string -&gt; unit" Usage="fileSystemProxy.CopyDirectory (sourceDirectoryName, destinationDirectoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="fa761-177">コピーするディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fa761-177">The directory to be copied.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="fa761-178">ディレクトリのコピー先の場所。</span><span class="sxs-lookup"><span data-stu-id="fa761-178">The location to which the directory should be copied.</span></span></param>
        <summary><span data-ttu-id="fa761-179">あるディレクトリを別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-179">Copies a directory to another directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-180">このメソッドでは、ディレクトリ自体とその内容がコピーされます。</span><span class="sxs-lookup"><span data-stu-id="fa761-180">This method copies the contents of the directory as well as the directory itself.</span></span> <span data-ttu-id="fa761-181">ターゲットディレクトリが存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-181">If the target directory does not exist, it is created.</span></span> <span data-ttu-id="fa761-182">同じ名前のディレクトリがターゲットの場所に存在する場合、2つのディレクトリの内容がマージされます。</span><span class="sxs-lookup"><span data-stu-id="fa761-182">If a directory with the same name exists in the target location, the contents of the two directories are merged.</span></span> <span data-ttu-id="fa761-183">操作中に、ディレクトリに新しい名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fa761-183">You can specify a new name for the directory during the operation.</span></span>  
  
 <span data-ttu-id="fa761-184">ディレクトリ内のファイルをコピーするときに、特定のファイルが原因で例外がスローされる場合があります。</span><span class="sxs-lookup"><span data-stu-id="fa761-184">When copying files within a directory, exceptions may be thrown that are caused by a specific file.</span></span> <span data-ttu-id="fa761-185">このような例外がスローされると、`Data` プロパティが、ファイルまたはディレクトリのパスがキーで、特定の例外メッセージが対応する値に含まれている <xref:System.Collections.IDictionary> 形式のエントリを保持する1つの例外に統合されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-185">When such exceptions are thrown, they are consolidated into a single exception whose `Data` property holds entries in the form of an <xref:System.Collections.IDictionary> in which the file or directory path is the key and the specific exception message is contained in the corresponding value.</span></span> <span data-ttu-id="fa761-186">`For…Each` を使用して、エントリを列挙します。</span><span class="sxs-lookup"><span data-stu-id="fa761-186">Use `For…Each` to enumerate through the entries.</span></span>  
  
 <span data-ttu-id="fa761-187">次の表に、`My.Computer.FileSystem.CopyDirectory` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-187">The following table lists examples of tasks involving the `My.Computer.FileSystem.CopyDirectory` method.</span></span>  
  
|<span data-ttu-id="fa761-188">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-188">To</span></span>|<span data-ttu-id="fa761-189">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-189">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-190">ディレクトリをコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-190">Copy a directory</span></span>|[<span data-ttu-id="fa761-191">方法: ディレクトリを別のディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-191">How to: Copy a Directory to Another Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-192">次の例では、ディレクトリ `TestDirectory1` を `TestDirectory2`にコピーし、既存のファイルを上書きします。</span><span class="sxs-lookup"><span data-stu-id="fa761-192">The following example copies the directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#49)]  
  
 <span data-ttu-id="fa761-193">`C:\TestDirectory1` と `C:\TestDirectory2` を、コピーするディレクトリのパスと名前、およびコピー先の場所に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fa761-193">Replace `C:\TestDirectory1` and `C:\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-194">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-194">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-195"><paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-195"><paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fa761-196">コピー元のディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-196">The source directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-197">コピー元とコピー先のパスが同じです。</span><span class="sxs-lookup"><span data-stu-id="fa761-197">The source path and target path are the same.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa761-198">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="fa761-198">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-199">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-199">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-200">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-200">A folder name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-201">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-201">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-202">コピー先のファイルは存在しますが、アクセスできません。</span><span class="sxs-lookup"><span data-stu-id="fa761-202">A destination file exists but cannot be accessed.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-203">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-203">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-get-the-collection-of-files-in-a-directory"><span data-ttu-id="fa761-204">方法: Visual Basic でディレクトリにあるファイルのコレクションを取得する</span><span class="sxs-lookup"><span data-stu-id="fa761-204">How to: Get the Collection of Files in a Directory in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths"><span data-ttu-id="fa761-205">方法 : Visual Basic でファイル パスを解析する</span><span class="sxs-lookup"><span data-stu-id="fa761-205">How to: Parse File Paths in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyDirectory">
      <MemberSignature Language="C#" Value="public void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void CopyDirectory(string sourceDirectoryName, string destinationDirectoryName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyDirectory (sourceDirectoryName As String, destinationDirectoryName As String, showUI As UIOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName, Microsoft::VisualBasic::FileIO::UIOption showUI);" />
      <MemberSignature Language="F#" Value="member this.CopyDirectory : string * string * Microsoft.VisualBasic.FileIO.UIOption -&gt; unit" Usage="fileSystemProxy.CopyDirectory (sourceDirectoryName, destinationDirectoryName, showUI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="fa761-206">コピーするディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fa761-206">The directory to be copied.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="fa761-207">ディレクトリのコピー先の場所。</span><span class="sxs-lookup"><span data-stu-id="fa761-207">The location to which the directory should be copied.</span></span></param>
        <param name="showUI"><span data-ttu-id="fa761-208">操作の進行状況を視覚的に追跡するかどうか。</span><span class="sxs-lookup"><span data-stu-id="fa761-208">Whether to visually track the operation's progress.</span></span> <span data-ttu-id="fa761-209">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-209">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <summary><span data-ttu-id="fa761-210">あるディレクトリを別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-210">Copies a directory to another directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-211">このメソッドでは、ディレクトリ自体とその内容がコピーされます。</span><span class="sxs-lookup"><span data-stu-id="fa761-211">This method copies the contents of the directory as well as the directory itself.</span></span> <span data-ttu-id="fa761-212">ターゲットディレクトリが存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-212">If the target directory does not exist, it is created.</span></span> <span data-ttu-id="fa761-213">同じ名前のディレクトリがターゲットの場所に存在する場合、2つのディレクトリの内容がマージされます。</span><span class="sxs-lookup"><span data-stu-id="fa761-213">If a directory with the same name exists in the target location, the contents of the two directories are merged.</span></span> <span data-ttu-id="fa761-214">操作中に、ディレクトリに新しい名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fa761-214">You can specify a new name for the directory during the operation.</span></span>  
  
 <span data-ttu-id="fa761-215">ディレクトリ内のファイルをコピーするときに、特定のファイルが原因で例外がスローされる場合があります。</span><span class="sxs-lookup"><span data-stu-id="fa761-215">When copying files within a directory, exceptions may be thrown that are caused by a specific file.</span></span> <span data-ttu-id="fa761-216">このような例外がスローされると、`Data` プロパティが、ファイルまたはディレクトリのパスがキーで、特定の例外メッセージが対応する値に含まれている <xref:System.Collections.IDictionary> 形式のエントリを保持する1つの例外に統合されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-216">When such exceptions are thrown, they are consolidated into a single exception whose `Data` property holds entries in the form of an <xref:System.Collections.IDictionary> in which the file or directory path is the key and the specific exception message is contained in the corresponding value.</span></span> <span data-ttu-id="fa761-217">`For…Each` を使用して、エントリを列挙します。</span><span class="sxs-lookup"><span data-stu-id="fa761-217">Use `For…Each` to enumerate through the entries.</span></span>  
  
 <span data-ttu-id="fa761-218">次の表に、`My.Computer.FileSystem.CopyDirectory` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-218">The following table lists examples of tasks involving the `My.Computer.FileSystem.CopyDirectory` method.</span></span>  
  
|<span data-ttu-id="fa761-219">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-219">To</span></span>|<span data-ttu-id="fa761-220">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-220">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-221">ディレクトリをコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-221">Copy a directory</span></span>|[<span data-ttu-id="fa761-222">方法: ディレクトリを別のディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-222">How to: Copy a Directory to Another Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-223">次の例では、ディレクトリ `TestDirectory1` を `TestDirectory2`にコピーし、既存のファイルを上書きします。</span><span class="sxs-lookup"><span data-stu-id="fa761-223">The following example copies the directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#49)]  
  
 <span data-ttu-id="fa761-224">`C:\TestDirectory1` と `C:\TestDirectory2` を、コピーするディレクトリのパスと名前、およびコピー先の場所に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fa761-224">Replace `C:\TestDirectory1` and `C:\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-225">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-225">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-226"><paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-226"><paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fa761-227">コピー元のディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-227">The source directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-228">コピー元とコピー先のパスが同じです。</span><span class="sxs-lookup"><span data-stu-id="fa761-228">The source path and target path are the same.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa761-229">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="fa761-229">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-230">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-230">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-231">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-231">A folder name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-232">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-232">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-233">コピー先のファイルは存在しますが、アクセスできません。</span><span class="sxs-lookup"><span data-stu-id="fa761-233">A destination file exists but cannot be accessed.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="fa761-234"><paramref name="ShowUI" /> が <see langword="UIOption.AllDialogs" /> に設定されている場合にユーザーが操作を取り消したか、ディレクトリ内の 1 つ以上のファイルをコピーできません。</span><span class="sxs-lookup"><span data-stu-id="fa761-234"><paramref name="ShowUI" /> is set to <see langword="UIOption.AllDialogs" /> and the user cancels the operation, or one or more files in the directory cannot be copied.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-235">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-235">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-get-the-collection-of-files-in-a-directory"><span data-ttu-id="fa761-236">方法: Visual Basic でディレクトリにあるファイルのコレクションを取得する</span><span class="sxs-lookup"><span data-stu-id="fa761-236">How to: Get the Collection of Files in a Directory in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths"><span data-ttu-id="fa761-237">方法 : Visual Basic でファイル パスを解析する</span><span class="sxs-lookup"><span data-stu-id="fa761-237">How to: Parse File Paths in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyDirectory">
      <MemberSignature Language="C#" Value="public void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void CopyDirectory(string sourceDirectoryName, string destinationDirectoryName, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyDirectory (sourceDirectoryName As String, destinationDirectoryName As String, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.CopyDirectory : string * string * bool -&gt; unit" Usage="fileSystemProxy.CopyDirectory (sourceDirectoryName, destinationDirectoryName, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="fa761-238">コピーするディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fa761-238">The directory to be copied.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="fa761-239">ディレクトリのコピー先の場所。</span><span class="sxs-lookup"><span data-stu-id="fa761-239">The location to which the directory should be copied.</span></span></param>
        <param name="overwrite"><span data-ttu-id="fa761-240">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fa761-240"><see langword="True" /> to overwrite existing files; otherwise <see langword="False" />.</span></span> <span data-ttu-id="fa761-241">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-241">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="fa761-242">あるディレクトリを別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-242">Copies a directory to another directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-243">このメソッドでは、ディレクトリ自体とその内容がコピーされます。</span><span class="sxs-lookup"><span data-stu-id="fa761-243">This method copies the contents of the directory as well as the directory itself.</span></span> <span data-ttu-id="fa761-244">ターゲットディレクトリが存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-244">If the target directory does not exist, it is created.</span></span> <span data-ttu-id="fa761-245">同じ名前のディレクトリがターゲットの場所に存在する場合、2つのディレクトリの内容がマージされます。</span><span class="sxs-lookup"><span data-stu-id="fa761-245">If a directory with the same name exists in the target location, the contents of the two directories are merged.</span></span> <span data-ttu-id="fa761-246">操作中に、ディレクトリに新しい名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fa761-246">You can specify a new name for the directory during the operation.</span></span>  
  
 <span data-ttu-id="fa761-247">ディレクトリ内のファイルをコピーする場合、`overwrite` が `False`に設定されている間に、マージ中に存在するファイルなど、特定のファイルが原因で例外がスローされることがあります。</span><span class="sxs-lookup"><span data-stu-id="fa761-247">When copying files within a directory, exceptions may be thrown that are caused by a specific file, such as a file existing during a merge while `overwrite` is set to `False`.</span></span> <span data-ttu-id="fa761-248">このような例外がスローされると、`Data` プロパティが、ファイルまたはディレクトリのパスがキーで、特定の例外メッセージが対応する値に含まれている <xref:System.Collections.IDictionary> 形式のエントリを保持する1つの例外に統合されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-248">When such exceptions are thrown, they are consolidated into a single exception whose `Data` property holds entries in the form of an <xref:System.Collections.IDictionary> in which the file or directory path is the key and the specific exception message is contained in the corresponding value.</span></span> <span data-ttu-id="fa761-249">`For…Each` を使用して、エントリを列挙します。</span><span class="sxs-lookup"><span data-stu-id="fa761-249">Use `For…Each` to enumerate through the entries.</span></span>  
  
 <span data-ttu-id="fa761-250">次の表に、`My.Computer.FileSystem.CopyDirectory` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-250">The following table lists examples of tasks involving the `My.Computer.FileSystem.CopyDirectory` method.</span></span>  
  
|<span data-ttu-id="fa761-251">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-251">To</span></span>|<span data-ttu-id="fa761-252">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-252">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-253">ディレクトリをコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-253">Copy a directory</span></span>|[<span data-ttu-id="fa761-254">方法: ディレクトリを別のディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-254">How to: Copy a Directory to Another Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-255">次の例では、ディレクトリ `TestDirectory1` を `TestDirectory2`にコピーし、既存のファイルを上書きします。</span><span class="sxs-lookup"><span data-stu-id="fa761-255">The following example copies the directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#49)]  
  
 <span data-ttu-id="fa761-256">`C:\TestDirectory1` と `C:\TestDirectory2` を、コピーするディレクトリのパスと名前、およびコピー先の場所に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fa761-256">Replace `C:\TestDirectory1` and `C:\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-257">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-257">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-258"><paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-258"><paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fa761-259">コピー元のディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-259">The source directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-260">コピー元とコピー先のパスが同じです。</span><span class="sxs-lookup"><span data-stu-id="fa761-260">The source path and target path are the same.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa761-261">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="fa761-261">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-262">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-262">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-263">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-263">A folder name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-264">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-264">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-265">コピー先のファイルは存在しますが、アクセスできません。</span><span class="sxs-lookup"><span data-stu-id="fa761-265">A destination file exists but cannot be accessed.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-266">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-266">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-get-the-collection-of-files-in-a-directory"><span data-ttu-id="fa761-267">方法: Visual Basic でディレクトリにあるファイルのコレクションを取得する</span><span class="sxs-lookup"><span data-stu-id="fa761-267">How to: Get the Collection of Files in a Directory in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths"><span data-ttu-id="fa761-268">方法 : Visual Basic でファイル パスを解析する</span><span class="sxs-lookup"><span data-stu-id="fa761-268">How to: Parse File Paths in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyDirectory">
      <MemberSignature Language="C#" Value="public void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void CopyDirectory(string sourceDirectoryName, string destinationDirectoryName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyDirectory (sourceDirectoryName As String, destinationDirectoryName As String, showUI As UIOption, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.CopyDirectory : string * string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="fileSystemProxy.CopyDirectory (sourceDirectoryName, destinationDirectoryName, showUI, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="fa761-269">コピーするディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fa761-269">The directory to be copied.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="fa761-270">ディレクトリのコピー先の場所。</span><span class="sxs-lookup"><span data-stu-id="fa761-270">The location to which the directory should be copied.</span></span></param>
        <param name="showUI"><span data-ttu-id="fa761-271">操作の進行状況を視覚的に追跡するかどうか。</span><span class="sxs-lookup"><span data-stu-id="fa761-271">Whether to visually track the operation's progress.</span></span> <span data-ttu-id="fa761-272">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-272">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="onUserCancel"><span data-ttu-id="fa761-273">操作中にユーザーが **[キャンセル]** をクリックした場合の処理を指定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-273">Specifies what should be done if the user clicks **Cancel** during the operation.</span></span> <span data-ttu-id="fa761-274">既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-274">Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</span></span></param>
        <summary><span data-ttu-id="fa761-275">あるディレクトリを別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-275">Copies a directory to another directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-276">このメソッドでは、ディレクトリ自体とその内容がコピーされます。</span><span class="sxs-lookup"><span data-stu-id="fa761-276">This method copies the contents of the directory as well as the directory itself.</span></span> <span data-ttu-id="fa761-277">ターゲットディレクトリが存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-277">If the target directory does not exist, it is created.</span></span> <span data-ttu-id="fa761-278">同じ名前のディレクトリがターゲットの場所に存在する場合、2つのディレクトリの内容がマージされます。</span><span class="sxs-lookup"><span data-stu-id="fa761-278">If a directory with the same name exists in the target location, the contents of the two directories are merged.</span></span> <span data-ttu-id="fa761-279">操作中に、ディレクトリに新しい名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fa761-279">You can specify a new name for the directory during the operation.</span></span>  
  
 <span data-ttu-id="fa761-280">ディレクトリ内のファイルをコピーするときに、特定のファイルが原因で例外がスローされる場合があります。</span><span class="sxs-lookup"><span data-stu-id="fa761-280">When copying files within a directory, exceptions may be thrown that are caused by a specific file.</span></span> <span data-ttu-id="fa761-281">このような例外がスローされると、`Data` プロパティが、ファイルまたはディレクトリのパスがキーで、特定の例外メッセージが対応する値に含まれている <xref:System.Collections.IDictionary> 形式のエントリを保持する1つの例外に統合されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-281">When such exceptions are thrown, they are consolidated into a single exception whose `Data` property holds entries in the form of an <xref:System.Collections.IDictionary> in which the file or directory path is the key and the specific exception message is contained in the corresponding value.</span></span> <span data-ttu-id="fa761-282">`For…Each` を使用して、エントリを列挙します。</span><span class="sxs-lookup"><span data-stu-id="fa761-282">Use `For…Each` to enumerate through the entries.</span></span>  
  
 <span data-ttu-id="fa761-283">次の表に、`My.Computer.FileSystem.CopyDirectory` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-283">The following table lists examples of tasks involving the `My.Computer.FileSystem.CopyDirectory` method.</span></span>  
  
|<span data-ttu-id="fa761-284">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-284">To</span></span>|<span data-ttu-id="fa761-285">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-285">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-286">ディレクトリをコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-286">Copy a directory</span></span>|[<span data-ttu-id="fa761-287">方法: ディレクトリを別のディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-287">How to: Copy a Directory to Another Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-288">次の例では、ディレクトリ `TestDirectory1` を `TestDirectory2`にコピーし、既存のファイルを上書きします。</span><span class="sxs-lookup"><span data-stu-id="fa761-288">The following example copies the directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#49)]  
  
 <span data-ttu-id="fa761-289">`C:\TestDirectory1` と `C:\TestDirectory2` を、コピーするディレクトリのパスと名前、およびコピー先の場所に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fa761-289">Replace `C:\TestDirectory1` and `C:\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-290">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-290">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-291"><paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-291"><paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fa761-292">コピー元のディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-292">The source directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-293">コピー元とコピー先のパスが同じです。</span><span class="sxs-lookup"><span data-stu-id="fa761-293">The source path and target path are the same.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa761-294">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="fa761-294">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-295">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-295">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-296">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-296">A folder name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-297">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-297">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-298">コピー先のファイルは存在しますが、アクセスできません。</span><span class="sxs-lookup"><span data-stu-id="fa761-298">A destination file exists but cannot be accessed.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="fa761-299"><paramref name="ShowUI" /> が <see langword="UIOption.AllDialogs" /> に設定されている場合にユーザーが操作を取り消したか、ディレクトリ内の 1 つ以上のファイルをコピーできません。</span><span class="sxs-lookup"><span data-stu-id="fa761-299"><paramref name="ShowUI" /> is set to <see langword="UIOption.AllDialogs" /> and the user cancels the operation, or one or more files in the directory cannot be copied.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-300">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-300">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-get-the-collection-of-files-in-a-directory"><span data-ttu-id="fa761-301">方法: Visual Basic でディレクトリにあるファイルのコレクションを取得する</span><span class="sxs-lookup"><span data-stu-id="fa761-301">How to: Get the Collection of Files in a Directory in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths"><span data-ttu-id="fa761-302">方法 : Visual Basic でファイル パスを解析する</span><span class="sxs-lookup"><span data-stu-id="fa761-302">How to: Parse File Paths in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa761-303">ファイルを新しい場所にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-303">Copies a file to a new location.</span></span></summary>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-304">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-304">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-files-with-a-specific-pattern-to-a-directory"><span data-ttu-id="fa761-305">方法 : Visual Basic で特定のパターンを持つファイルをディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-305">How to: Copy Files with a Specific Pattern to a Directory in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory"><span data-ttu-id="fa761-306">方法 : Visual Basic でファイルのコピーを同じディレクトリに作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-306">How to: Create a Copy of a File in the Same Directory in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory"><span data-ttu-id="fa761-307">方法 : Visual Basic でディレクトリを別のディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-307">How to: Copy a Directory to Another Directory in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-rename-a-file"><span data-ttu-id="fa761-308">方法 : Visual Basic でファイルの名前を変更する</span><span class="sxs-lookup"><span data-stu-id="fa761-308">How to: Rename a File in Visual Basic</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyFile">
      <MemberSignature Language="C#" Value="public void CopyFile (string sourceFileName, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void CopyFile(string sourceFileName, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyFile (sourceFileName As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFile(System::String ^ sourceFileName, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.CopyFile : string * string -&gt; unit" Usage="fileSystemProxy.CopyFile (sourceFileName, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="fa761-309">コピーするファイル。</span><span class="sxs-lookup"><span data-stu-id="fa761-309">The file to be copied.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="fa761-310">ファイルのコピー先となる場所。</span><span class="sxs-lookup"><span data-stu-id="fa761-310">The location to which the file should be copied.</span></span></param>
        <summary><span data-ttu-id="fa761-311">ファイルを新しい場所にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-311">Copies a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-312">`CopyFile` は、Ace (Access Control エントリ) を保持しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-312">`CopyFile` does not preserve ACEs (Access Control Entries).</span></span> <span data-ttu-id="fa761-313">新しく作成されたファイルは、作成されたディレクトリから既定の Ace を継承します。</span><span class="sxs-lookup"><span data-stu-id="fa761-313">The newly created file inherits default ACEs from the directory in which it is created.</span></span>  
  
 <span data-ttu-id="fa761-314">次の表に、`My.Computer.FileSystem.CopyFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-314">The following table lists examples of tasks involving the `My.Computer.FileSystem.CopyFile` method.</span></span>  
  
|<span data-ttu-id="fa761-315">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-315">To</span></span>|<span data-ttu-id="fa761-316">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-316">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-317">同じディレクトリにファイルをコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-317">Copy a file to the same directory.</span></span>|[<span data-ttu-id="fa761-318">方法: ファイルのコピーを同じディレクトリに作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-318">How to: Create a Copy of a File in the Same Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory)|  
|<span data-ttu-id="fa761-319">ファイルを別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-319">Copy a file to a different directory.</span></span>|[<span data-ttu-id="fa761-320">方法: ファイルのコピーを別のディレクトリに作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-320">How to: Create a Copy of a File in a Different Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-a-different-directory)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-321">この例では、既存のファイルを上書きせずに、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-321">This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.</span></span>  
  
 [!code-vb[VbRefFile#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#15)]  
  
 <span data-ttu-id="fa761-322">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fa761-322">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 <span data-ttu-id="fa761-323">この例では、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーし、`NewFile.txt`名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="fa761-323">This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.</span></span>  
  
 [!code-vb[VbRefFile#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#16)]  
  
 <span data-ttu-id="fa761-324">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fa761-324">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-325"><paramref name="destinationFileName" /> にパス情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fa761-325"><paramref name="destinationFileName" /> contains path information.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-326"><paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-326"><paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-327">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-327">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-328">コピー先のディレクトリにある同じ名前のファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="fa761-328">A file in the target directory with the same name is in use.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-329">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-329">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-330">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-330">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-331">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-331">The user does not have required permission.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-332">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-332">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-333">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-333">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-files-with-a-specific-pattern-to-a-directory"><span data-ttu-id="fa761-334">方法 : Visual Basic で特定のパターンを持つファイルをディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-334">How to: Copy Files with a Specific Pattern to a Directory in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory"><span data-ttu-id="fa761-335">方法 : Visual Basic でファイルのコピーを同じディレクトリに作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-335">How to: Create a Copy of a File in the Same Directory in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory"><span data-ttu-id="fa761-336">方法 : Visual Basic でディレクトリを別のディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-336">How to: Copy a Directory to Another Directory in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-rename-a-file"><span data-ttu-id="fa761-337">方法 : Visual Basic でファイルの名前を変更する</span><span class="sxs-lookup"><span data-stu-id="fa761-337">How to: Rename a File in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyFile">
      <MemberSignature Language="C#" Value="public void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void CopyFile(string sourceFileName, string destinationFileName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyFile (sourceFileName As String, destinationFileName As String, showUI As UIOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFile(System::String ^ sourceFileName, System::String ^ destinationFileName, Microsoft::VisualBasic::FileIO::UIOption showUI);" />
      <MemberSignature Language="F#" Value="member this.CopyFile : string * string * Microsoft.VisualBasic.FileIO.UIOption -&gt; unit" Usage="fileSystemProxy.CopyFile (sourceFileName, destinationFileName, showUI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="fa761-338">コピーするファイル。</span><span class="sxs-lookup"><span data-stu-id="fa761-338">The file to be copied.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="fa761-339">ファイルのコピー先となる場所。</span><span class="sxs-lookup"><span data-stu-id="fa761-339">The location to which the file should be copied.</span></span></param>
        <param name="showUI"><span data-ttu-id="fa761-340">操作の進行状況を視覚的に追跡するかどうか。</span><span class="sxs-lookup"><span data-stu-id="fa761-340">Whether to visually track the operation's progress.</span></span> <span data-ttu-id="fa761-341">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-341">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <summary><span data-ttu-id="fa761-342">ファイルを新しい場所にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-342">Copies a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-343">`CopyFile` は、Ace (Access Control エントリ) を保持しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-343">`CopyFile` does not preserve ACEs (Access Control Entries).</span></span> <span data-ttu-id="fa761-344">新しく作成されたファイルは、作成されたディレクトリから既定の Ace を継承します。</span><span class="sxs-lookup"><span data-stu-id="fa761-344">The newly created file inherits default ACEs from the directory in which it is created.</span></span>  
  
 <span data-ttu-id="fa761-345">次の表に、`My.Computer.FileSystem.CopyFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-345">The following table lists examples of tasks involving the `My.Computer.FileSystem.CopyFile` method.</span></span>  
  
|<span data-ttu-id="fa761-346">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-346">To</span></span>|<span data-ttu-id="fa761-347">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-347">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-348">同じディレクトリにファイルをコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-348">Copy a file to the same directory.</span></span>|[<span data-ttu-id="fa761-349">方法: ファイルのコピーを同じディレクトリに作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-349">How to: Create a Copy of a File in the Same Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory)|  
|<span data-ttu-id="fa761-350">ファイルを別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-350">Copy a file to a different directory.</span></span>|[<span data-ttu-id="fa761-351">方法: ファイルのコピーを別のディレクトリに作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-351">How to: Create a Copy of a File in a Different Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-a-different-directory)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-352">この例では、既存のファイルを上書きせずに、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-352">This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.</span></span>  
  
 [!code-vb[VbRefFile#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#15)]  
  
 <span data-ttu-id="fa761-353">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fa761-353">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 <span data-ttu-id="fa761-354">この例では、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーし、`NewFile.txt`名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="fa761-354">This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.</span></span>  
  
 [!code-vb[VbRefFile#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#16)]  
  
 <span data-ttu-id="fa761-355">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fa761-355">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-356"><paramref name="destinationFileName" /> にパス情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fa761-356"><paramref name="destinationFileName" /> contains path information.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-357"><paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-357"><paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-358">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-358">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-359">移動先にファイルが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="fa761-359">The destination file exists and <paramref name="overwrite" /> is set to <see langword="False" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-360">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-360">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-361">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-361">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-362">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-362">The user does not have required permission.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-363">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-363">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-364">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-364">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-files-with-a-specific-pattern-to-a-directory"><span data-ttu-id="fa761-365">方法 : Visual Basic で特定のパターンを持つファイルをディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-365">How to: Copy Files with a Specific Pattern to a Directory in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory"><span data-ttu-id="fa761-366">方法 : Visual Basic でファイルのコピーを同じディレクトリに作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-366">How to: Create a Copy of a File in the Same Directory in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory"><span data-ttu-id="fa761-367">方法 : Visual Basic でディレクトリを別のディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-367">How to: Copy a Directory to Another Directory in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-rename-a-file"><span data-ttu-id="fa761-368">方法 : Visual Basic でファイルの名前を変更する</span><span class="sxs-lookup"><span data-stu-id="fa761-368">How to: Rename a File in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyFile">
      <MemberSignature Language="C#" Value="public void CopyFile (string sourceFileName, string destinationFileName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void CopyFile(string sourceFileName, string destinationFileName, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyFile (sourceFileName As String, destinationFileName As String, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFile(System::String ^ sourceFileName, System::String ^ destinationFileName, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.CopyFile : string * string * bool -&gt; unit" Usage="fileSystemProxy.CopyFile (sourceFileName, destinationFileName, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="fa761-369">コピーするファイル。</span><span class="sxs-lookup"><span data-stu-id="fa761-369">The file to be copied.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="fa761-370">ファイルのコピー先となる場所。</span><span class="sxs-lookup"><span data-stu-id="fa761-370">The location to which the file should be copied.</span></span></param>
        <param name="overwrite"><span data-ttu-id="fa761-371">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fa761-371"><see langword="True" /> if existing files should be overwritten; otherwise <see langword="False" />.</span></span> <span data-ttu-id="fa761-372">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-372">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="fa761-373">ファイルを新しい場所にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-373">Copies a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-374">`CopyFile` は、Ace (Access Control エントリ) を保持しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-374">`CopyFile` does not preserve ACEs (Access Control Entries).</span></span> <span data-ttu-id="fa761-375">新しく作成されたファイルは、作成されたディレクトリから既定の Ace を継承します。</span><span class="sxs-lookup"><span data-stu-id="fa761-375">The newly created file inherits default ACEs from the directory in which it is created.</span></span>  
  
 <span data-ttu-id="fa761-376">次の表に、`My.Computer.FileSystem.CopyFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-376">The following table lists examples of tasks involving the `My.Computer.FileSystem.CopyFile` method.</span></span>  
  
|<span data-ttu-id="fa761-377">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-377">To</span></span>|<span data-ttu-id="fa761-378">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-378">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-379">同じディレクトリにファイルをコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-379">Copy a file to the same directory.</span></span>|[<span data-ttu-id="fa761-380">方法: ファイルのコピーを同じディレクトリに作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-380">How to: Create a Copy of a File in the Same Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory)|  
|<span data-ttu-id="fa761-381">ファイルを別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-381">Copy a file to a different directory.</span></span>|[<span data-ttu-id="fa761-382">方法: ファイルのコピーを別のディレクトリに作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-382">How to: Create a Copy of a File in a Different Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-a-different-directory)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-383">この例では、既存のファイルを上書きせずに、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-383">This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.</span></span>  
  
 [!code-vb[VbRefFile#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#15)]  
  
 <span data-ttu-id="fa761-384">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fa761-384">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 <span data-ttu-id="fa761-385">この例では、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーし、`NewFile.txt`名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="fa761-385">This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.</span></span>  
  
 [!code-vb[VbRefFile#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#16)]  
  
 <span data-ttu-id="fa761-386">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fa761-386">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-387"><paramref name="destinationFileName" /> にパス情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fa761-387"><paramref name="destinationFileName" /> contains path information.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-388"><paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-388"><paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-389">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-389">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-390">移動先にファイルが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="fa761-390">The destination file exists and <paramref name="overwrite" /> is set to <see langword="False" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-391">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-391">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-392">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-392">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-393">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-393">The user does not have required permission.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-394">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-394">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-395">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-395">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-files-with-a-specific-pattern-to-a-directory"><span data-ttu-id="fa761-396">方法 : Visual Basic で特定のパターンを持つファイルをディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-396">How to: Copy Files with a Specific Pattern to a Directory in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory"><span data-ttu-id="fa761-397">方法 : Visual Basic でファイルのコピーを同じディレクトリに作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-397">How to: Create a Copy of a File in the Same Directory in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory"><span data-ttu-id="fa761-398">方法 : Visual Basic でディレクトリを別のディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-398">How to: Copy a Directory to Another Directory in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-rename-a-file"><span data-ttu-id="fa761-399">方法 : Visual Basic でファイルの名前を変更する</span><span class="sxs-lookup"><span data-stu-id="fa761-399">How to: Rename a File in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyFile">
      <MemberSignature Language="C#" Value="public void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void CopyFile(string sourceFileName, string destinationFileName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyFile (sourceFileName As String, destinationFileName As String, showUI As UIOption, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFile(System::String ^ sourceFileName, System::String ^ destinationFileName, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.CopyFile : string * string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="fileSystemProxy.CopyFile (sourceFileName, destinationFileName, showUI, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="fa761-400">コピーするファイル。</span><span class="sxs-lookup"><span data-stu-id="fa761-400">The file to be copied.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="fa761-401">ファイルのコピー先となる場所。</span><span class="sxs-lookup"><span data-stu-id="fa761-401">The location to which the file should be copied.</span></span></param>
        <param name="showUI"><span data-ttu-id="fa761-402">操作の進行状況を視覚的に追跡するかどうか。</span><span class="sxs-lookup"><span data-stu-id="fa761-402">Whether to visually track the operation's progress.</span></span> <span data-ttu-id="fa761-403">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-403">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="onUserCancel"><span data-ttu-id="fa761-404">操作中にユーザーが **[キャンセル]** をクリックした場合の処理を指定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-404">Specifies what should be done if the user clicks **Cancel** during the operation.</span></span> <span data-ttu-id="fa761-405">既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-405">Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</span></span></param>
        <summary><span data-ttu-id="fa761-406">ファイルを新しい場所にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-406">Copies a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-407">`CopyFile` は、Ace (Access Control エントリ) を保持しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-407">`CopyFile` does not preserve ACEs (Access Control Entries).</span></span> <span data-ttu-id="fa761-408">新しく作成されたファイルは、作成されたディレクトリから既定の Ace を継承します。</span><span class="sxs-lookup"><span data-stu-id="fa761-408">The newly created file inherits default ACEs from the directory in which it is created.</span></span>  
  
 <span data-ttu-id="fa761-409">次の表に、`My.Computer.FileSystem.CopyFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-409">The following table lists examples of tasks involving the `My.Computer.FileSystem.CopyFile` method.</span></span>  
  
|<span data-ttu-id="fa761-410">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-410">To</span></span>|<span data-ttu-id="fa761-411">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-411">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-412">同じディレクトリにファイルをコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-412">Copy a file to the same directory.</span></span>|[<span data-ttu-id="fa761-413">方法: ファイルのコピーを同じディレクトリに作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-413">How to: Create a Copy of a File in the Same Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory)|  
|<span data-ttu-id="fa761-414">ファイルを別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-414">Copy a file to a different directory.</span></span>|[<span data-ttu-id="fa761-415">方法: ファイルのコピーを別のディレクトリに作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-415">How to: Create a Copy of a File in a Different Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-a-different-directory)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-416">この例では、既存のファイルを上書きせずに、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fa761-416">This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.</span></span>  
  
 [!code-vb[VbRefFile#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#15)]  
  
 <span data-ttu-id="fa761-417">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fa761-417">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 <span data-ttu-id="fa761-418">この例では、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーし、`NewFile.txt`名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="fa761-418">This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.</span></span>  
  
 [!code-vb[VbRefFile#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#16)]  
  
 <span data-ttu-id="fa761-419">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fa761-419">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-420"><paramref name="destinationFileName" /> にパス情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fa761-420"><paramref name="destinationFileName" /> contains path information.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-421"><paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-421"><paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-422">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-422">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-423">移動先にファイルが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="fa761-423">The destination file exists and <paramref name="overwrite" /> is set to <see langword="False" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-424">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-424">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-425">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-425">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-426">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-426">The user does not have required permission.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-427">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-427">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="fa761-428"><paramref name="UICancelOption" /> が <see langword="ThrowException" /> に設定されている場合にユーザーが操作を取り消したか、不特定の I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa761-428"><paramref name="UICancelOption" /> is set to <see langword="ThrowException" />, and the user has canceled the operation or an unspecified I/O error occurs.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-429">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-429">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-files-with-a-specific-pattern-to-a-directory"><span data-ttu-id="fa761-430">方法 : Visual Basic で特定のパターンを持つファイルをディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-430">How to: Copy Files with a Specific Pattern to a Directory in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory"><span data-ttu-id="fa761-431">方法 : Visual Basic でファイルのコピーを同じディレクトリに作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-431">How to: Create a Copy of a File in the Same Directory in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory"><span data-ttu-id="fa761-432">方法 : Visual Basic でディレクトリを別のディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fa761-432">How to: Copy a Directory to Another Directory in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-rename-a-file"><span data-ttu-id="fa761-433">方法 : Visual Basic でファイルの名前を変更する</span><span class="sxs-lookup"><span data-stu-id="fa761-433">How to: Rename a File in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateDirectory">
      <MemberSignature Language="C#" Value="public void CreateDirectory (string directory);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void CreateDirectory(string directory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateDirectory (directory As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateDirectory(System::String ^ directory);" />
      <MemberSignature Language="F#" Value="member this.CreateDirectory : string -&gt; unit" Usage="fileSystemProxy.CreateDirectory directory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fa761-434">ディレクトリの名前および場所。</span><span class="sxs-lookup"><span data-stu-id="fa761-434">Name and location of the directory.</span></span></param>
        <summary><span data-ttu-id="fa761-435">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="fa761-435">Creates a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-436">ディレクトリが既にある場合、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="fa761-436">If the directory already exists, no exception is thrown.</span></span>  
  
 <span data-ttu-id="fa761-437">次の表に、`My.Computer.FileSystem.CreateDirectory` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-437">The following table lists examples of tasks involving the `My.Computer.FileSystem.CreateDirectory` method.</span></span>  
  
|<span data-ttu-id="fa761-438">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-438">To</span></span>|<span data-ttu-id="fa761-439">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-439">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-440">ディレクトリを作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-440">Create a directory</span></span>|[<span data-ttu-id="fa761-441">方法: ディレクトリを作成する</span><span class="sxs-lookup"><span data-stu-id="fa761-441">How to: Create a Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-directory)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-442">この例では、`C:\Documents and Settings\All Users\Documents`にディレクトリ `NewDirectory`を作成します。</span><span class="sxs-lookup"><span data-stu-id="fa761-442">This example creates the directory, `NewDirectory`, in `C:\Documents and Settings\All Users\Documents`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-443">ディレクトリ名が不正な場合。</span><span class="sxs-lookup"><span data-stu-id="fa761-443">The directory name is malformed.</span></span> <span data-ttu-id="fa761-444">たとえば、無効な文字が含まれているか、空白のみであることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-444">For example, it contains illegal characters or is only white space.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-445"><paramref name="directory" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-445"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-446">ディレクトリ名が長すぎます。</span><span class="sxs-lookup"><span data-stu-id="fa761-446">The directory name is too long.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-447">ディレクトリ名にコロン (":") だけが指定されている場合</span><span class="sxs-lookup"><span data-stu-id="fa761-447">The directory name is only a colon (:).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-448">作成するディレクトリの親ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="fa761-448">The parent directory of the directory to be created is read-only</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-449">ユーザーがディレクトリを作成するためのアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-449">The user does not have permission to create the directory.</span></span></exception>
        <altmember cref="M:System.IO.Directory.CreateDirectory(System.String)" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-450">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-450">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CurrentDirectory">
      <MemberSignature Language="C#" Value="public string CurrentDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentDirectory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDirectory : string with get, set" Usage="Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa761-451">現在のディレクトリを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-451">Gets or sets the current directory.</span></span></summary>
        <value><span data-ttu-id="fa761-452">ファイル I/O 操作の現在のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fa761-452">The current directory for file I/O operations.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-453">`CurrentDirectory` は、システム全体の環境変数です。</span><span class="sxs-lookup"><span data-stu-id="fa761-453">`CurrentDirectory` is a system-wide environment variable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa761-454">この例では、現在のディレクトリが返され、メッセージボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-454">This example returns the current directory and displays it in a message box.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#18)]  
  
 <span data-ttu-id="fa761-455">この例では、現在のディレクトリを `C:\TestDirectory`に設定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-455">This example sets the current directory to `C:\TestDirectory`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fa761-456">パスが無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-456">The path is not valid.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-457">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-457">The user lacks necessary permissions.</span></span></exception>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-458">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-458">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteDirectory">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa761-459">ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="fa761-459">Deletes a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteDirectory">
      <MemberSignature Language="C#" Value="public void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.DeleteDirectoryOption onDirectoryNotEmpty);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DeleteDirectory(string directory, valuetype Microsoft.VisualBasic.FileIO.DeleteDirectoryOption onDirectoryNotEmpty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteDirectory (directory As String, onDirectoryNotEmpty As DeleteDirectoryOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteDirectory(System::String ^ directory, Microsoft::VisualBasic::FileIO::DeleteDirectoryOption onDirectoryNotEmpty);" />
      <MemberSignature Language="F#" Value="member this.DeleteDirectory : string * Microsoft.VisualBasic.FileIO.DeleteDirectoryOption -&gt; unit" Usage="fileSystemProxy.DeleteDirectory (directory, onDirectoryNotEmpty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="onDirectoryNotEmpty" Type="Microsoft.VisualBasic.FileIO.DeleteDirectoryOption" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fa761-460">削除するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fa761-460">Directory to be deleted.</span></span></param>
        <param name="onDirectoryNotEmpty"><span data-ttu-id="fa761-461">削除対象のディレクトリ内にファイルまたはディレクトリが存在する場合の処理を指定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-461">Specifies what should be done when a directory that is to be deleted contains files or directories.</span></span> <span data-ttu-id="fa761-462">既定値は <see langword="DeleteDirectoryOption.DeleteAllContents" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-462">Default is <see langword="DeleteDirectoryOption.DeleteAllContents" />.</span></span></param>
        <summary><span data-ttu-id="fa761-463">ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="fa761-463">Deletes a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fa761-464">この例では、ディレクトリが空の場合にのみ、`OldDirectory` ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="fa761-464">The example deletes the directory `OldDirectory` only if it is empty.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#56)]  
  
 <span data-ttu-id="fa761-465">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除します。</span><span class="sxs-lookup"><span data-stu-id="fa761-465">This example deletes the directory `OldDirectory` and all of its contents.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#57](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#57)]  
  
 <span data-ttu-id="fa761-466">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除し、ユーザーに削除の確認を求めますが、コンテンツは**ごみ箱**に送信しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-466">This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#58)]  
  
 <span data-ttu-id="fa761-467">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除して**ごみ箱**に送信しますが、操作の進行状況は表示されません。</span><span class="sxs-lookup"><span data-stu-id="fa761-467">This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-468">パスが長さ 0 の文字列であるか、形式に誤りがあるか、空白だけが含まれているか、または無効な文字 (ワイルドカード文字を含む) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fa761-468">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters).</span></span> <span data-ttu-id="fa761-469">パスがデバイス パスです (\\\\.\\ で始まる)。</span><span class="sxs-lookup"><span data-stu-id="fa761-469">The path is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-470"><paramref name="directory" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-470"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fa761-471">ディレクトリが存在しないか、ファイルが指定されています。</span><span class="sxs-lookup"><span data-stu-id="fa761-471">The directory does not exist or is a file.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-472">ディレクトリまたはサブディレクトリ内のファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="fa761-472">A file in the directory or subdirectory is in use.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-473">ディレクトリ名にコロン (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fa761-473">The directory name contains a colon (:).</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-474">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-474">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-475">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-475">The user does not have required permissions.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="fa761-476">ユーザーが操作を取り消したか、ディレクトリを削除できませんでした。</span><span class="sxs-lookup"><span data-stu-id="fa761-476">The user cancels the operation or the directory cannot be deleted.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-477">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-477">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-delete-a-file"><span data-ttu-id="fa761-478">方法: Visual Basic でファイルを削除する</span><span class="sxs-lookup"><span data-stu-id="fa761-478">How to: Delete a File in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeleteDirectory">
      <MemberSignature Language="C#" Value="public void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DeleteDirectory(string directory, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.RecycleOption recycle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteDirectory (directory As String, showUI As UIOption, recycle As RecycleOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteDirectory(System::String ^ directory, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::RecycleOption recycle);" />
      <MemberSignature Language="F#" Value="member this.DeleteDirectory : string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.RecycleOption -&gt; unit" Usage="fileSystemProxy.DeleteDirectory (directory, showUI, recycle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="recycle" Type="Microsoft.VisualBasic.FileIO.RecycleOption" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fa761-479">削除するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fa761-479">Directory to be deleted.</span></span></param>
        <param name="showUI"><span data-ttu-id="fa761-480">操作の進行状況を視覚的に追跡するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-480">Specifies whether to visually track the operation's progress.</span></span> <span data-ttu-id="fa761-481">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-481">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="recycle"><span data-ttu-id="fa761-482">削除したファイルを **[ごみ箱]** に送るかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-482">Specifies whether or not the deleted file should be sent to the **Recycle Bin**.</span></span> <span data-ttu-id="fa761-483">既定値は <see langword="RecycleOption.DeletePermanently" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-483">Default is <see langword="RecycleOption.DeletePermanently" />.</span></span></param>
        <summary><span data-ttu-id="fa761-484">ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="fa761-484">Deletes a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-485">`showUI` パラメーターと `recycle` パラメーターは、Windows サービスなど、ユーザーが対話型でないアプリケーションではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="fa761-485">The `showUI` and `recycle` parameters are not supported in applications that are not user interactive, such as Windows Services.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa761-486">この例では、ディレクトリが空の場合にのみ、`OldDirectory` ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="fa761-486">The example deletes the directory `OldDirectory` only if it is empty.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#56)]  
  
 <span data-ttu-id="fa761-487">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除します。</span><span class="sxs-lookup"><span data-stu-id="fa761-487">This example deletes the directory `OldDirectory` and all of its contents.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#57](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#57)]  
  
 <span data-ttu-id="fa761-488">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除し、ユーザーに削除の確認を求めますが、コンテンツは**ごみ箱**に送信しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-488">This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#58)]  
  
 <span data-ttu-id="fa761-489">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除して**ごみ箱**に送信しますが、操作の進行状況は表示されません。</span><span class="sxs-lookup"><span data-stu-id="fa761-489">This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-490">パスが長さ 0 の文字列であるか、形式に誤りがあるか、空白だけが含まれているか、または無効な文字 (ワイルドカード文字を含む) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fa761-490">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters).</span></span> <span data-ttu-id="fa761-491">パスがデバイス パスです (\\\\.\\ で始まる)。</span><span class="sxs-lookup"><span data-stu-id="fa761-491">The path is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-492"><paramref name="directory" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-492"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fa761-493">ディレクトリが存在しないか、ファイルが指定されています。</span><span class="sxs-lookup"><span data-stu-id="fa761-493">The directory does not exist or is a file.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-494">ディレクトリまたはサブディレクトリ内のファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="fa761-494">A file in the directory or subdirectory is in use.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-495">ディレクトリ名にコロン (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fa761-495">The directory name contains a colon (:).</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-496">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-496">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-497">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-497">The user does not have required permissions.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="fa761-498">ユーザーが操作を取り消したか、ディレクトリを削除できませんでした。</span><span class="sxs-lookup"><span data-stu-id="fa761-498">The user cancels the operation or the directory cannot be deleted.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.RecycleOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-499">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-499">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-delete-a-file"><span data-ttu-id="fa761-500">方法: Visual Basic でファイルを削除する</span><span class="sxs-lookup"><span data-stu-id="fa761-500">How to: Delete a File in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeleteDirectory">
      <MemberSignature Language="C#" Value="public void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DeleteDirectory(string directory, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.RecycleOption recycle, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteDirectory (directory As String, showUI As UIOption, recycle As RecycleOption, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteDirectory(System::String ^ directory, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::RecycleOption recycle, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DeleteDirectory : string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.RecycleOption * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="fileSystemProxy.DeleteDirectory (directory, showUI, recycle, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="recycle" Type="Microsoft.VisualBasic.FileIO.RecycleOption" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fa761-501">削除するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fa761-501">Directory to be deleted.</span></span></param>
        <param name="showUI"><span data-ttu-id="fa761-502">操作の進行状況を視覚的に追跡するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-502">Specifies whether to visually track the operation's progress.</span></span> <span data-ttu-id="fa761-503">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-503">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="recycle"><span data-ttu-id="fa761-504">削除したファイルを **[ごみ箱]** に送るかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-504">Specifies whether or not the deleted file should be sent to the **Recycle Bin**.</span></span> <span data-ttu-id="fa761-505">既定値は <see langword="RecycleOption.DeletePermanently" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-505">Default is <see langword="RecycleOption.DeletePermanently" />.</span></span></param>
        <param name="onUserCancel"><span data-ttu-id="fa761-506">ユーザーが **[キャンセル]** をクリックした場合に例外をスローするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-506">Specifies whether to throw an exception if the user clicks **Cancel**.</span></span></param>
        <summary><span data-ttu-id="fa761-507">ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="fa761-507">Deletes a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-508">`showUI`、`recycle`、および `onUserCancel` の各パラメーターは、Windows サービスなど、ユーザーが対話型でないアプリケーションではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="fa761-508">The `showUI`, `recycle`, and `onUserCancel` parameters are not supported in applications that are not user interactive, such as Windows Services.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa761-509">この例では、ディレクトリが空の場合にのみ、`OldDirectory` ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="fa761-509">The example deletes the directory `OldDirectory` only if it is empty.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#56)]  
  
 <span data-ttu-id="fa761-510">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除します。</span><span class="sxs-lookup"><span data-stu-id="fa761-510">This example deletes the directory `OldDirectory` and all of its contents.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#57](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#57)]  
  
 <span data-ttu-id="fa761-511">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除し、ユーザーに削除の確認を求めますが、コンテンツは**ごみ箱**に送信しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-511">This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#58)]  
  
 <span data-ttu-id="fa761-512">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除して**ごみ箱**に送信しますが、操作の進行状況は表示されません。</span><span class="sxs-lookup"><span data-stu-id="fa761-512">This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-513">パスが長さ 0 の文字列であるか、形式に誤りがあるか、空白だけが含まれているか、または無効な文字 (ワイルドカード文字を含む) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fa761-513">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters).</span></span> <span data-ttu-id="fa761-514">パスがデバイス パスです (\\\\.\\ で始まる)。</span><span class="sxs-lookup"><span data-stu-id="fa761-514">The path is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-515"><paramref name="directory" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-515"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fa761-516">ディレクトリが存在しないか、ファイルが指定されています。</span><span class="sxs-lookup"><span data-stu-id="fa761-516">The directory does not exist or is a file.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-517">ディレクトリまたはサブディレクトリ内のファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="fa761-517">A file in the directory or subdirectory is in use.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-518">ディレクトリ名にコロン (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fa761-518">The directory name contains a colon (:).</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-519">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-519">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-520">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-520">The user does not have required permissions.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="fa761-521">ユーザーが操作を取り消したか、ディレクトリを削除できませんでした。</span><span class="sxs-lookup"><span data-stu-id="fa761-521">The user cancels the operation or the directory cannot be deleted.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.RecycleOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-522">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-522">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-delete-a-file"><span data-ttu-id="fa761-523">方法: Visual Basic でファイルを削除する</span><span class="sxs-lookup"><span data-stu-id="fa761-523">How to: Delete a File in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa761-524">ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="fa761-524">Deletes a file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteFile">
      <MemberSignature Language="C#" Value="public void DeleteFile (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DeleteFile(string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteFile (file As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteFile(System::String ^ file);" />
      <MemberSignature Language="F#" Value="member this.DeleteFile : string -&gt; unit" Usage="fileSystemProxy.DeleteFile file" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fa761-525">削除対象のファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-525">Name and path of the file to be deleted.</span></span></param>
        <summary><span data-ttu-id="fa761-526">ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="fa761-526">Deletes a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-527">次の表に、`My.Computer.FileSystem.DeleteFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-527">The following table lists examples of tasks involving the `My.Computer.FileSystem.DeleteFile` method.</span></span>  
  
|<span data-ttu-id="fa761-528">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-528">To</span></span>|<span data-ttu-id="fa761-529">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-529">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-530">ファイルを削除するには</span><span class="sxs-lookup"><span data-stu-id="fa761-530">To delete a file</span></span>|[<span data-ttu-id="fa761-531">方法: ファイルを削除する</span><span class="sxs-lookup"><span data-stu-id="fa761-531">How to: Delete a File</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-delete-a-file)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-532">この例では、`Test.txt`ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="fa761-532">This example deletes the file `Test.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#3)]  
  
 <span data-ttu-id="fa761-533">この例では、ファイル `Test.txt` を削除し、ファイルを削除するかどうかをユーザーが確認できるようにします。</span><span class="sxs-lookup"><span data-stu-id="fa761-533">This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#4)]  
  
 <span data-ttu-id="fa761-534">この例では、`Test.txt` ファイルを削除し、**ごみ箱**に送信します。</span><span class="sxs-lookup"><span data-stu-id="fa761-534">This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-535">パスが無効です。原因として、パスが長さ 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、ファイルを指定する必要がある場所の末尾にスラッシュが付いているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-535">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-536"><paramref name="file" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-536"><paramref name="file" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-537">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-537">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-538">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-538">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-539">ファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="fa761-539">The file is in use.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-540">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-540">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-541">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-541">The file does not exist.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-542">ユーザーがファイルの削除に必要なアクセス許可を保持していないか、ファイルが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="fa761-542">The user does not have permission to delete the file or the file is read-only.</span></span></exception>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-543">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-543">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-delete-a-file"><span data-ttu-id="fa761-544">方法: Visual Basic でファイルを削除する</span><span class="sxs-lookup"><span data-stu-id="fa761-544">How to: Delete a File in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeleteFile">
      <MemberSignature Language="C#" Value="public void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DeleteFile(string file, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.RecycleOption recycle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteFile (file As String, showUI As UIOption, recycle As RecycleOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteFile(System::String ^ file, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::RecycleOption recycle);" />
      <MemberSignature Language="F#" Value="member this.DeleteFile : string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.RecycleOption -&gt; unit" Usage="fileSystemProxy.DeleteFile (file, showUI, recycle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="recycle" Type="Microsoft.VisualBasic.FileIO.RecycleOption" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fa761-545">削除対象のファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-545">Name and path of the file to be deleted.</span></span></param>
        <param name="showUI"><span data-ttu-id="fa761-546">操作の進行状況を視覚的に追跡するかどうか。</span><span class="sxs-lookup"><span data-stu-id="fa761-546">Whether to visually track the operation's progress.</span></span> <span data-ttu-id="fa761-547">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-547">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="recycle"><span data-ttu-id="fa761-548">削除したファイルを **[ごみ箱]** に送るかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-548">Whether or not the deleted file should be sent to the **Recycle Bin**.</span></span> <span data-ttu-id="fa761-549">既定値は <see langword="RecycleOption.DeletePermanently" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-549">Default is <see langword="RecycleOption.DeletePermanently" />.</span></span></param>
        <summary><span data-ttu-id="fa761-550">ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="fa761-550">Deletes a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-551">`showUI` パラメーターと `recycle` パラメーターは、Windows サービスなど、ユーザーが対話型でないアプリケーションではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="fa761-551">The `showUI` and `recycle` parameters are not supported in applications that are not user interactive, such as Windows Services.</span></span>  
  
 <span data-ttu-id="fa761-552">次の表に、`My.Computer.FileSystem.DeleteFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-552">The following table lists examples of tasks involving the `My.Computer.FileSystem.DeleteFile` method.</span></span>  
  
|<span data-ttu-id="fa761-553">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-553">To</span></span>|<span data-ttu-id="fa761-554">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-554">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-555">ファイルを削除するには</span><span class="sxs-lookup"><span data-stu-id="fa761-555">To delete a file</span></span>|[<span data-ttu-id="fa761-556">方法: ファイルを削除する</span><span class="sxs-lookup"><span data-stu-id="fa761-556">How to: Delete a File</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-delete-a-file)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-557">この例では、`Test.txt`ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="fa761-557">This example deletes the file `Test.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#3)]  
  
 <span data-ttu-id="fa761-558">この例では、ファイル `Test.txt` を削除し、ファイルを削除するかどうかをユーザーが確認できるようにします。</span><span class="sxs-lookup"><span data-stu-id="fa761-558">This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#4)]  
  
 <span data-ttu-id="fa761-559">この例では、`Test.txt` ファイルを削除し、**ごみ箱**に送信します。</span><span class="sxs-lookup"><span data-stu-id="fa761-559">This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-560">パスが無効です。原因として、パスが長さ 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、ファイルを指定する必要がある場所の末尾にスラッシュが付いているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-560">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-561"><paramref name="file" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-561"><paramref name="file" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-562">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-562">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-563">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-563">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-564">ファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="fa761-564">The file is in use.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-565">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-565">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-566">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-566">The file does not exist.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-567">ユーザーがファイルの削除に必要なアクセス許可を保持していないか、ファイルが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="fa761-567">The user does not have permission to delete the file or the file is read-only.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.RecycleOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-568">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-568">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-delete-a-file"><span data-ttu-id="fa761-569">方法: Visual Basic でファイルを削除する</span><span class="sxs-lookup"><span data-stu-id="fa761-569">How to: Delete a File in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeleteFile">
      <MemberSignature Language="C#" Value="public void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DeleteFile(string file, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.RecycleOption recycle, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteFile (file As String, showUI As UIOption, recycle As RecycleOption, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteFile(System::String ^ file, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::RecycleOption recycle, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DeleteFile : string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.RecycleOption * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="fileSystemProxy.DeleteFile (file, showUI, recycle, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="recycle" Type="Microsoft.VisualBasic.FileIO.RecycleOption" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fa761-570">削除対象のファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-570">Name and path of the file to be deleted.</span></span></param>
        <param name="showUI"><span data-ttu-id="fa761-571">操作の進行状況を視覚的に追跡するかどうか。</span><span class="sxs-lookup"><span data-stu-id="fa761-571">Whether to visually track the operation's progress.</span></span> <span data-ttu-id="fa761-572">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-572">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="recycle"><span data-ttu-id="fa761-573">削除したファイルを **[ごみ箱]** に送るかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-573">Whether or not the deleted file should be sent to the **Recycle Bin**.</span></span> <span data-ttu-id="fa761-574">既定値は <see langword="RecycleOption.DeletePermanently" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-574">Default is <see langword="RecycleOption.DeletePermanently" />.</span></span></param>
        <param name="onUserCancel"><span data-ttu-id="fa761-575">ユーザーによって操作が取り消された場合に、例外をスローするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-575">Specifies whether or not an exception is thrown when the user cancels the operation.</span></span> <span data-ttu-id="fa761-576">既定値は <see langword="UICancelOption.ThrowException" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-576">Default is <see langword="UICancelOption.ThrowException" />.</span></span></param>
        <summary><span data-ttu-id="fa761-577">ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="fa761-577">Deletes a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-578">`showUI`、`recycle`、および `onUserCancel` の各パラメーターは、Windows サービスなど、ユーザーが対話型でないアプリケーションではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="fa761-578">The `showUI`, `recycle`, and `onUserCancel` parameters are not supported in applications that are not user interactive, such as Windows Services.</span></span>  
  
 <span data-ttu-id="fa761-579">次の表に、`My.Computer.FileSystem.DeleteFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-579">The following table lists examples of tasks involving the `My.Computer.FileSystem.DeleteFile` method.</span></span>  
  
|<span data-ttu-id="fa761-580">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-580">To</span></span>|<span data-ttu-id="fa761-581">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-581">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-582">ファイルを削除するには</span><span class="sxs-lookup"><span data-stu-id="fa761-582">To delete a file</span></span>|[<span data-ttu-id="fa761-583">方法: ファイルを削除する</span><span class="sxs-lookup"><span data-stu-id="fa761-583">How to: Delete a File</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-delete-a-file)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-584">この例では、`Test.txt`ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="fa761-584">This example deletes the file `Test.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#3)]  
  
 <span data-ttu-id="fa761-585">この例では、ファイル `Test.txt` を削除し、ファイルを削除するかどうかをユーザーが確認できるようにします。</span><span class="sxs-lookup"><span data-stu-id="fa761-585">This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#4)]  
  
 <span data-ttu-id="fa761-586">この例では、`Test.txt` ファイルを削除し、**ごみ箱**に送信します。</span><span class="sxs-lookup"><span data-stu-id="fa761-586">This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-587">パスが無効です。原因として、パスが長さ 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、ファイルを指定する必要がある場所の末尾にスラッシュが付いているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-587">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-588"><paramref name="file" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-588"><paramref name="file" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-589">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-589">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-590">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-590">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-591">ファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="fa761-591">The file is in use.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-592">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-592">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-593">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-593">The file does not exist.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-594">ユーザーがファイルの削除に必要なアクセス許可を保持していないか、ファイルが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="fa761-594">The user does not have permission to delete the file or the file is read-only.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="fa761-595">ユーザーが操作を取り消し、かつ <paramref name="onUserCancel" /> が <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="fa761-595">The user cancelled the operation and <paramref name="onUserCancel" /> is set to <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.RecycleOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-596">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-596">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-delete-a-file"><span data-ttu-id="fa761-597">方法: Visual Basic でファイルを削除する</span><span class="sxs-lookup"><span data-stu-id="fa761-597">How to: Delete a File in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DirectoryExists">
      <MemberSignature Language="C#" Value="public bool DirectoryExists (string directory);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool DirectoryExists(string directory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DirectoryExists (directory As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DirectoryExists(System::String ^ directory);" />
      <MemberSignature Language="F#" Value="member this.DirectoryExists : string -&gt; bool" Usage="fileSystemProxy.DirectoryExists directory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fa761-598">ディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-598">Path of the directory.</span></span></param>
        <summary><span data-ttu-id="fa761-599">指定されたディレクトリが存在する場合、<see langword="True" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-599">Returns <see langword="True" /> if the specified directory exists.</span></span></summary>
        <returns><span data-ttu-id="fa761-600">ディレクトリが存在する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fa761-600"><see langword="True" /> if the directory exists; otherwise <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fa761-601">この例では、ディレクトリ `C:\backup\logs` 存在するかどうかを判断し、そのプロパティを確認します。</span><span class="sxs-lookup"><span data-stu-id="fa761-601">This example determines whether the directory `C:\backup\logs` exists and checks its properties.</span></span>  
  
 [!code-vb[VbRefFile#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-602">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-602">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/creating-deleting-and-moving-files-and-directories"><span data-ttu-id="fa761-603">Visual Basic でのファイルおよびディレクトリの作成、削除、および移動</span><span class="sxs-lookup"><span data-stu-id="fa761-603">Creating, Deleting, and Moving Files and Directories in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories"><span data-ttu-id="fa761-604">チュートリアル : Visual Basic によるファイルとディレクトリの操作</span><span class="sxs-lookup"><span data-stu-id="fa761-604">Walkthrough: Manipulating Files and Directories in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Drives">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.DriveInfo&gt; Drives { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IO.DriveInfo&gt; Drives" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Drives As ReadOnlyCollection(Of DriveInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::DriveInfo ^&gt; ^ Drives { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::DriveInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Drives : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.DriveInfo&gt;" Usage="Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.DriveInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa761-605">利用可能なすべてのドライブ名の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-605">Returns a read-only collection of all available drive names.</span></span></summary>
        <value><span data-ttu-id="fa761-606"><see cref="T:System.IO.DriveInfo" /> オブジェクトとして使用できるすべてのドライブの読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="fa761-606">A read-only collection of all available drives as <see cref="T:System.IO.DriveInfo" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-607">このプロパティは、すべての論理ドライブを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-607">This property returns all logical drives.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa761-608">この例では、使用可能なドライブ名をメッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-608">This example displays the available drive names in a message box.</span></span>  
  
 [!code-vb[VbRefFile#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <altmember cref="T:System.IO.DriveInfo" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-609">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-609">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public bool FileExists (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool FileExists(string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileExists (file As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FileExists(System::String ^ file);" />
      <MemberSignature Language="F#" Value="member this.FileExists : string -&gt; bool" Usage="fileSystemProxy.FileExists file" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fa761-610">ファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-610">Name and path of the file.</span></span></param>
        <summary><span data-ttu-id="fa761-611">指定されたファイルが存在する場合、<see langword="True" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-611">Returns <see langword="True" /> if the specified file exists.</span></span></summary>
        <returns><span data-ttu-id="fa761-612">ファイルが存在する場合は <see langword="True" /> を返します。それ以外の場合は <see langword="False" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-612">Returns <see langword="True" /> if the file exists; otherwise this method returns <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-613">アプリケーションに、指定されたファイルを読み取るための十分なアクセス許可がない場合、`FileExists` メソッドは、パスが存在するかどうかに関係なく `False`を返します。メソッドは例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="fa761-613">If the application does not have sufficient permissions to read the specified file, the `FileExists` method returns `False`, regardless of the existence of the path; the method does not throw an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa761-614">この例では、ファイル `Check.txt` が存在するかどうかを確認し、メッセージボックスに情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="fa761-614">This example checks to see whether or not the file `Check.txt` exists and supplies the information in a message box.</span></span>  
  
 [!code-vb[VbRefFile#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-615">ファイル名がバックスラッシュ (\\) で終わっています。</span><span class="sxs-lookup"><span data-stu-id="fa761-615">The name of the file ends with a backslash (\\).</span></span></exception>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-616">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-616">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/creating-deleting-and-moving-files-and-directories"><span data-ttu-id="fa761-617">Visual Basic でのファイルおよびディレクトリの作成、削除、および移動</span><span class="sxs-lookup"><span data-stu-id="fa761-617">Creating, Deleting, and Moving Files and Directories in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories"><span data-ttu-id="fa761-618">チュートリアル : Visual Basic によるファイルとディレクトリの操作</span><span class="sxs-lookup"><span data-stu-id="fa761-618">Walkthrough: Manipulating Files and Directories in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindInFiles">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa761-619">指定されたテキストが格納されたファイル名を表す文字列の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-619">Returns a read-only collection of strings representing the names of files containing the specified text.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindInFiles">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; FindInFiles(string directory, string containsText, bool ignoreCase, valuetype Microsoft.VisualBasic.FileIO.SearchOption searchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindInFiles (directory As String, containsText As String, ignoreCase As Boolean, searchType As SearchOption) As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ FindInFiles(System::String ^ directory, System::String ^ containsText, bool ignoreCase, Microsoft::VisualBasic::FileIO::SearchOption searchType);" />
      <MemberSignature Language="F#" Value="member this.FindInFiles : string * string * bool * Microsoft.VisualBasic.FileIO.SearchOption -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="fileSystemProxy.FindInFiles (directory, containsText, ignoreCase, searchType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="containsText" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="searchType" Type="Microsoft.VisualBasic.FileIO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fa761-620">検索するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fa761-620">The directory to be searched.</span></span></param>
        <param name="containsText"><span data-ttu-id="fa761-621">検索文字列。</span><span class="sxs-lookup"><span data-stu-id="fa761-621">The search text.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="fa761-622">検索時に大文字と小文字を区別する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fa761-622"><see langword="True" /> if the search should be case-sensitive; otherwise <see langword="False" />.</span></span> <span data-ttu-id="fa761-623">既定値は <see langword="True" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-623">Default is <see langword="True" />.</span></span></param>
        <param name="searchType"><span data-ttu-id="fa761-624">サブフォルダーを含めるかどうか。</span><span class="sxs-lookup"><span data-stu-id="fa761-624">Whether to include subfolders.</span></span> <span data-ttu-id="fa761-625">既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-625">Default is <see langword="SearchOption.SearchTopLevelOnly" />.</span></span></param>
        <summary><span data-ttu-id="fa761-626">指定されたテキストが格納されたファイル名を表す文字列の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-626">Returns a read-only collection of strings representing the names of files containing the specified text.</span></span></summary>
        <returns><span data-ttu-id="fa761-627">指定されたテキストを含んでいるファイルの名前の読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="fa761-627">Read-only collection of the names of files containing the specified text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-628">指定したパターンに一致するファイルがない場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-628">An empty collection is returned if no files matching the specified pattern are found.</span></span>  
  
 <span data-ttu-id="fa761-629">次の表に、`My.Computer.FileSystem.FindInFiles` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-629">The following table lists examples of tasks involving the `My.Computer.FileSystem.FindInFiles` method.</span></span>  
  
|<span data-ttu-id="fa761-630">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-630">To</span></span>|<span data-ttu-id="fa761-631">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-631">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-632">特定の文字列を含むファイルをディレクトリで検索する</span><span class="sxs-lookup"><span data-stu-id="fa761-632">Search a directory for files containing a specific string</span></span>|[<span data-ttu-id="fa761-633">チュートリアル: Visual Basic によるファイルとディレクトリの操作</span><span class="sxs-lookup"><span data-stu-id="fa761-633">Walkthrough: Manipulating Files and Directories in Visual Basic</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-634">この例では、ディレクトリ `C:\TestDir` で文字列 `"sample string"` を含むすべてのファイルを検索し、`ListBox1`に結果を表示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-634">This example searches the directory `C:\TestDir` for any files containing the string `"sample string"` and displays the results in `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#12)]  
  
 <span data-ttu-id="fa761-635">作業するには、プロジェクトに `ListBox1`という名前の `ListBox` が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa761-635">In order to work, the project must contain a `ListBox` named `ListBox1`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-636">パスが有効ではありません。原因として、長さが 0 の文字列であるか、空白のみが含まれているか、無効な文字が含まれているか、デバイス パスである (先頭が <c>\\.\</c> である) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-636">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with <c>\\.\</c>).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-637"><paramref name="directory" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-637"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fa761-638">指定されたディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-638">The specified directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-639">指定されたディレクトリが既存のファイルを指しています。</span><span class="sxs-lookup"><span data-stu-id="fa761-639">The specified directory points to an existing file.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-640">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-640">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-641">指定されたディレクトリ パスにコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-641">The specified directory path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-642">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-642">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-643">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-643">The user lacks necessary permissions.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.SearchOption" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-644">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-644">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories"><span data-ttu-id="fa761-645">チュートリアル : Visual Basic によるファイルとディレクトリの操作</span><span class="sxs-lookup"><span data-stu-id="fa761-645">Walkthrough: Manipulating Files and Directories in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FindInFiles">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType, params string[] fileWildcards);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; FindInFiles(string directory, string containsText, bool ignoreCase, valuetype Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] fileWildcards) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function FindInFiles (directory As String, containsText As String, ignoreCase As Boolean, searchType As SearchOption, ParamArray fileWildcards As String()) As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ FindInFiles(System::String ^ directory, System::String ^ containsText, bool ignoreCase, Microsoft::VisualBasic::FileIO::SearchOption searchType, ... cli::array &lt;System::String ^&gt; ^ fileWildcards);" />
      <MemberSignature Language="F#" Value="member this.FindInFiles : string * string * bool * Microsoft.VisualBasic.FileIO.SearchOption * string[] -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="fileSystemProxy.FindInFiles (directory, containsText, ignoreCase, searchType, fileWildcards)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="containsText" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="searchType" Type="Microsoft.VisualBasic.FileIO.SearchOption" />
        <Parameter Name="fileWildcards" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fa761-646">検索するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fa761-646">The directory to be searched.</span></span></param>
        <param name="containsText"><span data-ttu-id="fa761-647">検索文字列。</span><span class="sxs-lookup"><span data-stu-id="fa761-647">The search text.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="fa761-648">検索時に大文字と小文字を区別する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fa761-648"><see langword="True" /> if the search should be case-sensitive; otherwise <see langword="False" />.</span></span> <span data-ttu-id="fa761-649">既定値は <see langword="True" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-649">Default is <see langword="True" />.</span></span></param>
        <param name="searchType"><span data-ttu-id="fa761-650">サブフォルダーを含めるかどうか。</span><span class="sxs-lookup"><span data-stu-id="fa761-650">Whether to include subfolders.</span></span> <span data-ttu-id="fa761-651">既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-651">Default is <see langword="SearchOption.SearchTopLevelOnly" />.</span></span></param>
        <param name="fileWildcards"><span data-ttu-id="fa761-652">検索に使用するパターン。</span><span class="sxs-lookup"><span data-stu-id="fa761-652">Pattern to be matched.</span></span></param>
        <summary><span data-ttu-id="fa761-653">指定されたテキストが格納されたファイル名を表す文字列の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-653">Returns a read-only collection of strings representing the names of files containing the specified text.</span></span></summary>
        <returns><span data-ttu-id="fa761-654">指定されたテキストを含んでいるファイルの名前の読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="fa761-654">Read-only collection of the names of files containing the specified text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-655">指定したパターンに一致するファイルがない場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-655">An empty collection is returned if no files matching the specified pattern are found.</span></span>  
  
 <span data-ttu-id="fa761-656">次の表に、`My.Computer.FileSystem.FindInFiles` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-656">The following table lists examples of tasks involving the `My.Computer.FileSystem.FindInFiles` method.</span></span>  
  
|<span data-ttu-id="fa761-657">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-657">To</span></span>|<span data-ttu-id="fa761-658">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-658">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-659">特定の文字列を含むファイルをディレクトリで検索する</span><span class="sxs-lookup"><span data-stu-id="fa761-659">Search a directory for files containing a specific string</span></span>|[<span data-ttu-id="fa761-660">チュートリアル: Visual Basic によるファイルとディレクトリの操作</span><span class="sxs-lookup"><span data-stu-id="fa761-660">Walkthrough: Manipulating Files and Directories in Visual Basic</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-661">この例では、ディレクトリ `C:\TestDir` で文字列 `"sample string"` を含むすべてのファイルを検索し、`ListBox1`に結果を表示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-661">This example searches the directory `C:\TestDir` for any files containing the string `"sample string"` and displays the results in `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#12)]  
  
 <span data-ttu-id="fa761-662">作業するには、プロジェクトに `ListBox1`という名前の `ListBox` が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa761-662">In order to work, the project must contain a `ListBox` named `ListBox1`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-663">パスが有効ではありません。原因として、長さが 0 の文字列であるか、空白のみが含まれているか、無効な文字が含まれているか、デバイス パスである (先頭が <c>\\.\</c> である) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-663">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with <c>\\.\</c>).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-664"><paramref name="directory" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-664"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fa761-665">指定されたディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-665">The specified directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-666">指定されたディレクトリが既存のファイルを指しています。</span><span class="sxs-lookup"><span data-stu-id="fa761-666">The specified directory points to an existing file.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-667">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-667">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-668">指定されたディレクトリ パスにコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-668">The specified directory path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-669">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-669">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-670">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-670">The user lacks necessary permissions.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.SearchOption" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-671">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-671">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories"><span data-ttu-id="fa761-672">チュートリアル : Visual Basic によるファイルとディレクトリの操作</span><span class="sxs-lookup"><span data-stu-id="fa761-672">Walkthrough: Manipulating Files and Directories in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa761-673">ディレクトリに含まれるサブディレクトリのパス名を表す文字列のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-673">Returns a collection of strings representing the path names of subdirectories within a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; GetDirectories (string directory);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; GetDirectories(string directory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (directory As String) As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ GetDirectories(System::String ^ directory);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="fileSystemProxy.GetDirectories directory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fa761-674">ディレクトリの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-674">Name and path of directory.</span></span></param>
        <summary><span data-ttu-id="fa761-675">ディレクトリに含まれるサブディレクトリのパス名を表す文字列のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-675">Returns a collection of strings representing the path names of subdirectories within a directory.</span></span></summary>
        <returns><span data-ttu-id="fa761-676">指定されたディレクトリに存在するサブディレクトリのパス名の読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="fa761-676">Read-only collection of the path names of subdirectories within the specified directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-677">次の表に、`My.Computer.FileSystem.GetDirectories` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-677">The following table lists examples of tasks involving the `My.Computer.FileSystem.GetDirectories` method.</span></span>  
  
|<span data-ttu-id="fa761-678">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-678">To</span></span>|<span data-ttu-id="fa761-679">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-679">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-680">特定のパターンでサブディレクトリを一覧表示する</span><span class="sxs-lookup"><span data-stu-id="fa761-680">List subdirectories with a specific pattern</span></span>|[<span data-ttu-id="fa761-681">方法: 特定のパターンに一致するサブディレクトリを検索する</span><span class="sxs-lookup"><span data-stu-id="fa761-681">How to: Find Subdirectories with a Specific Pattern</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-find-subdirectories-with-a-specific-pattern)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-682">次の例では、名前に `Logs` という単語が含まれているディレクトリ構造内のすべてのディレクトリを返し、`ListBox1`に追加します。</span><span class="sxs-lookup"><span data-stu-id="fa761-682">The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#10)]  
  
 <span data-ttu-id="fa761-683">この例では、フォームに `ListBox1` という名前の `ListBox` が必要です。</span><span class="sxs-lookup"><span data-stu-id="fa761-683">This example requires that you have a `ListBox` named `ListBox1` on your form.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-684">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-684">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-685"><paramref name="directory" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-685"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fa761-686">指定されたディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-686">The specified directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-687">指定されたディレクトリが既存のファイルを指しています。</span><span class="sxs-lookup"><span data-stu-id="fa761-687">The specified directory points to an existing file.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-688">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-688">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-689">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-689">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-690">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-690">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-691">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-691">The user lacks necessary permissions.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.SearchOption" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-692">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-692">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; GetDirectories (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, params string[] wildcards);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; GetDirectories(string directory, valuetype Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (directory As String, searchType As SearchOption, ParamArray wildcards As String()) As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ GetDirectories(System::String ^ directory, Microsoft::VisualBasic::FileIO::SearchOption searchType, ... cli::array &lt;System::String ^&gt; ^ wildcards);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * Microsoft.VisualBasic.FileIO.SearchOption * string[] -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="fileSystemProxy.GetDirectories (directory, searchType, wildcards)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="searchType" Type="Microsoft.VisualBasic.FileIO.SearchOption" />
        <Parameter Name="wildcards" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fa761-693">ディレクトリの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-693">Name and path of directory.</span></span></param>
        <param name="searchType"><span data-ttu-id="fa761-694">サブフォルダーを含めるかどうか。</span><span class="sxs-lookup"><span data-stu-id="fa761-694">Whether to include subfolders.</span></span> <span data-ttu-id="fa761-695">既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-695">Default is <see langword="SearchOption.SearchTopLevelOnly" />.</span></span></param>
        <param name="wildcards"><span data-ttu-id="fa761-696">名前の検索に使用するパターン。</span><span class="sxs-lookup"><span data-stu-id="fa761-696">Pattern to match names.</span></span></param>
        <summary><span data-ttu-id="fa761-697">ディレクトリに含まれるサブディレクトリのパス名を表す文字列のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-697">Returns a collection of strings representing the path names of subdirectories within a directory.</span></span></summary>
        <returns><span data-ttu-id="fa761-698">指定されたディレクトリに存在するサブディレクトリのパス名の読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="fa761-698">Read-only collection of the path names of subdirectories within the specified directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-699">`wildcards` パラメーターを使用して、特定のパターンを指定できます。</span><span class="sxs-lookup"><span data-stu-id="fa761-699">You can use the `wildcards` parameter to specify a specific pattern.</span></span> <span data-ttu-id="fa761-700">サブディレクトリの内容を検索対象に含めるには、`searchType` パラメーターを `SearchAllSubDirectories` に設定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-700">If you would like to include the contents of subdirectories in the search, set the `searchType` parameter to `SearchAllSubDirectories`.</span></span>  
  
 <span data-ttu-id="fa761-701">指定したパターンに一致するディレクトリが見つからなかった場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-701">An empty collection is returned if no directories matching the specified pattern are found.</span></span>  
  
 <span data-ttu-id="fa761-702">次の表に、`My.Computer.FileSystem.GetDirectories` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-702">The following table lists examples of tasks involving the `My.Computer.FileSystem.GetDirectories` method.</span></span>  
  
|<span data-ttu-id="fa761-703">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-703">To</span></span>|<span data-ttu-id="fa761-704">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-704">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-705">特定のパターンでサブディレクトリを一覧表示する</span><span class="sxs-lookup"><span data-stu-id="fa761-705">List subdirectories with a specific pattern</span></span>|[<span data-ttu-id="fa761-706">方法: 特定のパターンに一致するサブディレクトリを検索する</span><span class="sxs-lookup"><span data-stu-id="fa761-706">How to: Find Subdirectories with a Specific Pattern</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-find-subdirectories-with-a-specific-pattern)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-707">次の例では、名前に `Logs` という単語が含まれているディレクトリ構造内のすべてのディレクトリを返し、`ListBox1`に追加します。</span><span class="sxs-lookup"><span data-stu-id="fa761-707">The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#10)]  
  
 <span data-ttu-id="fa761-708">この例では、フォームに `ListBox1` という名前の `ListBox` が必要です。</span><span class="sxs-lookup"><span data-stu-id="fa761-708">This example requires that you have a `ListBox` named `ListBox1` on your form.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-709">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-709">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-710">指定したワイルドカード文字の中に、<see langword="Nothing" />、空の文字列、または空白のみが含まれています。</span><span class="sxs-lookup"><span data-stu-id="fa761-710">One or more of the specified wildcard characters is <see langword="Nothing" />, an empty string, or contains only spaces.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fa761-711">指定されたディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-711">The specified directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-712">指定されたディレクトリが既存のファイルを指しています。</span><span class="sxs-lookup"><span data-stu-id="fa761-712">The specified directory points to an existing file.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-713">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-713">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-714">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-714">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-715">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-715">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-716">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-716">The user lacks necessary permissions.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.SearchOption" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-717">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-717">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryInfo">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo GetDirectoryInfo (string directory);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.DirectoryInfo GetDirectoryInfo(string directory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectoryInfo (directory As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ GetDirectoryInfo(System::String ^ directory);" />
      <MemberSignature Language="F#" Value="member this.GetDirectoryInfo : string -&gt; System.IO.DirectoryInfo" Usage="fileSystemProxy.GetDirectoryInfo directory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fa761-718">[https://login.microsoftonline.com/consumers/](<see langword="String" />)</span><span class="sxs-lookup"><span data-stu-id="fa761-718"><see langword="String" />.</span></span> <span data-ttu-id="fa761-719">ディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-719">Path of directory.</span></span></param>
        <summary><span data-ttu-id="fa761-720">指定したパスの <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-720">Returns a <see cref="T:System.IO.DirectoryInfo" /> object for the specified path.</span></span></summary>
        <returns><span data-ttu-id="fa761-721">指定されたパスの <see cref="T:System.IO.DirectoryInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fa761-721"><see cref="T:System.IO.DirectoryInfo" /> object for the specified path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-722">ディレクトリが存在しない場合、<xref:System.IO.DirectoryInfo> オブジェクトのプロパティが初めてアクセスされるまで、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="fa761-722">If the directory does not exist, an exception is not thrown until the first time a property on the <xref:System.IO.DirectoryInfo> object is accessed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa761-723">この例では、ディレクトリ `C:\Documents and Settings` の <xref:System.IO.DirectoryInfo> オブジェクトを取得し、ディレクトリの作成時刻、最終アクセス時刻、最終書き込み時刻を表示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-723">This example gets a <xref:System.IO.DirectoryInfo> object for the directory `C:\Documents and Settings` and displays the directory's creation time, last access time, and last write time.</span></span>  
  
 [!code-vb[VbRefFile#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-724">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-724">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-725"><paramref name="directory" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-725"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-726">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-726">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-727">ディレクトリ パスにコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-727">The directory path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-728">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-728">The user lacks necessary permissions to view the path</span></span></exception>
        <altmember cref="T:System.IO.DirectoryInfo" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-729">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-729">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDriveInfo">
      <MemberSignature Language="C#" Value="public System.IO.DriveInfo GetDriveInfo (string drive);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.DriveInfo GetDriveInfo(string drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDriveInfo (drive As String) As DriveInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DriveInfo ^ GetDriveInfo(System::String ^ drive);" />
      <MemberSignature Language="F#" Value="member this.GetDriveInfo : string -&gt; System.IO.DriveInfo" Usage="fileSystemProxy.GetDriveInfo drive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DriveInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drive" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="drive"><span data-ttu-id="fa761-730">確認するドライブ。</span><span class="sxs-lookup"><span data-stu-id="fa761-730">Drive to be examined.</span></span></param>
        <summary><span data-ttu-id="fa761-731">指定したドライブの <see cref="T:System.IO.DriveInfo" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-731">Returns a <see cref="T:System.IO.DriveInfo" /> object for the specified drive.</span></span></summary>
        <returns><span data-ttu-id="fa761-732">指定されたドライブの <see cref="T:System.IO.DriveInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fa761-732"><see cref="T:System.IO.DriveInfo" /> object for the specified drive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-733"><xref:System.IO.DriveInfo> クラスはドライブをモデル化し、ドライブ情報を照会するためのメソッドとプロパティを提供します。</span><span class="sxs-lookup"><span data-stu-id="fa761-733">The <xref:System.IO.DriveInfo> class models a drive and provides methods and properties to query for drive information.</span></span> <span data-ttu-id="fa761-734"><xref:System.IO.DriveInfo> を使用して、使用可能なドライブとそのドライブの種類を決定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-734">Use <xref:System.IO.DriveInfo> to determine what drives are available, and what type of drives they are.</span></span> <span data-ttu-id="fa761-735">また、プロパティを照会して、ドライブの容量と使用可能な空き領域を確認することもできます。</span><span class="sxs-lookup"><span data-stu-id="fa761-735">You can also query the property to determine the capacity and available free space on the drive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa761-736">この例では、C ドライブの <xref:System.IO.DriveInfo> オブジェクトを取得し、それを使用してドライブに関する情報を表示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-736">This example obtains a <xref:System.IO.DriveInfo> object for the C drive and uses it to display information about the drive.</span></span>  
  
 [!code-vb[VbRefFile#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#11)]  
  
 <span data-ttu-id="fa761-737">さまざまなドライブの種類の詳細については、「<xref:System.IO.DriveType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa761-737">For information on the different drive types, see <xref:System.IO.DriveType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-738">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-738">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-739"><paramref name="drive" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-739"><paramref name="drive" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-740">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-740">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-741">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-741">The user lacks necessary permissions to view the path</span></span></exception>
        <altmember cref="T:System.IO.DriveInfo" />
        <altmember cref="T:System.IO.DriveType" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-742">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-742">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileInfo">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo GetFileInfo (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.FileInfo GetFileInfo(string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileInfo (file As String) As FileInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileInfo ^ GetFileInfo(System::String ^ file);" />
      <MemberSignature Language="F#" Value="member this.GetFileInfo : string -&gt; System.IO.FileInfo" Usage="fileSystemProxy.GetFileInfo file" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fa761-743">ファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-743">Name and path of the file.</span></span></param>
        <summary><span data-ttu-id="fa761-744">指定したファイルの <see cref="T:System.IO.FileInfo" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-744">Returns a <see cref="T:System.IO.FileInfo" /> object for the specified file.</span></span></summary>
        <returns><span data-ttu-id="fa761-745">指定されたファイルの <see cref="T:System.IO.FileInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fa761-745"><see cref="T:System.IO.FileInfo" /> object for the specified file</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-746">ファイルが存在しない場合、例外はスローされません。代わりに、オブジェクトのプロパティに初めてアクセスしたときにスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa761-746">An exception is not thrown if the file does not exist; rather, it will be thrown the first time the object's properties are accessed.</span></span>  
  
 <span data-ttu-id="fa761-747">次の表に、`My.Computer.FileSystem.GetFileInfo` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-747">The following table lists an example of a task involving the `My.Computer.FileSystem.GetFileInfo` method.</span></span>  
  
|<span data-ttu-id="fa761-748">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-748">To</span></span>|<span data-ttu-id="fa761-749">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-749">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-750">ファイルの名前とパスを確認する</span><span class="sxs-lookup"><span data-stu-id="fa761-750">Determine a file's name and path</span></span>|[<span data-ttu-id="fa761-751">方法: ファイル パスを解析する</span><span class="sxs-lookup"><span data-stu-id="fa761-751">How to: Parse File Paths</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-752">この例では、ファイル `MyLogFile.log` の <xref:System.IO.FileInfo?displayProperty=nameWithType> オブジェクトを取得し、それを使用してファイルの完全名、最終アクセス時刻、および長さを報告します。</span><span class="sxs-lookup"><span data-stu-id="fa761-752">This example retrieves a <xref:System.IO.FileInfo?displayProperty=nameWithType> object for the file `MyLogFile.log` and uses it to report the file's full name, last access time, and length.</span></span>  
  
 [!code-vb[VbRefFile#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-753">パス名が不適切である場合。</span><span class="sxs-lookup"><span data-stu-id="fa761-753">The path name is malformed.</span></span> <span data-ttu-id="fa761-754">たとえば、無効な文字が含まれている場合や、空白のみの場合などがあります。</span><span class="sxs-lookup"><span data-stu-id="fa761-754">For example, it contains invalid characters or is only white space.</span></span> <span data-ttu-id="fa761-755">ファイル名の末尾にスラッシュ記号が付いています。</span><span class="sxs-lookup"><span data-stu-id="fa761-755">The file name has a trailing slash mark.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-756"><paramref name="file" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-756"><paramref name="file" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-757">パス文字列の途中にコロンが含まれています。</span><span class="sxs-lookup"><span data-stu-id="fa761-757">The path contains a colon in the middle of the string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-758">パスが長すぎます。</span><span class="sxs-lookup"><span data-stu-id="fa761-758">The path is too long.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-759">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-759">The user lacks necessary permissions.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-760">当該ファイルに対して、ユーザーがアクセス制御リスト (ACL: access control list) のアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-760">The user lacks ACL (access control list) access to the file.</span></span></exception>
        <altmember cref="T:System.IO.FileInfo" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-761">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-761">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories"><span data-ttu-id="fa761-762">チュートリアル : Visual Basic によるファイルとディレクトリの操作</span><span class="sxs-lookup"><span data-stu-id="fa761-762">Walkthrough: Manipulating Files and Directories in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa761-763">ディレクトリ内のファイル名を表す文字列の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-763">Returns a read-only collection of strings representing the names of files within a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; GetFiles (string directory);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; GetFiles(string directory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (directory As String) As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ GetFiles(System::String ^ directory);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="fileSystemProxy.GetFiles directory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fa761-764">検索するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fa761-764">Directory to be searched.</span></span></param>
        <summary><span data-ttu-id="fa761-765">ディレクトリ内のファイル名を表す文字列の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-765">Returns a read-only collection of strings representing the names of files within a directory.</span></span></summary>
        <returns><span data-ttu-id="fa761-766">指定されたディレクトリから取得されたファイル名の読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="fa761-766">Read-only collection of file names from the specified directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-767">指定したパターンに一致するファイルがない場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-767">An empty collection is returned if no files matching the specified pattern are found.</span></span>  
  
 <span data-ttu-id="fa761-768">次の表に、`My.Computer.FileSystem.GetFiles` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-768">The following table lists examples of tasks involving the `My.Computer.FileSystem.GetFiles` method.</span></span>  
  
|<span data-ttu-id="fa761-769">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-769">To</span></span>|<span data-ttu-id="fa761-770">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-770">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-771">ディレクトリ内のファイルのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="fa761-771">Get the collection of files in a directory</span></span>|[<span data-ttu-id="fa761-772">方法: ディレクトリにあるファイルのコレクションを取得する</span><span class="sxs-lookup"><span data-stu-id="fa761-772">How to: Get the Collection of Files in a Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-get-the-collection-of-files-in-a-directory)|  
|<span data-ttu-id="fa761-773">ディレクトリ内の特定のパターンを持つファイルを検索する</span><span class="sxs-lookup"><span data-stu-id="fa761-773">Find files with a specific pattern in a directory</span></span>|[<span data-ttu-id="fa761-774">方法: 特定のパターンに一致するファイルを検索する</span><span class="sxs-lookup"><span data-stu-id="fa761-774">How to: Find Files with a Specific Pattern</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-find-files-with-a-specific-pattern)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-775">次の例では、ディレクトリ内のすべてのファイルが返され、`ListBox1` に追加されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-775">The following example returns all files in the directory and adds them to `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#5)]  
  
 <span data-ttu-id="fa761-776">この例では、フォームに `ListBox1` という名前の `ListBox` が必要です。</span><span class="sxs-lookup"><span data-stu-id="fa761-776">This example requires that you have a `ListBox` named `ListBox1` on your form.</span></span>  
  
 <span data-ttu-id="fa761-777">この例では、ディレクトリ内の拡張子 `.txt` を持つすべてのファイルを返し、`ListBox1`に追加します。</span><span class="sxs-lookup"><span data-stu-id="fa761-777">This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#6)]  
  
 <span data-ttu-id="fa761-778">この例では、フォームに `ListBox1` という名前の `ListBox` が必要です。</span><span class="sxs-lookup"><span data-stu-id="fa761-778">This example requires that you have a `ListBox` named `ListBox1` on your form.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-779">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-779">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-780"><paramref name="directory" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-780"><paramref name="directory" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fa761-781">検索対象のディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-781">The directory to search does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-782"><paramref name="directory" /> が既存のファイルを指しています。</span><span class="sxs-lookup"><span data-stu-id="fa761-782"><paramref name="directory" /> points to an existing file.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-783">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-783">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-784">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-784">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-785">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-785">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-786">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-786">The user lacks necessary permissions.</span></span></exception>
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-787">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-787">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-find-files-with-a-specific-pattern"><span data-ttu-id="fa761-788">方法: 特定のパターンに一致するファイルを検索する (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-788">How to: Find Files with a Specific Pattern in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-get-the-collection-of-files-in-a-directory"><span data-ttu-id="fa761-789">方法: Visual Basic でディレクトリにあるファイルのコレクションを取得する</span><span class="sxs-lookup"><span data-stu-id="fa761-789">How to: Get the Collection of Files in a Directory in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; GetFiles (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, params string[] wildcards);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; GetFiles(string directory, valuetype Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (directory As String, searchType As SearchOption, ParamArray wildcards As String()) As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ GetFiles(System::String ^ directory, Microsoft::VisualBasic::FileIO::SearchOption searchType, ... cli::array &lt;System::String ^&gt; ^ wildcards);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * Microsoft.VisualBasic.FileIO.SearchOption * string[] -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="fileSystemProxy.GetFiles (directory, searchType, wildcards)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="searchType" Type="Microsoft.VisualBasic.FileIO.SearchOption" />
        <Parameter Name="wildcards" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fa761-790">検索するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fa761-790">Directory to be searched.</span></span></param>
        <param name="searchType"><span data-ttu-id="fa761-791">サブフォルダーを含めるかどうか。</span><span class="sxs-lookup"><span data-stu-id="fa761-791">Whether to include subfolders.</span></span> <span data-ttu-id="fa761-792">既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-792">Default is <see langword="SearchOption.SearchTopLevelOnly" />.</span></span></param>
        <param name="wildcards"><span data-ttu-id="fa761-793">検索に使用するパターン。</span><span class="sxs-lookup"><span data-stu-id="fa761-793">Pattern to be matched.</span></span></param>
        <summary><span data-ttu-id="fa761-794">ディレクトリ内のファイル名を表す文字列の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-794">Returns a read-only collection of strings representing the names of files within a directory.</span></span></summary>
        <returns><span data-ttu-id="fa761-795">指定されたディレクトリから取得されたファイル名の読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="fa761-795">Read-only collection of file names from the specified directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-796">指定したパターンに一致するファイルがない場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-796">An empty collection is returned if no files matching the specified pattern are found.</span></span>  
  
 <span data-ttu-id="fa761-797">次の表に、`My.Computer.FileSystem.GetFiles` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-797">The following table lists examples of tasks involving the `My.Computer.FileSystem.GetFiles` method.</span></span>  
  
|<span data-ttu-id="fa761-798">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-798">To</span></span>|<span data-ttu-id="fa761-799">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-799">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-800">ディレクトリ内のファイルのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="fa761-800">Get the collection of files in a directory</span></span>|[<span data-ttu-id="fa761-801">方法: ディレクトリにあるファイルのコレクションを取得する</span><span class="sxs-lookup"><span data-stu-id="fa761-801">How to: Get the Collection of Files in a Directory</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-get-the-collection-of-files-in-a-directory)|  
|<span data-ttu-id="fa761-802">ディレクトリ内の特定のパターンを持つファイルを検索する</span><span class="sxs-lookup"><span data-stu-id="fa761-802">Find files with a specific pattern in a directory</span></span>|[<span data-ttu-id="fa761-803">方法: 特定のパターンに一致するファイルを検索する</span><span class="sxs-lookup"><span data-stu-id="fa761-803">How to: Find Files with a Specific Pattern</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-find-files-with-a-specific-pattern)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-804">次の例では、ディレクトリ内のすべてのファイルが返され、`ListBox1` に追加されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-804">The following example returns all files in the directory and adds them to `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#5)]  
  
 <span data-ttu-id="fa761-805">この例では、フォームに `ListBox1` という名前の `ListBox` が必要です。</span><span class="sxs-lookup"><span data-stu-id="fa761-805">This example requires that you have a `ListBox` named `ListBox1` on your form.</span></span>  
  
 <span data-ttu-id="fa761-806">この例では、ディレクトリ内の拡張子 `.txt` を持つすべてのファイルを返し、`ListBox1`に追加します。</span><span class="sxs-lookup"><span data-stu-id="fa761-806">This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#6)]  
  
 <span data-ttu-id="fa761-807">この例では、フォームに `ListBox1` という名前の `ListBox` が必要です。</span><span class="sxs-lookup"><span data-stu-id="fa761-807">This example requires that you have a `ListBox` named `ListBox1` on your form.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-808">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-808">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-809"><paramref name="directory" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-809"><paramref name="directory" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fa761-810">検索対象のディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-810">The directory to search does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-811"><paramref name="directory" /> が既存のファイルを指しています。</span><span class="sxs-lookup"><span data-stu-id="fa761-811"><paramref name="directory" /> points to an existing file.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-812">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-812">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-813">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-813">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-814">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-814">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-815">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-815">The user lacks necessary permissions.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.SearchOption" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-816">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-816">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-find-files-with-a-specific-pattern"><span data-ttu-id="fa761-817">方法: 特定のパターンに一致するファイルを検索する (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-817">How to: Find Files with a Specific Pattern in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-get-the-collection-of-files-in-a-directory"><span data-ttu-id="fa761-818">方法: Visual Basic でディレクトリにあるファイルのコレクションを取得する</span><span class="sxs-lookup"><span data-stu-id="fa761-818">How to: Get the Collection of Files in a Directory in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public string GetName (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public instance string GetName(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetName(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.GetName : string -&gt; string" Usage="fileSystemProxy.GetName path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="fa761-819">必須。</span><span class="sxs-lookup"><span data-stu-id="fa761-819">Required.</span></span> <span data-ttu-id="fa761-820">解析対象のパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-820">Path to be parsed.</span></span> <span data-ttu-id="fa761-821">[https://login.microsoftonline.com/consumers/](<see langword="String" />)</span><span class="sxs-lookup"><span data-stu-id="fa761-821"><see langword="String" />.</span></span></param>
        <summary><span data-ttu-id="fa761-822">指定されたパスからファイル名を解析し、取り出します。</span><span class="sxs-lookup"><span data-stu-id="fa761-822">Parses the file name out of the path provided.</span></span></summary>
        <returns><span data-ttu-id="fa761-823">指定されたパスのファイル名部分。</span><span class="sxs-lookup"><span data-stu-id="fa761-823">The file name from the specified path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-824">これは文字列操作です。`FileSystem` は検証されません。</span><span class="sxs-lookup"><span data-stu-id="fa761-824">This is a string operation; the `FileSystem` is not examined.</span></span>  
  
 <span data-ttu-id="fa761-825">`GetName` メソッドは、パスの末尾で発生するスラッシュ記号を無視します。</span><span class="sxs-lookup"><span data-stu-id="fa761-825">The `GetName` method ignores a slash mark occurring at the end of the path.</span></span>  
  
 <span data-ttu-id="fa761-826">次の表に、`My.Computer.FileSystem.GetFileName` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-826">The following table lists examples of tasks involving the `My.Computer.FileSystem.GetFileName` method.</span></span>  
  
|<span data-ttu-id="fa761-827">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-827">To</span></span>|<span data-ttu-id="fa761-828">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-828">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-829">ファイルパスを解析する</span><span class="sxs-lookup"><span data-stu-id="fa761-829">Parse a file path</span></span>|[<span data-ttu-id="fa761-830">方法: ファイル パスを解析する</span><span class="sxs-lookup"><span data-stu-id="fa761-830">How to: Parse File Paths</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-831">次の例では、ファイルパスを解析し、ファイルの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-831">The following example parses a file path and returns the name of the file.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#21)]  
  
 <span data-ttu-id="fa761-832">パス `C:\Testdirectory\Testfile` を解析するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fa761-832">Replace the path `C:\Testdirectory\Testfile` with the path you wish to parse.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-833">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-833">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetParentPath">
      <MemberSignature Language="C#" Value="public string GetParentPath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public instance string GetParentPath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentPath (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetParentPath(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.GetParentPath : string -&gt; string" Usage="fileSystemProxy.GetParentPath path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="fa761-834">確認するパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-834">Path to be examined.</span></span></param>
        <summary><span data-ttu-id="fa761-835">指定されたパスの親パスを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-835">Returns the parent path of the provided path.</span></span></summary>
        <returns><span data-ttu-id="fa761-836">指定されたパスの親パス。</span><span class="sxs-lookup"><span data-stu-id="fa761-836">The parent path of the provided path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-837">これは文字列操作です。ファイルシステムが検査されません。</span><span class="sxs-lookup"><span data-stu-id="fa761-837">This is a string operation; the file system is not examined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa761-838">この例では、`C:\Backups\Tmp\Test`の親パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="fa761-838">This example gets the parent path for `C:\Backups\Tmp\Test`.</span></span>  
  
 [!code-vb[VbRefFile#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-839">パスがルート パスであるため、親パスが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-839">Path does not have a parent path because it is a root path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-840"><paramref name="path" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-840"><paramref name="path" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-841">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-841">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-842">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-842">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-843">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-843">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths"><span data-ttu-id="fa761-844">方法 : Visual Basic でファイル パスを解析する</span><span class="sxs-lookup"><span data-stu-id="fa761-844">How to: Parse File Paths in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetTempFileName">
      <MemberSignature Language="C#" Value="public string GetTempFileName ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance string GetTempFileName() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTempFileName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTempFileName();" />
      <MemberSignature Language="F#" Value="member this.GetTempFileName : unit -&gt; string" Usage="fileSystemProxy.GetTempFileName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fa761-845">一意な名前を持つ 0 バイトの一時ファイルをディスク上に作成し、そのファイルへの完全パスを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-845">Creates a uniquely named zero-byte temporary file on disk and returns the full path of that file.</span></span></summary>
        <returns><span data-ttu-id="fa761-846">一時ファイルの完全パスを保持する <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="fa761-846"><see langword="String" /> containing the full path of the temporary file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-847">このメソッドを使用して、一時ファイルを作成できます。</span><span class="sxs-lookup"><span data-stu-id="fa761-847">This method can be used to create a temporary file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa761-848">この例では、一時ファイルを作成し、そのパスを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-848">This example creates a temp file and returns its path.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-849">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-849">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/creating-deleting-and-moving-files-and-directories"><span data-ttu-id="fa761-850">Visual Basic でのファイルおよびディレクトリの作成、削除、および移動</span><span class="sxs-lookup"><span data-stu-id="fa761-850">Creating, Deleting, and Moving Files and Directories in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveDirectory">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa761-851">ディレクトリの場所を移動します。</span><span class="sxs-lookup"><span data-stu-id="fa761-851">Moves a directory from one location to another.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveDirectory">
      <MemberSignature Language="C#" Value="public void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveDirectory (sourceDirectoryName As String, destinationDirectoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName);" />
      <MemberSignature Language="F#" Value="member this.MoveDirectory : string * string -&gt; unit" Usage="fileSystemProxy.MoveDirectory (sourceDirectoryName, destinationDirectoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="fa761-852">移動するディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-852">Path of the directory to be moved.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="fa761-853">ソース ディレクトリの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-853">Path of the directory to which the source directory is being moved.</span></span></param>
        <summary><span data-ttu-id="fa761-854">ディレクトリの場所を移動します。</span><span class="sxs-lookup"><span data-stu-id="fa761-854">Moves a directory from one location to another.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-855">存在しないディレクトリ内のディレクトリを移動しようとすると、ターゲットの構造が作成されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-855">If an attempt is made to move a directory inside a directory that does not exist, the target structure will be created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa761-856">この例では、`Directory2`内で `Directory1` を移動します。</span><span class="sxs-lookup"><span data-stu-id="fa761-856">This example moves `Directory1` inside `Directory2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#81](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#81)]  
  
 <span data-ttu-id="fa761-857">この例では `Directory1` を `Directory2`内で移動し、ディレクトリが既に存在する場合は上書きします。</span><span class="sxs-lookup"><span data-stu-id="fa761-857">This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#82](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#82)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-858">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-858">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-859"><paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-859"><paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fa761-860">ディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-860">The directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-861">移動先がルート ディレクトリであるか、移動元と移動先のパスが同じです。</span><span class="sxs-lookup"><span data-stu-id="fa761-861">The source is a root directory or The source path and the target path are the same.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-862">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-862">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa761-863">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="fa761-863">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-864">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-864">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-865">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-865">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-866">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-866">The user does not have required permission.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-867">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-867">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/creating-deleting-and-moving-files-and-directories"><span data-ttu-id="fa761-868">Visual Basic でのファイルおよびディレクトリの作成、削除、および移動</span><span class="sxs-lookup"><span data-stu-id="fa761-868">Creating, Deleting, and Moving Files and Directories in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MoveDirectory">
      <MemberSignature Language="C#" Value="public void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveDirectory (sourceDirectoryName As String, destinationDirectoryName As String, showUI As UIOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName, Microsoft::VisualBasic::FileIO::UIOption showUI);" />
      <MemberSignature Language="F#" Value="member this.MoveDirectory : string * string * Microsoft.VisualBasic.FileIO.UIOption -&gt; unit" Usage="fileSystemProxy.MoveDirectory (sourceDirectoryName, destinationDirectoryName, showUI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="fa761-869">移動するディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-869">Path of the directory to be moved.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="fa761-870">ソース ディレクトリの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-870">Path of the directory to which the source directory is being moved.</span></span></param>
        <param name="showUI"><span data-ttu-id="fa761-871">操作の進行状況を視覚的に追跡するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-871">Specifies whether to visually track the operation's progress.</span></span> <span data-ttu-id="fa761-872">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-872">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <summary><span data-ttu-id="fa761-873">ディレクトリの場所を移動します。</span><span class="sxs-lookup"><span data-stu-id="fa761-873">Moves a directory from one location to another.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-874">存在しないディレクトリ内のディレクトリを移動しようとすると、ターゲットの構造が作成されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-874">If an attempt is made to move a directory inside a directory that does not exist, the target structure will be created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa761-875">この例では、`Directory2`内で `Directory1` を移動します。</span><span class="sxs-lookup"><span data-stu-id="fa761-875">This example moves `Directory1` inside `Directory2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#81](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#81)]  
  
 <span data-ttu-id="fa761-876">この例では `Directory1` を `Directory2`内で移動し、ディレクトリが既に存在する場合は上書きします。</span><span class="sxs-lookup"><span data-stu-id="fa761-876">This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#82](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#82)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-877">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-877">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-878"><paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-878"><paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fa761-879">ディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-879">The directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-880">ターゲット ディレクトリが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="fa761-880">The target directory already exists and <paramref name="overwrite" /> is set to <see langword="False" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-881">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-881">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa761-882">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="fa761-882">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-883">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-883">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-884">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-884">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-885">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-885">The user does not have required permission.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-886">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-886">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/creating-deleting-and-moving-files-and-directories"><span data-ttu-id="fa761-887">Visual Basic でのファイルおよびディレクトリの作成、削除、および移動</span><span class="sxs-lookup"><span data-stu-id="fa761-887">Creating, Deleting, and Moving Files and Directories in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MoveDirectory">
      <MemberSignature Language="C#" Value="public void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveDirectory (sourceDirectoryName As String, destinationDirectoryName As String, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.MoveDirectory : string * string * bool -&gt; unit" Usage="fileSystemProxy.MoveDirectory (sourceDirectoryName, destinationDirectoryName, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="fa761-888">移動するディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-888">Path of the directory to be moved.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="fa761-889">ソース ディレクトリの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-889">Path of the directory to which the source directory is being moved.</span></span></param>
        <param name="overwrite"><span data-ttu-id="fa761-890">既存のディレクトリを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fa761-890"><see langword="True" /> if existing directories should be overwritten; otherwise <see langword="False" />.</span></span> <span data-ttu-id="fa761-891">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-891">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="fa761-892">ディレクトリの場所を移動します。</span><span class="sxs-lookup"><span data-stu-id="fa761-892">Moves a directory from one location to another.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-893">存在しないディレクトリ内のディレクトリを移動しようとすると、ターゲットの構造が作成されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-893">If an attempt is made to move a directory inside a directory that does not exist, the target structure will be created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa761-894">この例では、`Directory2`内で `Directory1` を移動します。</span><span class="sxs-lookup"><span data-stu-id="fa761-894">This example moves `Directory1` inside `Directory2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#81](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#81)]  
  
 <span data-ttu-id="fa761-895">この例では `Directory1` を `Directory2`内で移動し、ディレクトリが既に存在する場合は上書きします。</span><span class="sxs-lookup"><span data-stu-id="fa761-895">This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#82](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#82)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-896">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-896">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-897"><paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-897"><paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fa761-898">ディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-898">The directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-899">ターゲット ディレクトリが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="fa761-899">The target directory already exists and <paramref name="overwrite" /> is set to <see langword="False" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-900">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-900">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa761-901">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="fa761-901">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-902">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-902">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-903">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-903">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-904">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-904">The user does not have required permission.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-905">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-905">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/creating-deleting-and-moving-files-and-directories"><span data-ttu-id="fa761-906">Visual Basic でのファイルおよびディレクトリの作成、削除、および移動</span><span class="sxs-lookup"><span data-stu-id="fa761-906">Creating, Deleting, and Moving Files and Directories in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MoveDirectory">
      <MemberSignature Language="C#" Value="public void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveDirectory (sourceDirectoryName As String, destinationDirectoryName As String, showUI As UIOption, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.MoveDirectory : string * string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="fileSystemProxy.MoveDirectory (sourceDirectoryName, destinationDirectoryName, showUI, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="fa761-907">移動するディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-907">Path of the directory to be moved.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="fa761-908">ソース ディレクトリの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-908">Path of the directory to which the source directory is being moved.</span></span></param>
        <param name="showUI"><span data-ttu-id="fa761-909">操作の進行状況を視覚的に追跡するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-909">Specifies whether to visually track the operation's progress.</span></span> <span data-ttu-id="fa761-910">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-910">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="onUserCancel"><span data-ttu-id="fa761-911">ユーザーによって操作が取り消された場合に、例外をスローするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-911">Specifies whether or not an exception is thrown when the user cancels the operation.</span></span> <span data-ttu-id="fa761-912">既定値は <see langword="UICancelOption.ThrowException" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-912">Default is <see langword="UICancelOption.ThrowException" />.</span></span></param>
        <summary><span data-ttu-id="fa761-913">ディレクトリの場所を移動します。</span><span class="sxs-lookup"><span data-stu-id="fa761-913">Moves a directory from one location to another.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-914">存在しないディレクトリ内のディレクトリを移動しようとすると、ターゲットの構造が作成されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-914">If an attempt is made to move a directory inside a directory that does not exist, the target structure will be created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa761-915">この例では、`Directory2`内で `Directory1` を移動します。</span><span class="sxs-lookup"><span data-stu-id="fa761-915">This example moves `Directory1` inside `Directory2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#81](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#81)]  
  
 <span data-ttu-id="fa761-916">この例では `Directory1` を `Directory2`内で移動し、ディレクトリが既に存在する場合は上書きします。</span><span class="sxs-lookup"><span data-stu-id="fa761-916">This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#82](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#82)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-917">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-917">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-918"><paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-918"><paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fa761-919">ディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-919">The directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-920"><paramref name="onUserCancel" /> が <see langword="ThrowException" /> に設定されており、ファイルのサブディレクトリをコピーできません。</span><span class="sxs-lookup"><span data-stu-id="fa761-920"><paramref name="onUserCancel" /> is set to <see langword="ThrowException" /> and a subdirectory of the file cannot be copied.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="fa761-921"><paramref name="onUserCancel" /> が <see langword="ThrowException" /> に設定されている場合にユーザーが操作を取り消したか、操作を完了できませんでした。</span><span class="sxs-lookup"><span data-stu-id="fa761-921"><paramref name="onUserCancel" /> is set to <see langword="ThrowException" />, and the user cancels the operation, or the operation cannot be completed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-922">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-922">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-923">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-923">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa761-924">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="fa761-924">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-925">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-925">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-926">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-926">The user does not have required permission.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-927">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-927">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/creating-deleting-and-moving-files-and-directories"><span data-ttu-id="fa761-928">Visual Basic でのファイルおよびディレクトリの作成、削除、および移動</span><span class="sxs-lookup"><span data-stu-id="fa761-928">Creating, Deleting, and Moving Files and Directories in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa761-929">ファイルを新しい場所に移動します。</span><span class="sxs-lookup"><span data-stu-id="fa761-929">Moves a file to a new location.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveFile">
      <MemberSignature Language="C#" Value="public void MoveFile (string sourceFileName, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void MoveFile(string sourceFileName, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveFile (sourceFileName As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveFile(System::String ^ sourceFileName, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.MoveFile : string * string -&gt; unit" Usage="fileSystemProxy.MoveFile (sourceFileName, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="fa761-930">移動するファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-930">Path of the file to be moved.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="fa761-931">ファイルの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-931">Path of the directory into which the file should be moved.</span></span></param>
        <summary><span data-ttu-id="fa761-932">ファイルを新しい場所に移動します。</span><span class="sxs-lookup"><span data-stu-id="fa761-932">Moves a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-933">ターゲットの構造が存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-933">If the target structure does not exist, it is created.</span></span>  
  
 <span data-ttu-id="fa761-934">`MoveFile` メソッドは、同じボリューム内でファイルを移動するときにのみ、Ace (Access Control エントリ) を保持します。</span><span class="sxs-lookup"><span data-stu-id="fa761-934">The `MoveFile` method preserves ACEs (Access Control Entries) only when moving the file within the same volume.</span></span> <span data-ttu-id="fa761-935">これには、移動時に直接の Ace になる継承された Ace が含まれます (直接の Ace は、継承された Ace より優先されます)。</span><span class="sxs-lookup"><span data-stu-id="fa761-935">This includes inherited ACEs, which become direct ACEs when moved (direct ACEs take precedence over inherited ACEs).</span></span> <span data-ttu-id="fa761-936">ボリューム間でファイルを移動すると、Ace はコピーされません。</span><span class="sxs-lookup"><span data-stu-id="fa761-936">If a file is moved between volumes, ACEs will not be copied.</span></span>  
  
 <span data-ttu-id="fa761-937">次の表に、`My.Computer.FileSystem.MoveFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-937">The following table lists an example of a task involving the `My.Computer.FileSystem.MoveFile` method.</span></span>  
  
|<span data-ttu-id="fa761-938">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-938">To</span></span>|<span data-ttu-id="fa761-939">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-939">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-940">ファイルの移動</span><span class="sxs-lookup"><span data-stu-id="fa761-940">Move a file</span></span>|[<span data-ttu-id="fa761-941">方法: ファイルを移動する</span><span class="sxs-lookup"><span data-stu-id="fa761-941">How to: Move a File</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-move-a-file)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-942">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2`に移動します。</span><span class="sxs-lookup"><span data-stu-id="fa761-942">This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#86](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#86)]  
  
 <span data-ttu-id="fa761-943">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2` に移動し、その名前を `Test2.txt`に変更します。</span><span class="sxs-lookup"><span data-stu-id="fa761-943">This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#87](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#87)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-944">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-944">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-945"><paramref name="destinationFileName" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-945"><paramref name="destinationFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-946">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-946">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-947">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa761-947">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-948">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-948">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-949">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-949">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-950">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-950">The user lacks necessary permissions to view the path.</span></span></exception>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-951">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-951">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/creating-deleting-and-moving-files-and-directories"><span data-ttu-id="fa761-952">Visual Basic でのファイルおよびディレクトリの作成、削除、および移動</span><span class="sxs-lookup"><span data-stu-id="fa761-952">Creating, Deleting, and Moving Files and Directories in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MoveFile">
      <MemberSignature Language="C#" Value="public void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void MoveFile(string sourceFileName, string destinationFileName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveFile (sourceFileName As String, destinationFileName As String, showUI As UIOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveFile(System::String ^ sourceFileName, System::String ^ destinationFileName, Microsoft::VisualBasic::FileIO::UIOption showUI);" />
      <MemberSignature Language="F#" Value="member this.MoveFile : string * string * Microsoft.VisualBasic.FileIO.UIOption -&gt; unit" Usage="fileSystemProxy.MoveFile (sourceFileName, destinationFileName, showUI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="fa761-953">移動するファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-953">Path of the file to be moved.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="fa761-954">ファイルの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-954">Path of the directory into which the file should be moved.</span></span></param>
        <param name="showUI"><span data-ttu-id="fa761-955">操作の進行状況を視覚的に追跡するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-955">Specifies whether to visually track the operation's progress.</span></span> <span data-ttu-id="fa761-956">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-956">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <summary><span data-ttu-id="fa761-957">ファイルを新しい場所に移動します。</span><span class="sxs-lookup"><span data-stu-id="fa761-957">Moves a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-958">ターゲットの構造が存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-958">If the target structure does not exist, it is created.</span></span>  
  
 <span data-ttu-id="fa761-959">`MoveFile` メソッドは、同じボリューム内でファイルを移動するときにのみ、Ace (Access Control エントリ) を保持します。</span><span class="sxs-lookup"><span data-stu-id="fa761-959">The `MoveFile` method preserves ACEs (Access Control Entries) only when moving the file within the same volume.</span></span> <span data-ttu-id="fa761-960">これには、移動時に直接の Ace になる継承された Ace が含まれます (直接の Ace は、継承された Ace より優先されます)。</span><span class="sxs-lookup"><span data-stu-id="fa761-960">This includes inherited ACEs, which become direct ACEs when moved (direct ACEs take precedence over inherited ACEs).</span></span> <span data-ttu-id="fa761-961">ボリューム間でファイルを移動すると、Ace はコピーされません。</span><span class="sxs-lookup"><span data-stu-id="fa761-961">If a file is moved between volumes, ACEs will not be copied.</span></span>  
  
 <span data-ttu-id="fa761-962">次の表に、`My.Computer.FileSystem.MoveFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-962">The following table lists an example of a task involving the `My.Computer.FileSystem.MoveFile` method.</span></span>  
  
|<span data-ttu-id="fa761-963">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-963">To</span></span>|<span data-ttu-id="fa761-964">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-964">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-965">ファイルの移動</span><span class="sxs-lookup"><span data-stu-id="fa761-965">Move a file</span></span>|[<span data-ttu-id="fa761-966">方法: ファイルを移動する</span><span class="sxs-lookup"><span data-stu-id="fa761-966">How to: Move a File</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-move-a-file)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-967">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2`に移動します。</span><span class="sxs-lookup"><span data-stu-id="fa761-967">This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#86](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#86)]  
  
 <span data-ttu-id="fa761-968">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2` に移動し、その名前を `Test2.txt`に変更します。</span><span class="sxs-lookup"><span data-stu-id="fa761-968">This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#87](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#87)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-969">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-969">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-970"><paramref name="destinationFileName" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-970"><paramref name="destinationFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-971">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-971">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-972">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa761-972">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-973">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-973">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-974">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-974">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-975">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-975">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-976">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-976">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/creating-deleting-and-moving-files-and-directories"><span data-ttu-id="fa761-977">Visual Basic でのファイルおよびディレクトリの作成、削除、および移動</span><span class="sxs-lookup"><span data-stu-id="fa761-977">Creating, Deleting, and Moving Files and Directories in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MoveFile">
      <MemberSignature Language="C#" Value="public void MoveFile (string sourceFileName, string destinationFileName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void MoveFile(string sourceFileName, string destinationFileName, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveFile (sourceFileName As String, destinationFileName As String, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveFile(System::String ^ sourceFileName, System::String ^ destinationFileName, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.MoveFile : string * string * bool -&gt; unit" Usage="fileSystemProxy.MoveFile (sourceFileName, destinationFileName, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="fa761-978">移動するファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-978">Path of the file to be moved.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="fa761-979">ファイルの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-979">Path of the directory into which the file should be moved.</span></span></param>
        <param name="overwrite"><span data-ttu-id="fa761-980">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fa761-980"><see langword="True" /> to overwrite existing files; otherwise <see langword="False" />.</span></span> <span data-ttu-id="fa761-981">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-981">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="fa761-982">ファイルを新しい場所に移動します。</span><span class="sxs-lookup"><span data-stu-id="fa761-982">Moves a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-983">ターゲットの構造が存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-983">If the target structure does not exist, it is created.</span></span>  
  
 <span data-ttu-id="fa761-984">`MoveFile` メソッドは、同じボリューム内でファイルを移動するときにのみ、Ace (Access Control エントリ) を保持します。</span><span class="sxs-lookup"><span data-stu-id="fa761-984">The `MoveFile` method preserves ACEs (Access Control Entries) only when moving the file within the same volume.</span></span> <span data-ttu-id="fa761-985">これには、移動時に直接の Ace になる継承された Ace が含まれます (直接の Ace は、継承された Ace より優先されます)。</span><span class="sxs-lookup"><span data-stu-id="fa761-985">This includes inherited ACEs, which become direct ACEs when moved (direct ACEs take precedence over inherited ACEs).</span></span> <span data-ttu-id="fa761-986">ボリューム間でファイルを移動すると、Ace はコピーされません。</span><span class="sxs-lookup"><span data-stu-id="fa761-986">If a file is moved between volumes, ACEs will not be copied.</span></span>  
  
 <span data-ttu-id="fa761-987">次の表に、`My.Computer.FileSystem.MoveFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-987">The following table lists an examples of a task involving the `My.Computer.FileSystem.MoveFile` method.</span></span>  
  
|<span data-ttu-id="fa761-988">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-988">To</span></span>|<span data-ttu-id="fa761-989">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-989">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-990">ファイルの移動</span><span class="sxs-lookup"><span data-stu-id="fa761-990">Move a file</span></span>|[<span data-ttu-id="fa761-991">方法: ファイルを移動する</span><span class="sxs-lookup"><span data-stu-id="fa761-991">How to: Move a File</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-move-a-file)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-992">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2`に移動します。</span><span class="sxs-lookup"><span data-stu-id="fa761-992">This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#86](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#86)]  
  
 <span data-ttu-id="fa761-993">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2` に移動し、その名前を `Test2.txt`に変更します。</span><span class="sxs-lookup"><span data-stu-id="fa761-993">This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#87](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#87)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-994">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-994">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-995"><paramref name="destinationFileName" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-995"><paramref name="destinationFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-996">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-996">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-997">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa761-997">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-998">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-998">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-999">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-999">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-1000">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1000">The user lacks necessary permissions to view the path.</span></span></exception>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-1001">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1001">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/creating-deleting-and-moving-files-and-directories"><span data-ttu-id="fa761-1002">Visual Basic でのファイルおよびディレクトリの作成、削除、および移動</span><span class="sxs-lookup"><span data-stu-id="fa761-1002">Creating, Deleting, and Moving Files and Directories in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MoveFile">
      <MemberSignature Language="C#" Value="public void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void MoveFile(string sourceFileName, string destinationFileName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveFile (sourceFileName As String, destinationFileName As String, showUI As UIOption, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveFile(System::String ^ sourceFileName, System::String ^ destinationFileName, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.MoveFile : string * string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="fileSystemProxy.MoveFile (sourceFileName, destinationFileName, showUI, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="fa761-1003">移動するファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-1003">Path of the file to be moved.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="fa761-1004">ファイルの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-1004">Path of the directory into which the file should be moved.</span></span></param>
        <param name="showUI"><span data-ttu-id="fa761-1005">操作の進行状況を視覚的に追跡するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1005">Specifies whether to visually track the operation's progress.</span></span> <span data-ttu-id="fa761-1006">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1006">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="onUserCancel"><span data-ttu-id="fa761-1007">ユーザーによって操作が取り消された場合に、例外をスローするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1007">Specifies whether or not an exception is thrown when the user cancels the operation.</span></span> <span data-ttu-id="fa761-1008">既定値は <see langword="UICancelOption.ThrowException" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1008">Default is <see langword="UICancelOption.ThrowException" />.</span></span></param>
        <summary><span data-ttu-id="fa761-1009">ファイルを新しい場所に移動します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1009">Moves a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-1010">ターゲットの構造が存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1010">If the target structure does not exist, it is created.</span></span>  
  
 <span data-ttu-id="fa761-1011">`MoveFile` メソッドは、同じボリューム内でファイルを移動するときにのみ、Ace (Access Control エントリ) を保持します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1011">The `MoveFile` method preserves ACEs (Access Control Entries) only when moving the file within the same volume.</span></span> <span data-ttu-id="fa761-1012">これには、移動時に直接の Ace になる継承された Ace が含まれます (直接の Ace は、継承された Ace より優先されます)。</span><span class="sxs-lookup"><span data-stu-id="fa761-1012">This includes inherited ACEs, which become direct ACEs when moved (direct ACEs take precedence over inherited ACEs).</span></span> <span data-ttu-id="fa761-1013">ボリューム間でファイルを移動すると、Ace はコピーされません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1013">If a file is moved between volumes, ACEs will not be copied.</span></span>  
  
 <span data-ttu-id="fa761-1014">次の表に、`My.Computer.FileSystem.MoveFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1014">The following table lists an example of a task involving the `My.Computer.FileSystem.MoveFile` method.</span></span>  
  
|<span data-ttu-id="fa761-1015">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-1015">To</span></span>|<span data-ttu-id="fa761-1016">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-1016">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-1017">ファイルの移動</span><span class="sxs-lookup"><span data-stu-id="fa761-1017">Move a file</span></span>|[<span data-ttu-id="fa761-1018">方法: ファイルを移動する</span><span class="sxs-lookup"><span data-stu-id="fa761-1018">How to: Move a File</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-move-a-file)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-1019">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2`に移動します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1019">This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#86](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#86)]  
  
 <span data-ttu-id="fa761-1020">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2` に移動し、その名前を `Test2.txt`に変更します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1020">This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#87](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#87)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-1021">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1021">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-1022"><paramref name="destinationFileName" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1022"><paramref name="destinationFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-1023">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1023">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-1024">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa761-1024">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="fa761-1025"><paramref name="onUserCancel" /> が <see langword="ThrowException" /> に設定されている場合に、ユーザーが操作を取り消したか、不特定の I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa761-1025"><paramref name="onUserCancel" /> is set to <see langword="ThrowException" />, and either the user has cancelled the operation or an unspecified I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-1026">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-1026">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-1027">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1027">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-1028">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1028">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/creating-deleting-and-moving-files-and-directories"><span data-ttu-id="fa761-1029">Visual Basic でのファイルおよびディレクトリの作成、削除、および移動</span><span class="sxs-lookup"><span data-stu-id="fa761-1029">Creating, Deleting, and Moving Files and Directories in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenTextFieldParser">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa761-1030"><see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。</span><span class="sxs-lookup"><span data-stu-id="fa761-1030">The <see langword="OpenTextFieldParser" /> method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object, which provides a way to easily and efficiently parse structured text files, such as logs.</span></span> <span data-ttu-id="fa761-1031"><see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1031">The <see langword="TextFieldParser" /> object can be used to read both delimited and fixed-width files.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenTextFieldParser">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser(string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenTextFieldParser (file As String) As TextFieldParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualBasic::FileIO::TextFieldParser ^ OpenTextFieldParser(System::String ^ file);" />
      <MemberSignature Language="F#" Value="member this.OpenTextFieldParser : string -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="fileSystemProxy.OpenTextFieldParser file" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileIO.TextFieldParser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fa761-1032"><see langword="TextFieldParser" /> で開くファイル。</span><span class="sxs-lookup"><span data-stu-id="fa761-1032">The file to be opened with the <see langword="TextFieldParser" />.</span></span></param>
        <summary><span data-ttu-id="fa761-1033"><see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。</span><span class="sxs-lookup"><span data-stu-id="fa761-1033">The <see langword="OpenTextFieldParser" /> method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object, which provides a way to easily and efficiently parse structured text files, such as logs.</span></span> <span data-ttu-id="fa761-1034"><see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1034">The <see langword="TextFieldParser" /> object can be used to read both delimited and fixed-width files.</span></span></summary>
        <returns><span data-ttu-id="fa761-1035">指定されたファイルを読み取るための <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</span><span class="sxs-lookup"><span data-stu-id="fa761-1035"><see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-1036">次の表に、`My.Computer.FileSystem.OpenTextFieldParser` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1036">The following table lists examples of tasks involving the `My.Computer.FileSystem.OpenTextFieldParser` method.</span></span>  
  
|<span data-ttu-id="fa761-1037">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-1037">To</span></span>|<span data-ttu-id="fa761-1038">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-1038">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-1039">区切られたテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-1039">Read from a delimited text file</span></span>|[<span data-ttu-id="fa761-1040">方法: コンマ区切りのテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-1040">How to: Read From Comma-Delimited Text Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files)|  
|<span data-ttu-id="fa761-1041">固定幅のテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-1041">Read from a fixed-width text file</span></span>|[<span data-ttu-id="fa761-1042">方法: 固定幅のテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-1042">How to: Read From Fixed-width Text Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files)|  
|<span data-ttu-id="fa761-1043">複数の形式を持つテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-1043">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="fa761-1044">方法: 複数の書式を持つテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-1044">How to: Read From Text Files with Multiple Formats</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-1045">この例では、`TextFieldParser.reader` を開き、それを使用して `C:\TestFolder1\Test1.txt`から読み取ります。</span><span class="sxs-lookup"><span data-stu-id="fa761-1045">This example opens the `TextFieldParser.reader` and uses it to read from `C:\TestFolder1\Test1.txt`.</span></span>  
  
 [!code-vb[VbRefFile#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-1046">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1046">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-1047"><paramref name="file" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1047"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-1048">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1048">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-1049">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa761-1049">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-1050">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-1050">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-1051">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1051">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException"><span data-ttu-id="fa761-1052">指定の書式を使用して行を解析できません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1052">A row cannot be parsed using the specified format.</span></span> <span data-ttu-id="fa761-1053">例外の原因となった行が例外メッセージで報告され、その行に含まれているテキストには <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> プロパティが代入されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1053">The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> property is assigned the text contained in the line.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-1054">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1054">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-1055">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1055">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files"><span data-ttu-id="fa761-1056">方法: テキスト ファイルからデータを読み取る (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1056">How to: Read From Text Files in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files"><span data-ttu-id="fa761-1057">方法 : Visual Basic でコンマ区切りのテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-1057">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats"><span data-ttu-id="fa761-1058">方法: Visual Basic で複数の書式を持つテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-1058">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files"><span data-ttu-id="fa761-1059">Visual Basic でのファイルの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-1059">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object"><span data-ttu-id="fa761-1060">TextFieldParser オブジェクトによるテキスト ファイルの解析</span><span class="sxs-lookup"><span data-stu-id="fa761-1060">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OpenTextFieldParser">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, params int[] fieldWidths);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser(string file, int32[] fieldWidths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenTextFieldParser (file As String, ParamArray fieldWidths As Integer()) As TextFieldParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualBasic::FileIO::TextFieldParser ^ OpenTextFieldParser(System::String ^ file, ... cli::array &lt;int&gt; ^ fieldWidths);" />
      <MemberSignature Language="F#" Value="member this.OpenTextFieldParser : string * int[] -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="fileSystemProxy.OpenTextFieldParser (file, fieldWidths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileIO.TextFieldParser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="fieldWidths" Type="System.Int32[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fa761-1061"><see langword="TextFieldParser" /> で開くファイル。</span><span class="sxs-lookup"><span data-stu-id="fa761-1061">The file to be opened with the <see langword="TextFieldParser" />.</span></span></param>
        <param name="fieldWidths"><span data-ttu-id="fa761-1062">フィールドの幅。</span><span class="sxs-lookup"><span data-stu-id="fa761-1062">Widths of the fields.</span></span></param>
        <summary><span data-ttu-id="fa761-1063"><see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。</span><span class="sxs-lookup"><span data-stu-id="fa761-1063">The <see langword="OpenTextFieldParser" /> method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object, which provides a way to easily and efficiently parse structured text files, such as logs.</span></span> <span data-ttu-id="fa761-1064"><see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1064">The <see langword="TextFieldParser" /> object can be used to read both delimited and fixed-width files.</span></span></summary>
        <returns><span data-ttu-id="fa761-1065">指定されたファイルを読み取るための <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</span><span class="sxs-lookup"><span data-stu-id="fa761-1065"><see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-1066">次の表に、`My.Computer.FileSystem.OpenTextFieldParser` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1066">The following table lists examples of tasks involving the `My.Computer.FileSystem.OpenTextFieldParser` method.</span></span>  
  
|<span data-ttu-id="fa761-1067">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-1067">To</span></span>|<span data-ttu-id="fa761-1068">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-1068">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-1069">区切られたテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-1069">Read from a delimited text file</span></span>|[<span data-ttu-id="fa761-1070">方法: コンマ区切りのテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-1070">How to: Read From Comma-Delimited Text Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files)|  
|<span data-ttu-id="fa761-1071">固定幅のテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-1071">Read from a fixed-width text file</span></span>|[<span data-ttu-id="fa761-1072">方法: 固定幅のテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-1072">How to: Read From Fixed-width Text Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files)|  
|<span data-ttu-id="fa761-1073">複数の形式を持つテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-1073">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="fa761-1074">方法: 複数の書式を持つテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-1074">How to: Read From Text Files with Multiple Formats</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-1075">この例では、`TextFieldParser.reader` を開き、それを使用して `C:\TestFolder1\Test1.txt`から読み取ります。</span><span class="sxs-lookup"><span data-stu-id="fa761-1075">This example opens the `TextFieldParser.reader` and uses it to read from `C:\TestFolder1\Test1.txt`.</span></span>  
  
 [!code-vb[VbRefFile#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-1076">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1076">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-1077"><paramref name="file" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1077"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-1078">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1078">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-1079">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa761-1079">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-1080">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-1080">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-1081">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1081">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException"><span data-ttu-id="fa761-1082">指定の書式を使用して行を解析できません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1082">A row cannot be parsed using the specified format.</span></span> <span data-ttu-id="fa761-1083">例外の原因となった行が例外メッセージで報告され、その行に含まれているテキストには <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> プロパティが代入されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1083">The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> property is assigned the text contained in the line.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-1084">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1084">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-1085">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1085">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files"><span data-ttu-id="fa761-1086">方法: テキスト ファイルからデータを読み取る (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1086">How to: Read From Text Files in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files"><span data-ttu-id="fa761-1087">方法 : Visual Basic でコンマ区切りのテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-1087">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats"><span data-ttu-id="fa761-1088">方法: Visual Basic で複数の書式を持つテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-1088">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files"><span data-ttu-id="fa761-1089">Visual Basic でのファイルの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-1089">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object"><span data-ttu-id="fa761-1090">TextFieldParser オブジェクトによるテキスト ファイルの解析</span><span class="sxs-lookup"><span data-stu-id="fa761-1090">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OpenTextFieldParser">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, params string[] delimiters);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser(string file, string[] delimiters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenTextFieldParser (file As String, ParamArray delimiters As String()) As TextFieldParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualBasic::FileIO::TextFieldParser ^ OpenTextFieldParser(System::String ^ file, ... cli::array &lt;System::String ^&gt; ^ delimiters);" />
      <MemberSignature Language="F#" Value="member this.OpenTextFieldParser : string * string[] -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="fileSystemProxy.OpenTextFieldParser (file, delimiters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileIO.TextFieldParser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="delimiters" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fa761-1091"><see langword="TextFieldParser" /> で開くファイル。</span><span class="sxs-lookup"><span data-stu-id="fa761-1091">The file to be opened with the <see langword="TextFieldParser" />.</span></span></param>
        <param name="delimiters"><span data-ttu-id="fa761-1092">フィールドの区切り記号。</span><span class="sxs-lookup"><span data-stu-id="fa761-1092">Delimiters for the fields.</span></span></param>
        <summary><span data-ttu-id="fa761-1093"><see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。</span><span class="sxs-lookup"><span data-stu-id="fa761-1093">The <see langword="OpenTextFieldParser" /> method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object, which provides a way to easily and efficiently parse structured text files, such as logs.</span></span> <span data-ttu-id="fa761-1094"><see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1094">The <see langword="TextFieldParser" /> object can be used to read both delimited and fixed-width files.</span></span></summary>
        <returns><span data-ttu-id="fa761-1095">指定されたファイルを読み取るための <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</span><span class="sxs-lookup"><span data-stu-id="fa761-1095"><see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-1096">次の表に、`My.Computer.FileSystem.OpenTextFieldParser` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1096">The following table lists examples of tasks involving the `My.Computer.FileSystem.OpenTextFieldParser` method.</span></span>  
  
|<span data-ttu-id="fa761-1097">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-1097">To</span></span>|<span data-ttu-id="fa761-1098">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-1098">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-1099">区切られたテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-1099">Read from a delimited text file</span></span>|[<span data-ttu-id="fa761-1100">方法: コンマ区切りのテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-1100">How to: Read From Comma-Delimited Text Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files)|  
|<span data-ttu-id="fa761-1101">固定幅のテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-1101">Read from a fixed-width text file</span></span>|[<span data-ttu-id="fa761-1102">方法: 固定幅のテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-1102">How to: Read From Fixed-width Text Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files)|  
|<span data-ttu-id="fa761-1103">複数の形式を持つテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-1103">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="fa761-1104">方法: 複数の書式を持つテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-1104">How to: Read From Text Files with Multiple Formats</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-1105">この例では、`TextFieldParser.reader` を開き、それを使用して `C:\TestFolder1\Test1.txt`から読み取ります。</span><span class="sxs-lookup"><span data-stu-id="fa761-1105">This example opens the `TextFieldParser.reader` and uses it to read from `C:\TestFolder1\Test1.txt`.</span></span>  
  
 [!code-vb[VbRefFile#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-1106">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1106">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-1107"><paramref name="file" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1107"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-1108">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1108">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-1109">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa761-1109">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-1110">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-1110">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-1111">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1111">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException"><span data-ttu-id="fa761-1112">指定の書式を使用して行を解析できません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1112">A row cannot be parsed using the specified format.</span></span> <span data-ttu-id="fa761-1113">例外の原因となった行が例外メッセージで報告され、その行に含まれているテキストには <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> プロパティが代入されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1113">The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> property is assigned the text contained in the line.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-1114">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1114">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-1115">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1115">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files"><span data-ttu-id="fa761-1116">方法: テキスト ファイルからデータを読み取る (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1116">How to: Read From Text Files in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files"><span data-ttu-id="fa761-1117">方法 : Visual Basic でコンマ区切りのテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-1117">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats"><span data-ttu-id="fa761-1118">方法: Visual Basic で複数の書式を持つテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-1118">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files"><span data-ttu-id="fa761-1119">Visual Basic でのファイルの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-1119">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object"><span data-ttu-id="fa761-1120">TextFieldParser オブジェクトによるテキスト ファイルの解析</span><span class="sxs-lookup"><span data-stu-id="fa761-1120">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenTextFileReader">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa761-1121"><see cref="T:System.IO.StreamReader" /> オブジェクトを開いてファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="fa761-1121">Opens a <see cref="T:System.IO.StreamReader" /> object to read from a file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenTextFileReader">
      <MemberSignature Language="C#" Value="public System.IO.StreamReader OpenTextFileReader (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.StreamReader OpenTextFileReader(string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenTextFileReader (file As String) As StreamReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::StreamReader ^ OpenTextFileReader(System::String ^ file);" />
      <MemberSignature Language="F#" Value="member this.OpenTextFileReader : string -&gt; System.IO.StreamReader" Usage="fileSystemProxy.OpenTextFileReader file" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fa761-1122">読み取るファイル。</span><span class="sxs-lookup"><span data-stu-id="fa761-1122">File to be read.</span></span></param>
        <summary><span data-ttu-id="fa761-1123"><see cref="T:System.IO.StreamReader" /> オブジェクトを開いてファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="fa761-1123">Opens a <see cref="T:System.IO.StreamReader" /> object to read from a file.</span></span></summary>
        <returns><span data-ttu-id="fa761-1124">ファイルから読み取る <see cref="T:System.IO.StreamReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fa761-1124"><see cref="T:System.IO.StreamReader" /> object to read from the file</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-1125"><xref:System.IO.StreamReader>では、テキストファイルのみを読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1125">Only text files can be read with a <xref:System.IO.StreamReader>.</span></span>  
  
 <span data-ttu-id="fa761-1126">次の表に、`My.Computer.FileSystem.OpenTextFileReader` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1126">The following table lists examples of tasks involving the `My.Computer.FileSystem.OpenTextFileReader` method.</span></span>  
  
|<span data-ttu-id="fa761-1127">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-1127">To</span></span>|<span data-ttu-id="fa761-1128">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-1128">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-1129"><xref:System.IO.StreamReader> を使用してファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1129">Open a file with a <xref:System.IO.StreamReader></span></span>|[<span data-ttu-id="fa761-1130">方法: StreamReader を使用してファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-1130">How to: Read Text from Files with a StreamReader</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-1131">この例では、ファイル `Testfile.txt`を開き、そこから行を読み取り、`MessageBox`でその行を表示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1131">This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.</span></span>  
  
 [!code-vb[VbRefFile#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-1132">ファイル名がバックスラッシュ (\\) で終わっています。</span><span class="sxs-lookup"><span data-stu-id="fa761-1132">The file name ends with a backslash (\\).</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-1133">指定されたファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1133">The specified file cannot be found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-1134">ユーザーがファイルの読み取りに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1134">The user lacks necessary permissions to read from the file.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.IO.StreamReader" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-1135">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1135">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader"><span data-ttu-id="fa761-1136">方法: StreamReader を使用してファイルからテキストを読み取る (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1136">How to: Read Text from Files with a StreamReader (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files"><span data-ttu-id="fa761-1137">Visual Basic でのファイルの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-1137">Reading from Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OpenTextFileReader">
      <MemberSignature Language="C#" Value="public System.IO.StreamReader OpenTextFileReader (string file, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.StreamReader OpenTextFileReader(string file, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenTextFileReader (file As String, encoding As Encoding) As StreamReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::StreamReader ^ OpenTextFileReader(System::String ^ file, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.OpenTextFileReader : string * System.Text.Encoding -&gt; System.IO.StreamReader" Usage="fileSystemProxy.OpenTextFileReader (file, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fa761-1138">読み取るファイル。</span><span class="sxs-lookup"><span data-stu-id="fa761-1138">File to be read.</span></span></param>
        <param name="encoding"><span data-ttu-id="fa761-1139">ファイルの内容に使用されるエンコーディング。</span><span class="sxs-lookup"><span data-stu-id="fa761-1139">The encoding to use for the file contents.</span></span> <span data-ttu-id="fa761-1140">既定値は ASCII です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1140">Default is ASCII.</span></span></param>
        <summary><span data-ttu-id="fa761-1141"><see cref="T:System.IO.StreamReader" /> オブジェクトを開いてファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="fa761-1141">Opens a <see cref="T:System.IO.StreamReader" /> object to read from a file.</span></span></summary>
        <returns><span data-ttu-id="fa761-1142">ファイルから読み取る <see cref="T:System.IO.StreamReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fa761-1142"><see cref="T:System.IO.StreamReader" /> object to read from the file</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-1143"><xref:System.IO.StreamReader>では、テキストファイルのみを読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1143">Only text files can be read with a <xref:System.IO.StreamReader>.</span></span>  
  
 <span data-ttu-id="fa761-1144">次の表に、`My.Computer.FileSystem.OpenTextFileReader` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1144">The following table lists examples of tasks involving the `My.Computer.FileSystem.OpenTextFileReader` method.</span></span>  
  
|<span data-ttu-id="fa761-1145">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-1145">To</span></span>|<span data-ttu-id="fa761-1146">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-1146">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-1147"><xref:System.IO.StreamReader> を使用してファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1147">Open a file with a <xref:System.IO.StreamReader></span></span>|[<span data-ttu-id="fa761-1148">方法: StreamReader を使用してファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-1148">How to: Read Text from Files with a StreamReader</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-1149">この例では、ファイル `Testfile.txt`を開き、そこから行を読み取り、`MessageBox`でその行を表示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1149">This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.</span></span>  
  
 [!code-vb[VbRefFile#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-1150">ファイル名がバックスラッシュ (\\) で終わっています。</span><span class="sxs-lookup"><span data-stu-id="fa761-1150">The file name ends with a backslash (\\).</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-1151">指定されたファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1151">The specified file cannot be found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-1152">ユーザーがファイルの読み取りに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1152">The user lacks necessary permissions to read from the file.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.IO.StreamReader" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-1153">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1153">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader"><span data-ttu-id="fa761-1154">方法: StreamReader を使用してファイルからテキストを読み取る (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1154">How to: Read Text from Files with a StreamReader (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files"><span data-ttu-id="fa761-1155">Visual Basic でのファイルの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-1155">Reading from Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenTextFileWriter">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa761-1156"><see cref="T:System.IO.StreamWriter" /> オブジェクトを開いて指定されたファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1156">Opens a <see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenTextFileWriter">
      <MemberSignature Language="C#" Value="public System.IO.StreamWriter OpenTextFileWriter (string file, bool append);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.StreamWriter OpenTextFileWriter(string file, bool append) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenTextFileWriter (file As String, append As Boolean) As StreamWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::StreamWriter ^ OpenTextFileWriter(System::String ^ file, bool append);" />
      <MemberSignature Language="F#" Value="member this.OpenTextFileWriter : string * bool -&gt; System.IO.StreamWriter" Usage="fileSystemProxy.OpenTextFileWriter (file, append)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fa761-1157">書き込み先のファイル。</span><span class="sxs-lookup"><span data-stu-id="fa761-1157">File to be written to.</span></span></param>
        <param name="append"><span data-ttu-id="fa761-1158">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fa761-1158"><see langword="True" /> to append to the contents of the file; <see langword="False" /> to overwrite the contents of the file.</span></span> <span data-ttu-id="fa761-1159">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1159">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="fa761-1160"><see cref="T:System.IO.StreamWriter" /> オブジェクトを開いて指定されたファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1160">Opens a <see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</span></span></summary>
        <returns><span data-ttu-id="fa761-1161">指定したファイルに書き込む <see cref="T:System.IO.StreamWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fa761-1161"><see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-1162">`OpenTextFileWriter` メソッドは、ファイルのストリームを開いて初期化し、そのストリームの <xref:System.IO.StreamWriter> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1162">The `OpenTextFileWriter` method opens and initializes a stream for a file and then returns the <xref:System.IO.StreamWriter> object for that stream.</span></span> <span data-ttu-id="fa761-1163">必要に応じて何回でもストリームに書き込むことができます。終了したら、それを閉じます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1163">You can write to the steam as many times as necessary and then close it when you are finished.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa761-1164">すべてのデータが基になるストリームに正しく書き込まれるようにするには、<xref:System.IO.StreamWriter> オブジェクトの <xref:System.IO.StreamWriter.Close%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa761-1164">You must call the <xref:System.IO.StreamWriter.Close%2A> method on the <xref:System.IO.StreamWriter> object to make sure that all data is correctly written to the underlying stream.</span></span>  
  
 <span data-ttu-id="fa761-1165">少数の文字列のみをファイルに書き込む場合は、<xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText%2A> メソッドを使用する方が簡単な場合があります。</span><span class="sxs-lookup"><span data-stu-id="fa761-1165">If you are writing only a few strings to a file, it might be simpler to use the <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText%2A> method.</span></span>  
  
 <span data-ttu-id="fa761-1166">次の表に、`My.Computer.FileSystem.OpenTextFileWriter` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1166">The following table lists an example of a task involving the `My.Computer.FileSystem.OpenTextFileWriter` method.</span></span>  
  
|<span data-ttu-id="fa761-1167">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-1167">To</span></span>|<span data-ttu-id="fa761-1168">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-1168">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-1169">`StreamWriter` を使用してファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="fa761-1169">Write text to a file with a `StreamWriter`</span></span>|[<span data-ttu-id="fa761-1170">方法: StreamWriter を使用してファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="fa761-1170">How to: Write Text to Files with a StreamWriter</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-1171">この例では、`My.Computer.FileSystem.OpenTextFileWriter` メソッドを使用して <xref:System.IO.StreamWriter> を開き、それを使用して `StreamWriter` クラスの `WriteLine` メソッドを使用してテキストファイルに文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1171">This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.</span></span>  
  
 [!code-vb[VbRefFile#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-1172">ファイル名の末尾にスラッシュが付いています。</span><span class="sxs-lookup"><span data-stu-id="fa761-1172">The file name ends with a trailing slash.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.IO.StreamWriter" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-1173">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1173">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter"><span data-ttu-id="fa761-1174">方法: Streamwriter を使用してファイルにテキストを書き込む (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1174">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OpenTextFileWriter">
      <MemberSignature Language="C#" Value="public System.IO.StreamWriter OpenTextFileWriter (string file, bool append, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.StreamWriter OpenTextFileWriter(string file, bool append, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenTextFileWriter (file As String, append As Boolean, encoding As Encoding) As StreamWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::StreamWriter ^ OpenTextFileWriter(System::String ^ file, bool append, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.OpenTextFileWriter : string * bool * System.Text.Encoding -&gt; System.IO.StreamWriter" Usage="fileSystemProxy.OpenTextFileWriter (file, append, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fa761-1175">書き込み先のファイル。</span><span class="sxs-lookup"><span data-stu-id="fa761-1175">File to be written to.</span></span></param>
        <param name="append"><span data-ttu-id="fa761-1176">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fa761-1176"><see langword="True" /> to append to the contents in the file; <see langword="False" /> to overwrite the contents of the file.</span></span> <span data-ttu-id="fa761-1177">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1177">Default is <see langword="False" />.</span></span></param>
        <param name="encoding"><span data-ttu-id="fa761-1178">ファイルへの書き込み時に使用するエンコーディング。</span><span class="sxs-lookup"><span data-stu-id="fa761-1178">Encoding to be used in writing to the file.</span></span> <span data-ttu-id="fa761-1179">既定値は ASCII です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1179">Default is ASCII.</span></span></param>
        <summary><span data-ttu-id="fa761-1180"><see cref="T:System.IO.StreamWriter" /> を開いて指定されたファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1180">Opens a <see cref="T:System.IO.StreamWriter" /> to write to the specified file.</span></span></summary>
        <returns><span data-ttu-id="fa761-1181">指定したファイルに書き込む <see cref="T:System.IO.StreamWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fa761-1181"><see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-1182">`OpenTextFileWriter` メソッドは、ファイルのストリームを開いて初期化し、そのストリームの <xref:System.IO.StreamWriter> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1182">The `OpenTextFileWriter` method opens and initializes a stream for a file and then returns the <xref:System.IO.StreamWriter> object for that stream.</span></span> <span data-ttu-id="fa761-1183">必要に応じて何回でもストリームに書き込むことができます。終了したら、それを閉じます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1183">You can write to the steam as many times as necessary and then close it when you are finished.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa761-1184">すべてのデータが基になるストリームに正しく書き込まれるようにするには、<xref:System.IO.StreamWriter> オブジェクトの <xref:System.IO.StreamWriter.Close%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa761-1184">You must call the <xref:System.IO.StreamWriter.Close%2A> method on the <xref:System.IO.StreamWriter> object to make sure that all data is correctly written to the underlying stream.</span></span>  
  
 <span data-ttu-id="fa761-1185">少数の文字列のみをファイルに書き込む場合は、<xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText%2A> メソッドを使用する方が簡単な場合があります。</span><span class="sxs-lookup"><span data-stu-id="fa761-1185">If you are writing only a few strings to a file, it might be simpler to use the <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText%2A> method.</span></span>  
  
 <span data-ttu-id="fa761-1186">次の表に、`My.Computer.FileSystem.OpenTextFileWriter` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1186">The following table lists an example of a task involving the `My.Computer.FileSystem.OpenTextFileWriter` method.</span></span>  
  
|<span data-ttu-id="fa761-1187">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-1187">To</span></span>|<span data-ttu-id="fa761-1188">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-1188">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-1189">`StreamWriter` を使用してファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="fa761-1189">Write text to a file with a `StreamWriter`</span></span>|[<span data-ttu-id="fa761-1190">方法: StreamWriter を使用してファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="fa761-1190">How to: Write Text to Files with a StreamWriter</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-1191">この例では、`My.Computer.FileSystem.OpenTextFileWriter` メソッドを使用して <xref:System.IO.StreamWriter> を開き、それを使用して `StreamWriter` クラスの `WriteLine` メソッドを使用してテキストファイルに文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1191">This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.</span></span>  
  
 [!code-vb[VbRefFile#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-1192">ファイル名の末尾にスラッシュが付いています。</span><span class="sxs-lookup"><span data-stu-id="fa761-1192">The file name ends with a trailing slash.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.IO.StreamWriter" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-1193">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1193">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter"><span data-ttu-id="fa761-1194">方法: Streamwriter を使用してファイルにテキストを書き込む (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1194">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadAllBytes">
      <MemberSignature Language="C#" Value="public byte[] ReadAllBytes (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public instance unsigned int8[] ReadAllBytes(string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAllBytes (file As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ReadAllBytes(System::String ^ file);" />
      <MemberSignature Language="F#" Value="member this.ReadAllBytes : string -&gt; byte[]" Usage="fileSystemProxy.ReadAllBytes file" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fa761-1195">読み取るファイル。</span><span class="sxs-lookup"><span data-stu-id="fa761-1195">File to be read.</span></span></param>
        <summary><span data-ttu-id="fa761-1196">テキスト ファイルの内容をバイト配列として返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1196">Returns the contents of a file as a byte array.</span></span></summary>
        <returns><span data-ttu-id="fa761-1197">ファイルの内容を保持する <see langword="Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="fa761-1197"><see langword="Byte" /> array containing the contents of the file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-1198">`My.Computer.FileSystem` オブジェクトの `ReadAllBytes` メソッドを使用すると、バイナリファイルから読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1198">The `ReadAllBytes` method of the `My.Computer.FileSystem` object allows you to read from a binary file.</span></span> <span data-ttu-id="fa761-1199">ファイルの内容は、バイト配列として返されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1199">The contents of the file are returned as a byte array.</span></span>  
  
 <span data-ttu-id="fa761-1200">ファイル名からファイルの内容を判断しないでください。</span><span class="sxs-lookup"><span data-stu-id="fa761-1200">Do not make decisions about the contents of the file based on the name of the file.</span></span> <span data-ttu-id="fa761-1201">たとえば、Form1.vb というファイルは Visual Basic のソース ファイルではない可能性もあります。</span><span class="sxs-lookup"><span data-stu-id="fa761-1201">For example, the file Form1.vb may not be a Visual Basic source file.</span></span> <span data-ttu-id="fa761-1202">アプリケーションでデータを使用する前に、入力をすべて検証してください。</span><span class="sxs-lookup"><span data-stu-id="fa761-1202">Verify all inputs before using the data in your application.</span></span>  
  
 <span data-ttu-id="fa761-1203">次の表に、`My.Computer.FileSystem.ReadAllBytes` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1203">The following table lists examples of tasks involving the `My.Computer.FileSystem.ReadAllBytes` method.</span></span>  
  
|<span data-ttu-id="fa761-1204">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-1204">To</span></span>|<span data-ttu-id="fa761-1205">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-1205">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-1206">バイナリ ファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-1206">Read from a binary file</span></span>|[<span data-ttu-id="fa761-1207">方法: バイナリ ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-1207">How to: Read From Binary Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-binary-files)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-1208">この例では、ファイルから読み取り `C:/Documents and Settings/selfportrait.jpg.`</span><span class="sxs-lookup"><span data-stu-id="fa761-1208">This example reads from the file `C:/Documents and Settings/selfportrait.jpg.`</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-1209">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1209">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-1210"><paramref name="file" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1210"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-1211">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1211">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-1212">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa761-1212">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-1213">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-1213">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-1214">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1214">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="fa761-1215">文字列をバッファーに書き込むための十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1215">There is not enough memory to write the string to buffer.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-1216">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1216">The user lacks necessary permissions to view the path.</span></span></exception>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-1217">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1217">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files"><span data-ttu-id="fa761-1218">Visual Basic でのファイルの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-1218">Reading from Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadAllText">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa761-1219">テキスト ファイルの内容を <see langword="String" /> として返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1219">Returns the contents of a text file as a <see langword="String" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadAllText">
      <MemberSignature Language="C#" Value="public string ReadAllText (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public instance string ReadAllText(string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAllText (file As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadAllText(System::String ^ file);" />
      <MemberSignature Language="F#" Value="member this.ReadAllText : string -&gt; string" Usage="fileSystemProxy.ReadAllText file" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fa761-1220">読み取るファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-1220">Name and path of the file to read.</span></span></param>
        <summary><span data-ttu-id="fa761-1221">テキスト ファイルの内容を <see langword="String" /> として返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1221">Returns the contents of a text file as a <see langword="String" />.</span></span></summary>
        <returns><span data-ttu-id="fa761-1222">ファイルの内容を保持する <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="fa761-1222"><see langword="String" /> containing the contents of the file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-1223">`ReadAllText` オブジェクトの `My.Computer.FileSystem` メソッドを使用すると、テキスト ファイルを読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1223">The `ReadAllText` method of the `My.Computer.FileSystem` object allows you to read from a text file.</span></span> <span data-ttu-id="fa761-1224">ファイルの内容は文字列として返されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1224">The contents of the file are returned as a string.</span></span>  
  
 <span data-ttu-id="fa761-1225">ファイルの内容が ASCII や UTF-8 などのエンコーディングに含まれる場合は、ファイルのエンコーディングを指定できます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1225">The file encoding can be specified if the contents of the file are in an encoding such as ASCII or UTF-8.</span></span> <span data-ttu-id="fa761-1226">拡張文字を含むファイルから読み取る場合は、<xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText%2A> メソッドの別のオーバーロードを使用して、ファイルのエンコードを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa761-1226">If you are reading from a file with extended characters, you need to specify the file encoding using another overload of the <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText%2A> method.</span></span>  
  
 <span data-ttu-id="fa761-1227">ファイル名からファイルの内容を判断しないでください。</span><span class="sxs-lookup"><span data-stu-id="fa761-1227">Do not make decisions about the contents of the file based on the name of the file.</span></span> <span data-ttu-id="fa761-1228">たとえば、Form1.vb というファイルは Visual Basic のソース ファイルではない可能性もあります。</span><span class="sxs-lookup"><span data-stu-id="fa761-1228">For example, the file Form1.vb may not be a Visual Basic source file.</span></span> <span data-ttu-id="fa761-1229">アプリケーションでデータを使用する前に、入力をすべて検証してください。</span><span class="sxs-lookup"><span data-stu-id="fa761-1229">Verify all inputs before using the data in your application.</span></span>  
  
 <span data-ttu-id="fa761-1230">次の表に、`My.Computer.FileSystem.ReadAllText` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1230">The following table lists examples of tasks involving the `My.Computer.FileSystem.ReadAllText` method.</span></span>  
  
|<span data-ttu-id="fa761-1231">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-1231">To</span></span>|<span data-ttu-id="fa761-1232">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-1232">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-1233">テキスト ファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-1233">Read from a text file</span></span>|[<span data-ttu-id="fa761-1234">方法: テキスト ファイルからデータを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-1234">How to: Read from Text Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-1235">この例では、`Test.txt` の内容を文字列に読み取り、メッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1235">This example reads the contents of `Test.txt` into a string and then displays it in a message box.</span></span>  
  
 [!code-vb[VbRefFile#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#8)]  
  
 <span data-ttu-id="fa761-1236">この例では、ASCII ファイル `Test.txt` の内容を文字列に読み取り、メッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1236">This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.</span></span>  
  
 [!code-vb[VbRefFile#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-1237">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1237">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-1238"><paramref name="file" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1238"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-1239">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1239">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-1240">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa761-1240">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-1241">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-1241">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-1242">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1242">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="fa761-1243">文字列をバッファーに書き込むための十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1243">There is not enough memory to write the string to buffer.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-1244">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1244">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)" />
        <altmember cref="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding)" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-1245">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1245">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files"><span data-ttu-id="fa761-1246">Visual Basic でのファイルの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-1246">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader"><span data-ttu-id="fa761-1247">方法: StreamReader を使用してファイルからテキストを読み取る (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1247">How to: Read Text from Files with a StreamReader (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/troubleshooting-reading-from-and-writing-to-text-files"><span data-ttu-id="fa761-1248">トラブルシューティング : テキスト ファイルの読み取りと書き込み</span><span class="sxs-lookup"><span data-stu-id="fa761-1248">Troubleshooting: Reading from and Writing to Text Files</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories"><span data-ttu-id="fa761-1249">チュートリアル : Visual Basic によるファイルとディレクトリの操作</span><span class="sxs-lookup"><span data-stu-id="fa761-1249">Walkthrough: Manipulating Files and Directories in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/file-encodings"><span data-ttu-id="fa761-1250">ファイル エンコーディング</span><span class="sxs-lookup"><span data-stu-id="fa761-1250">File Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadAllText">
      <MemberSignature Language="C#" Value="public string ReadAllText (string file, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public instance string ReadAllText(string file, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAllText (file As String, encoding As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadAllText(System::String ^ file, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.ReadAllText : string * System.Text.Encoding -&gt; string" Usage="fileSystemProxy.ReadAllText (file, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fa761-1251">読み取るファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="fa761-1251">Name and path of the file to read.</span></span></param>
        <param name="encoding"><span data-ttu-id="fa761-1252">ファイルの読み取り時に使用する文字エンコーディング。</span><span class="sxs-lookup"><span data-stu-id="fa761-1252">Character encoding to use in reading the file.</span></span> <span data-ttu-id="fa761-1253">既定値は UTF-8 です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1253">Default is UTF-8.</span></span></param>
        <summary><span data-ttu-id="fa761-1254">テキスト ファイルの内容を <see langword="String" /> として返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1254">Returns the contents of a text file as a <see langword="String" />.</span></span></summary>
        <returns><span data-ttu-id="fa761-1255">ファイルの内容を保持する <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="fa761-1255"><see langword="String" /> containing the contents of the file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-1256">`ReadAllText` オブジェクトの `My.Computer.FileSystem` メソッドを使用すると、テキスト ファイルを読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1256">The `ReadAllText` method of the `My.Computer.FileSystem` object allows you to read from a text file.</span></span> <span data-ttu-id="fa761-1257">ファイルの内容は文字列として返されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1257">The contents of the file are returned as a string.</span></span>  
  
 <span data-ttu-id="fa761-1258">ファイルの内容が ASCII や UTF-8 などのエンコーディングに含まれる場合は、ファイルのエンコーディングを指定できます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1258">The file encoding can be specified if the contents of the file are in an encoding such as ASCII or UTF-8.</span></span> <span data-ttu-id="fa761-1259">拡張文字を使用してファイルを読み取る場合は、ファイルのエンコードを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa761-1259">If you are reading from a file with extended characters, you need to specify the file encoding.</span></span>  
  
 <span data-ttu-id="fa761-1260">ファイル名からファイルの内容を判断しないでください。</span><span class="sxs-lookup"><span data-stu-id="fa761-1260">Do not make decisions about the contents of the file based on the name of the file.</span></span> <span data-ttu-id="fa761-1261">たとえば、Form1.vb というファイルは Visual Basic のソース ファイルではない可能性もあります。</span><span class="sxs-lookup"><span data-stu-id="fa761-1261">For example, the file Form1.vb may not be a Visual Basic source file.</span></span> <span data-ttu-id="fa761-1262">アプリケーションでデータを使用する前に、入力をすべて検証してください。</span><span class="sxs-lookup"><span data-stu-id="fa761-1262">Verify all inputs before using the data in your application.</span></span>  
  
 <span data-ttu-id="fa761-1263">次の表に、`My.Computer.FileSystem.ReadAllText` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1263">The following table lists examples of tasks involving the `My.Computer.FileSystem.ReadAllText` method.</span></span>  
  
|<span data-ttu-id="fa761-1264">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-1264">To</span></span>|<span data-ttu-id="fa761-1265">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-1265">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-1266">テキスト ファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-1266">Read from a text file</span></span>|[<span data-ttu-id="fa761-1267">方法: テキスト ファイルからデータを読み取る</span><span class="sxs-lookup"><span data-stu-id="fa761-1267">How to: Read from Text Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-1268">この例では、`Test.txt` の内容を文字列に読み取り、メッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1268">This example reads the contents of `Test.txt` into a string and then displays it in a message box.</span></span>  
  
 [!code-vb[VbRefFile#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#8)]  
  
 <span data-ttu-id="fa761-1269">この例では、ASCII ファイル `Test.txt` の内容を文字列に読み取り、メッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1269">This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.</span></span>  
  
 [!code-vb[VbRefFile#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-1270">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1270">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-1271"><paramref name="file" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1271"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-1272">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1272">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-1273">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa761-1273">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-1274">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-1274">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-1275">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1275">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="fa761-1276">文字列をバッファーに書き込むための十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1276">There is not enough memory to write the string to buffer.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-1277">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1277">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding)" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-1278">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1278">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files"><span data-ttu-id="fa761-1279">Visual Basic でのファイルの読み取り</span><span class="sxs-lookup"><span data-stu-id="fa761-1279">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader"><span data-ttu-id="fa761-1280">方法: StreamReader を使用してファイルからテキストを読み取る (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1280">How to: Read Text from Files with a StreamReader (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/troubleshooting-reading-from-and-writing-to-text-files"><span data-ttu-id="fa761-1281">トラブルシューティング : テキスト ファイルの読み取りと書き込み</span><span class="sxs-lookup"><span data-stu-id="fa761-1281">Troubleshooting: Reading from and Writing to Text Files</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories"><span data-ttu-id="fa761-1282">チュートリアル : Visual Basic によるファイルとディレクトリの操作</span><span class="sxs-lookup"><span data-stu-id="fa761-1282">Walkthrough: Manipulating Files and Directories in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/file-encodings"><span data-ttu-id="fa761-1283">ファイル エンコーディング</span><span class="sxs-lookup"><span data-stu-id="fa761-1283">File Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RenameDirectory">
      <MemberSignature Language="C#" Value="public void RenameDirectory (string directory, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void RenameDirectory(string directory, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RenameDirectory (directory As String, newName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RenameDirectory(System::String ^ directory, System::String ^ newName);" />
      <MemberSignature Language="F#" Value="member this.RenameDirectory : string * string -&gt; unit" Usage="fileSystemProxy.RenameDirectory (directory, newName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fa761-1284">名前を変更するディレクトリのパスおよび名前。</span><span class="sxs-lookup"><span data-stu-id="fa761-1284">Path and name of directory to be renamed.</span></span></param>
        <param name="newName"><span data-ttu-id="fa761-1285">ディレクトリの新しい名前。</span><span class="sxs-lookup"><span data-stu-id="fa761-1285">New name for directory.</span></span></param>
        <summary><span data-ttu-id="fa761-1286">ディレクトリ名を変更します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1286">Renames a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-1287">このメソッドを使用してディレクトリを移動することはできません。`MoveDirectory` メソッドを使用して、ディレクトリの移動と名前変更を行います。</span><span class="sxs-lookup"><span data-stu-id="fa761-1287">This method cannot be used to move a directory; use the `MoveDirectory` method to move and rename the directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa761-1288">この例では、`Test` ディレクトリの名前を `SecondTest`に変更します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1288">This example renames the `Test` directory to `SecondTest`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-1289"><paramref name="newName" /> にパス情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fa761-1289"><paramref name="newName" /> contains path information.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-1290"><paramref name="directory" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1290"><paramref name="directory" /> is <see langword="Nothing" />.</span></span>  
  
<span data-ttu-id="fa761-1291">または</span><span class="sxs-lookup"><span data-stu-id="fa761-1291">-or-</span></span> 
 <span data-ttu-id="fa761-1292"><paramref name="newName" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1292"><paramref name="newName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fa761-1293">ディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1293">The directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-1294"><paramref name="newName" /> で指定したのと同じ名前のファイルまたはディレクトリが既に存在します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1294">There is an existing file or directory with the name specified in <paramref name="newName" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-1295">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-1295">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-1296">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1296">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-1297">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1297">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-1298">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1298">The user does not have required permission.</span></span></exception>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-1299">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1299">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths"><span data-ttu-id="fa761-1300">方法 : Visual Basic でファイル パスを解析する</span><span class="sxs-lookup"><span data-stu-id="fa761-1300">How to: Parse File Paths in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/creating-deleting-and-moving-files-and-directories"><span data-ttu-id="fa761-1301">Visual Basic でのファイルおよびディレクトリの作成、削除、および移動</span><span class="sxs-lookup"><span data-stu-id="fa761-1301">Creating, Deleting, and Moving Files and Directories in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RenameFile">
      <MemberSignature Language="C#" Value="public void RenameFile (string file, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void RenameFile(string file, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RenameFile (file As String, newName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RenameFile(System::String ^ file, System::String ^ newName);" />
      <MemberSignature Language="F#" Value="member this.RenameFile : string * string -&gt; unit" Usage="fileSystemProxy.RenameFile (file, newName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fa761-1302">名前を変更するファイル。</span><span class="sxs-lookup"><span data-stu-id="fa761-1302">File to be renamed.</span></span></param>
        <param name="newName"><span data-ttu-id="fa761-1303">新しいファイル名。</span><span class="sxs-lookup"><span data-stu-id="fa761-1303">New name of file.</span></span></param>
        <summary><span data-ttu-id="fa761-1304">ファイル名を変更します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1304">Renames a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-1305">このメソッドは、ファイルを移動する目的には使用できません。ファイルを移動して名前を変更するには、<xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile%2A> メソッドを使用してください。</span><span class="sxs-lookup"><span data-stu-id="fa761-1305">This method cannot be used to move a file; use the <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile%2A> method to move and rename the file.</span></span>  
  
 <span data-ttu-id="fa761-1306">次の表に、`My.Computer.FileSystem.RenameFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1306">The following table lists an example of a task involving the `My.Computer.FileSystem.RenameFile` method.</span></span>  
  
|<span data-ttu-id="fa761-1307">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-1307">To</span></span>|<span data-ttu-id="fa761-1308">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-1308">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-1309">ファイル名を変更する</span><span class="sxs-lookup"><span data-stu-id="fa761-1309">Rename a file</span></span>|[<span data-ttu-id="fa761-1310">方法: ファイルの名前を変更する</span><span class="sxs-lookup"><span data-stu-id="fa761-1310">How to: Rename a File</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-rename-a-file)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-1311">この例では、`Test.txt` ファイルの名前を `SecondTest.txt`に変更します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1311">This example renames the file `Test.txt` to `SecondTest.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#1)]  
  
 <span data-ttu-id="fa761-1312">名前を変更するファイルのパスとファイル名に "`C:\Test.txt`" を変更します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1312">Change "`C:\Test.txt`" to the path and file name of the file that you want to rename.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-1313"><paramref name="newName" /> にパス情報が含まれているか、末尾にバックスラッシュ (\\) が付いています。</span><span class="sxs-lookup"><span data-stu-id="fa761-1313"><paramref name="newName" /> contains path information or ends with a backslash (\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-1314"><paramref name="file" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1314"><paramref name="file" /> is <see langword="Nothing" />.</span></span>  
  
<span data-ttu-id="fa761-1315">または</span><span class="sxs-lookup"><span data-stu-id="fa761-1315">-or-</span></span> 
 <span data-ttu-id="fa761-1316"><paramref name="newName" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1316"><paramref name="newName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-1317">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1317">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-1318"><paramref name="newName" /> で指定したのと同じ名前のファイルまたはディレクトリが既に存在します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1318">There is an existing file or directory with the name specified in <paramref name="newName" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-1319">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-1319">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-1320">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1320">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-1321">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1321">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fa761-1322">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1322">The user does not have required permission.</span></span></exception>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-1323">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1323">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/creating-deleting-and-moving-files-and-directories"><span data-ttu-id="fa761-1324">Visual Basic でのファイルおよびディレクトリの作成、削除、および移動</span><span class="sxs-lookup"><span data-stu-id="fa761-1324">Creating, Deleting, and Moving Files and Directories in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SpecialDirectories">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy SpecialDirectories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy SpecialDirectories" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpecialDirectories As SpecialDirectoriesProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::MyServices::SpecialDirectoriesProxy ^ SpecialDirectories { Microsoft::VisualBasic::MyServices::SpecialDirectoriesProxy ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SpecialDirectories : Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy" Usage="Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa761-1325">頻繁に参照されるディレクトリにアクセスするためのプロパティを備えたオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1325">Gets an object that provides properties for accessing commonly referenced directories.</span></span></summary>
        <value><span data-ttu-id="fa761-1326">このプロパティは、コンピューターの <see cref="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1326">This property returns the <see cref="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" /> object for the computer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fa761-1327">この例では、ユーザーのデスクトップディレクトリのファイルパスを返し、それを表示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1327">This example returns the file path for the user's Desktop directory and displays it.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#80](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#80)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-1328">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1328">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteAllBytes">
      <MemberSignature Language="C#" Value="public void WriteAllBytes (string file, byte[] data, bool append);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteAllBytes(string file, unsigned int8[] data, bool append) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAllBytes (file As String, data As Byte(), append As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAllBytes(System::String ^ file, cli::array &lt;System::Byte&gt; ^ data, bool append);" />
      <MemberSignature Language="F#" Value="member this.WriteAllBytes : string * byte[] * bool -&gt; unit" Usage="fileSystemProxy.WriteAllBytes (file, data, append)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fa761-1329">書き込み先のファイルのパスと名前。</span><span class="sxs-lookup"><span data-stu-id="fa761-1329">Path and name of the file to be written to.</span></span></param>
        <param name="data"><span data-ttu-id="fa761-1330">ファイルに書き込むデータ。</span><span class="sxs-lookup"><span data-stu-id="fa761-1330">Data to be written to the file.</span></span></param>
        <param name="append"><span data-ttu-id="fa761-1331">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fa761-1331"><see langword="True" /> to append to the file contents; <see langword="False" /> to overwrite the file contents.</span></span> <span data-ttu-id="fa761-1332">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1332">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="fa761-1333">バイナリ ファイルにデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1333">Writes data to a binary file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-1334">指定されたパス (ファイル名を除く) が有効でない場合は、<xref:System.IO.DirectoryNotFoundException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1334">If the specified path, excluding the file name, is not valid, a <xref:System.IO.DirectoryNotFoundException> exception will be thrown.</span></span> <span data-ttu-id="fa761-1335">パスが有効であってもファイルが存在しない場合は、ファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1335">If the path is valid but the file does not exist, the file is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa761-1336">`WriteAllBytes` メソッドは、ファイルを開き、書き込んでから閉じます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1336">The `WriteAllBytes` method opens a file, writes to it, and then closes it.</span></span> <span data-ttu-id="fa761-1337">`WriteAllBytes` メソッドを使用するコードは、<xref:System.IO.BinaryWriter> オブジェクトを使用するコードよりも簡単です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1337">Code that uses the `WriteAllBytes` method is simpler than code that uses a <xref:System.IO.BinaryWriter> object.</span></span> <span data-ttu-id="fa761-1338">ただし、ループを使用してデータをファイルに追加する場合は、ファイルを一度だけ開いて閉じなければならないため、<xref:System.IO.BinaryWriter> オブジェクトの方がパフォーマンスが向上する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fa761-1338">However, if you are adding data to a file using a loop, a <xref:System.IO.BinaryWriter> object can provide better performance because you only have to open and close the file once.</span></span>  
  
 <span data-ttu-id="fa761-1339">次の表に、`My.Computer.FileSystem.WriteAllBytes` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1339">The following table lists an example of a task involving the `My.Computer.FileSystem.WriteAllBytes` method.</span></span>  
  
|<span data-ttu-id="fa761-1340">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-1340">To</span></span>|<span data-ttu-id="fa761-1341">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-1341">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-1342">バイナリ ファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="fa761-1342">Write to a binary file</span></span>|[<span data-ttu-id="fa761-1343">方法: バイナリ ファイルに書き込む</span><span class="sxs-lookup"><span data-stu-id="fa761-1343">How to: Write to Binary Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-to-binary-files)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-1344">この例では、データ配列 `CustomerData` をファイル `CollectedData`に追加します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1344">This example appends the data array `CustomerData` to the file `CollectedData`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-1345">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1345">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-1346"><paramref name="file" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1346"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-1347">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1347">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-1348">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa761-1348">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-1349">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-1349">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-1350">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1350">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="fa761-1351">文字列をバッファーに書き込むための十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1351">There is not enough memory to write the string to buffer.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-1352">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1352">The user lacks necessary permissions to view the path.</span></span></exception>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-1353">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1353">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-to-binary-files"><span data-ttu-id="fa761-1354">方法: Visual Basic でバイナリファイルに書き込む</span><span class="sxs-lookup"><span data-stu-id="fa761-1354">How to: Write to a Binary File in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files"><span data-ttu-id="fa761-1355">Visual Basic でのファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="fa761-1355">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAllText">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa761-1356">ファイルにテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1356">Writes text to a file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAllText">
      <MemberSignature Language="C#" Value="public void WriteAllText (string file, string text, bool append);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteAllText(string file, string text, bool append) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAllText (file As String, text As String, append As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAllText(System::String ^ file, System::String ^ text, bool append);" />
      <MemberSignature Language="F#" Value="member this.WriteAllText : string * string * bool -&gt; unit" Usage="fileSystemProxy.WriteAllText (file, text, append)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fa761-1357">書き込み先のファイル。</span><span class="sxs-lookup"><span data-stu-id="fa761-1357">File to be written to.</span></span></param>
        <param name="text"><span data-ttu-id="fa761-1358">ファイルに書き込まれるテキスト。</span><span class="sxs-lookup"><span data-stu-id="fa761-1358">Text to be written to file.</span></span></param>
        <param name="append"><span data-ttu-id="fa761-1359">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fa761-1359"><see langword="True" /> to append to the contents of the file; <see langword="False" /> to overwrite the contents of the file.</span></span> <span data-ttu-id="fa761-1360">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1360">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="fa761-1361">ファイルにテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1361">Writes text to a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-1362">UTF-8 エンコーディングは、ファイルへの書き込みに使用されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1362">The UTF-8 encoding is used to write to the file.</span></span> <span data-ttu-id="fa761-1363">別のエンコードを指定するには、<xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText%2A> メソッドの別のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1363">To specify a different encoding, use a different overload of the <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText%2A> method.</span></span>  
  
 <span data-ttu-id="fa761-1364">指定したファイルが存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1364">If the specified file does not exist, it is created.</span></span>  
  
 <span data-ttu-id="fa761-1365">指定したエンコーディングがファイルの既存のエンコーディングと一致しない場合、指定されたコードは無視されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1365">If the specified encoding does not match the existing encoding of the file, the specified coding is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa761-1366">`WriteAllText` メソッドは、ファイルを開き、書き込んでから閉じます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1366">The `WriteAllText` method opens a file, writes to it, and then closes it.</span></span> <span data-ttu-id="fa761-1367">`WriteAllText` メソッドを使用するコードは、<xref:System.IO.StreamWriter> オブジェクトを使用するコードよりも簡単です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1367">Code that uses the `WriteAllText` method is simpler than code that uses a <xref:System.IO.StreamWriter> object.</span></span> <span data-ttu-id="fa761-1368">ただし、ループを使用してファイルに文字列を追加する場合は、ファイルを1回だけ開いて閉じる必要があるため、<xref:System.IO.StreamWriter> オブジェクトを使用するとパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1368">However, if you are adding strings to a file by using a loop, a <xref:System.IO.StreamWriter> object can provide better performance because you only have to open and close the file one time.</span></span> <span data-ttu-id="fa761-1369">詳細については、<xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter%2A> メソッドのトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa761-1369">For more information, see the <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter%2A> method.</span></span>  
  
 <span data-ttu-id="fa761-1370">次の表に、`My.Computer.FileSystem.WriteAllText` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1370">The following table lists examples of tasks involving the `My.Computer.FileSystem.WriteAllText` method.</span></span>  
  
|<span data-ttu-id="fa761-1371">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-1371">To</span></span>|<span data-ttu-id="fa761-1372">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-1372">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-1373">テキストのファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="fa761-1373">Write text to a file</span></span>|[<span data-ttu-id="fa761-1374">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="fa761-1374">How to: Write Text to Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files)|  
|<span data-ttu-id="fa761-1375">ファイルへのテキストの追加</span><span class="sxs-lookup"><span data-stu-id="fa761-1375">Append text to a file</span></span>|[<span data-ttu-id="fa761-1376">方法: テキスト ファイルに追記する</span><span class="sxs-lookup"><span data-stu-id="fa761-1376">How to: Append to Text Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-append-to-text-files)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-1377">この例では、`"This is new text to be added."` 行をファイル `Test.txt`に書き込み、ファイル内の既存のテキストを上書きします。</span><span class="sxs-lookup"><span data-stu-id="fa761-1377">This example writes the line `"This is new text to be added."` to the file `Test.txt`, overwriting any existing text in the file.</span></span>  
  
 [!code-vb[VbRefFile#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#21)]  
  
 <span data-ttu-id="fa761-1378">この例では、`Documents and Settings` フォルダー内のファイルの名前を `FileList.txt`に書き込み、それぞれの間にキャリッジリターンを挿入して読みやすくします。</span><span class="sxs-lookup"><span data-stu-id="fa761-1378">This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.</span></span>  
  
 [!code-vb[VbRefFile#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-1379">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1379">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-1380"><paramref name="file" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1380"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-1381">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1381">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-1382">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa761-1382">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-1383">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-1383">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-1384">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1384">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="fa761-1385">文字列をバッファーに書き込むための十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1385">There is not enough memory to write the string to buffer.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-1386">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1386">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-1387">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1387">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files"><span data-ttu-id="fa761-1388">Visual Basic でのファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="fa761-1388">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteAllText">
      <MemberSignature Language="C#" Value="public void WriteAllText (string file, string text, bool append, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteAllText(string file, string text, bool append, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAllText (file As String, text As String, append As Boolean, encoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAllText(System::String ^ file, System::String ^ text, bool append, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.WriteAllText : string * string * bool * System.Text.Encoding -&gt; unit" Usage="fileSystemProxy.WriteAllText (file, text, append, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fa761-1389">書き込み先のファイル。</span><span class="sxs-lookup"><span data-stu-id="fa761-1389">File to be written to.</span></span></param>
        <param name="text"><span data-ttu-id="fa761-1390">ファイルに書き込まれるテキスト。</span><span class="sxs-lookup"><span data-stu-id="fa761-1390">Text to be written to file.</span></span></param>
        <param name="append"><span data-ttu-id="fa761-1391">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fa761-1391"><see langword="True" /> to append to the contents of the file; <see langword="False" /> to overwrite the contents of the file.</span></span> <span data-ttu-id="fa761-1392">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1392">Default is <see langword="False" />.</span></span></param>
        <param name="encoding"><span data-ttu-id="fa761-1393">ファイルへの書き込み時に使用するエンコーディングを指定します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1393">What encoding to use when writing to file.</span></span> <span data-ttu-id="fa761-1394">既定値は UTF-8 です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1394">Default is UTF-8.</span></span></param>
        <summary><span data-ttu-id="fa761-1395">ファイルにテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1395">Writes text to a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa761-1396">指定したファイルが存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1396">If the specified file does not exist, it is created.</span></span>  
  
 <span data-ttu-id="fa761-1397">指定したエンコーディングがファイルの既存のエンコーディングと一致しない場合、指定されたコードは無視されます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1397">If the specified encoding does not match the existing encoding of the file, the specified coding is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa761-1398">`WriteAllText` メソッドは、ファイルを開き、書き込んでから閉じます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1398">The `WriteAllText` method opens a file, writes to it, and then closes it.</span></span> <span data-ttu-id="fa761-1399">`WriteAllText` メソッドを使用するコードは、<xref:System.IO.StreamWriter> オブジェクトを使用するコードよりも簡単です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1399">Code that uses the `WriteAllText` method is simpler than code that uses a <xref:System.IO.StreamWriter> object.</span></span> <span data-ttu-id="fa761-1400">ただし、ループを使用してファイルに文字列を追加する場合は、ファイルを1回だけ開いて閉じる必要があるため、<xref:System.IO.StreamWriter> オブジェクトを使用するとパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1400">However, if you are adding strings to a file by using a loop, a <xref:System.IO.StreamWriter> object can provide better performance because you only have to open and close the file one time.</span></span> <span data-ttu-id="fa761-1401">詳細については、<xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter%2A> メソッドのトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa761-1401">For more information, see the <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter%2A> method.</span></span>  
  
 <span data-ttu-id="fa761-1402">次の表に、`My.Computer.FileSystem.WriteAllText` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fa761-1402">The following table lists examples of tasks involving the `My.Computer.FileSystem.WriteAllText` method.</span></span>  
  
|<span data-ttu-id="fa761-1403">ターゲット</span><span class="sxs-lookup"><span data-stu-id="fa761-1403">To</span></span>|<span data-ttu-id="fa761-1404">参照先</span><span class="sxs-lookup"><span data-stu-id="fa761-1404">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="fa761-1405">テキストのファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="fa761-1405">Write text to a file</span></span>|[<span data-ttu-id="fa761-1406">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="fa761-1406">How to: Write Text to Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files)|  
|<span data-ttu-id="fa761-1407">ファイルへのテキストの追加</span><span class="sxs-lookup"><span data-stu-id="fa761-1407">Append text to a file</span></span>|[<span data-ttu-id="fa761-1408">方法: テキスト ファイルに追記する</span><span class="sxs-lookup"><span data-stu-id="fa761-1408">How to: Append to Text Files</span></span>](/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-append-to-text-files)|  
  
   
  
## Examples  
 <span data-ttu-id="fa761-1409">この例では、`"This is new text to be added."` 行をファイル `Test.txt`に書き込み、ファイル内の既存のテキストを上書きします。</span><span class="sxs-lookup"><span data-stu-id="fa761-1409">This example writes the line `"This is new text to be added."` to the file `Test.txt`, overwriting any existing text in the file.</span></span>  
  
 [!code-vb[VbRefFile#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#21)]  
  
 <span data-ttu-id="fa761-1410">この例では、`Documents and Settings` フォルダー内のファイルの名前を `FileList.txt`に書き込み、それぞれの間にキャリッジリターンを挿入して読みやすくします。</span><span class="sxs-lookup"><span data-stu-id="fa761-1410">This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.</span></span>  
  
 [!code-vb[VbRefFile#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa761-1411">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fa761-1411">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa761-1412"><paramref name="file" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1412"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fa761-1413">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1413">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fa761-1414">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa761-1414">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fa761-1415">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fa761-1415">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fa761-1416">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fa761-1416">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="fa761-1417">文字列をバッファーに書き込むための十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1417">There is not enough memory to write the string to buffer.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa761-1418">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fa761-1418">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="fa761-1419">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fa761-1419">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files"><span data-ttu-id="fa761-1420">Visual Basic でのファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="fa761-1420">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
