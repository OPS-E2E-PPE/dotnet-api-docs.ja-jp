<Type Name="FlowDecision" FullName="System.Activities.Statements.FlowDecision">
  <Metadata><Meta Name="ms.openlocfilehash" Value="608999940f641c27ca7b5207710abb5ff77df9fa" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83979868" /></Metadata><TypeSignature Language="C#" Value="public sealed class FlowDecision : System.Activities.Statements.FlowNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FlowDecision extends System.Activities.Statements.FlowNode" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.FlowDecision" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FlowDecision&#xA;Inherits FlowNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class FlowDecision sealed : System::Activities::Statements::FlowNode" />
  <TypeSignature Language="F#" Value="type FlowDecision = class&#xA;    inherit FlowNode" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Statements.FlowNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>2 つの結果を持つ条件ノードをモデル化する機能を提供する特殊な <see cref="T:System.Activities.Statements.FlowNode" />。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Activities.Statements.FlowDecision> は条件を使用し、条件が `true` または `false`場合に実行するアクションを定義します。  
  
   
  
## Examples  
 <xref:System.Activities.Statements.FlowDecision> ノードを作成するコード サンプルを次に示します。 この例は、 [TryCatch サンプルを使用した Flowchart アクティビティでのエラー処理](/dotnet/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch)からのものです。  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Activities.Statements.FlowDecision" /> クラスの新しいインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Activities.Statements.FlowDecision> ノードを作成するコード サンプルを次に示します。 この例は、 [TryCatch サンプルを使用した Flowchart アクティビティでのエラー処理](/dotnet/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch)からのものです。  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlowDecision ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.FlowDecision.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlowDecision();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Activities.Statements.FlowDecision" /> クラスの新しいインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Activities.Statements.FlowDecision> ノードを作成するコード サンプルを次に示します。 この例は、 [TryCatch サンプルを使用した Flowchart アクティビティでのエラー処理](/dotnet/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch)からのものです。  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlowDecision (System.Activities.Activity&lt;bool&gt; condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity`1&lt;bool&gt; condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.FlowDecision.#ctor(System.Activities.Activity{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (condition As Activity(Of Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlowDecision(System::Activities::Activity&lt;bool&gt; ^ condition);" />
      <MemberSignature Language="F#" Value="new System.Activities.Statements.FlowDecision : System.Activities.Activity&lt;bool&gt; -&gt; System.Activities.Statements.FlowDecision" Usage="new System.Activities.Statements.FlowDecision condition" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="condition" Type="System.Activities.Activity&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="condition"><see cref="T:System.Activities.Statements.FlowDecision" /> がテストする条件。</param>
        <summary>指定した条件を使用し、<see cref="T:System.Activities.Statements.FlowDecision" /> クラスの新しいインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Activities.Statements.FlowDecision> ノードを作成するコード サンプルを次に示します。 この例は、 [TryCatch サンプルを使用した Flowchart アクティビティでのエラー処理](/dotnet/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch)からのものです。  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlowDecision (System.Linq.Expressions.Expression&lt;Func&lt;System.Activities.ActivityContext,bool&gt;&gt; condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class System.Activities.ActivityContext, bool&gt;&gt; condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.FlowDecision.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (condition As Expression(Of Func(Of ActivityContext, Boolean)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlowDecision(System::Linq::Expressions::Expression&lt;Func&lt;System::Activities::ActivityContext ^, bool&gt; ^&gt; ^ condition);" />
      <MemberSignature Language="F#" Value="new System.Activities.Statements.FlowDecision : System.Linq.Expressions.Expression&lt;Func&lt;System.Activities.ActivityContext, bool&gt;&gt; -&gt; System.Activities.Statements.FlowDecision" Usage="new System.Activities.Statements.FlowDecision condition" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="condition" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.Activities.ActivityContext,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="condition"><see cref="T:System.Activities.Statements.FlowDecision" /> がテストする条件。</param>
        <summary>指定した条件を使用し、<see cref="T:System.Activities.Statements.FlowDecision" /> クラスの新しいインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Activities.Statements.FlowDecision> ノードを作成するコード サンプルを次に示します。 この例は、 [TryCatch サンプルを使用した Flowchart アクティビティでのエラー処理](/dotnet/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch)からのものです。  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public System.Activities.Activity&lt;bool&gt; Condition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity`1&lt;bool&gt; Condition" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.FlowDecision.Condition" />
      <MemberSignature Language="VB.NET" Value="Public Property Condition As Activity(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity&lt;bool&gt; ^ Condition { System::Activities::Activity&lt;bool&gt; ^ get(); void set(System::Activities::Activity&lt;bool&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Condition : System.Activities.Activity&lt;bool&gt; with get, set" Usage="System.Activities.Statements.FlowDecision.Condition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Activities.Statements.FlowDecision" /> がテストしている条件を指定します。</summary>
        <value>条件を表す値式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 条件が `true`と評価された場合、<xref:System.Activities.Statements.FlowDecision.True%2A> プロパティの <xref:System.Activities.Statements.FlowNode> が実行されます。 それ以外の場合は、<xref:System.Activities.Statements.FlowNode> プロパティの <xref:System.Activities.Statements.FlowDecision.False%2A> が実行されます。  
  
   
  
## Examples  
 <xref:System.Activities.Statements.FlowDecision> ノードの Condition プロパティを使用するコード サンプルを次に示します。 この例は、 [TryCatch サンプルを使用した Flowchart アクティビティでのエラー処理](/dotnet/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch)からのものです。  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.FlowDecision.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string with get, set" Usage="System.Activities.Statements.FlowDecision.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("Decision")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アクティビティ デザイナーに表示される、このフロー デシジョンの名前。</summary>
        <value>フロー デシジョンの名前。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="False">
      <MemberSignature Language="C#" Value="public System.Activities.Statements.FlowNode False { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Statements.FlowNode False" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.FlowDecision.False" />
      <MemberSignature Language="VB.NET" Value="Public Property False As FlowNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Statements::FlowNode ^ False { System::Activities::Statements::FlowNode ^ get(); void set(System::Activities::Statements::FlowNode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.False : System.Activities.Statements.FlowNode with get, set" Usage="System.Activities.Statements.FlowDecision.False" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("True")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Statements.FlowNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>条件が <see langword="false" /> と評価された場合に実行される <see cref="T:System.Activities.Statements.FlowNode" /> を取得または設定します。</summary>
        <value>条件の評価が <see langword="false" /> の場合に実行されるアクティビティ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Activities.Statements.FlowDecision> ノードの False プロパティを設定するコード サンプルを次に示します。 この例は、 [TryCatch サンプルを使用した Flowchart アクティビティでのエラー処理](/dotnet/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch)からのものです。  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="True">
      <MemberSignature Language="C#" Value="public System.Activities.Statements.FlowNode True { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Statements.FlowNode True" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.FlowDecision.True" />
      <MemberSignature Language="VB.NET" Value="Public Property True As FlowNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Statements::FlowNode ^ True { System::Activities::Statements::FlowNode ^ get(); void set(System::Activities::Statements::FlowNode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.True : System.Activities.Statements.FlowNode with get, set" Usage="System.Activities.Statements.FlowDecision.True" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Condition")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Statements.FlowNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>条件が <see langword="true" /> と評価された場合に実行される <see cref="T:System.Activities.Statements.FlowNode" /> を取得または設定します。</summary>
        <value>条件の評価が <see langword="true" /> の場合に実行するアクティビティ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Activities.Statements.FlowDecision> ノードの True プロパティを設定するコード サンプルを次に示します。 この例は、 [TryCatch サンプルを使用した Flowchart アクティビティでのエラー処理](/dotnet/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch)からのものです。  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
