<Type Name="SessionStateStoreProviderBase" FullName="System.Web.SessionState.SessionStateStoreProviderBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e174c343a33816e57b66f444850181e268518098" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73395146" /></Metadata><TypeSignature Language="C#" Value="public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SessionStateStoreProviderBase extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionStateStoreProviderBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SessionStateStoreProviderBase&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionStateStoreProviderBase abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type SessionStateStoreProviderBase = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データ ストアのセッション状態プロバイダーに必要なメンバーを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET session state は、セッション状態ストアプロバイダーを使用して、データストアとの間でセッションデータの読み取りと書き込みを行います。 セッション状態ストアプロバイダーは、<xref:System.Web.SessionState.SessionStateStoreProviderBase> 抽象クラスを継承し、そのメンバーをデータストア固有の実装でオーバーライドするクラスです。 セッション状態ストアプロバイダーは、ASP.NET ページの処理中に <xref:System.Web.SessionState.SessionStateModule> クラスによって呼び出され、セッション変数の格納と取得、およびタイムアウト値などの関連セッション情報の格納を行うためにデータストアと通信します。  
  
 各 ASP.NET アプリケーション内のセッションデータは、<xref:System.Web.SessionState.HttpSessionState.SessionID%2A> プロパティごとに別々に格納されます。 ASP.NET アプリケーションは、セッションデータを共有しません。  
  
 このトピックの例に示すように、`sessionState` 構成要素の `mode` 属性を <xref:System.Web.SessionState.SessionStateMode.Custom> に設定し、`customProvider` 属性をカスタムプロバイダーの名前に設定することにより、ASP.NET アプリケーションのカスタム <xref:System.Web.SessionState.SessionStateStoreProviderBase> 実装を指定できます。.  
  
## <a name="locking-session-store-data"></a>セッションストアデータのロック  
 ASP.NET アプリケーションは同時実行要求への応答をサポートするためにマルチスレッド化されるため、同時実行要求が同じセッション情報にアクセスしようとする可能性があります。 1つのフレームセット内の複数のフレームが同じアプリケーションにアクセスするシナリオを考えてみましょう。 フレームセット内の各フレームに対する個別の要求は、Web サーバー上で別々のスレッドで同時に実行できます。 各フレームソースの ASP.NET ページがセッション状態変数にアクセスする場合、セッションストアに同時にアクセスする複数のスレッドを持つことができます。  
  
 セッションストアでのデータの競合を回避し、予期しないセッション状態の動作を回避するために、<xref:System.Web.SessionState.SessionStateModule> および <xref:System.Web.SessionState.SessionStateStoreProviderBase> クラスには、ASP の実行中に特定のセッションのセッションストア項目を排他的にロックするロック機能が含まれています。NET ページ。 <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> 属性が `ReadOnly`としてマークされている場合でも、同じアプリケーション内の他の ASP.NET ページはセッションストアに書き込むことができるため、ストアからの読み取り専用セッションデータの要求は、ロックされたデータの解放を待機している可能性があります。  
  
 ロックは、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> メソッドの呼び出しで、要求の開始時にセッションストアデータに対して設定されます。 要求が完了すると、<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> メソッドの呼び出し中にロックが解放されます。  
  
 <xref:System.Web.SessionState.SessionStateModule> オブジェクトが、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> または <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> メソッドの呼び出し中にロックされたセッションデータを検出した場合、ロックが解除されるか、セッションデータが存在していた時間が経過するまで、セッションデータを0.5 秒間隔で再要求します。locked は、<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> プロパティの値を超えています。 実行タイムアウトを超えた場合、<xref:System.Web.SessionState.SessionStateModule> オブジェクトは <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> メソッドを呼び出してセッションストアデータを解放し、その時点でセッションストアデータを要求します。  
  
 ロックされたセッションストアデータは、現在の応答の <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> メソッドの呼び出しの前に別のスレッドで <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> メソッドを呼び出すことによって解放されている可能性があるため、既に存在しているセッション状態ストアデータを設定して解放しようとしました。解放され、別のセッションによって変更されました。 このような状況を回避するために、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> メソッドと <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> メソッドはロック識別子を返します。 ロックされたセッションストアデータを変更するには、このロック識別子を各要求に含める必要があります。 セッションストアのデータは、データストア内のロック識別子が <xref:System.Web.SessionState.SessionStateModule>によって指定されたロック識別子と一致する場合にのみ変更されます。  
  
## <a name="deleting-expired-session-store-data"></a>期限切れのセッションストアデータを削除しています  
 特定のセッションに対して <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> メソッドが呼び出されると、そのセッションのデータは、<xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> メソッドを使用してデータストアから削除されます。そうしないと、セッションの今後の要求に対して、データはセッションデータストアに残ります。 期限切れのセッションデータを削除するには、<xref:System.Web.SessionState.SessionStateStoreProviderBase> の実装が必要です。  
  
   
  
## Examples  
 セッション状態ストアプロバイダーの実装の例については、「[セッション状態ストアプロバイダーの実装](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)」を参照してください。  
  
 次のコード例は、カスタムセッション状態ストアプロバイダーを使用するように構成されている ASP.NET アプリケーションの Web.config ファイルを示しています。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="OdbcSessionServices" connectionString="DSN=SessionState;" />  
  </connectionStrings>  
  
  <system.web>  
    <sessionState   
      mode="Custom"  
      customProvider="OdbcSessionProvider">  
      <providers>  
        <add name="OdbcSessionProvider"  
             type="Samples.AspNet.Session.OdbcSessionStateStore"  
             connectionStringName="OdbcSessionServices" />  
      </providers>  
    </sessionState>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SessionStateStoreProviderBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SessionStateStoreProviderBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase> 抽象クラスを継承するクラスのコンストラクターを実装する必要はありません。 <xref:System.Web.SessionState.SessionStateStoreProviderBase> 実装の初期化値は、<xref:System.Configuration.Provider.ProviderBase.Initialize%2A> メソッドの実装に渡されます。  
  
   
  
## Examples  
 セッション状態ストアプロバイダーの実装の例については、「[セッション状態ストアプロバイダーの実装](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)」を参照してください。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="CreateNewStoreData">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData CreateNewStoreData(class System.Web.HttpContext context, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateNewStoreData (context As HttpContext, timeout As Integer) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ CreateNewStoreData(System::Web::HttpContext ^ context, int timeout);" />
      <MemberSignature Language="F#" Value="abstract member CreateNewStoreData : System.Web.HttpContext * int -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.CreateNewStoreData (context, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</param>
        <param name="timeout">新しい <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> のセッション状態の <see cref="T:System.Web.SessionState.SessionStateStoreData" /> 値。</param>
        <summary>現在の要求で使用する <see cref="T:System.Web.SessionState.SessionStateStoreData" /> オブジェクトを新規作成します。</summary>
        <returns>現在の要求に関する新しい <see cref="T:System.Web.SessionState.SessionStateStoreData" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> オブジェクトは、<xref:System.Web.HttpApplication.AcquireRequestState> イベント中に、ASP.NET ページの要求の先頭で <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> メソッドを呼び出します。 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> メソッドは、次の場合に呼び出されます。  
  
-   受信要求にセッション ID がありません。  
  
-   受信要求にセッション ID がありますが、セッションがデータストアに見つかりません。  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> メソッドは、空の <xref:System.Web.SessionState.ISessionStateItemCollection> オブジェクト、<xref:System.Web.HttpStaticObjectsCollection> コレクション、および指定された `timeout` 値を使用して、新しい <xref:System.Web.SessionState.SessionStateStoreData> オブジェクトを作成します。 ASP.NET アプリケーションの <xref:System.Web.HttpStaticObjectsCollection> コレクションは、<xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> メソッドを使用して取得できます。  
  
   
  
## Examples  
 セッション状態ストアプロバイダーの実装の例については、「[セッション状態ストアプロバイダーの実装](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)」を参照してください。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUninitializedItem">
      <MemberSignature Language="C#" Value="public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateUninitializedItem(class System.Web.HttpContext context, string id, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateUninitializedItem (context As HttpContext, id As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateUninitializedItem(System::Web::HttpContext ^ context, System::String ^ id, int timeout);" />
      <MemberSignature Language="F#" Value="abstract member CreateUninitializedItem : System.Web.HttpContext * string * int -&gt; unit" Usage="sessionStateStoreProviderBase.CreateUninitializedItem (context, id, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">現在の要求に関する <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />。</param>
        <param name="timeout">現在の要求に関するセッション <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" />。</param>
        <summary>新しいセッション状態項目をデータ ストアに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> メソッドは、`cookieless` 属性と `regenerateExpiredSessionId` 属性が両方とも `true`場合にセッションで使用されます。 `regenerateExpiredSessionId attribute` を `true` に設定すると、有効期限が切れた <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 値が検出されたときに、<xref:System.Web.SessionState.SessionStateModule> オブジェクトによって新しい <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 値が生成されます。  
  
 新しい <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 値を生成するプロセスでは、新しく生成された <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 値を含む URL にブラウザーをリダイレクトする必要があります。 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> メソッドは、有効期限が切れた <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 値を含む最初の要求中に呼び出されます。 <xref:System.Web.SessionState.SessionStateModule> オブジェクトは、期限切れの値を置き換える新しい <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 値を取得した後、<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> メソッドを呼び出して、初期化されていないエントリをセッション状態データストアに追加します。 ブラウザーは、新しく生成された <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 値を含む URL にリダイレクトされます。 セッションデータストアに初期化されていないエントリが存在することにより、新しく生成された <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 値を含むリダイレクトされた要求は、期限切れのセッションの要求に対して誤って解釈されず、代わりに新しいセッションとして扱われます。  
  
 セッションデータストア内の初期化されていないエントリは、新しく生成された <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 値に関連付けられ、有効期限の日付と時刻、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> の `actionFlags` パラメーターに対応する値を含む既定値のみが含まれ <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>メソッド. セッション状態ストアの初期化されていないエントリには、<xref:System.Web.SessionState.SessionStateActions.InitializeItem> 列挙値と同じ `actionFlags` 値を含める必要があります。 この値は、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> メソッドと <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> メソッドによって <xref:System.Web.SessionState.SessionStateModule> オブジェクトに渡され、現在のセッションが新しいが初期化されていないセッションであることを <xref:System.Web.SessionState.SessionStateModule> オブジェクトに通知します。 <xref:System.Web.SessionState.SessionStateModule> オブジェクトは、新しいセッションを初期化し、`Session_OnStart` イベントを発生させます。  
  
 クッキーレスセッションの詳細については、<xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> プロパティを参照してください。  
  
   
  
## Examples  
 セッション状態ストアプロバイダーの実装の例については、「[セッション状態ストアプロバイダーの実装](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)」を参照してください。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public abstract void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit" Usage="sessionStateStoreProviderBase.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> の実装によって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.Dispose%2A?displayProperty=nameWithType> メソッドは、アプリケーションドメインの終了時に <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=nameWithType> メソッドが実行されるときに呼び出されます。 <xref:System.Web.SessionState.SessionStateStoreProviderBase> クラスを継承するクラスは、このメソッドを使用して、使用されなくなったすべてのリソースを解放できます。  
  
   
  
## Examples  
 セッション状態ストアプロバイダーの実装の例については、「[セッション状態ストアプロバイダーの実装](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)」を参照してください。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public abstract void EndRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member EndRequest : System.Web.HttpContext -&gt; unit" Usage="sessionStateStoreProviderBase.EndRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</param>
        <summary>要求の最後に <see cref="T:System.Web.SessionState.SessionStateModule" /> オブジェクトによって呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> オブジェクトは、<xref:System.Web.HttpApplication.EndRequest> イベント中に、ASP.NET ページの要求の最後に <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> メソッドを呼び出します。 <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> メソッドを使用して、セッション状態ストアプロバイダーが必要とする要求ごとのクリーンアップを実行できます。  
  
   
  
## Examples  
 セッション状態ストアプロバイダーの実装の例については、「[セッション状態ストアプロバイダーの実装](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)」を参照してください。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItem(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItem (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItem(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : System.Web.HttpContext * string * bool * TimeSpan * obj * SessionStateActions -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.GetItem (context, id, locked, lockAge, lockId, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="lockId" Type="System.Object" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">現在の要求に関する <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />。</param>
        <param name="locked">このメソッドが返されるときに、要求したセッション項目がセッション データ ストアでロックされているときはブール値 <see langword="true" />、それ以外の場合は <see langword="false" /> を含みます。</param>
        <param name="lockAge">このメソッドが返されるときに、セッション データ ストアの項目がロックされた時間に設定された <see cref="T:System.TimeSpan" /> オブジェクトを含みます。</param>
        <param name="lockId">このメソッドが返されるときに、現在の要求のロック識別子に設定されたオブジェクトを含みます。 ロック識別子の詳細については、<see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> クラスの概要の「セッション ストア データのロック」を参照してください。</param>
        <param name="actions">このメソッドが返されるときに、現在のセッションが初期化されていない cookieless セッションかどうかを示す <see cref="T:System.Web.SessionState.SessionStateActions" /> 値の 1 つを含みます。</param>
        <summary>セッション データ ストアから読み取り専用のセッション状態データを返します。</summary>
        <returns>セッション値およびセッション データ ストアからの情報を含む <see cref="T:System.Web.SessionState.SessionStateStoreData" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> オブジェクトは、<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> 属性が `ReadOnly`に設定されている場合、<xref:System.Web.HttpApplication.AcquireRequestState> イベント中に、要求の先頭で <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> メソッドを呼び出します。 <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> 属性が `true`に設定されている場合は、代わりに、<xref:System.Web.SessionState.SessionStateModule> オブジェクトが <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> メソッドを呼び出します。  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> メソッドは、データストアからセッション情報が設定された <xref:System.Web.SessionState.SessionStateStoreData> オブジェクトを返し、セッションデータの有効期限を更新します。 セッション項目データがデータストアに見つからない場合、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> メソッドは `locked` `out` パラメーターを `false` に設定し、`null`を返します。 これにより、<xref:System.Web.SessionState.SessionStateModule> オブジェクトは <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> メソッドを呼び出して、データストアに新しいセッション項目を作成します。  
  
 セッション項目のデータがデータストアで見つかったが、データがロックされている場合は、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> メソッドによって `locked` `out` パラメーターが `true`に設定され、`lockAge` の `out` パラメーターが現在の日付と時刻から項目の日付と時刻を引いた値に設定されます。がロックされていた (データストアから取得されます)。 `lockId` `out` パラメーターをデータストアから取得したロック識別子に設定し、`null`を返します。 これにより、<xref:System.Web.SessionState.SessionStateModule> オブジェクトは、セッション項目の情報を取得しようとして、0.5 秒間隔が経過した後に <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> メソッドを再度呼び出します。  
  
 `lockAge` `out` パラメーターの値が <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> 値を超えるように設定されている場合、<xref:System.Web.SessionState.SessionStateModule> オブジェクトは、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> メソッドを呼び出して、セッション項目データのロックを解除した後、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> メソッドを再度呼び出します。  
  
 `actionFlags` パラメーターは、`cookieless` 属性と `regenerateExpiredSessionId` 属性の両方が `true`に設定されている場合に使用されます。 `actionFlags` 値が <xref:System.Web.SessionState.SessionStateActions.InitializeItem> に設定されている場合は、セッションデータストアのエントリが初期化を必要とする新しいセッションであることを示します。 セッションデータストア内の初期化されていないエントリは、<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> メソッドの呼び出しによって作成されます。 セッションデータストアの項目が初期化されていない項目ではない場合、`actionFlags` パラメーターは0に設定されます。  
  
 Cookie なしのセッションをサポートするカスタムセッション状態ストアの実装では、`actionFlags` `out` パラメーターを、現在の項目のセッションデータストアから返される値に設定する必要があります。 要求されたセッションストア項目の `actionFlags` パラメーター値が <xref:System.Web.SessionState.SessionStateActions.InitializeItem> 列挙値と等しい場合、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> メソッドは `actionFlags` `out` パラメーターを設定した後で、データストアの値を0に設定する必要があります。  
  
   
  
## Examples  
 セッション状態ストアプロバイダーの実装の例については、「[セッション状態ストアプロバイダーの実装](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)」を参照してください。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="GetItemExclusive">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItemExclusive(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItemExclusive (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberSignature Language="F#" Value="abstract member GetItemExclusive : System.Web.HttpContext * string * bool * TimeSpan * obj * SessionStateActions -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.GetItemExclusive (context, id, locked, lockAge, lockId, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="lockId" Type="System.Object" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">現在の要求に関する <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />。</param>
        <param name="locked">このメソッドが返されるときに、ロックの取得に成功した場合はブール値 <see langword="true" />、それ以外の場合は <see langword="false" /> を含みます。</param>
        <param name="lockAge">このメソッドが返されるときに、セッション データ ストアの項目がロックされた時間に設定された <see cref="T:System.TimeSpan" /> オブジェクトを含みます。</param>
        <param name="lockId">このメソッドが返されるときに、現在の要求のロック識別子に設定されたオブジェクトを含みます。 ロック識別子の詳細については、<see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> クラスの概要の「セッション ストア データのロック」を参照してください。</param>
        <param name="actions">このメソッドが返されるときに、現在のセッションが初期化されていない cookieless セッションかどうかを示す <see cref="T:System.Web.SessionState.SessionStateActions" /> 値の 1 つを含みます。</param>
        <summary>セッション データ ストアから読み取り専用のセッション状態データを返します。</summary>
        <returns>セッション値およびセッション データ ストアからの情報を含む <see cref="T:System.Web.SessionState.SessionStateStoreData" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> オブジェクトは、<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> 属性が `true`(既定) に設定されている場合、<xref:System.Web.HttpApplication.AcquireRequestState> イベント中に、要求の先頭で <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> メソッドを呼び出します。 <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> 属性が `ReadOnly`に設定されている場合は、代わりに、<xref:System.Web.SessionState.SessionStateModule> オブジェクトが <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> メソッドを呼び出します。  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> メソッドは、データストアからのセッション情報を格納した <xref:System.Web.SessionState.SessionStateStoreData> オブジェクトを返し、格納されているデータの有効期限を更新して、要求の期間中、データストアのセッション項目データをロックします。 セッション項目データがデータストアに見つからない場合、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> メソッドは `locked` `out` パラメーターを `false` に設定し、`null`を返します。 これにより、<xref:System.Web.SessionState.SessionStateModule> オブジェクトは <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> メソッドを呼び出して、データストアに新しいセッション項目を作成します。 セッション項目のデータがデータストアで見つかったが、データがロックされている場合は、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> メソッドによって `locked` `out` パラメーターが `true`に設定され、`lockAge` の `out` パラメーターが現在の日付と時刻から項目の日付と時刻を引いた値に設定されます。がロックされていた (データストアから取得されます)。 `lockId` `out` パラメーターをデータストアから取得したロック識別子に設定し、`null`を返します。 これにより、<xref:System.Web.SessionState.SessionStateModule> オブジェクトは、セッション項目情報を取得してデータのロックを取得しようとするまで、0.5 秒間隔後に <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> メソッドを再度呼び出します。 `lockAge` `out` パラメーターがに設定されている値が <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> 値を超える場合、<xref:System.Web.SessionState.SessionStateModule> は <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> メソッドを呼び出して、セッション項目データのロックを解除してから、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> メソッドを再度呼び出します。  
  
 `actionFlags` パラメーターは、`cookieless` 属性と `regenerateExpiredSessionId` 属性の両方が `true`に設定されている場合に使用されます。 `actionFlags` 値が <xref:System.Web.SessionState.SessionStateActions.InitializeItem> に設定されている場合は、セッションデータストアのエントリが初期化を必要とする新しいセッションであることを示します。 セッションデータストア内の初期化されていないエントリは、<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> メソッドの呼び出しによって作成されます。 セッションデータストアの項目が初期化されていない項目ではない場合、`actionFlags` パラメーターは0に設定されます。  
  
 Cookie なしのセッションをサポートするカスタムセッション状態ストアの実装では、`actionFlags` `out` パラメーターを、現在の項目のセッションデータストアから返される値に設定する必要があります。 要求されたセッションストア項目の `actionFlags` パラメーター値が <xref:System.Web.SessionState.SessionStateActions.InitializeItem> 列挙値と等しい場合、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> メソッドは `actionFlags` `out` パラメーターを設定した後で、データストアの値を0に設定する必要があります。  
  
   
  
## Examples  
 セッション状態ストアプロバイダーの実装の例については、「[セッション状態ストアプロバイダーの実装](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)」を参照してください。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public abstract void InitializeRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub InitializeRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void InitializeRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRequest : System.Web.HttpContext -&gt; unit" Usage="sessionStateStoreProviderBase.InitializeRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</param>
        <summary>要求ごとの初期化のために、<see cref="T:System.Web.SessionState.SessionStateModule" /> オブジェクトによって呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> オブジェクトは、他の <xref:System.Web.SessionState.SessionStateStoreProviderBase> メソッドを呼び出す前に、<xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> メソッドを呼び出します。 <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> メソッドを使用して、セッション状態ストアプロバイダーが必要とする要求ごとの初期化を実行できます。  
  
   
  
## Examples  
 セッション状態ストアプロバイダーの実装の例については、「[セッション状態ストアプロバイダーの実装](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)」を参照してください。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="ReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseItemExclusive(class System.Web.HttpContext context, string id, object lockId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReleaseItemExclusive (context As HttpContext, id As String, lockId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseItemExclusive : System.Web.HttpContext * string * obj -&gt; unit" Usage="sessionStateStoreProviderBase.ReleaseItemExclusive (context, id, lockId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">現在の要求に関するセッション識別子。</param>
        <param name="lockId">現在の要求に関するロック識別子。</param>
        <summary>セッション データ ストアの項目のロックを解除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> オブジェクトは、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> メソッドを呼び出して有効期限を更新し、セッションデータストアの項目のロックを解放します。 これは、セッション値が変更されていない場合に、<xref:System.Web.HttpApplication.ReleaseRequestState> イベント中に要求の最後に呼び出されます。 セッションの値が変更されている場合は、代わりに <xref:System.Web.SessionState.SessionStateModule> オブジェクトが <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> メソッドを呼び出します。  
  
 <xref:System.Web.SessionState.SessionStateModule> オブジェクトは、セッションデータストアの項目のロックが <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> 値を超えたときに <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> メソッドも呼び出します。 ロックとロック識別子の詳細については、<xref:System.Web.SessionState.SessionStateStoreProviderBase> クラスの概要」の「セッションストアデータのロック」を参照してください。  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> メソッドは、指定されたセッション `id` と `lockId` 値に一致する現在のアプリケーションのセッションデータストアの項目からのみロックを削除します。 `lockId` がデータストア内のものと一致しない場合、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> メソッドは何も行いません。  
  
   
  
## Examples  
 セッション状態ストアプロバイダーの実装の例については、「[セッション状態ストアプロバイダーの実装](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)」を参照してください。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveItem(class System.Web.HttpContext context, string id, object lockId, class System.Web.SessionState.SessionStateStoreData item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveItem (context As HttpContext, id As String, lockId As Object, item As SessionStateStoreData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveItem(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId, System::Web::SessionState::SessionStateStoreData ^ item);" />
      <MemberSignature Language="F#" Value="abstract member RemoveItem : System.Web.HttpContext * string * obj * System.Web.SessionState.SessionStateStoreData -&gt; unit" Usage="sessionStateStoreProviderBase.RemoveItem (context, id, lockId, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
      </Parameters>
      <Docs>
        <param name="context">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">現在の要求に関するセッション識別子。</param>
        <param name="lockId">現在の要求に関するロック識別子。</param>
        <param name="item">データ ストアから削除する項目を表す <see cref="T:System.Web.SessionState.SessionStateStoreData" />。</param>
        <summary>セッション データ ストアから項目データを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> オブジェクトは、<xref:System.Web.SessionState.HttpSessionState.Abandon%2A> メソッドが呼び出された場合にセッションデータストアからセッション項目のデータを削除するために、<xref:System.Web.HttpApplication.ReleaseRequestState> イベント中に要求の最後に <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> メソッドを呼び出します。 指定されたセッション `id` と `lockId` 値に一致する現在のアプリケーションのセッションデータのみが削除されます。 ロックとロック識別子の詳細については、<xref:System.Web.SessionState.SessionStateStoreProviderBase> クラスの概要」の「セッションストアデータのロック」を参照してください。  
  
   
  
## Examples  
 セッション状態ストアプロバイダーの実装の例については、「[セッション状態ストアプロバイダーの実装](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)」を参照してください。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="ResetItemTimeout">
      <MemberSignature Language="C#" Value="public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetItemTimeout(class System.Web.HttpContext context, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResetItemTimeout (context As HttpContext, id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResetItemTimeout(System::Web::HttpContext ^ context, System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member ResetItemTimeout : System.Web.HttpContext * string -&gt; unit" Usage="sessionStateStoreProviderBase.ResetItemTimeout (context, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">現在の要求に関するセッション識別子。</param>
        <summary>セッション データ ストアの項目の有効期限の日時を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> オブジェクトは、次のいずれかの場合に、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> メソッドを呼び出して、セッションの有効期限の日時を現在の日付と時刻に加え、セッション <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> の値に更新します。  
  
-   <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> 属性は `true`です。  
  
-   エラーが発生したため、要求で <xref:System.Web.HttpApplication.AcquireRequestState> イベントと <xref:System.Web.HttpApplication.ReleaseRequestState> イベントが発生しませんでした。  
  
 ASP.NET ページが要求され、<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> 属性が `false`に設定されている場合でも、セッションデータストア内のデータの有効期限の日付と時刻を更新するために <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> メソッドが呼び出されます。  
  
   
  
## Examples  
 セッション状態ストアプロバイダーの実装の例については、「[セッション状態ストアプロバイダーの実装](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)」を参照してください。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="SetAndReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAndReleaseItemExclusive(class System.Web.HttpContext context, string id, class System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetAndReleaseItemExclusive (context As HttpContext, id As String, item As SessionStateStoreData, lockId As Object, newItem As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetAndReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Web::SessionState::SessionStateStoreData ^ item, System::Object ^ lockId, bool newItem);" />
      <MemberSignature Language="F#" Value="abstract member SetAndReleaseItemExclusive : System.Web.HttpContext * string * System.Web.SessionState.SessionStateStoreData * obj * bool -&gt; unit" Usage="sessionStateStoreProviderBase.SetAndReleaseItemExclusive (context, id, item, lockId, newItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="newItem" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">現在の要求に関するセッション識別子。</param>
        <param name="item">保存する現在のセッション値を含む <see cref="T:System.Web.SessionState.SessionStateStoreData" /> オブジェクト。</param>
        <param name="lockId">現在の要求に関するロック識別子。</param>
        <param name="newItem">セッション項目を新しい項目に指定する場合は <see langword="true" />。セッション項目を既存の項目に指定する場合は <see langword="false" />。</param>
        <summary>現在の要求の値を使用してセッション状態データ ストアのセッション項目の情報を更新し、データのロックを解除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> オブジェクトは、<xref:System.Web.HttpApplication.ReleaseRequestState> イベント中に、要求の最後で <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> メソッドを呼び出して、現在のセッション項目情報をデータストアに挿入するか、データストア内の既存のセッション項目情報を現在の値で更新して、を更新します。項目の有効期限と、データのロックを解除します。 指定されたセッション `id` と `lockId` 値に一致する現在のアプリケーションのセッションデータのみが更新されます。 ロックの詳細については、<xref:System.Web.SessionState.SessionStateStoreProviderBase> クラスの概要」の「セッションストアデータのロック」を参照してください。  
  
 現在の要求のセッション値が変更されていない場合、<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> メソッドは呼び出されません。 代わりに、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> メソッドが呼び出されます。  
  
 <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> メソッドが呼び出された場合、<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> メソッドは呼び出されません。 代わりに、<xref:System.Web.SessionState.SessionStateModule> オブジェクトは <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> メソッドを呼び出して、データソースからセッション項目データを削除します。  
  
   
  
## Examples  
 セッション状態ストアプロバイダーの実装の例については、「[セッション状態ストアプロバイダーの実装](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)」を参照してください。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="SetItemExpireCallback">
      <MemberSignature Language="C#" Value="public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetItemExpireCallback(class System.Web.SessionState.SessionStateItemExpireCallback expireCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SetItemExpireCallback (expireCallback As SessionStateItemExpireCallback) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool SetItemExpireCallback(System::Web::SessionState::SessionStateItemExpireCallback ^ expireCallback);" />
      <MemberSignature Language="F#" Value="abstract member SetItemExpireCallback : System.Web.SessionState.SessionStateItemExpireCallback -&gt; bool" Usage="sessionStateStoreProviderBase.SetItemExpireCallback expireCallback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expireCallback" Type="System.Web.SessionState.SessionStateItemExpireCallback" />
      </Parameters>
      <Docs>
        <param name="expireCallback">Global.asax ファイルに定義されている <see langword="Session_OnEnd" /> イベントの <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> デリゲート。</param>
        <summary>Global.asax ファイルに定義されている <see langword="Session_OnEnd" /> イベントの <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> デリゲートへの参照を設定します。</summary>
        <returns>セッション状態ストア プロバイダーが <see langword="true" /> イベントの呼び出しをサポートする場合は <see langword="Session_OnEnd" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> オブジェクトは、モジュールが初期化されるときに <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> メソッドを呼び出し、`Session_OnEnd` イベントの呼び出しが <xref:System.Web.SessionState.SessionStateStoreProviderBase> 実装でサポートされているかどうかを判断し、<xref:System.Web.SessionState.SessionStateItemExpireCallback> デリゲートを `Session_OnEnd` イベントに関連付けます。  
  
 カスタムセッション状態ストアプロバイダーの実装者は、<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> メソッドを使用して、`Session_OnEnd` イベントの呼び出しがサポートされているかどうかを <xref:System.Web.SessionState.SessionStateModule> オブジェクトに通知し、`expireCallback` パラメーターによって提供される <xref:System.Web.SessionState.SessionStateItemExpireCallback> デリゲートへのローカル参照を設定する必要があります。 カスタム実装では、ローカル <xref:System.Web.SessionState.SessionStateItemExpireCallback> デリゲートがいつ呼び出されるかを決定する必要があります。 たとえば、<xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> メソッドの呼び出し中にデリゲートを呼び出すことができます。このメソッドは、セッションが破棄されたときに呼び出されます。  
  
   
  
## Examples  
 セッション状態ストアプロバイダーの実装の例については、「[セッション状態ストアプロバイダーの実装](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)」を参照してください。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
  </Members>
</Type>
