<Type Name="IStateRuntime" FullName="System.Web.SessionState.IStateRuntime">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1169ef0b1b2e341080f7f6ed4ca9c093b7da0527" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77099869" /></Metadata><TypeSignature Language="C#" Value="public interface IStateRuntime" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStateRuntime" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.IStateRuntime" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStateRuntime" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStateRuntime" />
  <TypeSignature Language="F#" Value="type IStateRuntime = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("7297744b-e188-40bf-b7e9-56698d25cf44")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ASP.NET 状態サービスがセッション データを管理するために使用するインターフェイスを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 ASP.NET は、ASP.NET state サービスと呼ばれる Windows サービスを使用して、セッション状態をアウトプロセスで管理できます。 <xref:System.Web.SessionState.StateRuntime> クラスは、セッションデータを管理するために、このサービスのアンマネージコードによって使用されます。 このクラスは、ASP.NET state サービスの .NET Framework インフラストラクチャの実装をサポートします。独自に作成したコードから直接使用するためのものではありません。

 ASP.NET state service の使用は、ASP.NET で sessionstate を管理するための既定の方法ではありません。ASP.NET では、インプロセスセッション状態管理が既定でサポートされています。 また、Microsoft SQL Server データベースでセッション状態を管理し、カスタムのセッション状態管理ソリューションを有効にする、2番目のアウトプロセスオプションもサポートしています。 セッション状態のストレージオプションの詳細については、「[セッション状態モード](https://docs.microsoft.com/previous-versions/aspnet/ms178586(v=vs.100))」を参照してください。

 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET セッション状態の概要</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="ProcessRequest">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ASP.NET 状態サーバーがセッション データを処理するために使用します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public void ProcessRequest (IntPtr tracker, int verb, string uri, int exclusive, int timeout, int lockCookieExists, int lockCookie, int contentLength, IntPtr content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest([in]native int tracker, [in]int32 verb, [in]string uri, [in]int32 exclusive, [in]int32 timeout, [in]int32 lockCookieExists, [in]int32 lockCookie, [in]int32 contentLength, [in]native int content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessRequest (tracker As IntPtr, verb As Integer, uri As String, exclusive As Integer, timeout As Integer, lockCookieExists As Integer, lockCookie As Integer, contentLength As Integer, content As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessRequest(IntPtr tracker, int verb, System::String ^ uri, int exclusive, int timeout, int lockCookieExists, int lockCookie, int contentLength, IntPtr content);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRequest : nativeint * int * string * int * int * int * int * int * nativeint -&gt; unit" Usage="iStateRuntime.ProcessRequest (tracker, verb, uri, exclusive, timeout, lockCookieExists, lockCookie, contentLength, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tracker" Type="System.IntPtr" />
        <Parameter Name="verb" Type="System.Int32" />
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="exclusive" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="lockCookieExists" Type="System.Int32" />
        <Parameter Name="lockCookie" Type="System.Int32" />
        <Parameter Name="contentLength" Type="System.Int32" />
        <Parameter Name="content" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="tracker">アンマネージ ASP.NET で状態サーバーに保存されているオブジェクトへの <see cref="T:System.IntPtr" /> ポインター。</param>
        <param name="verb">オブジェクトに対して実行するアクション。</param>
        <param name="uri">セッションの識別子。</param>
        <param name="exclusive">ストアのオブジェクトへのアクセスの種類。</param>
        <param name="timeout">セッション データが保持される時間 (分)。</param>
        <param name="lockCookieExists">ASP.NET Web サーバーから ASP.NET 状態サーバーへの元の要求にロック クッキーが存在するかどうかを示す値。</param>
        <param name="lockCookie">セッション状態のロックの所有者。</param>
        <param name="contentLength">セッションのために保存するデータの長さ (バイト)。</param>
        <param name="content">アンマネージ ASP.NET で状態サーバーのセッションのために保存するコンテンツへの <see cref="T:System.IntPtr" /> ポインター。</param>
        <summary>ASP.NET 状態サーバーがセッション データを処理するために使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ASP.NET は、ASP.NET state サービスと呼ばれる Windows サービスを使用して、セッション状態をアウトプロセスで管理できます。 <xref:System.Web.SessionState.IStateRuntime.ProcessRequest%2A> メソッドは、セッションデータを管理するために、このサービスのアンマネージコードによって使用されます。

 このメンバーは、ASP.NET state サービスの .NET Framework インフラストラクチャの実装をサポートします。独自に作成したコードから直接使用するためのものではありません。 セッション状態のストレージオプションの詳細については、「[セッション状態モード](https://docs.microsoft.com/previous-versions/aspnet/ms178586(v=vs.100))」を参照してください。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public void ProcessRequest (IntPtr tracker, int verb, string uri, int exclusive, int extraFlags, int timeout, int lockCookieExists, int lockCookie, int contentLength, IntPtr content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest([in]native int tracker, [in]int32 verb, [in]string uri, [in]int32 exclusive, [in]int32 extraFlags, [in]int32 timeout, [in]int32 lockCookieExists, [in]int32 lockCookie, [in]int32 contentLength, [in]native int content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessRequest (tracker As IntPtr, verb As Integer, uri As String, exclusive As Integer, extraFlags As Integer, timeout As Integer, lockCookieExists As Integer, lockCookie As Integer, contentLength As Integer, content As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessRequest(IntPtr tracker, int verb, System::String ^ uri, int exclusive, int extraFlags, int timeout, int lockCookieExists, int lockCookie, int contentLength, IntPtr content);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRequest : nativeint * int * string * int * int * int * int * int * int * nativeint -&gt; unit" Usage="iStateRuntime.ProcessRequest (tracker, verb, uri, exclusive, extraFlags, timeout, lockCookieExists, lockCookie, contentLength, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tracker" Type="System.IntPtr" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="verb" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="uri" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="exclusive" Type="System.Int32" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="extraFlags" Type="System.Int32" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="lockCookieExists" Type="System.Int32" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="lockCookie" Type="System.Int32" Index="7" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="contentLength" Type="System.Int32" Index="8" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="content" Type="System.IntPtr" Index="9" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="tracker">アンマネージ ASP.NET で状態サーバーに保存されているオブジェクトへの <see cref="T:System.IntPtr" /> ポインター。</param>
        <param name="verb">オブジェクトに対して実行するアクション。</param>
        <param name="uri">セッションの識別子。</param>
        <param name="exclusive">ストアのオブジェクトへのアクセスの種類。</param>
        <param name="extraFlags">現在のセッションが、初期化されていない cookieless セッションかどうかを示す値。</param>
        <param name="timeout">セッション データが保持される時間 (分)。</param>
        <param name="lockCookieExists">ASP.NET Web サーバーから ASP.NET 状態サーバーへの元の要求にロック クッキーが存在するかどうかを示す値。</param>
        <param name="lockCookie">セッション状態のロックの所有者。</param>
        <param name="contentLength">セッションのために保存するデータの長さ (バイト)。</param>
        <param name="content">アンマネージ ASP.NET で状態サーバーのセッションのために保存するコンテンツへの <see cref="T:System.IntPtr" /> ポインター。</param>
        <summary>ASP.NET 状態サーバーがセッション データを処理するために使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ASP.NET は、ASP.NET state サービスと呼ばれる Windows サービスを使用して、セッション状態をアウトプロセスで管理できます。 <xref:System.Web.SessionState.IStateRuntime.ProcessRequest%2A> メソッドは、セッションデータを管理するために、このサービスのアンマネージコードによって使用されます。

 このメンバーは、ASP.NET state サービスの .NET Framework インフラストラクチャの実装をサポートします。独自に作成したコードから直接使用するためのものではありません。 セッション状態のストレージオプションの詳細については、「[セッション状態モード](https://docs.microsoft.com/previous-versions/aspnet/ms178586(v=vs.100))」を参照してください。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="StopProcessing">
      <MemberSignature Language="C#" Value="public void StopProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IStateRuntime.StopProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopProcessing ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopProcessing();" />
      <MemberSignature Language="F#" Value="abstract member StopProcessing : unit -&gt; unit" Usage="iStateRuntime.StopProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ASP.NET 状態サーバーに保存されているセッション データの処理を停止します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ASP.NET は、ASP.NET state サービスと呼ばれる Windows サービスを使用して、セッション状態をアウトプロセスで管理できます。 <xref:System.Web.SessionState.StateRuntime.StopProcessing%2A> メソッドは、セッションデータの処理を停止するために、このサービスのアンマネージコードによって使用されます。 このメンバーは、ASP.NET state サービスの .NET Framework インフラストラクチャの実装をサポートするために用意されており、コードから直接使用するためのものではありません。 セッション状態のストレージオプションの詳細については、「[セッション状態モード](https://docs.microsoft.com/previous-versions/aspnet/ms178586(v=vs.100))」を参照してください。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
  </Members>
</Type>
