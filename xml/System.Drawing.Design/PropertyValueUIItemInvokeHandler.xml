<Type Name="PropertyValueUIItemInvokeHandler" FullName="System.Drawing.Design.PropertyValueUIItemInvokeHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7f746c974a98e7b04eb1f1e8e823c301c69089b" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83961669" /></Metadata><TypeSignature Language="C#" Value="public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext context, PropertyDescriptor descriptor, PropertyValueUIItem invokedItem);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PropertyValueUIItemInvokeHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub PropertyValueUIItemInvokeHandler(context As ITypeDescriptorContext, descriptor As PropertyDescriptor, invokedItem As PropertyValueUIItem)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext ^ context, PropertyDescriptor ^ descriptor, PropertyValueUIItem ^ invokedItem);" />
  <TypeSignature Language="F#" Value="type PropertyValueUIItemInvokeHandler = delegate of ITypeDescriptorContext * PropertyDescriptor * PropertyValueUIItem -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
    <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
    <Parameter Name="invokedItem" Type="System.Drawing.Design.PropertyValueUIItem" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="context"><span data-ttu-id="c991c-101">ダブルクリックされたアイコンに関連付けられているプロパティの <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="c991c-101">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> for the property associated with the icon that was double-clicked.</span></span></param>
    <param name="descriptor"><span data-ttu-id="c991c-102">ダブルクリックされたアイコンに関連付けられているプロパティ。</span><span class="sxs-lookup"><span data-stu-id="c991c-102">The property associated with the icon that was double-clicked.</span></span></param>
    <param name="invokedItem"><span data-ttu-id="c991c-103">ダブルクリックされたアイコンに関連付けられている <see cref="T:System.Drawing.Design.PropertyValueUIItem" />。</span><span class="sxs-lookup"><span data-stu-id="c991c-103">The <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> associated with the icon that was double-clicked.</span></span></param>
    <summary><span data-ttu-id="c991c-104"><see cref="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" /> の <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> イベントを処理するメソッドを表します。</span><span class="sxs-lookup"><span data-stu-id="c991c-104">Represents the method that will handle the <see cref="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" /> event of a <see cref="T:System.Drawing.Design.PropertyValueUIItem" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c991c-105">プロパティウィンドウ内のアイコンをダブルクリックすると、そのアイコンが関連付けられている <xref:System.Drawing.Design.PropertyValueUIItem> の <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="c991c-105">Double-clicking an icon in the Properties window will raise the <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> event of the <xref:System.Drawing.Design.PropertyValueUIItem> that the icon is associated with.</span></span> <span data-ttu-id="c991c-106"><xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> イベントは、通常、プロパティの値を編集するためのユーザーインターフェイス (UI) を起動します。</span><span class="sxs-lookup"><span data-stu-id="c991c-106">The <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> event typically launches a user interface (UI) to edit the property's value.</span></span> <span data-ttu-id="c991c-107"><xref:System.Drawing.Design.PropertyValueUIItem> の <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> プロパティに <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> を追加して、プロパティ名の横に表示されるアイコンがダブルクリックされたときに、適切な動作を実行するイベントハンドラーを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="c991c-107">Add a <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> to the <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> property of a <xref:System.Drawing.Design.PropertyValueUIItem> to assign an event handler to perform the appropriate behavior when the icon displayed next to the property name is double-clicked.</span></span>  
  
 <span data-ttu-id="c991c-108"><xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="c991c-108">When you create a <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="c991c-109">イベント ハンドラーにイベントを関連付けるには、イベントにデリゲートのインスタンスを追加します。</span><span class="sxs-lookup"><span data-stu-id="c991c-109">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="c991c-110">イベント ハンドラーは、デリゲートを削除しない限り、イベントが発生するたびに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c991c-110">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="c991c-111">イベントハンドラーデリゲートの詳細については、「[イベントの処理と発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c991c-111">For more information about event-handler delegates, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c991c-112">次のコード例では、`HorizontalMargin` または `VerticalMargin`という名前のコンポーネントのプロパティの <xref:System.Drawing.Design.PropertyValueUIItem> オブジェクトを提供します。</span><span class="sxs-lookup"><span data-stu-id="c991c-112">The following code example provides a <xref:System.Drawing.Design.PropertyValueUIItem> object for any properties of the component named `HorizontalMargin` or `VerticalMargin`.</span></span> <span data-ttu-id="c991c-113">これらのプロパティの <xref:System.Drawing.Design.PropertyValueUIItem> には、イメージ、ツールヒント、およびプロパティのイメージがクリックされたときにメッセージボックスを表示するイベントハンドラーが用意されています。</span><span class="sxs-lookup"><span data-stu-id="c991c-113">The <xref:System.Drawing.Design.PropertyValueUIItem> for these properties provides an image, a ToolTip, and an event handler that displays a message box when the image for the property is clicked.</span></span> <span data-ttu-id="c991c-114">このコード例は、<xref:System.Drawing.Design.IPropertyValueUIService> インターフェイス用に用意されている、より大きな例の一部です。</span><span class="sxs-lookup"><span data-stu-id="c991c-114">This code example is part of a larger example provided for the <xref:System.Drawing.Design.IPropertyValueUIService> interface.</span></span>  
  
 [!code-cpp[IPropertyValueUIServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#2)]
 [!code-csharp[IPropertyValueUIServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#2)]
 [!code-vb[IPropertyValueUIServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
    <altmember cref="T:System.Drawing.Design.PropertyValueUIItem" />
    <altmember cref="T:System.Drawing.Design.IPropertyValueUIService" />
  </Docs>
</Type>
