<Type Name="AnonymousPipeClientStream" FullName="System.IO.Pipes.AnonymousPipeClientStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef917cd469b7e0b39f6abdd994100c0618e8a95f" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83979548" /></Metadata><TypeSignature Language="C#" Value="public sealed class AnonymousPipeClientStream : System.IO.Pipes.PipeStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnonymousPipeClientStream extends System.IO.Pipes.PipeStream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.AnonymousPipeClientStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AnonymousPipeClientStream&#xA;Inherits PipeStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnonymousPipeClientStream sealed : System::IO::Pipes::PipeStream" />
  <TypeSignature Language="F#" Value="type AnonymousPipeClientStream = class&#xA;    inherit PipeStream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.IO.Pipes" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.IO.Pipes.PipeStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8d833-101">同期と非同期の読み書き操作をサポートする匿名パイプ ストリームのクライアント側を公開します。</span><span class="sxs-lookup"><span data-stu-id="8d833-101">Exposes the client side of an anonymous pipe stream, which supports both synchronous and asynchronous read and write operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d833-102">匿名パイプは、子プロセスと親プロセス間の安全で安全なプロセス間通信を提供するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="8d833-102">Anonymous pipes help provide safe and secure interprocess communication between child and parent processes.</span></span> <span data-ttu-id="8d833-103"><xref:System.IO.Pipes.AnonymousPipeClientStream> クラスを使用すると、子プロセスが親プロセスに接続して情報を交換できるようになります。</span><span class="sxs-lookup"><span data-stu-id="8d833-103">The <xref:System.IO.Pipes.AnonymousPipeClientStream> class enables a child process to connect to and exchange information with a parent process.</span></span>  
  
 <span data-ttu-id="8d833-104">匿名パイプは、通常、親プロセスと子プロセスの間でデータを転送する、名前のない一方向パイプです。</span><span class="sxs-lookup"><span data-stu-id="8d833-104">Anonymous pipes are unnamed, one-way pipes that typically transfer data between parent and child processes.</span></span> <span data-ttu-id="8d833-105">匿名パイプは常にローカルです。ネットワーク経由で使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="8d833-105">Anonymous pipes are always local; they cannot be used over a network.</span></span> <span data-ttu-id="8d833-106">匿名パイプは一方向に定義されているため、<xref:System.IO.Pipes.PipeDirection.InOut> の <xref:System.IO.Pipes.PipeDirection> 値はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="8d833-106">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="8d833-107">匿名パイプでは、<xref:System.IO.Pipes.PipeTransmissionMode.Message?displayProperty=nameWithType> 読み取りモードはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="8d833-107">Anonymous pipes do not support the <xref:System.IO.Pipes.PipeTransmissionMode.Message?displayProperty=nameWithType> read mode.</span></span>  
  
 <span data-ttu-id="8d833-108">匿名パイプのクライアント側は、<xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> メソッドを呼び出すことによって、サーバー側によって提供されるパイプハンドルから作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8d833-108">The client side of an anonymous pipe must be created from a pipe handle provided by the server side by calling the <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> method.</span></span> <span data-ttu-id="8d833-109">次に、クライアントプロセスを作成するときに、文字列がパラメーターとして渡されます。</span><span class="sxs-lookup"><span data-stu-id="8d833-109">The string is then passed as a parameter when creating the client process.</span></span> <span data-ttu-id="8d833-110">クライアントプロセスからは、`pipeHandleAsString` パラメーターとして <xref:System.IO.Pipes.AnonymousPipeClientStream> コンストラクターに渡されます。</span><span class="sxs-lookup"><span data-stu-id="8d833-110">From the client process, it is passed to the <xref:System.IO.Pipes.AnonymousPipeClientStream> constructor as the `pipeHandleAsString` parameter.</span></span>  
  
## Examples  

<span data-ttu-id="8d833-111">次の例では、匿名パイプを使用して、親プロセスから子プロセスに文字列を送信します。</span><span class="sxs-lookup"><span data-stu-id="8d833-111">The following example sends a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="8d833-112">この例では、<xref:System.IO.Pipes.AnonymousPipeServerStream> の <xref:System.IO.Pipes.PipeDirection> 値を使用して、親プロセス内に <xref:System.IO.Pipes.PipeDirection.Out> オブジェクトを作成しています。</span><span class="sxs-lookup"><span data-stu-id="8d833-112">This example creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span> <span data-ttu-id="8d833-113">また、<xref:System.IO.Pipes.PipeDirection> の値が <xref:System.IO.Pipes.PipeDirection.In>の子プロセスに <xref:System.IO.Pipes.AnonymousPipeClientStream> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="8d833-113">It also creates an <xref:System.IO.Pipes.AnonymousPipeClientStream> object in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.</span></span> <span data-ttu-id="8d833-114">次に、親プロセスはユーザー指定の文字列を子プロセスに送信します。</span><span class="sxs-lookup"><span data-stu-id="8d833-114">The parent process then sends a user-supplied string to the child process.</span></span> <span data-ttu-id="8d833-115">文字列がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="8d833-115">The string is displayed to the console.</span></span>  
  
 <span data-ttu-id="8d833-116">この例は、サーバープロセスによって開始されるクライアントプロセス用です。</span><span class="sxs-lookup"><span data-stu-id="8d833-116">This example is for the client process, which is started by the server process.</span></span> <span data-ttu-id="8d833-117">生成された実行可能ファイルの名前をクライアントコード `pipeClient.exe` に指定し、この例を実行するときにサーバーの実行可能ファイルと同じディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="8d833-117">Name the resulting executable from the client code `pipeClient.exe` and copy it to the same directory as the server executable when you run this example.</span></span> <span data-ttu-id="8d833-118">パイプクライアントとサーバーの両方のコードを含む、コード例全体については、「[方法: ローカルのプロセス間通信で匿名パイプを使用する](/dotnet/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8d833-118">For the entire code example, including the code for both the pipe client and server, see [How to: Use Anonymous Pipes for Local Interprocess Communication](/dotnet/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication).</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d833-119"><see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8d833-119">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeClientStream (string pipeHandleAsString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeHandleAsString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pipeHandleAsString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeClientStream(System::String ^ pipeHandleAsString);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeClientStream : string -&gt; System.IO.Pipes.AnonymousPipeClientStream" Usage="new System.IO.Pipes.AnonymousPipeClientStream pipeHandleAsString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pipeHandleAsString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pipeHandleAsString"><span data-ttu-id="8d833-120">パイプ ハンドルを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="8d833-120">A string that represents the pipe handle.</span></span></param>
        <summary><span data-ttu-id="8d833-121">指定したパイプ ハンドルの文字列形式を使用して、<see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8d833-121">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> class with the specified string representation of the pipe handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d833-122"><xref:System.IO.Pipes.PipeDirection> パラメーターのないコンストラクターの場合、既定の方向は <xref:System.IO.Pipes.PipeDirection.In>です。</span><span class="sxs-lookup"><span data-stu-id="8d833-122">For constructors without a <xref:System.IO.Pipes.PipeDirection> parameter, the default direction is <xref:System.IO.Pipes.PipeDirection.In>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d833-123">次の例は、匿名パイプを使用して、親プロセスから子プロセスに文字列を送信する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="8d833-123">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="8d833-124">この例では、<xref:System.IO.Pipes.AnonymousPipeClientStream> オブジェクトが子プロセス内に作成されます。</span><span class="sxs-lookup"><span data-stu-id="8d833-124">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process.</span></span>  
  
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_ctorSample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_ctorSample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8d833-125"><paramref name="pipeHandleAsString" /> が有効なパイプ ハンドルではありません。</span><span class="sxs-lookup"><span data-stu-id="8d833-125"><paramref name="pipeHandleAsString" /> is not a valid pipe handle.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeClientStream (System.IO.Pipes.PipeDirection direction, Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, class Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, safePipeHandle As SafePipeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeClientStream(System::IO::Pipes::PipeDirection direction, Microsoft::Win32::SafeHandles::SafePipeHandle ^ safePipeHandle);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeClientStream : System.IO.Pipes.PipeDirection * Microsoft.Win32.SafeHandles.SafePipeHandle -&gt; System.IO.Pipes.AnonymousPipeClientStream" Usage="new System.IO.Pipes.AnonymousPipeClientStream (direction, safePipeHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="safePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="8d833-126">パイプの方向を決定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="8d833-126">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="8d833-127">匿名パイプは常に一方向であるため、<paramref name="direction" /> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="8d833-127">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="safePipeHandle"><span data-ttu-id="8d833-128">この <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトによってカプセル化されるパイプのセーフ ハンドル。</span><span class="sxs-lookup"><span data-stu-id="8d833-128">A safe handle for the pipe that this <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object will encapsulate.</span></span></param>
        <summary><span data-ttu-id="8d833-129">ハンドルを指定して <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8d833-129">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> class from the specified handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d833-130">匿名パイプは一方向に定義されているため、<xref:System.IO.Pipes.PipeDirection.InOut> の <xref:System.IO.Pipes.PipeDirection> 値はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="8d833-130">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d833-131">次の例は、匿名パイプを使用して、親プロセスから子プロセスに文字列を送信する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="8d833-131">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="8d833-132">この例では、<xref:System.IO.Pipes.PipeDirection> 値が <xref:System.IO.Pipes.PipeDirection.In>の子プロセスに <xref:System.IO.Pipes.AnonymousPipeClientStream> オブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="8d833-132">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.</span></span>  
  
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_ctorSample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_ctorSample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d833-133"><paramref name="safePipeHandle" /> は有効なハンドルではありません。</span><span class="sxs-lookup"><span data-stu-id="8d833-133"><paramref name="safePipeHandle" /> is not a valid handle.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d833-134"><paramref name="safePipeHandle" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8d833-134"><paramref name="safePipeHandle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8d833-135"><paramref name="direction" /> は <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="8d833-135"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8d833-136">ディスク エラーなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="8d833-136">An I/O error, such as a disk error, has occurred.</span></span>  
  
 <span data-ttu-id="8d833-137">または</span><span class="sxs-lookup"><span data-stu-id="8d833-137">-or-</span></span>  
  
 <span data-ttu-id="8d833-138">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="8d833-138">The stream has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeClientStream (System.IO.Pipes.PipeDirection direction, string pipeHandleAsString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, string pipeHandleAsString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, pipeHandleAsString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeClientStream(System::IO::Pipes::PipeDirection direction, System::String ^ pipeHandleAsString);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeClientStream : System.IO.Pipes.PipeDirection * string -&gt; System.IO.Pipes.AnonymousPipeClientStream" Usage="new System.IO.Pipes.AnonymousPipeClientStream (direction, pipeHandleAsString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="pipeHandleAsString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="8d833-139">パイプの方向を決定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="8d833-139">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="8d833-140">匿名パイプは常に一方向であるため、<paramref name="direction" /> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="8d833-140">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="pipeHandleAsString"><span data-ttu-id="8d833-141">パイプ ハンドルを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="8d833-141">A string that represents the pipe handle.</span></span></param>
        <summary><span data-ttu-id="8d833-142">指定したパイプの方向およびパイプ ハンドルの文字列形式を使用して、<see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8d833-142">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> class with the specified pipe direction and a string representation of the pipe handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d833-143">匿名パイプは一方向に定義されているため、<xref:System.IO.Pipes.PipeDirection.InOut> の <xref:System.IO.Pipes.PipeDirection> 値はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="8d833-143">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d833-144">次の例は、匿名パイプを使用して、親プロセスから子プロセスに文字列を送信する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="8d833-144">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="8d833-145">この例では、<xref:System.IO.Pipes.PipeDirection> 値が <xref:System.IO.Pipes.PipeDirection.In>の子プロセスに <xref:System.IO.Pipes.AnonymousPipeClientStream> オブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="8d833-145">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d833-146"><paramref name="pipeHandleAsString" /> は無効なハンドルです。</span><span class="sxs-lookup"><span data-stu-id="8d833-146"><paramref name="pipeHandleAsString" /> is an invalid handle.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d833-147"><paramref name="pipeHandleAsString" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8d833-147"><paramref name="pipeHandleAsString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8d833-148"><paramref name="direction" /> は <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="8d833-148"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AnonymousPipeClientStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeClientStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AnonymousPipeClientStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="anonymousPipeClientStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d833-149"><see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> インスタンスがガベージ コレクションによって回収される前に、アンマネージ リソースを解放し、その他のクリーンアップ操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="8d833-149">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> instance is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode ReadMode { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode ReadMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode ReadMode {  void set(System::IO::Pipes::PipeTransmissionMode value); };" />
      <MemberSignature Language="F#" Value="member this.ReadMode : System.IO.Pipes.PipeTransmissionMode" Usage="System.IO.Pipes.AnonymousPipeClientStream.ReadMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d833-150"><see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトの読み取りモードを設定します。</span><span class="sxs-lookup"><span data-stu-id="8d833-150">Sets the reading mode for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object.</span></span></summary>
        <value><span data-ttu-id="8d833-151"><see cref="T:System.IO.Pipes.PipeTransmissionMode" /> オブジェクトの <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />。</span><span class="sxs-lookup"><span data-stu-id="8d833-151">The <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="8d833-152">匿名パイプでは、<xref:System.IO.Pipes.PipeTransmissionMode.Message?displayProperty=nameWithType> 読み取りモードはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="8d833-152">Anonymous pipes do not support the <xref:System.IO.Pipes.PipeTransmissionMode.Message?displayProperty=nameWithType> read mode.</span></span>  
  
   
  
## Examples

<span data-ttu-id="8d833-153">次の例では、匿名パイプを使用して、親プロセスから子プロセスに文字列を送信します。</span><span class="sxs-lookup"><span data-stu-id="8d833-153">The following example sends a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="8d833-154">この例では、<xref:System.IO.Pipes.AnonymousPipeClientStream> オブジェクトが子プロセス内に作成されます。</span><span class="sxs-lookup"><span data-stu-id="8d833-154">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8d833-155">送信モードが有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="8d833-155">The transmission mode is not valid.</span></span> <span data-ttu-id="8d833-156">匿名パイプでは、<see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> のみがサポートされます。</span><span class="sxs-lookup"><span data-stu-id="8d833-156">For anonymous pipes, only <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> is supported.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8d833-157">送信モードは <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" /> です。</span><span class="sxs-lookup"><span data-stu-id="8d833-157">The transmission mode is <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8d833-158">接続が切断されているか、別の I/O エラーが発生しています。</span><span class="sxs-lookup"><span data-stu-id="8d833-158">The connection is broken or another I/O error occurs.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8d833-159">パイプは閉じています。</span><span class="sxs-lookup"><span data-stu-id="8d833-159">The pipe is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransmissionMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode TransmissionMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TransmissionMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode TransmissionMode { System::IO::Pipes::PipeTransmissionMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TransmissionMode : System.IO.Pipes.PipeTransmissionMode" Usage="System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d833-160">現在のパイプでサポートされるパイプ送信モードを取得します。</span><span class="sxs-lookup"><span data-stu-id="8d833-160">Gets the pipe transmission mode supported by the current pipe.</span></span></summary>
        <value><span data-ttu-id="8d833-161">現在のパイプがサポートする <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> です。</span><span class="sxs-lookup"><span data-stu-id="8d833-161">The <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> supported by the current pipe.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="8d833-162">匿名パイプは <xref:System.IO.Pipes.PipeTransmissionMode.Message?displayProperty=nameWithType> 読み取りモードをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="8d833-162">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message?displayProperty=nameWithType> read mode.</span></span> <span data-ttu-id="8d833-163">このプロパティの既定値は <xref:System.IO.Pipes.PipeTransmissionMode.Byte?displayProperty=nameWithType>ので、コードでこのプロパティを設定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="8d833-163">Because the default value of this property is <xref:System.IO.Pipes.PipeTransmissionMode.Byte?displayProperty=nameWithType>, there is never a reason to set this property in your code.</span></span> 
  
## Examples  

<span data-ttu-id="8d833-164">次の例では、匿名パイプを使用して、親プロセスから子プロセスに文字列を送信します。</span><span class="sxs-lookup"><span data-stu-id="8d833-164">The following example sends a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="8d833-165">この例では、<xref:System.IO.Pipes.AnonymousPipeClientStream> オブジェクトが子プロセス内に作成され、<xref:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode%2A> がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="8d833-165">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process and the <xref:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode%2A> is displayed to the console.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
