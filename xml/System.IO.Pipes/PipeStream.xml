<Type Name="PipeStream" FullName="System.IO.Pipes.PipeStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="730cffa60b126f0463e327bcf14b02964b1f819c" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83532229" /></Metadata><TypeSignature Language="C#" Value="public abstract class PipeStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PipeStream extends System.IO.Stream" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.PipeStream" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PipeStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class PipeStream abstract : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type PipeStream = class&#xA;    inherit Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract PipeStream extends System.IO.Stream" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.IO.Pipes" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c4a14-101">匿名パイプと名前付きパイプの両方をサポートする、パイプに関連する <see cref="T:System.IO.Stream" /> オブジェクトを公開します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-101">Exposes a <see cref="T:System.IO.Stream" /> object around a pipe, which supports both anonymous and named pipes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-102"><xref:System.IO.Pipes.PipeStream> クラスは、.NET Framework 内の名前付きパイプ操作と匿名パイプ操作の基本クラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-102">The <xref:System.IO.Pipes.PipeStream> class provides the base class for named and anonymous pipes operations in the .NET Framework.</span></span> <span data-ttu-id="c4a14-103">名前付きパイプ操作には、<xref:System.IO.Pipes.NamedPipeServerStream> クラスと <xref:System.IO.Pipes.NamedPipeClientStream> クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-103">Use the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes for named pipe operations.</span></span> <span data-ttu-id="c4a14-104">匿名パイプ操作には、<xref:System.IO.Pipes.AnonymousPipeServerStream> クラスと <xref:System.IO.Pipes.AnonymousPipeClientStream> クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-104">Use the <xref:System.IO.Pipes.AnonymousPipeServerStream> and <xref:System.IO.Pipes.AnonymousPipeClientStream> classes for anonymous pipe operations.</span></span>  
  
 <span data-ttu-id="c4a14-105">パイプの詳細については、「[パイプ](~/docs/standard/io/pipe-operations.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4a14-105">For more information about pipes, see [Pipes](~/docs/standard/io/pipe-operations.md).</span></span> <span data-ttu-id="c4a14-106">匿名パイプの例については、「[方法: ローカルのプロセス間通信で匿名パイプを使用する](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4a14-106">For an example of anonymous pipes, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md).</span></span> <span data-ttu-id="c4a14-107">名前付きパイプの例については、「[方法: ネットワークプロセス間通信に名前付きパイプを使用する](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4a14-107">For an example of named pipes, see [How to: Use Named Pipes for Network Interprocess Communication](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4a14-108"><see cref="T:System.IO.Pipes.PipeStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-108">Initializes a new instance of the <see cref="T:System.IO.Pipes.PipeStream" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PipeStream (System.IO.Pipes.PipeDirection direction, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (direction As PipeDirection, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PipeStream(System::IO::Pipes::PipeDirection direction, int bufferSize);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.PipeStream : System.IO.Pipes.PipeDirection * int -&gt; System.IO.Pipes.PipeStream" Usage="new System.IO.Pipes.PipeStream (direction, bufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="c4a14-109">パイプ オブジェクトの方向を示す <see cref="T:System.IO.Pipes.PipeDirection" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="c4a14-109">One of the <see cref="T:System.IO.Pipes.PipeDirection" /> values that indicates the direction of the pipe object.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="c4a14-110">バッファー サイズを示す 0 以上の正の <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="c4a14-110">A positive <see cref="T:System.Int32" /> value greater than or equal to 0 that indicates the buffer size.</span></span></param>
        <summary><span data-ttu-id="c4a14-111">指定した <see cref="T:System.IO.Pipes.PipeDirection" /> 値とバッファー サイズを使用して、<see cref="T:System.IO.Pipes.PipeStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-111">Initializes a new instance of the <see cref="T:System.IO.Pipes.PipeStream" /> class using the specified <see cref="T:System.IO.Pipes.PipeDirection" /> value and buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-112">このコンストラクターは、<xref:System.IO.Pipes.PipeTransmissionMode.Byte>のパイプ送信モードを使用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-112">This constructor uses a pipe transmission mode of <xref:System.IO.Pipes.PipeTransmissionMode.Byte>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4a14-113"><paramref name="direction" /> が有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-113"><paramref name="direction" /> is not a valid <see cref="T:System.IO.Pipes.PipeDirection" /> value.</span></span>  
  
<span data-ttu-id="c4a14-114">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-114">-or-</span></span> 
 <span data-ttu-id="c4a14-115"><paramref name="bufferSize" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-115"><paramref name="bufferSize" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PipeStream (System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeTransmissionMode transmissionMode, int outBufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.Pipes.PipeTransmissionMode transmissionMode, int32 outBufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (direction As PipeDirection, transmissionMode As PipeTransmissionMode, outBufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PipeStream(System::IO::Pipes::PipeDirection direction, System::IO::Pipes::PipeTransmissionMode transmissionMode, int outBufferSize);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.PipeStream : System.IO.Pipes.PipeDirection * System.IO.Pipes.PipeTransmissionMode * int -&gt; System.IO.Pipes.PipeStream" Usage="new System.IO.Pipes.PipeStream (direction, transmissionMode, outBufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" />
        <Parameter Name="outBufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="c4a14-116">パイプ オブジェクトの方向を示す <see cref="T:System.IO.Pipes.PipeDirection" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="c4a14-116">One of the <see cref="T:System.IO.Pipes.PipeDirection" /> values that indicates the direction of the pipe object.</span></span></param>
        <param name="transmissionMode"><span data-ttu-id="c4a14-117">パイプ オブジェクトの送信モードを示す <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="c4a14-117">One of the <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> values that indicates the transmission mode of the pipe object.</span></span></param>
        <param name="outBufferSize"><span data-ttu-id="c4a14-118">バッファー サイズを示す 0 以上の正の <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="c4a14-118">A positive <see cref="T:System.Int32" /> value greater than or equal to 0 that indicates the buffer size.</span></span></param>
        <summary><span data-ttu-id="c4a14-119">指定した <see cref="T:System.IO.Pipes.PipeStream" />、<see cref="T:System.IO.Pipes.PipeDirection" />、およびバッファー サイズを使用して、<see cref="T:System.IO.Pipes.PipeTransmissionMode" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-119">Initializes a new instance of the <see cref="T:System.IO.Pipes.PipeStream" /> class using the specified <see cref="T:System.IO.Pipes.PipeDirection" />, <see cref="T:System.IO.Pipes.PipeTransmissionMode" />, and buffer size.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4a14-120"><paramref name="direction" /> が有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-120"><paramref name="direction" /> is not a valid <see cref="T:System.IO.Pipes.PipeDirection" /> value.</span></span>  
  
<span data-ttu-id="c4a14-121">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-121">-or-</span></span> 
 <span data-ttu-id="c4a14-122"><paramref name="transmissionMode" /> が有効な <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-122"><paramref name="transmissionMode" /> is not a valid <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> value.</span></span>  
  
<span data-ttu-id="c4a14-123">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-123">-or-</span></span> 
 <span data-ttu-id="c4a14-124"><paramref name="bufferSize" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-124"><paramref name="bufferSize" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="pipeStream.BeginRead (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c4a14-125">データを読み取るバッファー。</span><span class="sxs-lookup"><span data-stu-id="c4a14-125">The buffer to read data into.</span></span></param>
        <param name="offset"><span data-ttu-id="c4a14-126">読み取りの開始位置を示す <paramref name="buffer" /> 内のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="c4a14-126">The byte offset in <paramref name="buffer" /> at which to begin reading.</span></span></param>
        <param name="count"><span data-ttu-id="c4a14-127">読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="c4a14-127">The maximum number of bytes to read.</span></span></param>
        <param name="callback"><span data-ttu-id="c4a14-128">非同期の読み取り操作が完了したときに呼び出すメソッド。</span><span class="sxs-lookup"><span data-stu-id="c4a14-128">The method to call when the asynchronous read operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="c4a14-129">この特定の非同期読み取り要求を他の要求と区別する、ユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c4a14-129">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span></span></param>
        <summary><span data-ttu-id="c4a14-130">非同期の読み取り操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-130">Begins an asynchronous read operation.</span></span></summary>
        <returns><span data-ttu-id="c4a14-131">非同期の読み取りを参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c4a14-131">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-132">返された <xref:System.IAsyncResult> オブジェクトを <xref:System.IO.Pipes.PipeStream.EndRead%2A> メソッドに渡して、読み取ったバイト数を確認し、読み取りに使用するオペレーティングシステムリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-132">Pass the returned <xref:System.IAsyncResult> object to the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method to determine how many bytes were read and to release operating system resources used for reading.</span></span> <span data-ttu-id="c4a14-133"><xref:System.IO.Pipes.PipeStream.BeginRead%2A>を呼び出すたびに、<xref:System.IO.Pipes.PipeStream.EndRead%2A> を1回呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c4a14-133"><xref:System.IO.Pipes.PipeStream.EndRead%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</span></span> <span data-ttu-id="c4a14-134">これは、<xref:System.IO.Pipes.PipeStream.BeginRead%2A> を呼び出した同じコードか、<xref:System.IO.Pipes.PipeStream.BeginRead%2A>に渡されるコールバックで行うことができます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-134">This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginRead%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</span></span>  
  
 <span data-ttu-id="c4a14-135">現在の <xref:System.IO.Pipes.PipeStream> オブジェクトが読み取り操作をサポートするかどうかを判断するには、<xref:System.IO.Pipes.PipeStream.CanRead%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-135">Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.</span></span>  
  
 <span data-ttu-id="c4a14-136">パイプが閉じられているか、無効な引数が <xref:System.IO.Pipes.PipeStream.BeginRead%2A>に渡された場合、直ちに適切な例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-136">If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, the appropriate exceptions are raised immediately.</span></span> <span data-ttu-id="c4a14-137">非同期読み取り要求中に発生したエラーは、要求を実行しているスレッドプールのスレッドで発生します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-137">Errors that occur during an asynchronous read request occur on the thread pool thread that is performing the request.</span></span> <span data-ttu-id="c4a14-138">例外は、コードが <xref:System.IO.Pipes.PipeStream.EndRead%2A> メソッドを呼び出すと発生します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-138">The exceptions are raised when the code calls the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4a14-139"><paramref name="buffer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-139"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4a14-140"><paramref name="offset" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-140"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="c4a14-141">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-141">-or-</span></span> 
 <span data-ttu-id="c4a14-142"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-142"><paramref name="count" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4a14-143"><paramref name="count" /> は <paramref name="buffer" /> で使用可能なバイト数を超えています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-143"><paramref name="count" /> is greater than the number of bytes available in <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c4a14-144">パイプは閉じています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-144">The pipe is closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-145">パイプは、読み込み操作をサポートしません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-145">The pipe does not support read operations.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4a14-146">パイプが切断されているか、接続を待機しているか、またはハンドルが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-146">The pipe is disconnected, waiting to connect, or the handle has not been set.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c4a14-147">パイプが壊れているか、別の I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c4a14-147">The pipe is broken or another I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="pipeStream.BeginWrite (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c4a14-148">現在のストリームに書き込むデータを格納しているバッファー。</span><span class="sxs-lookup"><span data-stu-id="c4a14-148">The buffer that contains the data to write to the current stream.</span></span></param>
        <param name="offset"><span data-ttu-id="c4a14-149">現在のストリームへのバイトのコピーを開始する位置を示す <paramref name="buffer" /> 内のバイト オフセット。インデックス番号は 0 から始まります。</span><span class="sxs-lookup"><span data-stu-id="c4a14-149">The zero-based byte offset in <paramref name="buffer" /> at which to begin copying bytes to the current stream.</span></span></param>
        <param name="count"><span data-ttu-id="c4a14-150">書き込む最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="c4a14-150">The maximum number of bytes to write.</span></span></param>
        <param name="callback"><span data-ttu-id="c4a14-151">非同期の書き込み操作が完了したときに呼び出すメソッド。</span><span class="sxs-lookup"><span data-stu-id="c4a14-151">The method to call when the asynchronous write operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="c4a14-152">この特定の非同期書き込み要求を他の要求と区別する、ユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c4a14-152">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span></span></param>
        <summary><span data-ttu-id="c4a14-153">非同期の書き込み操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-153">Begins an asynchronous write operation.</span></span></summary>
        <returns><span data-ttu-id="c4a14-154">非同期の書き込み操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c4a14-154">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-155"><xref:System.IO.Pipes.PipeStream.BeginWrite%2A>を呼び出すたびに、<xref:System.IO.Pipes.PipeStream.EndWrite%2A> を1回呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c4a14-155"><xref:System.IO.Pipes.PipeStream.EndWrite%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</span></span> <span data-ttu-id="c4a14-156">これは、<xref:System.IO.Pipes.PipeStream.BeginWrite%2A> を呼び出した同じコードか、<xref:System.IO.Pipes.PipeStream.BeginWrite%2A>に渡されるコールバックで行うことができます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-156">This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="c4a14-157">現在の <xref:System.IO.Pipes.PipeStream> オブジェクトが書き込み操作をサポートしているかどうかを判断するには、<xref:System.IO.Pipes.PipeStream.CanWrite%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-157">Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.</span></span>  
  
 <span data-ttu-id="c4a14-158">パイプが閉じられているか、無効な引数が <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>に渡された場合、直ちに適切な例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-158">If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, the appropriate exceptions are raised immediately.</span></span> <span data-ttu-id="c4a14-159">非同期書き込み要求中に発生したエラーは、要求を実行しているスレッドプールのスレッドで発生します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-159">Errors that occur during an asynchronous write request occur on the thread pool thread that is performing the request.</span></span> <span data-ttu-id="c4a14-160">例外は、コードが <xref:System.IO.Pipes.PipeStream.EndWrite%2A> メソッドを呼び出すと発生します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-160">The exceptions are raised when the code calls the  <xref:System.IO.Pipes.PipeStream.EndWrite%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4a14-161"><paramref name="buffer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-161"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4a14-162"><paramref name="offset" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-162"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="c4a14-163">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-163">-or-</span></span> 
 <span data-ttu-id="c4a14-164"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-164"><paramref name="count" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4a14-165"><paramref name="count" /> は <paramref name="buffer" /> で使用可能なバイト数を超えています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-165"><paramref name="count" /> is greater than the number of bytes available in <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c4a14-166">パイプは閉じています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-166">The pipe is closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-167">パイプは書き込み操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-167">The pipe does not support write operations.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4a14-168">パイプが切断されているか、接続を待機しているか、またはハンドルが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-168">The pipe is disconnected, waiting to connect, or the handle has not been set.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c4a14-169">パイプが壊れているか、別の I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c4a14-169">The pipe is broken or another I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.IO.Pipes.PipeStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4a14-170">現在のストリームが読み取り操作をサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-170">Gets a value indicating whether the current stream supports read operations.</span></span></summary>
        <value><span data-ttu-id="c4a14-171">ストリームが読み取り操作をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4a14-171"><see langword="true" /> if the stream supports read operations; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-172"><xref:System.IO.Pipes.PipeStream> オブジェクトが閉じている場合、このプロパティは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-172">If the <xref:System.IO.Pipes.PipeStream> object is closed, this property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.IO.Pipes.PipeStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4a14-173">現在のストリームがシーク操作をサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-173">Gets a value indicating whether the current stream supports seek operations.</span></span></summary>
        <value><span data-ttu-id="c4a14-174">すべてのケースで <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4a14-174"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-175"><xref:System.IO.Pipes.PipeStream> オブジェクトが閉じている場合、このプロパティは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-175">If the <xref:System.IO.Pipes.PipeStream> object is closed, this property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.IO.Pipes.PipeStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4a14-176">現在のストリームが書き込み操作をサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-176">Gets a value indicating whether the current stream supports write operations.</span></span></summary>
        <value><span data-ttu-id="c4a14-177">ストリームが書き込み操作をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4a14-177"><see langword="true" /> if the stream supports write operations; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-178"><xref:System.IO.Pipes.PipeStream> オブジェクトが閉じている場合、このプロパティは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-178">If the <xref:System.IO.Pipes.PipeStream> object is closed, this property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckPipePropertyOperations">
      <MemberSignature Language="C#" Value="protected internal virtual void CheckPipePropertyOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void CheckPipePropertyOperations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub CheckPipePropertyOperations ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void CheckPipePropertyOperations();" />
      <MemberSignature Language="F#" Value="abstract member CheckPipePropertyOperations : unit -&gt; unit&#xA;override this.CheckPipePropertyOperations : unit -&gt; unit" Usage="pipeStream.CheckPipePropertyOperations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4a14-179">パイプがプロパティの取得または設定に対して適切な状態にあることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-179">Verifies that the pipe is in a proper state for getting or setting properties.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckReadOperations">
      <MemberSignature Language="C#" Value="protected internal void CheckReadOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CheckReadOperations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.CheckReadOperations" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CheckReadOperations ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void CheckReadOperations();" />
      <MemberSignature Language="F#" Value="member this.CheckReadOperations : unit -&gt; unit" Usage="pipeStream.CheckReadOperations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4a14-180">パイプが読み取り操作に対して接続状態にあることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-180">Verifies that the pipe is in a connected state for read operations.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckWriteOperations">
      <MemberSignature Language="C#" Value="protected internal void CheckWriteOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CheckWriteOperations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.CheckWriteOperations" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CheckWriteOperations ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void CheckWriteOperations();" />
      <MemberSignature Language="F#" Value="member this.CheckWriteOperations : unit -&gt; unit" Usage="pipeStream.CheckWriteOperations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4a14-181">パイプが書き込み操作に対して接続状態にあることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-181">Verifies that the pipe is in a connected state for write operations.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="pipeStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="c4a14-182">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4a14-182"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="c4a14-183"><see cref="T:System.IO.Pipes.PipeStream" /> クラスによって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-183">Releases the unmanaged resources used by the <see cref="T:System.IO.Pipes.PipeStream" /> class and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-184">このメソッドは、パブリックな <xref:System.ComponentModel.Component.Dispose%2A> メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-184">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="c4a14-185"><xref:System.ComponentModel.Component.Dispose%2A> は、`disposing` パラメーターを `true`に設定して、protected <xref:System.IO.Pipes.PipeStream.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-185"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Pipes.PipeStream.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="c4a14-186"><xref:System.Object.Finalize%2A> は `disposing` を `false`に設定して <xref:System.IO.Pipes.PipeStream.Dispose%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-186"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.Pipes.PipeStream.Dispose%2A> with `disposing` set to `false`.</span></span> <span data-ttu-id="c4a14-187">Disposing パラメーターが `true`場合、このメソッドは、この <xref:System.IO.Pipes.PipeStream> オブジェクトが参照するすべてのマネージオブジェクトによって保持されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-187">When the disposing parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Pipes.PipeStream> object references.</span></span> <span data-ttu-id="c4a14-188">このメソッドは、参照される各オブジェクトの <xref:System.IO.Pipes.PipeStream.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-188">This method invokes the <xref:System.IO.Pipes.PipeStream.Dispose%2A> method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c4a14-189">派生クラスで、すべての <see cref="T:System.IO.Stream" /> クリーンアップロジックを <see cref="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" /> メソッドに配置します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-189">In derived classes, put all <see cref="T:System.IO.Stream" /> cleanup logic in the <see cref="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" /> method.</span></span>  
  
 <span data-ttu-id="c4a14-190"><see cref="M:System.ComponentModel.Component.Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-190"><see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="c4a14-191"><see cref="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" /> をオーバーライドする場合は、以前に <see cref="M:System.ComponentModel.Component.Dispose" /> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c4a14-191">When overriding <see cref="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />.</span></span> <span data-ttu-id="c4a14-192"><see cref="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4a14-192">For more information about how to implement <see cref="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="c4a14-193"><see cref="M:System.ComponentModel.Component.Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4a14-193">For more information about <see cref="M:System.ComponentModel.Component.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="pipeStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="c4a14-194">保留中の非同期要求への参照。</span><span class="sxs-lookup"><span data-stu-id="c4a14-194">The reference to the pending asynchronous request.</span></span></param>
        <summary><span data-ttu-id="c4a14-195">非同期読み込み要求の保留状態を終了します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-195">Ends a pending asynchronous read request.</span></span></summary>
        <returns><span data-ttu-id="c4a14-196">読み取ったバイト数。</span><span class="sxs-lookup"><span data-stu-id="c4a14-196">The number of bytes that were read.</span></span> <span data-ttu-id="c4a14-197">戻り値が 0 の場合は、ストリームの終了を示しています (パイプが閉じられています)。</span><span class="sxs-lookup"><span data-stu-id="c4a14-197">A return value of 0 indicates the end of the stream (the pipe has been closed).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-198">このメソッドは、<xref:System.IO.Pipes.PipeStream.BeginRead%2A>の前の呼び出しで指定されたバイト配列に読み取ったバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-198">This method returns the number of bytes read into the byte array specified by the earlier call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</span></span>  
  
 <span data-ttu-id="c4a14-199">返された <xref:System.IAsyncResult> オブジェクトを <xref:System.IO.Pipes.PipeStream.EndRead%2A> メソッドに渡して、読み取ったバイト数を確認し、読み取りに使用するオペレーティングシステムリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-199">Pass the returned <xref:System.IAsyncResult> object to the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method to determine how many bytes were read and to release operating system resources used for reading.</span></span> <span data-ttu-id="c4a14-200"><xref:System.IO.Pipes.PipeStream.BeginRead%2A>を呼び出すたびに、<xref:System.IO.Pipes.PipeStream.EndRead%2A> を1回呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c4a14-200"><xref:System.IO.Pipes.PipeStream.EndRead%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</span></span> <span data-ttu-id="c4a14-201">これは、<xref:System.IO.Pipes.PipeStream.BeginRead%2A> を呼び出した同じコードか、<xref:System.IO.Pipes.PipeStream.BeginRead%2A>に渡されるコールバックで行うことができます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-201">This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginRead%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</span></span>  
  
 <span data-ttu-id="c4a14-202">現在の <xref:System.IO.Pipes.PipeStream> オブジェクトが読み取り操作をサポートするかどうかを判断するには、<xref:System.IO.Pipes.PipeStream.CanRead%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-202">Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.</span></span>  
  
 <span data-ttu-id="c4a14-203">パイプが閉じられているか、無効な引数が <xref:System.IO.Pipes.PipeStream.BeginRead%2A>に渡された場合、直ちに適切な例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-203">If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, the appropriate exceptions are raised immediately.</span></span> <span data-ttu-id="c4a14-204">非同期読み取り要求中に発生したエラーは、要求を実行しているスレッドプールのスレッドで発生します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-204">Errors that occur during an asynchronous read request occur on the thread pool thread that is performing the request.</span></span> <span data-ttu-id="c4a14-205">例外は、コードが <xref:System.IO.Pipes.PipeStream.EndRead%2A> メソッドを呼び出すと発生します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-205">The exceptions are raised when the code calls the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4a14-206"><paramref name="asyncResult" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-206"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4a14-207"><paramref name="asyncResult" /> は現在のストリームの <see cref="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドから取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="c4a14-207"><paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c4a14-208">ストリームが閉じているか、内部エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c4a14-208">The stream is closed or an internal error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="pipeStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="c4a14-209">保留中の非同期要求への参照。</span><span class="sxs-lookup"><span data-stu-id="c4a14-209">The reference to the pending asynchronous request.</span></span></param>
        <summary><span data-ttu-id="c4a14-210">保留中の非同期書き込み要求を終了します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-210">Ends a pending asynchronous write request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-211"><xref:System.IO.Pipes.PipeStream.BeginWrite%2A>を呼び出すたびに、<xref:System.IO.Pipes.PipeStream.EndWrite%2A> を1回呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c4a14-211"><xref:System.IO.Pipes.PipeStream.EndWrite%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</span></span> <span data-ttu-id="c4a14-212">これは、<xref:System.IO.Pipes.PipeStream.BeginWrite%2A> を呼び出した同じコードか、<xref:System.IO.Pipes.PipeStream.BeginWrite%2A>に渡されるコールバックで行うことができます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-212">This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="c4a14-213">現在の <xref:System.IO.Pipes.PipeStream> オブジェクトが書き込み操作をサポートしているかどうかを判断するには、<xref:System.IO.Pipes.PipeStream.CanWrite%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-213">Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.</span></span>  
  
 <span data-ttu-id="c4a14-214">パイプが閉じられているか、無効な引数が <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>に渡された場合、直ちに適切な例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-214">If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, the appropriate exceptions are raised immediately.</span></span> <span data-ttu-id="c4a14-215">非同期書き込み要求中に発生したエラーは、要求を実行しているスレッドプールのスレッドで発生します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-215">Errors that occur during an asynchronous write request occur on the thread pool thread that is performing the request.</span></span> <span data-ttu-id="c4a14-216">例外は、が <xref:System.IO.Pipes.PipeStream.EndWrite%2A> メソッドを呼び出すコードが呼び出されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-216">The exceptions are raised when the code the calls <xref:System.IO.Pipes.PipeStream.EndWrite%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4a14-217"><paramref name="asyncResult" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-217"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4a14-218"><paramref name="asyncResult" /> は現在のストリームの <see cref="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドから取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="c4a14-218"><paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c4a14-219">ストリームが閉じているか、内部エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c4a14-219">The stream is closed or an internal error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="pipeStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4a14-220">現在のストリームに対応するバッファーをクリアし、バッファー内のすべてのデータを、基になるデバイスに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-220">Clears the buffer for the current stream and causes any buffered data to be written to the underlying device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-221"><xref:System.IO.Pipes.PipeStream.Flush%2A> メソッドは、<xref:System.IO.Pipes.PipeStream> クラスではサポートされておらず、呼び出されても何も行われません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-221">The <xref:System.IO.Pipes.PipeStream.Flush%2A> method is not supported in the <xref:System.IO.Pipes.PipeStream> class and does nothing when it is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c4a14-222">パイプは閉じています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-222">The pipe is closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-223">パイプは書き込み操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-223">The pipe does not support write operations.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c4a14-224">パイプが壊れているか、別の I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c4a14-224">The pipe is broken or another I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FlushAsync (cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="pipeStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.IO.Pipes.PipeSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Pipes.PipeSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As PipeSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Pipes::PipeSecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.IO.Pipes.PipeSecurity" Usage="pipeStream.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4a14-225">現在の <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトが示すパイプのアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.Pipes.PipeSecurity" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-225">Gets a <see cref="T:System.IO.Pipes.PipeSecurity" /> object that encapsulates the access control list (ACL) entries for the pipe described by the current <see cref="T:System.IO.Pipes.PipeStream" /> object.</span></span></summary>
        <returns><span data-ttu-id="c4a14-226">現在の <see cref="T:System.IO.Pipes.PipeSecurity" /> オブジェクトが示すパイプのアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c4a14-226">A <see cref="T:System.IO.Pipes.PipeSecurity" /> object that encapsulates the access control list (ACL) entries for the pipe described by the current <see cref="T:System.IO.Pipes.PipeStream" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-227">アクセス制御リスト (ACL) は、指定されたファイルに対して特定のアクションを実行する権限を持っている、または所有していない個人やグループを表します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-227">An access control list (ACL) describes individuals and/or groups that have, or do not have, rights to perform specific actions on a specified file.</span></span> <span data-ttu-id="c4a14-228">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4a14-228">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c4a14-229">パイプは閉じています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-229">The pipe is closed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c4a14-230">セキュリティ情報の設定の基になる呼び出しが失敗しました。</span><span class="sxs-lookup"><span data-stu-id="c4a14-230">The underlying call to set security information failed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4a14-231">セキュリティ情報の設定の基になる呼び出しが失敗しました。</span><span class="sxs-lookup"><span data-stu-id="c4a14-231">The underlying call to set security information failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-232">セキュリティ情報の設定の基になる呼び出しが失敗しました。</span><span class="sxs-lookup"><span data-stu-id="c4a14-232">The underlying call to set security information failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InBufferSize">
      <MemberSignature Language="C#" Value="public virtual int InBufferSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.InBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int InBufferSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InBufferSize : int" Usage="System.IO.Pipes.PipeStream.InBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4a14-233">パイプの着信バッファーのサイズ (バイト単位) を取得します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-233">Gets the size, in bytes, of the inbound buffer for a pipe.</span></span></summary>
        <value><span data-ttu-id="c4a14-234">着信バッファーのサイズ (バイト単位) を表す整数値。</span><span class="sxs-lookup"><span data-stu-id="c4a14-234">An integer value that represents the inbound buffer size, in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-235"><xref:System.IO.Pipes.PipeStream.InBufferSize%2A> が0の場合は、必要に応じてバッファーサイズが割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-235">If <xref:System.IO.Pipes.PipeStream.InBufferSize%2A> is 0, the buffer size is allocated as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-236">ストリームを読み取ることができません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-236">The stream is unreadable.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4a14-237">パイプは接続を待機しています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-237">The pipe is waiting to connect.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c4a14-238">パイプが壊れているか、別の I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c4a14-238">The pipe is broken or another I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeHandle">
      <MemberSignature Language="C#" Value="protected void InitializeHandle (Microsoft.Win32.SafeHandles.SafePipeHandle handle, bool isExposed, bool isAsync);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializeHandle(class Microsoft.Win32.SafeHandles.SafePipeHandle handle, bool isExposed, bool isAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializeHandle (handle As SafePipeHandle, isExposed As Boolean, isAsync As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializeHandle(Microsoft::Win32::SafeHandles::SafePipeHandle ^ handle, bool isExposed, bool isAsync);" />
      <MemberSignature Language="F#" Value="member this.InitializeHandle : Microsoft.Win32.SafeHandles.SafePipeHandle * bool * bool -&gt; unit" Usage="pipeStream.InitializeHandle (handle, isExposed, isAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="isExposed" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="isAsync" Type="System.Boolean" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="c4a14-239">初期化するパイプの <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c4a14-239">The <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> object of the pipe to initialize.</span></span></param>
        <param name="isExposed"><span data-ttu-id="c4a14-240">ハンドルを公開する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4a14-240"><see langword="true" /> to expose the handle; otherwise, <see langword="false" />.</span></span></param>
        <param name="isAsync"><span data-ttu-id="c4a14-241">ハンドルが非同期的に開かれていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4a14-241"><see langword="true" /> to indicate that the handle was opened asynchronously; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c4a14-242">指定した <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトから、<see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-242">Initializes a <see cref="T:System.IO.Pipes.PipeStream" /> object from the specified <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-243">パイプが接続状態の場合、このメソッドは <xref:System.IO.Pipes.PipeStream.IsConnected%2A> プロパティも `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-243">If the pipe is in a connected state, this method also sets the <xref:System.IO.Pipes.PipeStream.IsConnected%2A> property to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c4a14-244">ハンドルはパイプにバインドできません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-244">A handle cannot be bound to the pipe.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsync { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAsync : bool" Usage="System.IO.Pipes.PipeStream.IsAsync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4a14-245"><see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトが非同期的に開かれたか、同期的に開かれたかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-245">Gets a value indicating whether a <see cref="T:System.IO.Pipes.PipeStream" /> object was opened asynchronously or synchronously.</span></span></summary>
        <value><span data-ttu-id="c4a14-246"><see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトが非同期的に開かれた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4a14-246"><see langword="true" /> if the <see cref="T:System.IO.Pipes.PipeStream" /> object was opened asynchronously; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-247">このプロパティを使用すると、コードで <xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A> プロパティを正しく使用できます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-247">This property enables your code to use the <xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A> property correctly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public bool IsConnected { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.IsConnected" />
      <MemberSignature Language="VB.NET" Value="Public Property IsConnected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsConnected {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsConnected : bool with get, set" Usage="System.IO.Pipes.PipeStream.IsConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4a14-248"><see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトが接続されているかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-248">Gets or sets a value indicating whether a <see cref="T:System.IO.Pipes.PipeStream" /> object is connected.</span></span></summary>
        <value><span data-ttu-id="c4a14-249"><see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトが接続されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4a14-249"><see langword="true" /> if the <see cref="T:System.IO.Pipes.PipeStream" /> object is connected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-250"><xref:System.IO.Pipes.PipeStream.IsConnected%2A> プロパティは、<xref:System.IO.Pipes.PipeStream> オブジェクトが接続されている場合にのみ `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-250">The <xref:System.IO.Pipes.PipeStream.IsConnected%2A> property returns `true` only if the <xref:System.IO.Pipes.PipeStream> object is connected.</span></span> <span data-ttu-id="c4a14-251">このプロパティが `false`を返す場合、パイプは接続を待機しているか、切断されているか、閉じられているか、または壊れている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c4a14-251">If this property returns `false`, the pipe may be waiting to connect, or may be disconnected, closed, or broken.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHandleExposed">
      <MemberSignature Language="C#" Value="protected bool IsHandleExposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHandleExposed" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.IsHandleExposed" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsHandleExposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsHandleExposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHandleExposed : bool" Usage="System.IO.Pipes.PipeStream.IsHandleExposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4a14-252"><see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトのハンドルが公開されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-252">Gets a value indicating whether a handle to a <see cref="T:System.IO.Pipes.PipeStream" /> object is exposed.</span></span></summary>
        <value><span data-ttu-id="c4a14-253"><see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトのハンドルが公開されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4a14-253"><see langword="true" /> if a handle to the <see cref="T:System.IO.Pipes.PipeStream" /> object is exposed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-254">このプロパティの値は、現在の <xref:System.IO.Pipes.PipeStream> オブジェクトによってカプセル化されているパイプへのハンドルを取得するときに設定されます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-254">The value of this property is set when obtaining a handle to the pipe that is encapsulated by the current <xref:System.IO.Pipes.PipeStream> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMessageComplete">
      <MemberSignature Language="C#" Value="public bool IsMessageComplete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMessageComplete" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMessageComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMessageComplete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMessageComplete : bool" Usage="System.IO.Pipes.PipeStream.IsMessageComplete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4a14-255">最後に実行された読み取り操作から返されたメッセージに他のデータが存在するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-255">Gets a value indicating whether there is more data in the message returned from the most recent read operation.</span></span></summary>
        <value><span data-ttu-id="c4a14-256">メッセージにそれ以上読み取る文字が存在しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4a14-256"><see langword="true" /> if there are no more characters to read in the message; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-257">このプロパティは、パイプの <xref:System.IO.Pipes.PipeStream.ReadMode%2A> プロパティが <xref:System.IO.Pipes.PipeStream.Read%2A> または <xref:System.IO.Pipes.PipeStream.EndRead%2A>の最新の呼び出しで <xref:System.IO.Pipes.PipeTransmissionMode.Message> に設定されている場合に関連します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-257">This property is relevant if the pipe's <xref:System.IO.Pipes.PipeStream.ReadMode%2A> property was set to <xref:System.IO.Pipes.PipeTransmissionMode.Message> by the most recent call to <xref:System.IO.Pipes.PipeStream.Read%2A> or <xref:System.IO.Pipes.PipeStream.EndRead%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4a14-258">パイプが接続されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-258">The pipe is not connected.</span></span>  
  
<span data-ttu-id="c4a14-259">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-259">-or-</span></span> 
<span data-ttu-id="c4a14-260">パイプ ハンドルがまだ設定されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-260">The pipe handle has not been set.</span></span>  
  
<span data-ttu-id="c4a14-261">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-261">-or-</span></span> 
<span data-ttu-id="c4a14-262">パイプの <see cref="P:System.IO.Pipes.PipeStream.ReadMode" /> プロパティ値が <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-262">The pipe's <see cref="P:System.IO.Pipes.PipeStream.ReadMode" /> property value is not <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c4a14-263">パイプは閉じています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-263">The pipe is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.IO.Pipes.PipeStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4a14-264">ストリーム長 (バイト単位) を取得します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-264">Gets the length of a stream, in bytes.</span></span></summary>
        <value><span data-ttu-id="c4a14-265">常に 0。</span><span class="sxs-lookup"><span data-stu-id="c4a14-265">0 in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-266"><xref:System.IO.Pipes.PipeStream> クラスは、<xref:System.IO.Pipes.PipeStream.Length%2A> プロパティをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-266">The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.Length%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-267">常にスローされます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-267">Always thrown.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OutBufferSize">
      <MemberSignature Language="C#" Value="public virtual int OutBufferSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.OutBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OutBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int OutBufferSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.OutBufferSize : int" Usage="System.IO.Pipes.PipeStream.OutBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4a14-268">パイプの発信バッファーのサイズ (バイト単位) を取得します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-268">Gets the size, in bytes, of the outbound buffer for a pipe.</span></span></summary>
        <value><span data-ttu-id="c4a14-269">発信バッファーのサイズ (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="c4a14-269">The outbound buffer size, in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-270"><xref:System.IO.Pipes.PipeStream.OutBufferSize%2A> が0の場合は、必要に応じてバッファーサイズが割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-270">If <xref:System.IO.Pipes.PipeStream.OutBufferSize%2A> is 0, the buffer size is allocated as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-271">ストリームに書き込むことができません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-271">The stream is unwriteable.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4a14-272">パイプは接続を待機しています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-272">The pipe is waiting to connect.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c4a14-273">パイプが壊れているか、別の I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c4a14-273">The pipe is broken or another I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.IO.Pipes.PipeStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4a14-274">現在のストリームの現在位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-274">Gets or sets the current position of the current stream.</span></span></summary>
        <value><span data-ttu-id="c4a14-275">常に 0。</span><span class="sxs-lookup"><span data-stu-id="c4a14-275">0 in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-276"><xref:System.IO.Pipes.PipeStream> クラスは、<xref:System.IO.Pipes.PipeStream.Position%2A> プロパティをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-276">The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.Position%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-277">常にスローされます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-277">Always thrown.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;byte&gt; -&gt; int" Usage="pipeStream.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c4a14-278">メモリの領域。</span><span class="sxs-lookup"><span data-stu-id="c4a14-278">A region of memory.</span></span> <span data-ttu-id="c4a14-279">このメソッドが戻ると、この領域のコンテンツは現在のソースから読み取られたバイトに置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-279">When this method returns, the contents of this region are replaced by the bytes read from the current source.</span></span></param>
        <summary><span data-ttu-id="c4a14-280">現在のストリームからバイト シーケンスを読み取り、バイト配列に書き込んで、読み取ったバイト数だけストリーム内の位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-280">Reads a sequence of bytes from the current stream, writes them to a byte array, and advances the position within the stream by the number of bytes read.</span></span></summary>
        <returns><span data-ttu-id="c4a14-281"><paramref name="buffer" /> に読み取る合計バイト数。</span><span class="sxs-lookup"><span data-stu-id="c4a14-281">The total number of bytes read into the <paramref name="buffer" />.</span></span> <span data-ttu-id="c4a14-282">現在、多くのバイト数を利用できない場合、これは <paramref name="buffer" /> に割り当てられているバイト数より小さくなります。ストリームの末尾に到達した場合は 0 (ゼロ) になることがあります。</span><span class="sxs-lookup"><span data-stu-id="c4a14-282">This can be less than the number of bytes allocated in <paramref name="buffer" /> if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="c4a14-283">現在の <xref:System.IO.Pipes.PipeStream> オブジェクトが読み取り操作をサポートするかどうかを判断するには、<xref:System.IO.Pipes.PipeStream.CanRead%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-283">Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.</span></span>

<span data-ttu-id="c4a14-284">現在のストリームから非同期的に読み取るには、<xref:System.IO.Pipes.PipeStream.ReadAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-284">Use the <xref:System.IO.Pipes.PipeStream.ReadAsync%2A> method to read asynchronously from the current stream.</span></span>

<span data-ttu-id="c4a14-285">このメソッドは、現在のストリームから最大 `buffer.Length` バイトを読み取り、`buffer`に格納します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-285">This method reads a maximum of `buffer.Length` bytes from the current stream and stores them in `buffer`.</span></span> <span data-ttu-id="c4a14-286">ストリーム内の現在位置は、読み取ったバイト数だけ進んでいます。ただし、例外が発生した場合、ストリーム内の現在位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-286">The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.</span></span>

<span data-ttu-id="c4a14-287">このメソッドは、データが使用できない場合に、少なくとも1バイトのデータを読み取ることができるようになるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="c4a14-287">This method will block until at least one byte of data can be read, in the event that no data is available.</span></span>

<span data-ttu-id="c4a14-288">このメソッドは、ストリームにデータがこれ以上ない場合にのみ0を返します。これ以上のデータは必要ありません (閉じているソケットやファイルの終端など)。</span><span class="sxs-lookup"><span data-stu-id="c4a14-288">This method returns 0 only when there is no more data in the stream and no more is expected (such as a closed socket or end of file).</span></span>

<span data-ttu-id="c4a14-289">このメソッドは、ストリームの末尾に到達していない場合でも、要求されたバイト数よりも小さい値を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-289">This method is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>

<span data-ttu-id="c4a14-290">プリミティブデータ型を読み取るには、`BinaryReader` を使用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-290">Use `BinaryReader` for reading primitive data types.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4a14-291">読み取ったバイト数がバッファー長を超えています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-291">The number of bytes read was longer than the buffer length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-292">ストリームは読み取りをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-292">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c4a14-293">閉じたパイプにアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-293">Cannot access a closed pipe.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4a14-294">パイプがまだ接続されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-294">The pipe hasn't been connected yet.</span></span>

<span data-ttu-id="c4a14-295">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-295">-or-</span></span>

<span data-ttu-id="c4a14-296">パイプが切断状態になっています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-296">The pipe is in a disconnected state.</span></span>

<span data-ttu-id="c4a14-297">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-297">-or-</span></span>

<span data-ttu-id="c4a14-298">パイプ ハンドルがまだ設定されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-298">The pipe handle has not been set.</span></span> <span data-ttu-id="c4a14-299">(<see cref="T:System.IO.Pipes.PipeStream" /> 実装で <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> を呼び出しましたか?</span><span class="sxs-lookup"><span data-stu-id="c4a14-299">(Did your <see cref="T:System.IO.Pipes.PipeStream" /> implementation call <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />?</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="pipeStream.Read (buffer, offset, count)" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 count) cil managed" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([in]unsigned int8[] buffer, int32 offset, int32 count) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c4a14-300">このメソッドが返されるときに、指定したバイト配列の <paramref name="offset" /> から (<paramref name="offset" /> + <paramref name="count" /> - 1) までの値が、現在のソースから読み取られたバイトに置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-300">When this method returns, contains the specified byte array with the values between <paramref name="offset" /> and (<paramref name="offset" /> + <paramref name="count" /> - 1) replaced by the bytes read from the current source.</span></span></param>
        <param name="offset"><span data-ttu-id="c4a14-301">読み取られるバイトが配置される <paramref name="buffer" /> 配列内のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="c4a14-301">The byte offset in the <paramref name="buffer" /> array at which the bytes that are read will be placed.</span></span></param>
        <param name="count"><span data-ttu-id="c4a14-302">読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="c4a14-302">The maximum number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="c4a14-303">ストリームからバイトのブロックを読み取り、指定した長さの指定した位置を開始位置として、指定したバッファーにデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-303">Reads a block of bytes from a stream and writes the data to a specified buffer starting at a specified position for a specified length.</span></span></summary>
        <returns><span data-ttu-id="c4a14-304"><paramref name="buffer" /> に読み取られる合計バイト数。</span><span class="sxs-lookup"><span data-stu-id="c4a14-304">The total number of bytes that are read into <paramref name="buffer" />.</span></span> <span data-ttu-id="c4a14-305">要求しただけのバイト数を読み取ることができなかった場合、この値は要求したバイト数より小さくなります。ストリームの末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="c4a14-305">This might be less than the number of bytes requested if that number of bytes is not currently available, or 0 if the end of the stream is reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-306">現在の <xref:System.IO.Pipes.PipeStream> オブジェクトが読み取り操作をサポートするかどうかを判断するには、<xref:System.IO.Pipes.PipeStream.CanRead%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-306">Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.</span></span>  
  
 <span data-ttu-id="c4a14-307"><xref:System.IO.Pipes.PipeStream.Read%2A> メソッドを呼び出すと、`count` バイトが読み込まれるか、ストリームの末尾に到達するまでブロックされます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-307">Calling the <xref:System.IO.Pipes.PipeStream.Read%2A> method blocks until `count` bytes are read or the end of the stream is reached.</span></span> <span data-ttu-id="c4a14-308">非同期の読み取り操作については、「<xref:System.IO.Pipes.PipeStream.BeginRead%2A>」および「<xref:System.IO.Pipes.PipeStream.EndRead%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4a14-308">For asynchronous read operations, see <xref:System.IO.Pipes.PipeStream.BeginRead%2A> and <xref:System.IO.Pipes.PipeStream.EndRead%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4a14-309">次の例では、匿名パイプクライアントとパイプサーバーを作成します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-309">The following example creates an anonymous pipe client and pipe server.</span></span> <span data-ttu-id="c4a14-310">パイプサーバーは、<xref:System.IO.Pipes.PipeStream.Read%2A> メソッドを使用して、パイプクライアントから一連のバイトを検証コードとして読み取ります。</span><span class="sxs-lookup"><span data-stu-id="c4a14-310">The pipe server uses the <xref:System.IO.Pipes.PipeStream.Read%2A> method to read a series of bytes from the pipe client as a validation code.</span></span> <span data-ttu-id="c4a14-311">パイプクライアントとパイプサーバーの両方が同じ例に含まれています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-311">Both the pipe client and the pipe server are part of the same example.</span></span> <span data-ttu-id="c4a14-312">この例のサーバー部分では、クライアントプロセスを作成し、それに匿名パイプハンドルを引数として渡します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-312">The server portion of the example creates a client process and passes it an anonymous pipe handle as an argument.</span></span>  
  
 [!code-cpp[System.IO.Pipes.PipeStream#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.io.pipes.pipestream/cpp/sample.cpp#1)]
 [!code-csharp[System.IO.Pipes.PipeStream#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.pipes.pipestream/cs/sample.cs#1)]
 [!code-vb[System.IO.Pipes.PipeStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.pipes.pipestream/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4a14-313"><paramref name="buffer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-313"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4a14-314"><paramref name="offset" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-314"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="c4a14-315">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-315">-or-</span></span> 
 <span data-ttu-id="c4a14-316"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-316"><paramref name="count" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4a14-317"><paramref name="count" /> は <paramref name="buffer" /> で使用可能なバイト数を超えています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-317"><paramref name="count" /> is greater than the number of bytes available in <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c4a14-318">パイプは閉じています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-318">The pipe is closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-319">パイプは、読み込み操作をサポートしません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-319">The pipe does not support read operations.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4a14-320">パイプが切断されているか、接続を待機しているか、またはハンドルが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-320">The pipe is disconnected, waiting to connect, or the handle has not been set.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c4a14-321">何らかの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c4a14-321">Any I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAsync (buffer As Memory(Of Byte), Optional cancellationToken As CancellationToken = null) As ValueTask(Of Integer)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="pipeStream.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c4a14-322">データを書き込むメモリの領域。</span><span class="sxs-lookup"><span data-stu-id="c4a14-322">The region of memory to write the data into.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="c4a14-323">キャンセル要求を監視するトークン。</span><span class="sxs-lookup"><span data-stu-id="c4a14-323">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="c4a14-324">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-324">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="c4a14-325">現在のストリームからバイト シーケンスを非同期に読み取り、バイト メモリの範囲に書き込んで、読み取ったバイト数だけストリーム内の位置を進め、キャンセル要求を監視します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-325">Asynchronously reads a sequence of bytes from the current stream, writes them to a byte memory range, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="c4a14-326">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="c4a14-326">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="c4a14-327">その <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> プロパティの値には、バッファーに読み取られるバイトの合計数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-327">The value of its <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> property contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="c4a14-328">要求しただけのバイト数を読み取ることができなかった場合、結果の値はバッファーに割り当てられているバイト数より小さくなります。ストリームの末尾に到達した場合は 0 (ゼロ) になることがあります。</span><span class="sxs-lookup"><span data-stu-id="c4a14-328">The result value can be less than the number of bytes allocated in the buffer if that many bytes are not currently available, or it can be 0 (zero) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="c4a14-329"><xref:System.IO.Pipes.PipeStream.ReadAsync%2A> メソッドを使用すると、メインスレッドをブロックせずに、リソースを集中的に使用する i/o 操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-329">The <xref:System.IO.Pipes.PipeStream.ReadAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="c4a14-330">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-330">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="c4a14-331">非同期メソッドは Visual Basic およびC#の `await` キーワード `async` と組み合わせて使用されます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-331">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  

<span data-ttu-id="c4a14-332">現在のインスタンスが読み取りをサポートしているかどうかを確認するには、<xref:System.IO.Pipes.PipeStream.CanRead%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-332">Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  

<span data-ttu-id="c4a14-333">操作が完了前にキャンセルされた場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Status> プロパティの <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> 値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-333">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status> property.</span></span>  

          ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-334">ストリームは読み取りをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-334">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c4a14-335">閉じたパイプにアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-335">Cannot access a closed pipe.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4a14-336">パイプがまだ接続されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-336">The pipe hasn't been connected yet.</span></span>

<span data-ttu-id="c4a14-337">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-337">-or-</span></span>

<span data-ttu-id="c4a14-338">パイプが切断状態になっています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-338">The pipe is in a disconnected state.</span></span>

<span data-ttu-id="c4a14-339">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-339">-or-</span></span>

<span data-ttu-id="c4a14-340">パイプ ハンドルがまだ設定されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-340">The pipe handle has not been set.</span></span> <span data-ttu-id="c4a14-341">(<see cref="T:System.IO.Pipes.PipeStream" /> 実装で <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> を呼び出しましたか?</span><span class="sxs-lookup"><span data-stu-id="c4a14-341">(Did your <see cref="T:System.IO.Pipes.PipeStream" /> implementation call <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />?</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAsync (buffer As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="pipeStream.ReadAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c4a14-342">データを書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="c4a14-342">The buffer to write the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="c4a14-343">ストリームからのデータの書き込み開始位置を示す <paramref name="buffer" /> 内のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="c4a14-343">The byte offset in <paramref name="buffer" /> at which to begin writing data from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="c4a14-344">読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="c4a14-344">The maximum number of bytes to read.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="c4a14-345">キャンセル要求を監視するトークン。</span><span class="sxs-lookup"><span data-stu-id="c4a14-345">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="c4a14-346">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-346">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="c4a14-347">現在のストリームからバイト シーケンスを、指定したバイト数の指定した位置を開始位置としてバイト配列に非同期に読み取り、読み取ったバイト数だけストリーム内の位置を進め、キャンセル要求を監視します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-347">Asynchronously reads a sequence of bytes from the current stream to a byte array starting at a specified position for a specified number of bytes, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="c4a14-348">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="c4a14-348">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="c4a14-349">その <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティの値には、バッファーに読み取られるバイトの合計数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-349">The value of its <see cref="P:System.Threading.Tasks.Task`1.Result" /> property contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="c4a14-350">現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、ストリームの末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="c4a14-350">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="c4a14-351"><xref:System.IO.Pipes.PipeStream.ReadAsync%2A> メソッドを使用すると、メインスレッドをブロックせずに、リソースを集中的に使用する i/o 操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-351">The <xref:System.IO.Pipes.PipeStream.ReadAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="c4a14-352">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-352">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="c4a14-353">非同期メソッドは Visual Basic およびC#の `await` キーワード `async` と組み合わせて使用されます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-353">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="c4a14-354">現在のインスタンスが読み取りをサポートしているかどうかを確認するには、<xref:System.IO.Pipes.PipeStream.CanRead%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-354">Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>

<span data-ttu-id="c4a14-355">操作が完了前にキャンセルされた場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Status%2A> プロパティの <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> 値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-355">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-356">ストリームは読み取りをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-356">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c4a14-357">閉じたパイプにアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-357">Cannot access a closed pipe.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4a14-358">パイプがまだ接続されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-358">The pipe hasn't been connected yet.</span></span>

<span data-ttu-id="c4a14-359">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-359">-or-</span></span>

<span data-ttu-id="c4a14-360">パイプが切断状態になっています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-360">The pipe is in a disconnected state.</span></span>

<span data-ttu-id="c4a14-361">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-361">-or-</span></span>

<span data-ttu-id="c4a14-362">パイプ ハンドルがまだ設定されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-362">The pipe handle has not been set.</span></span> <span data-ttu-id="c4a14-363">(<see cref="T:System.IO.Pipes.PipeStream" /> 実装で <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> を呼び出しましたか?</span><span class="sxs-lookup"><span data-stu-id="c4a14-363">(Did your <see cref="T:System.IO.Pipes.PipeStream" /> implementation call <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />?</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberSignature Language="F#" Value="override this.ReadByte : unit -&gt; int" Usage="pipeStream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4a14-364">パイプからバイトを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="c4a14-364">Reads a byte from a pipe.</span></span></summary>
        <returns><span data-ttu-id="c4a14-365"><see cref="T:System.Int32" /> にキャストしたバイト。ストリームの末尾に達した (パイプが閉じられている) 場合は -1。</span><span class="sxs-lookup"><span data-stu-id="c4a14-365">The byte, cast to <see cref="T:System.Int32" />, or -1 indicates the end of the stream (the pipe has been closed).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-366">現在の <xref:System.IO.Pipes.PipeStream> オブジェクトが読み取り操作をサポートするかどうかを判断するには、<xref:System.IO.Pipes.PipeStream.CanRead%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-366">Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c4a14-367">パイプは閉じています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-367">The pipe is closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-368">パイプは、読み込み操作をサポートしません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-368">The pipe does not support read operations.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4a14-369">パイプが切断されているか、接続を待機しているか、またはハンドルが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-369">The pipe is disconnected, waiting to connect, or the handle has not been set.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c4a14-370">何らかの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c4a14-370">Any I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadMode">
      <MemberSignature Language="C#" Value="public virtual System.IO.Pipes.PipeTransmissionMode ReadMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode ReadMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.ReadMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode ReadMode { System::IO::Pipes::PipeTransmissionMode get(); void set(System::IO::Pipes::PipeTransmissionMode value); };" />
      <MemberSignature Language="F#" Value="member this.ReadMode : System.IO.Pipes.PipeTransmissionMode with get, set" Usage="System.IO.Pipes.PipeStream.ReadMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4a14-371"><see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトの読み取りモードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-371">Gets or sets the reading mode for a <see cref="T:System.IO.Pipes.PipeStream" /> object.</span></span></summary>
        <value><span data-ttu-id="c4a14-372"><see cref="T:System.IO.Pipes.PipeTransmissionMode" /> オブジェクトがパイプから読み取る方法を示す、いずれかの <see cref="T:System.IO.Pipes.PipeStream" /> 値。</span><span class="sxs-lookup"><span data-stu-id="c4a14-372">One of the <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> values that indicates how the <see cref="T:System.IO.Pipes.PipeStream" /> object reads from the pipe.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-373">匿名パイプでは、<xref:System.IO.Pipes.PipeTransmissionMode.Message> モードのメッセージ転送はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-373">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> mode message transmission.</span></span>  

 <span data-ttu-id="c4a14-374">`ReadMode`への <xref:System.InvalidOperationException> アクセスを避けるために、<xref:System.IO.Pipes.PipeStream.IsConnected> を使用してパイプが接続されていることを確認できます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-374">To avoid an <xref:System.InvalidOperationException> accessing `ReadMode`, <xref:System.IO.Pipes.PipeStream.IsConnected> can be used to verify the pipe is connected.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4a14-375">指定された値が有効な <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-375">The supplied value is not a valid <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> value.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-376">指定された値が、このパイプ ストリームでサポートされている <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-376">The supplied value is not a supported <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> value for this pipe stream.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4a14-377">ハンドルがまだ設定されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-377">The handle has not been set.</span></span>  
  
 <span data-ttu-id="c4a14-378">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-378">-or-</span></span>  
  
 <span data-ttu-id="c4a14-379">パイプが名前付きクライアントとの接続を待機しています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-379">The pipe is waiting to connect with a named client.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c4a14-380">パイプが破損しているか、または名前付きクライアントで I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c4a14-380">The pipe is broken or an I/O error occurred with a named client.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SafePipeHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafePipeHandle SafePipeHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafePipeHandle SafePipeHandle" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafePipeHandle As SafePipeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafePipeHandle ^ SafePipeHandle { Microsoft::Win32::SafeHandles::SafePipeHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafePipeHandle : Microsoft.Win32.SafeHandles.SafePipeHandle" Usage="System.IO.Pipes.PipeStream.SafePipeHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafePipeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4a14-381">現在の <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトによってカプセル化されるパイプのローカルの終端のセーフ ハンドルを取得します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-381">Gets the safe handle for the local end of the pipe that the current <see cref="T:System.IO.Pipes.PipeStream" /> object encapsulates.</span></span></summary>
        <value><span data-ttu-id="c4a14-382">現在の <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> オブジェクトによってカプセル化されるパイプの <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c4a14-382">A <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> object for the pipe that is encapsulated by the current <see cref="T:System.IO.Pipes.PipeStream" /> object.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4a14-383">パイプ ハンドルがまだ設定されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-383">The pipe handle has not been set.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c4a14-384">パイプは閉じています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-384">The pipe is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="pipeStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="c4a14-385">シークの開始位置 <paramref name="origin" /> からの相対的なポイント。</span><span class="sxs-lookup"><span data-stu-id="c4a14-385">The point, relative to <paramref name="origin" />, to begin seeking from.</span></span></param>
        <param name="origin"><span data-ttu-id="c4a14-386"><see cref="T:System.IO.SeekOrigin" /> 型の値を使用して、<paramref name="offset" /> の参照ポイントとして先頭、末尾、または現在位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-386">Specifies the beginning, the end, or the current position as a reference point for <paramref name="offset" />, using a value of type <see cref="T:System.IO.SeekOrigin" />.</span></span></param>
        <summary><span data-ttu-id="c4a14-387">現在のストリームの現在位置を、指定した値に設定します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-387">Sets the current position of the current stream to the specified value.</span></span></summary>
        <returns><span data-ttu-id="c4a14-388">ストリームの新しい位置。</span><span class="sxs-lookup"><span data-stu-id="c4a14-388">The new position in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-389"><xref:System.IO.Pipes.PipeStream.Seek%2A> メソッドはパイプではサポートされておらず、呼び出されたときに <xref:System.NotSupportedException> を発生させます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-389">The <xref:System.IO.Pipes.PipeStream.Seek%2A> method is not supported in pipes and raises a <xref:System.NotSupportedException> when it is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.IO.Pipes.PipeSecurity pipeSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.IO.Pipes.PipeSecurity pipeSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessControl (pipeSecurity As PipeSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::IO::Pipes::PipeSecurity ^ pipeSecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.IO.Pipes.PipeSecurity -&gt; unit" Usage="pipeStream.SetAccessControl pipeSecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pipeSecurity"><span data-ttu-id="c4a14-390">現在のパイプに適用するアクセス制御リスト (ACL) エントリを指定する <see cref="T:System.IO.Pipes.PipeSecurity" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c4a14-390">A <see cref="T:System.IO.Pipes.PipeSecurity" /> object that specifies an access control list (ACL) entry to apply to the current pipe.</span></span></param>
        <summary><span data-ttu-id="c4a14-391"><see cref="T:System.IO.Pipes.PipeSecurity" /> オブジェクトで指定されたアクセス制御リスト (ACL) エントリを、現在の <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトで指定されたパイプに適用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-391">Applies the access control list (ACL) entries specified by a <see cref="T:System.IO.Pipes.PipeSecurity" /> object to the pipe specified by the current <see cref="T:System.IO.Pipes.PipeStream" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-392">アクセス制御リスト (ACL) は、指定されたファイルに対して特定のアクションを実行する権限を持っている、または所有していない個人やグループを表します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-392">An access control list (ACL) describes individuals and/or groups that have, or do not have, rights to perform specific actions on a specified file.</span></span> <span data-ttu-id="c4a14-393">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4a14-393">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c4a14-394">パイプは閉じています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-394">The pipe is closed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4a14-395"><paramref name="pipeSecurity" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-395"><paramref name="pipeSecurity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c4a14-396">セキュリティ情報の設定の基になる呼び出しが失敗しました。</span><span class="sxs-lookup"><span data-stu-id="c4a14-396">The underlying call to set security information failed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4a14-397">セキュリティ情報の設定の基になる呼び出しが失敗しました。</span><span class="sxs-lookup"><span data-stu-id="c4a14-397">The underlying call to set security information failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-398">セキュリティ情報の設定の基になる呼び出しが失敗しました。</span><span class="sxs-lookup"><span data-stu-id="c4a14-398">The underlying call to set security information failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="pipeStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c4a14-399">ストリームの新しい長さ。</span><span class="sxs-lookup"><span data-stu-id="c4a14-399">The new length of the stream.</span></span></param>
        <summary><span data-ttu-id="c4a14-400">現在のストリーム長を指定した値に設定します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-400">Sets the length of the current stream to the specified value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-401"><xref:System.IO.Pipes.PipeStream> クラスは、<xref:System.IO.Pipes.PipeStream.SetLength%2A> メソッドをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-401">The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.SetLength%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransmissionMode">
      <MemberSignature Language="C#" Value="public virtual System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode TransmissionMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.TransmissionMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TransmissionMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode TransmissionMode { System::IO::Pipes::PipeTransmissionMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TransmissionMode : System.IO.Pipes.PipeTransmissionMode" Usage="System.IO.Pipes.PipeStream.TransmissionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4a14-402">現在のパイプでサポートされるパイプ送信モードを取得します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-402">Gets the pipe transmission mode supported by the current pipe.</span></span></summary>
        <value><span data-ttu-id="c4a14-403">現在のパイプでサポートされている送信モードを示す、いずれかの <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 値。</span><span class="sxs-lookup"><span data-stu-id="c4a14-403">One of the <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> values that indicates the transmission mode supported by the current pipe.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-404">匿名パイプでは、<xref:System.IO.Pipes.PipeTransmissionMode.Message> モードのメッセージ転送はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-404">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> mode message transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c4a14-405">パイプは閉じています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-405">The pipe is closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4a14-406">ハンドルがまだ設定されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-406">The handle has not been set.</span></span>  
  
 <span data-ttu-id="c4a14-407">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-407">-or-</span></span>  
  
 <span data-ttu-id="c4a14-408">パイプは、匿名クライアント / サーバーの操作、または名前付きのクライアントとの接続を待機しています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-408">The pipe is waiting to connect in an anonymous client/server operation or with a named client.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c4a14-409">パイプが壊れているか、別の I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c4a14-409">The pipe is broken or another I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitForPipeDrain">
      <MemberSignature Language="C#" Value="public void WaitForPipeDrain ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WaitForPipeDrain() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
      <MemberSignature Language="VB.NET" Value="Public Sub WaitForPipeDrain ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WaitForPipeDrain();" />
      <MemberSignature Language="F#" Value="member this.WaitForPipeDrain : unit -&gt; unit" Usage="pipeStream.WaitForPipeDrain " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4a14-410">パイプのもう一方の終端が、送信されたすべてのバイトを読み取るまで待機します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-410">Waits for the other end of the pipe to read all sent bytes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-411"><xref:System.IO.Pipes.PipeStream.WaitForPipeDrain%2A> メソッドは、パイプのもう一方の終端が、送信されたすべてのバイトを読み取るまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="c4a14-411">The <xref:System.IO.Pipes.PipeStream.WaitForPipeDrain%2A> method blocks until the other end of the pipe has read all sent bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c4a14-412">パイプは閉じています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-412">The pipe is closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-413">パイプは書き込み操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-413">The pipe does not support write operations.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c4a14-414">パイプが壊れているか、別の I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c4a14-414">The pipe is broken or another I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="pipeStream.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c4a14-415">メモリの領域。</span><span class="sxs-lookup"><span data-stu-id="c4a14-415">A region of memory.</span></span> <span data-ttu-id="c4a14-416">このメソッドでは、この領域のコンテンツが現在のストリームにコピーされます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-416">This method copies the contents of this region to the current stream.</span></span></param>
        <summary><span data-ttu-id="c4a14-417">現在のストリームにバイト シーケンスを書き込み、書き込んだバイト数だけストリーム内の現在位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-417">Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="c4a14-418">現在のインスタンスが書き込みをサポートしているかどうかを判断するには、<xref:System.IO.Pipes.PipeStream.CanWrite%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-418">Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span> <span data-ttu-id="c4a14-419">現在のストリームに非同期に書き込むには、<xref:System.IO.Pipes.PipeStream.WriteAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-419">Use the <xref:System.IO.Pipes.PipeStream.WriteAsync%2A> method to write asynchronously to the current stream.</span></span>  

<span data-ttu-id="c4a14-420">書き込み操作が成功した場合、ストリーム内の位置は、書き込まれたバイト数だけ進みます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-420">If the write operation is successful, the position within the stream advances by the number of bytes written.</span></span> <span data-ttu-id="c4a14-421">例外が発生した場合、ストリーム内の位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-421">If an exception occurs, the position within the stream remains unchanged.</span></span>  

          ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-422">ストリームは書き込みをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-422">The stream does not support writing.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c4a14-423">閉じたパイプにアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-423">Cannot access a closed pipe.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c4a14-424">パイプが接続解除されています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-424">The pipe is broken.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4a14-425">パイプがまだ接続されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-425">The pipe hasn't been connected yet.</span></span>

<span data-ttu-id="c4a14-426">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-426">-or-</span></span>

<span data-ttu-id="c4a14-427">パイプが切断状態になっています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-427">The pipe is in a disconnected state.</span></span>

<span data-ttu-id="c4a14-428">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-428">-or-</span></span>

<span data-ttu-id="c4a14-429">パイプ ハンドルがまだ設定されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-429">The pipe handle has not been set.</span></span> <span data-ttu-id="c4a14-430">(<see cref="T:System.IO.Pipes.PipeStream" /> 実装で <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> を呼び出しましたか?</span><span class="sxs-lookup"><span data-stu-id="c4a14-430">(Did your <see cref="T:System.IO.Pipes.PipeStream" /> implementation call <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />?</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="pipeStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c4a14-431">パイプに書き込むデータを格納しているバッファー。</span><span class="sxs-lookup"><span data-stu-id="c4a14-431">The buffer that contains data to write to the pipe.</span></span></param>
        <param name="offset"><span data-ttu-id="c4a14-432">現在のストリームへのバイトのコピーを開始する位置を示す <paramref name="buffer" /> 内のバイト オフセット。インデックス番号は 0 から始まります。</span><span class="sxs-lookup"><span data-stu-id="c4a14-432">The zero-based byte offset in <paramref name="buffer" /> at which to begin copying bytes to the current stream.</span></span></param>
        <param name="count"><span data-ttu-id="c4a14-433">現在のストリームに書き込む最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="c4a14-433">The maximum number of bytes to write to the current stream.</span></span></param>
        <summary><span data-ttu-id="c4a14-434">バッファーのデータを使用して、現在のストリームにバイトのブロックを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-434">Writes a block of bytes to the current stream using data from a buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-435">現在の <xref:System.IO.Pipes.PipeStream> オブジェクトが書き込み操作をサポートしているかどうかを判断するには、<xref:System.IO.Pipes.PipeStream.CanWrite%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-435">Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.</span></span>  
  
 <span data-ttu-id="c4a14-436">非同期の書き込み操作については、<xref:System.IO.Pipes.PipeStream.BeginWrite%2A> と <xref:System.IO.Pipes.PipeStream.EndWrite%2A>に関する記述を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4a14-436">For asynchronous write operations, see <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> and <xref:System.IO.Pipes.PipeStream.EndWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4a14-437"><paramref name="buffer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-437"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4a14-438"><paramref name="offset" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-438"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="c4a14-439">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-439">-or-</span></span> 
 <span data-ttu-id="c4a14-440"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-440"><paramref name="count" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4a14-441"><paramref name="count" /> は <paramref name="buffer" /> で使用可能なバイト数を超えています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-441"><paramref name="count" /> is greater than the number of bytes available in <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c4a14-442">パイプは閉じています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-442">The pipe is closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-443">パイプは書き込み操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-443">The pipe does not support write operations.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c4a14-444">パイプが壊れているか、別の I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c4a14-444">The pipe is broken or another I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask WriteAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (buffer As ReadOnlyMemory(Of Byte), Optional cancellationToken As CancellationToken = null) As ValueTask" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="pipeStream.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c4a14-445">データを書き込む元のメモリの領域。</span><span class="sxs-lookup"><span data-stu-id="c4a14-445">The region of memory to write data from.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="c4a14-446">キャンセル要求を監視するトークン。</span><span class="sxs-lookup"><span data-stu-id="c4a14-446">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="c4a14-447">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-447">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="c4a14-448">現在のストリームにバイト シーケンスを非同期に書き込み、書き込んだバイト数だけストリーム内の現在位置を進め、キャンセル要求を監視します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-448">Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="c4a14-449">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="c4a14-449">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="c4a14-450"><xref:System.IO.Pipes.PipeStream.WriteAsync%2A> メソッドを使用すると、メインスレッドをブロックせずに、リソースを集中的に使用する i/o 操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-450">The <xref:System.IO.Pipes.PipeStream.WriteAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="c4a14-451">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-451">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="c4a14-452">非同期メソッドは Visual Basic およびC#の `await` キーワード `async` と組み合わせて使用されます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-452">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="c4a14-453">現在のインスタンスが書き込みをサポートしているかどうかを判断するには、<xref:System.IO.Pipes.PipeStream.CanWrite%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-453">Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>

<span data-ttu-id="c4a14-454">操作が完了前にキャンセルされた場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Status%2A> プロパティの <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithtype> 値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-454">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithtype> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-455">ストリームは書き込みをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-455">Stream does not support writing.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c4a14-456">閉じたパイプにアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-456">Cannot access a closed pipe.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c4a14-457">パイプが接続解除されています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-457">The pipe is broken.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4a14-458">パイプがまだ接続されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-458">The pipe hasn't been connected yet.</span></span>

<span data-ttu-id="c4a14-459">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-459">-or-</span></span>

<span data-ttu-id="c4a14-460">パイプが切断状態になっています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-460">The pipe is in a disconnected state.</span></span>

<span data-ttu-id="c4a14-461">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-461">-or-</span></span>

<span data-ttu-id="c4a14-462">パイプ ハンドルがまだ設定されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-462">The pipe handle has not been set.</span></span> <span data-ttu-id="c4a14-463">(<see cref="T:System.IO.Pipes.PipeStream" /> 実装で <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> を呼び出しましたか?</span><span class="sxs-lookup"><span data-stu-id="c4a14-463">(Did your <see cref="T:System.IO.Pipes.PipeStream" /> implementation call <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />?</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (buffer As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="pipeStream.WriteAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c4a14-464">書き込むデータの取得元のバッファーです。</span><span class="sxs-lookup"><span data-stu-id="c4a14-464">The buffer to write data from.</span></span></param>
        <param name="offset"><span data-ttu-id="c4a14-465">ストリームへのバイトのコピーを開始する位置を示す <paramref name="buffer" /> 内のバイト オフセット。インデックス番号は 0 から始まります。</span><span class="sxs-lookup"><span data-stu-id="c4a14-465">The zero-based byte offset in <paramref name="buffer" /> from which to begin copying bytes to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="c4a14-466">書き込む最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="c4a14-466">The maximum number of bytes to write.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="c4a14-467">キャンセル要求を監視するトークン。</span><span class="sxs-lookup"><span data-stu-id="c4a14-467">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="c4a14-468">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-468">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="c4a14-469">指定した位置を開始位置としてバイト配列から指定したバイト数を非同期に書き込み、書き込んだバイト数だけこのストリーム内の現在の位置を進め、キャンセル要求を監視します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-469">Asynchronously writes a specified number of bytes from a byte array starting at a specified position, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="c4a14-470">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="c4a14-470">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="c4a14-471"><xref:System.IO.Pipes.PipeStream.WriteAsync%2A> メソッドを使用すると、メインスレッドをブロックせずに、リソースを集中的に使用する i/o 操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-471">The <xref:System.IO.Pipes.PipeStream.WriteAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="c4a14-472">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-472">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="c4a14-473">非同期メソッドは Visual Basic およびC#の `await` キーワード `async` と組み合わせて使用されます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-473">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="c4a14-474">現在のインスタンスが書き込みをサポートしているかどうかを判断するには、<xref:System.IO.Pipes.PipeStream.CanWrite%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-474">Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>

<span data-ttu-id="c4a14-475">操作が完了前にキャンセルされた場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Status%2A> プロパティの <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> 値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-475">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4a14-476"><paramref name="buffer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-476"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4a14-477"><paramref name="offset" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-477">The <paramref name="offset" /> is negative.</span></span>

<span data-ttu-id="c4a14-478">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-478">-or-</span></span>

<span data-ttu-id="c4a14-479"><paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="c4a14-479">The <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4a14-480"><paramref name="buffer" />.Length - <paramref name="offset" /> が <paramref name="count" /> より小さいです。</span><span class="sxs-lookup"><span data-stu-id="c4a14-480"><paramref name="buffer" />.Length - <paramref name="offset" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-481">ストリームは書き込みをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-481">Stream does not support writing.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c4a14-482">閉じたパイプにアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-482">Cannot access a closed pipe.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c4a14-483">パイプが接続解除されています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-483">The pipe is broken.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4a14-484">パイプがまだ接続されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-484">The pipe hasn't been connected yet.</span></span>

<span data-ttu-id="c4a14-485">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-485">-or-</span></span>

<span data-ttu-id="c4a14-486">パイプが切断状態になっています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-486">The pipe is in a disconnected state.</span></span>

<span data-ttu-id="c4a14-487">または</span><span class="sxs-lookup"><span data-stu-id="c4a14-487">-or-</span></span>

<span data-ttu-id="c4a14-488">パイプ ハンドルがまだ設定されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-488">The pipe handle has not been set.</span></span> <span data-ttu-id="c4a14-489">(<see cref="T:System.IO.Pipes.PipeStream" /> 実装で <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> を呼び出しましたか?</span><span class="sxs-lookup"><span data-stu-id="c4a14-489">(Did your <see cref="T:System.IO.Pipes.PipeStream" /> implementation call <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />?</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="override this.WriteByte : byte -&gt; unit" Usage="pipeStream.WriteByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c4a14-490">ストリームに書き込むバイト。</span><span class="sxs-lookup"><span data-stu-id="c4a14-490">The byte to write to the stream.</span></span></param>
        <summary><span data-ttu-id="c4a14-491">現在のストリームにバイトを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="c4a14-491">Writes a byte to the current stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a14-492">現在の <xref:System.IO.Pipes.PipeStream> オブジェクトが書き込み操作をサポートしているかどうかを判断するには、<xref:System.IO.Pipes.PipeStream.CanWrite%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c4a14-492">Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c4a14-493">パイプは閉じています。</span><span class="sxs-lookup"><span data-stu-id="c4a14-493">The pipe is closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4a14-494">パイプは書き込み操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-494">The pipe does not support write operations.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4a14-495">パイプが切断されているか、接続を待機しているか、またはハンドルが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="c4a14-495">The pipe is disconnected, waiting to connect, or the handle has not been set.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c4a14-496">パイプが壊れているか、別の I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c4a14-496">The pipe is broken or another I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
