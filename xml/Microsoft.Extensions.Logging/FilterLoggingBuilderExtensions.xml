<Type Name="FilterLoggingBuilderExtensions" FullName="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f76ea7c0a577f624b843c27707622fe8b4344506" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75157855" /></Metadata><TypeSignature Language="C#" Value="public static class FilterLoggingBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FilterLoggingBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module FilterLoggingBuilderExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class FilterLoggingBuilderExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type FilterLoggingBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bccae-101"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> にログ サービスを設定するための拡張メソッド。</span><span class="sxs-lookup"><span data-stu-id="bccae-101">Extension methods for setting up logging services in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As ILoggingBuilder, levelFilter As Func(Of LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="bccae-102">フィルターを追加する <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-102">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="bccae-103">追加されるフィルター。</span><span class="sxs-lookup"><span data-stu-id="bccae-103">The filter to be added.</span></span></param>
        <summary><span data-ttu-id="bccae-104">ファクトリにログ フィルターを追加します。</span><span class="sxs-lookup"><span data-stu-id="bccae-104">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="bccae-105">追加の呼び出しをチェーンできるようにする <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-105">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Func&lt;string,Microsoft.Extensions.Logging.LogLevel,bool&gt; categoryLevelFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Func`3&lt;string, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; categoryLevelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As ILoggingBuilder, categoryLevelFilter As Func(Of String, LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Func&lt;System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ categoryLevelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * Func&lt;string, Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, categoryLevelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="categoryLevelFilter" Type="System.Func&lt;System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="bccae-106">フィルターを追加する <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-106">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="categoryLevelFilter"><span data-ttu-id="bccae-107">追加されるフィルター。</span><span class="sxs-lookup"><span data-stu-id="bccae-107">The filter to be added.</span></span></param>
        <summary><span data-ttu-id="bccae-108">ファクトリにログ フィルターを追加します。</span><span class="sxs-lookup"><span data-stu-id="bccae-108">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="bccae-109">追加の呼び出しをチェーンできるようにする <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-109">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Func&lt;string,string,Microsoft.Extensions.Logging.LogLevel,bool&gt; filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Func`4&lt;string, string, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{System.String,System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As ILoggingBuilder, filter As Func(Of String, String, LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Func&lt;System::String ^, System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * Func&lt;string, string, Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="filter" Type="System.Func&lt;System.String,System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="bccae-110">フィルターを追加する <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-110">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="filter"><span data-ttu-id="bccae-111">追加されるフィルター。</span><span class="sxs-lookup"><span data-stu-id="bccae-111">The filter to be added.</span></span></param>
        <summary><span data-ttu-id="bccae-112">ファクトリにログ フィルターを追加します。</span><span class="sxs-lookup"><span data-stu-id="bccae-112">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="bccae-113">追加の呼び出しをチェーンできるようにする <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-113">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.LoggerFilterOptions,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As LoggerFilterOptions, levelFilter As Func(Of LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="bccae-114">フィルターを追加する <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-114">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="bccae-115">適用するフィルター関数。</span><span class="sxs-lookup"><span data-stu-id="bccae-115">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="bccae-116">ファクトリにログ フィルターを追加します。</span><span class="sxs-lookup"><span data-stu-id="bccae-116">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="bccae-117">追加の呼び出しをチェーンできるようにする <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-117">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, Func&lt;string,Microsoft.Extensions.Logging.LogLevel,bool&gt; categoryLevelFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, class System.Func`3&lt;string, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; categoryLevelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.LoggerFilterOptions,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As LoggerFilterOptions, categoryLevelFilter As Func(Of String, LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, Func&lt;System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ categoryLevelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * Func&lt;string, Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, categoryLevelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="categoryLevelFilter" Type="System.Func&lt;System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="bccae-118">フィルターを追加する <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-118">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="categoryLevelFilter"><span data-ttu-id="bccae-119">適用するフィルター関数。</span><span class="sxs-lookup"><span data-stu-id="bccae-119">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="bccae-120">ファクトリにログ フィルターを追加します。</span><span class="sxs-lookup"><span data-stu-id="bccae-120">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="bccae-121">追加の呼び出しをチェーンできるようにする <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-121">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, Func&lt;string,string,Microsoft.Extensions.Logging.LogLevel,bool&gt; filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, class System.Func`4&lt;string, string, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.LoggerFilterOptions,System.Func{System.String,System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As LoggerFilterOptions, filter As Func(Of String, String, LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, Func&lt;System::String ^, System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * Func&lt;string, string, Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="filter" Type="System.Func&lt;System.String,System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="bccae-122">フィルターを追加する <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-122">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="filter"><span data-ttu-id="bccae-123">適用するフィルター関数。</span><span class="sxs-lookup"><span data-stu-id="bccae-123">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="bccae-124">ファクトリにログ フィルターを追加します。</span><span class="sxs-lookup"><span data-stu-id="bccae-124">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="bccae-125">追加の呼び出しをチェーンできるようにする <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-125">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter (this Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, Microsoft.Extensions.Logging.LogLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter(class Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, valuetype Microsoft.Extensions.Logging.LogLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.ILoggingBuilder,System.String,Microsoft.Extensions.Logging.LogLevel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As ILoggingBuilder, category As String, level As LogLevel) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, System::String ^ category, Microsoft::Extensions::Logging::LogLevel level);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * string * Microsoft.Extensions.Logging.LogLevel -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="level" Type="Microsoft.Extensions.Logging.LogLevel" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="bccae-126">フィルターを追加する <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-126">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="bccae-127">フィルター処理するカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="bccae-127">The category to filter.</span></span></param>
        <param name="level"><span data-ttu-id="bccae-128">フィルター処理するレベル。</span><span class="sxs-lookup"><span data-stu-id="bccae-128">The level to filter.</span></span></param>
        <summary><span data-ttu-id="bccae-129">ファクトリにログ フィルターを追加します。</span><span class="sxs-lookup"><span data-stu-id="bccae-129">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="bccae-130">追加の呼び出しをチェーンできるようにする <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-130">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter (this Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter(class Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.ILoggingBuilder,System.String,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As ILoggingBuilder, category As String, levelFilter As Func(Of LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, System::String ^ category, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * string * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="bccae-131">フィルターを追加する <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-131">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="bccae-132">フィルター処理するカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="bccae-132">The category to filter.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="bccae-133">適用するフィルター関数。</span><span class="sxs-lookup"><span data-stu-id="bccae-133">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="bccae-134">ファクトリにログ フィルターを追加します。</span><span class="sxs-lookup"><span data-stu-id="bccae-134">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="bccae-135">追加の呼び出しをチェーンできるようにする <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-135">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, Microsoft.Extensions.Logging.LogLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, valuetype Microsoft.Extensions.Logging.LogLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.LoggerFilterOptions,System.String,Microsoft.Extensions.Logging.LogLevel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As LoggerFilterOptions, category As String, level As LogLevel) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, System::String ^ category, Microsoft::Extensions::Logging::LogLevel level);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * string * Microsoft.Extensions.Logging.LogLevel -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="level" Type="Microsoft.Extensions.Logging.LogLevel" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="bccae-136">フィルターを追加する <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-136">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="bccae-137">フィルター処理するカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="bccae-137">The category to filter.</span></span></param>
        <param name="level"><span data-ttu-id="bccae-138">フィルター処理するレベル。</span><span class="sxs-lookup"><span data-stu-id="bccae-138">The level to filter.</span></span></param>
        <summary><span data-ttu-id="bccae-139">ファクトリにログ フィルターを追加します。</span><span class="sxs-lookup"><span data-stu-id="bccae-139">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="bccae-140">追加の呼び出しをチェーンできるようにする <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-140">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.LoggerFilterOptions,System.String,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As LoggerFilterOptions, category As String, levelFilter As Func(Of LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, System::String ^ category, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * string * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="bccae-141">フィルターを追加する <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-141">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="bccae-142">フィルター処理するカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="bccae-142">The category to filter.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="bccae-143">適用するフィルター関数。</span><span class="sxs-lookup"><span data-stu-id="bccae-143">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="bccae-144">ファクトリにログ フィルターを追加します。</span><span class="sxs-lookup"><span data-stu-id="bccae-144">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="bccae-145">追加の呼び出しをチェーンできるようにする <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-145">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As ILoggingBuilder, levelFilter As Func(Of LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bccae-146">このフィルターが追加される <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> です。</span><span class="sxs-lookup"><span data-stu-id="bccae-146">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="bccae-147">フィルターを追加する <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-147">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="bccae-148">追加されるフィルター。</span><span class="sxs-lookup"><span data-stu-id="bccae-148">The filter to be added.</span></span></param>
        <summary><span data-ttu-id="bccae-149">指定された <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> のログ フィルターを追加します。</span><span class="sxs-lookup"><span data-stu-id="bccae-149">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="bccae-150">追加の呼び出しをチェーンできるようにする <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-150">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Func&lt;string,Microsoft.Extensions.Logging.LogLevel,bool&gt; categoryLevelFilter) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Func`3&lt;string, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; categoryLevelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As ILoggingBuilder, categoryLevelFilter As Func(Of String, LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Func&lt;System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ categoryLevelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * Func&lt;string, Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, categoryLevelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="categoryLevelFilter" Type="System.Func&lt;System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bccae-151">このフィルターが追加される <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> です。</span><span class="sxs-lookup"><span data-stu-id="bccae-151">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="bccae-152">フィルターを追加する <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-152">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="categoryLevelFilter"><span data-ttu-id="bccae-153">追加されるフィルター。</span><span class="sxs-lookup"><span data-stu-id="bccae-153">The filter to be added.</span></span></param>
        <summary><span data-ttu-id="bccae-154">指定された <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> のログ フィルターを追加します。</span><span class="sxs-lookup"><span data-stu-id="bccae-154">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="bccae-155">追加の呼び出しをチェーンできるようにする <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-155">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.LoggerFilterOptions,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As LoggerFilterOptions, levelFilter As Func(Of LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bccae-156">このフィルターが追加される <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> です。</span><span class="sxs-lookup"><span data-stu-id="bccae-156">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="bccae-157">フィルターを追加する <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-157">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="bccae-158">適用するフィルター関数。</span><span class="sxs-lookup"><span data-stu-id="bccae-158">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="bccae-159">指定された <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> のログ フィルターを追加します。</span><span class="sxs-lookup"><span data-stu-id="bccae-159">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="bccae-160">追加の呼び出しをチェーンできるようにする <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-160">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, Func&lt;string,Microsoft.Extensions.Logging.LogLevel,bool&gt; categoryLevelFilter) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, class System.Func`3&lt;string, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; categoryLevelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.LoggerFilterOptions,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As LoggerFilterOptions, categoryLevelFilter As Func(Of String, LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, Func&lt;System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ categoryLevelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * Func&lt;string, Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, categoryLevelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="categoryLevelFilter" Type="System.Func&lt;System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bccae-161">このフィルターが追加される <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> です。</span><span class="sxs-lookup"><span data-stu-id="bccae-161">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="bccae-162">フィルターを追加する <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-162">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="categoryLevelFilter"><span data-ttu-id="bccae-163">適用するフィルター関数。</span><span class="sxs-lookup"><span data-stu-id="bccae-163">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="bccae-164">指定された <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> のログ フィルターを追加します。</span><span class="sxs-lookup"><span data-stu-id="bccae-164">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="bccae-165">追加の呼び出しをチェーンできるようにする <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-165">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, Microsoft.Extensions.Logging.LogLevel level) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, valuetype Microsoft.Extensions.Logging.LogLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.ILoggingBuilder,System.String,Microsoft.Extensions.Logging.LogLevel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As ILoggingBuilder, category As String, level As LogLevel) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, System::String ^ category, Microsoft::Extensions::Logging::LogLevel level);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * string * Microsoft.Extensions.Logging.LogLevel -&gt; Microsoft.Extensions.Logging.ILoggingBuilder (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="level" Type="Microsoft.Extensions.Logging.LogLevel" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bccae-166">このフィルターが追加される <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> です。</span><span class="sxs-lookup"><span data-stu-id="bccae-166">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="bccae-167">フィルターを追加する <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-167">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="bccae-168">フィルター処理するカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="bccae-168">The category to filter.</span></span></param>
        <param name="level"><span data-ttu-id="bccae-169">フィルター処理するレベル。</span><span class="sxs-lookup"><span data-stu-id="bccae-169">The level to filter.</span></span></param>
        <summary><span data-ttu-id="bccae-170">指定された <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> のログ フィルターを追加します。</span><span class="sxs-lookup"><span data-stu-id="bccae-170">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="bccae-171">追加の呼び出しをチェーンできるようにする <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-171">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.ILoggingBuilder,System.String,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As ILoggingBuilder, category As String, levelFilter As Func(Of LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, System::String ^ category, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * string * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bccae-172">このフィルターが追加される <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> です。</span><span class="sxs-lookup"><span data-stu-id="bccae-172">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="bccae-173">フィルターを追加する <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-173">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="bccae-174">フィルター処理するカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="bccae-174">The category to filter.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="bccae-175">適用するフィルター関数。</span><span class="sxs-lookup"><span data-stu-id="bccae-175">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="bccae-176">指定された <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> のログ フィルターを追加します。</span><span class="sxs-lookup"><span data-stu-id="bccae-176">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="bccae-177">追加の呼び出しをチェーンできるようにする <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-177">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, Microsoft.Extensions.Logging.LogLevel level) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, valuetype Microsoft.Extensions.Logging.LogLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.LoggerFilterOptions,System.String,Microsoft.Extensions.Logging.LogLevel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As LoggerFilterOptions, category As String, level As LogLevel) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, System::String ^ category, Microsoft::Extensions::Logging::LogLevel level);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * string * Microsoft.Extensions.Logging.LogLevel -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="level" Type="Microsoft.Extensions.Logging.LogLevel" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bccae-178">このフィルターが追加される <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> です。</span><span class="sxs-lookup"><span data-stu-id="bccae-178">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="bccae-179">フィルターを追加する <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-179">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="bccae-180">フィルター処理するカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="bccae-180">The category to filter.</span></span></param>
        <param name="level"><span data-ttu-id="bccae-181">フィルター処理するレベル。</span><span class="sxs-lookup"><span data-stu-id="bccae-181">The level to filter.</span></span></param>
        <summary><span data-ttu-id="bccae-182">指定された <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> のログ フィルターを追加します。</span><span class="sxs-lookup"><span data-stu-id="bccae-182">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="bccae-183">追加の呼び出しをチェーンできるようにする <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-183">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.LoggerFilterOptions,System.String,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As LoggerFilterOptions, category As String, levelFilter As Func(Of LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, System::String ^ category, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * string * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bccae-184">このフィルターが追加される <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> です。</span><span class="sxs-lookup"><span data-stu-id="bccae-184">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="bccae-185">フィルターを追加する <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-185">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="bccae-186">フィルター処理するカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="bccae-186">The category to filter.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="bccae-187">適用するフィルター関数。</span><span class="sxs-lookup"><span data-stu-id="bccae-187">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="bccae-188">指定された <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> のログ フィルターを追加します。</span><span class="sxs-lookup"><span data-stu-id="bccae-188">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="bccae-189">追加の呼び出しをチェーンできるようにする <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="bccae-189">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
