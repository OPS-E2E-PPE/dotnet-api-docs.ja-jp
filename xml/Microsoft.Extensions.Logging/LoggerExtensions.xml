<Type Name="LoggerExtensions" FullName="Microsoft.Extensions.Logging.LoggerExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc3bda6494a2db0f3775f843d308ff441a466f4a" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73407868" /></Metadata><TypeSignature Language="C#" Value="public static class LoggerExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LoggerExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.LoggerExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module LoggerExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoggerExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type LoggerExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="41abb-101">一般的なシナリオに使用する ILogger 拡張メソッド。</span><span class="sxs-lookup"><span data-stu-id="41abb-101">ILogger extension methods for common scenarios.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginScope">
      <MemberSignature Language="C#" Value="public static IDisposable BeginScope (this Microsoft.Extensions.Logging.ILogger logger, string messageFormat, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable BeginScope(class Microsoft.Extensions.Logging.ILogger logger, string messageFormat, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.BeginScope(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginScope (logger As ILogger, messageFormat As String, ParamArray args As Object()) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IDisposable ^ BeginScope(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ messageFormat, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member BeginScope : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; IDisposable" Usage="Microsoft.Extensions.Logging.LoggerExtensions.BeginScope (logger, messageFormat, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="messageFormat" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-102">スコープを作成する <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-102">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to create the scope in.</span></span></param>
        <param name="messageFormat"><span data-ttu-id="41abb-103">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-103">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-104">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-104">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-105">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-105">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-106">メッセージの書式を設定し、スコープを作成します。</span><span class="sxs-lookup"><span data-stu-id="41abb-106">Formats the message and creates a scope.</span></span></summary>
        <returns><span data-ttu-id="41abb-107">破棄可能なスコープ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="41abb-107">A disposable scope object.</span></span> <span data-ttu-id="41abb-108">null を使用できます。</span><span class="sxs-lookup"><span data-stu-id="41abb-108">Can be null.</span></span></returns>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-109">(logger を使用します。BeginScope ("{Address}", address) {} の要求を処理しています</span><span class="sxs-lookup"><span data-stu-id="41abb-109">using(logger.BeginScope("Processing request from {Address}", address)) { }</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static void Log (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.LogLevel logLevel, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Log(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.LogLevel logLevel, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Log(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::LogLevel logLevel, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Log : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.LogLevel * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.Log (logger, logLevel, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-110">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-110">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="logLevel"><span data-ttu-id="41abb-111">エントリはこのレベルで書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="41abb-111">Entry will be written on this level.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-112">ログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-112">Format string of the log message.</span></span></param>
        <param name="args"><span data-ttu-id="41abb-113">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-113">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-114">ログ メッセージの書式を設定し、指定したログ レベルで書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-114">Formats and writes a log message at the specified log level.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static void Log (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.LogLevel logLevel, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Log(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.LogLevel logLevel, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Log(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::LogLevel logLevel, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Log : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.LogLevel * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.Log (logger, logLevel, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="message" Type="System.String" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-115">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-115">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="logLevel"><span data-ttu-id="41abb-116">エントリはこのレベルで書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="41abb-116">Entry will be written on this level.</span></span></param>
        <param name="eventId"><span data-ttu-id="41abb-117">ログに関連付けられているイベント ID。</span><span class="sxs-lookup"><span data-stu-id="41abb-117">The event id associated with the log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-118">ログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-118">Format string of the log message.</span></span></param>
        <param name="args"><span data-ttu-id="41abb-119">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-119">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-120">ログ メッセージの書式を設定し、指定したログ レベルで書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-120">Formats and writes a log message at the specified log level.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static void Log (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.LogLevel logLevel, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Log(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.LogLevel logLevel, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Log(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::LogLevel logLevel, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Log : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.LogLevel * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.Log (logger, logLevel, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="exception" Type="System.Exception" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="message" Type="System.String" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-121">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-121">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="logLevel"><span data-ttu-id="41abb-122">エントリはこのレベルで書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="41abb-122">Entry will be written on this level.</span></span></param>
        <param name="exception"><span data-ttu-id="41abb-123">ログに記録される例外。</span><span class="sxs-lookup"><span data-stu-id="41abb-123">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-124">ログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-124">Format string of the log message.</span></span></param>
        <param name="args"><span data-ttu-id="41abb-125">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-125">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-126">ログ メッセージの書式を設定し、指定したログ レベルで書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-126">Formats and writes a log message at the specified log level.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static void Log (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.LogLevel logLevel, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Log(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.LogLevel logLevel, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Log(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::LogLevel logLevel, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Log : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.LogLevel * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.Log (logger, logLevel, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="exception" Type="System.Exception" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="message" Type="System.String" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="5" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-127">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-127">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="logLevel"><span data-ttu-id="41abb-128">エントリはこのレベルで書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="41abb-128">Entry will be written on this level.</span></span></param>
        <param name="eventId"><span data-ttu-id="41abb-129">ログに関連付けられているイベント ID。</span><span class="sxs-lookup"><span data-stu-id="41abb-129">The event id associated with the log.</span></span></param>
        <param name="exception"><span data-ttu-id="41abb-130">ログに記録される例外。</span><span class="sxs-lookup"><span data-stu-id="41abb-130">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-131">ログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-131">Format string of the log message.</span></span></param>
        <param name="args"><span data-ttu-id="41abb-132">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-132">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-133">ログ メッセージの書式を設定し、指定したログ レベルで書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-133">Formats and writes a log message at the specified log level.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCritical">
      <MemberSignature Language="C#" Value="public static void LogCritical (this Microsoft.Extensions.Logging.ILogger logger, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogCritical(class Microsoft.Extensions.Logging.ILogger logger, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogCritical (logger As ILogger, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogCritical(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogCritical : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogCritical (logger, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-134">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-134">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-135">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-135">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-136">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-136">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-137">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-137">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-138">重大なログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-138">Formats and writes a critical log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-139">lnm.LogCritical ("{Address} からの要求の処理", アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-139">logger.LogCritical("Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogCritical">
      <MemberSignature Language="C#" Value="public static void LogCritical (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogCritical(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogCritical(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogCritical : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogCritical (logger, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-140">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-140">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="41abb-141">ログに関連付けられているイベント ID。</span><span class="sxs-lookup"><span data-stu-id="41abb-141">The event id associated with the log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-142">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-142">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-143">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-143">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-144">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-144">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-145">重大なログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-145">Formats and writes a critical log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-146">lnm.LogCritical (0、"{Address} からの要求の処理中"、アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-146">logger.LogCritical(0, "Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogCritical">
      <MemberSignature Language="C#" Value="public static void LogCritical (this Microsoft.Extensions.Logging.ILogger logger, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogCritical(class Microsoft.Extensions.Logging.ILogger logger, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogCritical(Microsoft::Extensions::Logging::ILogger ^ logger, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogCritical : Microsoft.Extensions.Logging.ILogger * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogCritical (logger, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-147">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-147">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="exception"><span data-ttu-id="41abb-148">ログに記録される例外。</span><span class="sxs-lookup"><span data-stu-id="41abb-148">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-149">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-149">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-150">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-150">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-151">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-151">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-152">重大なログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-152">Formats and writes a critical log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-153">lnm.LogCritical (例外、"{Address} からの要求の処理中にエラーが発生しました"、アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-153">logger.LogCritical(exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogCritical">
      <MemberSignature Language="C#" Value="public static void LogCritical (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogCritical(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogCritical(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogCritical : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogCritical (logger, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-154">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-154">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="41abb-155">ログに関連付けられているイベント ID。</span><span class="sxs-lookup"><span data-stu-id="41abb-155">The event id associated with the log.</span></span></param>
        <param name="exception"><span data-ttu-id="41abb-156">ログに記録される例外。</span><span class="sxs-lookup"><span data-stu-id="41abb-156">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-157">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-157">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-158">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-158">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-159">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-159">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-160">重大なログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-160">Formats and writes a critical log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-161">lnm.LogCritical (0、exception、"{Address} からの要求の処理中にエラーが発生しました"、アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-161">logger.LogCritical(0, exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogDebug">
      <MemberSignature Language="C#" Value="public static void LogDebug (this Microsoft.Extensions.Logging.ILogger logger, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogDebug(class Microsoft.Extensions.Logging.ILogger logger, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogDebug (logger As ILogger, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogDebug(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogDebug : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogDebug (logger, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-162">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-162">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-163">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-163">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-164">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-164">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-165">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-165">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-166">デバッグ ログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-166">Formats and writes a debug log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-167">lnm.LogDebug ("{Address} からの要求の処理", アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-167">logger.LogDebug("Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogDebug">
      <MemberSignature Language="C#" Value="public static void LogDebug (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogDebug(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogDebug(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogDebug : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogDebug (logger, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-168">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-168">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="41abb-169">ログに関連付けられているイベント ID。</span><span class="sxs-lookup"><span data-stu-id="41abb-169">The event id associated with the log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-170">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-170">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-171">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-171">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-172">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-172">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-173">デバッグ ログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-173">Formats and writes a debug log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-174">lnm.LogDebug (0、"{Address} からの要求の処理"、アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-174">logger.LogDebug(0, "Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogDebug">
      <MemberSignature Language="C#" Value="public static void LogDebug (this Microsoft.Extensions.Logging.ILogger logger, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogDebug(class Microsoft.Extensions.Logging.ILogger logger, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogDebug(Microsoft::Extensions::Logging::ILogger ^ logger, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogDebug : Microsoft.Extensions.Logging.ILogger * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogDebug (logger, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-175">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-175">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="exception"><span data-ttu-id="41abb-176">ログに記録される例外。</span><span class="sxs-lookup"><span data-stu-id="41abb-176">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-177">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-177">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-178">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-178">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-179">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-179">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-180">デバッグ ログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-180">Formats and writes a debug log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-181">lnm.LogDebug (例外、"{Address} からの要求の処理中にエラーが発生しました"、アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-181">logger.LogDebug(exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogDebug">
      <MemberSignature Language="C#" Value="public static void LogDebug (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogDebug(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogDebug(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogDebug : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogDebug (logger, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-182">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-182">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="41abb-183">ログに関連付けられているイベント ID。</span><span class="sxs-lookup"><span data-stu-id="41abb-183">The event id associated with the log.</span></span></param>
        <param name="exception"><span data-ttu-id="41abb-184">ログに記録される例外。</span><span class="sxs-lookup"><span data-stu-id="41abb-184">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-185">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-185">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-186">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-186">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-187">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-187">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-188">デバッグ ログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-188">Formats and writes a debug log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-189">lnm.LogDebug (0、exception、"{Address} からの要求の処理中にエラーが発生しました"、アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-189">logger.LogDebug(0, exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogError">
      <MemberSignature Language="C#" Value="public static void LogError (this Microsoft.Extensions.Logging.ILogger logger, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogError(class Microsoft.Extensions.Logging.ILogger logger, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogError (logger As ILogger, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogError(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogError : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogError (logger, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-190">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-190">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-191">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-191">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-192">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-192">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-193">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-193">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-194">エラー ログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-194">Formats and writes an error log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-195">lnm.LogError ("{Address} から要求を処理しています", アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-195">logger.LogError("Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogError">
      <MemberSignature Language="C#" Value="public static void LogError (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogError(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogError(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogError : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogError (logger, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-196">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-196">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="41abb-197">ログに関連付けられているイベント ID。</span><span class="sxs-lookup"><span data-stu-id="41abb-197">The event id associated with the log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-198">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-198">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-199">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-199">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-200">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-200">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-201">エラー ログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-201">Formats and writes an error log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-202">lnm.LogError (0、"{Address} からの要求を処理しています"、アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-202">logger.LogError(0, "Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogError">
      <MemberSignature Language="C#" Value="public static void LogError (this Microsoft.Extensions.Logging.ILogger logger, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogError(class Microsoft.Extensions.Logging.ILogger logger, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogError(Microsoft::Extensions::Logging::ILogger ^ logger, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogError : Microsoft.Extensions.Logging.ILogger * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogError (logger, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-203">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-203">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="exception"><span data-ttu-id="41abb-204">ログに記録される例外。</span><span class="sxs-lookup"><span data-stu-id="41abb-204">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-205">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-205">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-206">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-206">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-207">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-207">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-208">エラー ログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-208">Formats and writes an error log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-209">lnm.LogError (例外、"{Address} からの要求の処理中にエラーが発生しました"、アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-209">logger.LogError(exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogError">
      <MemberSignature Language="C#" Value="public static void LogError (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogError(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogError(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogError : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogError (logger, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-210">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-210">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="41abb-211">ログに関連付けられているイベント ID。</span><span class="sxs-lookup"><span data-stu-id="41abb-211">The event id associated with the log.</span></span></param>
        <param name="exception"><span data-ttu-id="41abb-212">ログに記録される例外。</span><span class="sxs-lookup"><span data-stu-id="41abb-212">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-213">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-213">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-214">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-214">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-215">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-215">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-216">エラー ログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-216">Formats and writes an error log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-217">lnm.LogError (0、exception、"{Address} からの要求の処理中にエラーが発生しました"、アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-217">logger.LogError(0, exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogInformation">
      <MemberSignature Language="C#" Value="public static void LogInformation (this Microsoft.Extensions.Logging.ILogger logger, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogInformation(class Microsoft.Extensions.Logging.ILogger logger, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogInformation (logger As ILogger, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogInformation(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogInformation : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogInformation (logger, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-218">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-218">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-219">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-219">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-220">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-220">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-221">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-221">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-222">情報ログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-222">Formats and writes an informational log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-223">lnm.LogInformation ("{Address} から要求を処理しています", アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-223">logger.LogInformation("Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogInformation">
      <MemberSignature Language="C#" Value="public static void LogInformation (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogInformation(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogInformation(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogInformation : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogInformation (logger, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-224">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-224">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="41abb-225">ログに関連付けられているイベント ID。</span><span class="sxs-lookup"><span data-stu-id="41abb-225">The event id associated with the log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-226">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-226">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-227">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-227">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-228">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-228">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-229">情報ログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-229">Formats and writes an informational log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-230">lnm.LogInformation (0、"{Address} から要求を処理しています"、アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-230">logger.LogInformation(0, "Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogInformation">
      <MemberSignature Language="C#" Value="public static void LogInformation (this Microsoft.Extensions.Logging.ILogger logger, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogInformation(class Microsoft.Extensions.Logging.ILogger logger, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogInformation(Microsoft::Extensions::Logging::ILogger ^ logger, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogInformation : Microsoft.Extensions.Logging.ILogger * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogInformation (logger, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-231">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-231">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="exception"><span data-ttu-id="41abb-232">ログに記録される例外。</span><span class="sxs-lookup"><span data-stu-id="41abb-232">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-233">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-233">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-234">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-234">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-235">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-235">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-236">情報ログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-236">Formats and writes an informational log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-237">lnm.LogInformation (例外、"{Address} からの要求の処理中にエラーが発生しました"、アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-237">logger.LogInformation(exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogInformation">
      <MemberSignature Language="C#" Value="public static void LogInformation (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogInformation(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogInformation(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogInformation : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogInformation (logger, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-238">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-238">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="41abb-239">ログに関連付けられているイベント ID。</span><span class="sxs-lookup"><span data-stu-id="41abb-239">The event id associated with the log.</span></span></param>
        <param name="exception"><span data-ttu-id="41abb-240">ログに記録される例外。</span><span class="sxs-lookup"><span data-stu-id="41abb-240">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-241">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-241">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-242">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-242">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-243">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-243">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-244">情報ログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-244">Formats and writes an informational log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-245">lnm.LogInformation (0、exception、"{Address} からの要求の処理中にエラーが発生しました"、アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-245">logger.LogInformation(0, exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogTrace">
      <MemberSignature Language="C#" Value="public static void LogTrace (this Microsoft.Extensions.Logging.ILogger logger, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogTrace(class Microsoft.Extensions.Logging.ILogger logger, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogTrace (logger As ILogger, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogTrace(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogTrace : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogTrace (logger, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-246">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-246">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-247">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-247">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-248">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-248">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-249">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-249">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-250">トレース ログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-250">Formats and writes a trace log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-251">lnm.LogTrace ("{Address} からの要求の処理", アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-251">logger.LogTrace("Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogTrace">
      <MemberSignature Language="C#" Value="public static void LogTrace (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogTrace(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogTrace(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogTrace : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogTrace (logger, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-252">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-252">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="41abb-253">ログに関連付けられているイベント ID。</span><span class="sxs-lookup"><span data-stu-id="41abb-253">The event id associated with the log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-254">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-254">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-255">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-255">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-256">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-256">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-257">トレース ログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-257">Formats and writes a trace log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-258">lnm.LogTrace (0、"{Address} からの要求の処理"、アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-258">logger.LogTrace(0, "Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogTrace">
      <MemberSignature Language="C#" Value="public static void LogTrace (this Microsoft.Extensions.Logging.ILogger logger, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogTrace(class Microsoft.Extensions.Logging.ILogger logger, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogTrace(Microsoft::Extensions::Logging::ILogger ^ logger, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogTrace : Microsoft.Extensions.Logging.ILogger * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogTrace (logger, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-259">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-259">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="exception"><span data-ttu-id="41abb-260">ログに記録される例外。</span><span class="sxs-lookup"><span data-stu-id="41abb-260">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-261">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-261">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-262">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-262">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-263">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-263">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-264">トレース ログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-264">Formats and writes a trace log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-265">lnm.LogTrace (例外、"{Address} からの要求の処理中にエラーが発生しました"、アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-265">logger.LogTrace(exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogTrace">
      <MemberSignature Language="C#" Value="public static void LogTrace (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogTrace(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogTrace(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogTrace : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogTrace (logger, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-266">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-266">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="41abb-267">ログに関連付けられているイベント ID。</span><span class="sxs-lookup"><span data-stu-id="41abb-267">The event id associated with the log.</span></span></param>
        <param name="exception"><span data-ttu-id="41abb-268">ログに記録される例外。</span><span class="sxs-lookup"><span data-stu-id="41abb-268">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-269">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-269">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-270">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-270">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-271">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-271">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-272">トレース ログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-272">Formats and writes a trace log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-273">lnm.LogTrace (0、exception、"{Address} からの要求の処理中にエラーが発生しました"、アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-273">logger.LogTrace(0, exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogWarning">
      <MemberSignature Language="C#" Value="public static void LogWarning (this Microsoft.Extensions.Logging.ILogger logger, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogWarning(class Microsoft.Extensions.Logging.ILogger logger, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogWarning (logger As ILogger, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogWarning(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogWarning : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogWarning (logger, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-274">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-274">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-275">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-275">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-276">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-276">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-277">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-277">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-278">警告ログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-278">Formats and writes a warning log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-279">lnm.LogWarning ("{Address} からの要求の処理", アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-279">logger.LogWarning("Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogWarning">
      <MemberSignature Language="C#" Value="public static void LogWarning (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogWarning(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogWarning(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogWarning : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogWarning (logger, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-280">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-280">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="41abb-281">ログに関連付けられているイベント ID。</span><span class="sxs-lookup"><span data-stu-id="41abb-281">The event id associated with the log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-282">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-282">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-283">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-283">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-284">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-284">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-285">警告ログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-285">Formats and writes a warning log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-286">lnm.LogWarning (0、"{Address} からの要求の処理中"、アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-286">logger.LogWarning(0, "Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogWarning">
      <MemberSignature Language="C#" Value="public static void LogWarning (this Microsoft.Extensions.Logging.ILogger logger, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogWarning(class Microsoft.Extensions.Logging.ILogger logger, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogWarning(Microsoft::Extensions::Logging::ILogger ^ logger, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogWarning : Microsoft.Extensions.Logging.ILogger * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogWarning (logger, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-287">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-287">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="exception"><span data-ttu-id="41abb-288">ログに記録される例外。</span><span class="sxs-lookup"><span data-stu-id="41abb-288">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-289">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-289">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-290">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-290">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-291">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-291">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-292">警告ログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-292">Formats and writes a warning log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-293">lnm.LogWarning (例外、"{Address} からの要求の処理中にエラーが発生しました"、アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-293">logger.LogWarning(exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogWarning">
      <MemberSignature Language="C#" Value="public static void LogWarning (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogWarning(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogWarning(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogWarning : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogWarning (logger, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="41abb-294">書き込み先の <see cref="T:Microsoft.Extensions.Logging.ILogger" />。</span><span class="sxs-lookup"><span data-stu-id="41abb-294">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="41abb-295">ログに関連付けられているイベント ID。</span><span class="sxs-lookup"><span data-stu-id="41abb-295">The event id associated with the log.</span></span></param>
        <param name="exception"><span data-ttu-id="41abb-296">ログに記録される例外。</span><span class="sxs-lookup"><span data-stu-id="41abb-296">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="41abb-297">メッセージ テンプレート形式のログ メッセージの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="41abb-297">Format string of the log message in message template format.</span></span> <span data-ttu-id="41abb-298">例:</span><span class="sxs-lookup"><span data-stu-id="41abb-298">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="41abb-299">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="41abb-299">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="41abb-300">警告ログ メッセージの書式を設定し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="41abb-300">Formats and writes a warning log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="41abb-301">lnm.LogWarning (0、exception、"{Address} からの要求の処理中にエラーが発生しました"、アドレス)</span><span class="sxs-lookup"><span data-stu-id="41abb-301">logger.LogWarning(0, exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
  </Members>
</Type>
