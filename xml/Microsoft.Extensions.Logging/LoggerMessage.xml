<Type Name="LoggerMessage" FullName="Microsoft.Extensions.Logging.LoggerMessage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4d0f64dd147f48f3be87649150ee0b1823c6565c" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75157660" /></Metadata><TypeSignature Language="C#" Value="public static class LoggerMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LoggerMessage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.LoggerMessage" />
  <TypeSignature Language="VB.NET" Value="Public Class LoggerMessage" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoggerMessage abstract sealed" />
  <TypeSignature Language="F#" Value="type LoggerMessage = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8c370-101">後でパフォーマンスの高い方法でメッセージをログに記録するためにキャッシュできるデリゲートを作成します。</span><span class="sxs-lookup"><span data-stu-id="8c370-101">Creates delegates which can be later cached to log messages in a performant way.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Define">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.Extensions.Logging.ILogger,Exception&gt; Define (Microsoft.Extensions.Logging.LogLevel logLevel, Microsoft.Extensions.Logging.EventId eventId, string formatString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`2&lt;class Microsoft.Extensions.Logging.ILogger, class System.Exception&gt; Define(valuetype Microsoft.Extensions.Logging.LogLevel logLevel, valuetype Microsoft.Extensions.Logging.EventId eventId, string formatString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerMessage.Define(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Action&lt;Microsoft::Extensions::Logging::ILogger ^, Exception ^&gt; ^ Define(Microsoft::Extensions::Logging::LogLevel logLevel, Microsoft::Extensions::Logging::EventId eventId, System::String ^ formatString);" />
      <MemberSignature Language="F#" Value="static member Define : Microsoft.Extensions.Logging.LogLevel * Microsoft.Extensions.Logging.EventId * string -&gt; Action&lt;Microsoft.Extensions.Logging.ILogger, Exception&gt;" Usage="Microsoft.Extensions.Logging.LoggerMessage.Define (logLevel, eventId, formatString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.Extensions.Logging.ILogger,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="formatString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logLevel"><span data-ttu-id="8c370-102"><see cref="T:Microsoft.Extensions.Logging.LogLevel" /></span><span class="sxs-lookup"><span data-stu-id="8c370-102">The <see cref="T:Microsoft.Extensions.Logging.LogLevel" /></span></span></param>
        <param name="eventId"><span data-ttu-id="8c370-103">イベント ID</span><span class="sxs-lookup"><span data-stu-id="8c370-103">The event id</span></span></param>
        <param name="formatString"><span data-ttu-id="8c370-104">名前付き書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8c370-104">The named format string</span></span></param>
        <summary><span data-ttu-id="8c370-105">メッセージをログに記録するために呼び出すことができるデリゲートを作成します。</span><span class="sxs-lookup"><span data-stu-id="8c370-105">Creates a delegate which can be invoked for logging a message.</span></span></summary>
        <returns><span data-ttu-id="8c370-106">呼び出されたときにログ メッセージを作成するデリゲート。</span><span class="sxs-lookup"><span data-stu-id="8c370-106">A delegate which when invoked creates a log message.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Define&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.Extensions.Logging.ILogger,T1,Exception&gt; Define&lt;T1&gt; (Microsoft.Extensions.Logging.LogLevel logLevel, Microsoft.Extensions.Logging.EventId eventId, string formatString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`3&lt;class Microsoft.Extensions.Logging.ILogger, !!T1, class System.Exception&gt; Define&lt;T1&gt;(valuetype Microsoft.Extensions.Logging.LogLevel logLevel, valuetype Microsoft.Extensions.Logging.EventId eventId, string formatString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerMessage.Define``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1&gt;&#xA; static Action&lt;Microsoft::Extensions::Logging::ILogger ^, T1, Exception ^&gt; ^ Define(Microsoft::Extensions::Logging::LogLevel logLevel, Microsoft::Extensions::Logging::EventId eventId, System::String ^ formatString);" />
      <MemberSignature Language="F#" Value="static member Define : Microsoft.Extensions.Logging.LogLevel * Microsoft.Extensions.Logging.EventId * string -&gt; Action&lt;Microsoft.Extensions.Logging.ILogger, 'T1, Exception&gt;" Usage="Microsoft.Extensions.Logging.LoggerMessage.Define (logLevel, eventId, formatString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.Extensions.Logging.ILogger,T1,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="formatString" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="8c370-107">名前付き書式指定文字列に渡される最初のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-107">The type of the first parameter passed to the named format string.</span></span></typeparam>
        <param name="logLevel"><span data-ttu-id="8c370-108"><see cref="T:Microsoft.Extensions.Logging.LogLevel" /></span><span class="sxs-lookup"><span data-stu-id="8c370-108">The <see cref="T:Microsoft.Extensions.Logging.LogLevel" /></span></span></param>
        <param name="eventId"><span data-ttu-id="8c370-109">イベント ID</span><span class="sxs-lookup"><span data-stu-id="8c370-109">The event id</span></span></param>
        <param name="formatString"><span data-ttu-id="8c370-110">名前付き書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8c370-110">The named format string</span></span></param>
        <summary><span data-ttu-id="8c370-111">メッセージをログに記録するために呼び出すことができるデリゲートを作成します。</span><span class="sxs-lookup"><span data-stu-id="8c370-111">Creates a delegate which can be invoked for logging a message.</span></span></summary>
        <returns><span data-ttu-id="8c370-112">呼び出されたときにログ メッセージを作成するデリゲート。</span><span class="sxs-lookup"><span data-stu-id="8c370-112">A delegate which when invoked creates a log message.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Define&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.Extensions.Logging.ILogger,T1,T2,Exception&gt; Define&lt;T1,T2&gt; (Microsoft.Extensions.Logging.LogLevel logLevel, Microsoft.Extensions.Logging.EventId eventId, string formatString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`4&lt;class Microsoft.Extensions.Logging.ILogger, !!T1, !!T2, class System.Exception&gt; Define&lt;T1, T2&gt;(valuetype Microsoft.Extensions.Logging.LogLevel logLevel, valuetype Microsoft.Extensions.Logging.EventId eventId, string formatString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerMessage.Define``2(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static Action&lt;Microsoft::Extensions::Logging::ILogger ^, T1, T2, Exception ^&gt; ^ Define(Microsoft::Extensions::Logging::LogLevel logLevel, Microsoft::Extensions::Logging::EventId eventId, System::String ^ formatString);" />
      <MemberSignature Language="F#" Value="static member Define : Microsoft.Extensions.Logging.LogLevel * Microsoft.Extensions.Logging.EventId * string -&gt; Action&lt;Microsoft.Extensions.Logging.ILogger, 'T1, 'T2, Exception&gt;" Usage="Microsoft.Extensions.Logging.LoggerMessage.Define (logLevel, eventId, formatString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.Extensions.Logging.ILogger,T1,T2,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="formatString" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="8c370-113">名前付き書式指定文字列に渡される最初のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-113">The type of the first parameter passed to the named format string.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="8c370-114">名前付き書式指定文字列に渡される2番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-114">The type of the second parameter passed to the named format string.</span></span></typeparam>
        <param name="logLevel"><span data-ttu-id="8c370-115"><see cref="T:Microsoft.Extensions.Logging.LogLevel" /></span><span class="sxs-lookup"><span data-stu-id="8c370-115">The <see cref="T:Microsoft.Extensions.Logging.LogLevel" /></span></span></param>
        <param name="eventId"><span data-ttu-id="8c370-116">イベント ID</span><span class="sxs-lookup"><span data-stu-id="8c370-116">The event id</span></span></param>
        <param name="formatString"><span data-ttu-id="8c370-117">名前付き書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8c370-117">The named format string</span></span></param>
        <summary><span data-ttu-id="8c370-118">メッセージをログに記録するために呼び出すことができるデリゲートを作成します。</span><span class="sxs-lookup"><span data-stu-id="8c370-118">Creates a delegate which can be invoked for logging a message.</span></span></summary>
        <returns><span data-ttu-id="8c370-119">呼び出されたときにログ メッセージを作成するデリゲート。</span><span class="sxs-lookup"><span data-stu-id="8c370-119">A delegate which when invoked creates a log message.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Define&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.Extensions.Logging.ILogger,T1,T2,T3,Exception&gt; Define&lt;T1,T2,T3&gt; (Microsoft.Extensions.Logging.LogLevel logLevel, Microsoft.Extensions.Logging.EventId eventId, string formatString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`5&lt;class Microsoft.Extensions.Logging.ILogger, !!T1, !!T2, !!T3, class System.Exception&gt; Define&lt;T1, T2, T3&gt;(valuetype Microsoft.Extensions.Logging.LogLevel logLevel, valuetype Microsoft.Extensions.Logging.EventId eventId, string formatString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerMessage.Define``3(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static Action&lt;Microsoft::Extensions::Logging::ILogger ^, T1, T2, T3, Exception ^&gt; ^ Define(Microsoft::Extensions::Logging::LogLevel logLevel, Microsoft::Extensions::Logging::EventId eventId, System::String ^ formatString);" />
      <MemberSignature Language="F#" Value="static member Define : Microsoft.Extensions.Logging.LogLevel * Microsoft.Extensions.Logging.EventId * string -&gt; Action&lt;Microsoft.Extensions.Logging.ILogger, 'T1, 'T2, 'T3, Exception&gt;" Usage="Microsoft.Extensions.Logging.LoggerMessage.Define (logLevel, eventId, formatString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.Extensions.Logging.ILogger,T1,T2,T3,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="formatString" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="8c370-120">名前付き書式指定文字列に渡される最初のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-120">The type of the first parameter passed to the named format string.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="8c370-121">名前付き書式指定文字列に渡される2番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-121">The type of the second parameter passed to the named format string.</span></span></typeparam>
        <typeparam name="T3"><span data-ttu-id="8c370-122">名前付き書式指定文字列に渡される3番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-122">The type of the third parameter passed to the named format string.</span></span></typeparam>
        <param name="logLevel"><span data-ttu-id="8c370-123"><see cref="T:Microsoft.Extensions.Logging.LogLevel" /></span><span class="sxs-lookup"><span data-stu-id="8c370-123">The <see cref="T:Microsoft.Extensions.Logging.LogLevel" /></span></span></param>
        <param name="eventId"><span data-ttu-id="8c370-124">イベント ID</span><span class="sxs-lookup"><span data-stu-id="8c370-124">The event id</span></span></param>
        <param name="formatString"><span data-ttu-id="8c370-125">名前付き書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8c370-125">The named format string</span></span></param>
        <summary><span data-ttu-id="8c370-126">メッセージをログに記録するために呼び出すことができるデリゲートを作成します。</span><span class="sxs-lookup"><span data-stu-id="8c370-126">Creates a delegate which can be invoked for logging a message.</span></span></summary>
        <returns><span data-ttu-id="8c370-127">呼び出されたときにログ メッセージを作成するデリゲート。</span><span class="sxs-lookup"><span data-stu-id="8c370-127">A delegate which when invoked creates a log message.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Define&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.Extensions.Logging.ILogger,T1,T2,T3,T4,Exception&gt; Define&lt;T1,T2,T3,T4&gt; (Microsoft.Extensions.Logging.LogLevel logLevel, Microsoft.Extensions.Logging.EventId eventId, string formatString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`6&lt;class Microsoft.Extensions.Logging.ILogger, !!T1, !!T2, !!T3, !!T4, class System.Exception&gt; Define&lt;T1, T2, T3, T4&gt;(valuetype Microsoft.Extensions.Logging.LogLevel logLevel, valuetype Microsoft.Extensions.Logging.EventId eventId, string formatString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerMessage.Define``4(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA; static Action&lt;Microsoft::Extensions::Logging::ILogger ^, T1, T2, T3, T4, Exception ^&gt; ^ Define(Microsoft::Extensions::Logging::LogLevel logLevel, Microsoft::Extensions::Logging::EventId eventId, System::String ^ formatString);" />
      <MemberSignature Language="F#" Value="static member Define : Microsoft.Extensions.Logging.LogLevel * Microsoft.Extensions.Logging.EventId * string -&gt; Action&lt;Microsoft.Extensions.Logging.ILogger, 'T1, 'T2, 'T3, 'T4, Exception&gt;" Usage="Microsoft.Extensions.Logging.LoggerMessage.Define (logLevel, eventId, formatString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.Extensions.Logging.ILogger,T1,T2,T3,T4,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="formatString" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="8c370-128">名前付き書式指定文字列に渡される最初のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-128">The type of the first parameter passed to the named format string.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="8c370-129">名前付き書式指定文字列に渡される2番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-129">The type of the second parameter passed to the named format string.</span></span></typeparam>
        <typeparam name="T3"><span data-ttu-id="8c370-130">名前付き書式指定文字列に渡される3番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-130">The type of the third parameter passed to the named format string.</span></span></typeparam>
        <typeparam name="T4"><span data-ttu-id="8c370-131">名前付き書式指定文字列に渡される4番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-131">The type of the fourth parameter passed to the named format string.</span></span></typeparam>
        <param name="logLevel"><span data-ttu-id="8c370-132"><see cref="T:Microsoft.Extensions.Logging.LogLevel" /></span><span class="sxs-lookup"><span data-stu-id="8c370-132">The <see cref="T:Microsoft.Extensions.Logging.LogLevel" /></span></span></param>
        <param name="eventId"><span data-ttu-id="8c370-133">イベント ID</span><span class="sxs-lookup"><span data-stu-id="8c370-133">The event id</span></span></param>
        <param name="formatString"><span data-ttu-id="8c370-134">名前付き書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8c370-134">The named format string</span></span></param>
        <summary><span data-ttu-id="8c370-135">メッセージをログに記録するために呼び出すことができるデリゲートを作成します。</span><span class="sxs-lookup"><span data-stu-id="8c370-135">Creates a delegate which can be invoked for logging a message.</span></span></summary>
        <returns><span data-ttu-id="8c370-136">呼び出されたときにログ メッセージを作成するデリゲート。</span><span class="sxs-lookup"><span data-stu-id="8c370-136">A delegate which when invoked creates a log message.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Define&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.Extensions.Logging.ILogger,T1,T2,T3,T4,T5,Exception&gt; Define&lt;T1,T2,T3,T4,T5&gt; (Microsoft.Extensions.Logging.LogLevel logLevel, Microsoft.Extensions.Logging.EventId eventId, string formatString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`7&lt;class Microsoft.Extensions.Logging.ILogger, !!T1, !!T2, !!T3, !!T4, !!T5, class System.Exception&gt; Define&lt;T1, T2, T3, T4, T5&gt;(valuetype Microsoft.Extensions.Logging.LogLevel logLevel, valuetype Microsoft.Extensions.Logging.EventId eventId, string formatString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerMessage.Define``5(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA; static Action&lt;Microsoft::Extensions::Logging::ILogger ^, T1, T2, T3, T4, T5, Exception ^&gt; ^ Define(Microsoft::Extensions::Logging::LogLevel logLevel, Microsoft::Extensions::Logging::EventId eventId, System::String ^ formatString);" />
      <MemberSignature Language="F#" Value="static member Define : Microsoft.Extensions.Logging.LogLevel * Microsoft.Extensions.Logging.EventId * string -&gt; Action&lt;Microsoft.Extensions.Logging.ILogger, 'T1, 'T2, 'T3, 'T4, 'T5, Exception&gt;" Usage="Microsoft.Extensions.Logging.LoggerMessage.Define (logLevel, eventId, formatString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.Extensions.Logging.ILogger,T1,T2,T3,T4,T5,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="formatString" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="8c370-137">名前付き書式指定文字列に渡される最初のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-137">The type of the first parameter passed to the named format string.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="8c370-138">名前付き書式指定文字列に渡される2番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-138">The type of the second parameter passed to the named format string.</span></span></typeparam>
        <typeparam name="T3"><span data-ttu-id="8c370-139">名前付き書式指定文字列に渡される3番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-139">The type of the third parameter passed to the named format string.</span></span></typeparam>
        <typeparam name="T4"><span data-ttu-id="8c370-140">名前付き書式指定文字列に渡される4番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-140">The type of the fourth parameter passed to the named format string.</span></span></typeparam>
        <typeparam name="T5"><span data-ttu-id="8c370-141">名前付き書式指定文字列に渡される5番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-141">The type of the fifth parameter passed to the named format string.</span></span></typeparam>
        <param name="logLevel"><span data-ttu-id="8c370-142"><see cref="T:Microsoft.Extensions.Logging.LogLevel" /></span><span class="sxs-lookup"><span data-stu-id="8c370-142">The <see cref="T:Microsoft.Extensions.Logging.LogLevel" /></span></span></param>
        <param name="eventId"><span data-ttu-id="8c370-143">イベント ID</span><span class="sxs-lookup"><span data-stu-id="8c370-143">The event id</span></span></param>
        <param name="formatString"><span data-ttu-id="8c370-144">名前付き書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8c370-144">The named format string</span></span></param>
        <summary><span data-ttu-id="8c370-145">メッセージをログに記録するために呼び出すことができるデリゲートを作成します。</span><span class="sxs-lookup"><span data-stu-id="8c370-145">Creates a delegate which can be invoked for logging a message.</span></span></summary>
        <returns><span data-ttu-id="8c370-146">呼び出されたときにログ メッセージを作成するデリゲート。</span><span class="sxs-lookup"><span data-stu-id="8c370-146">A delegate which when invoked creates a log message.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Define&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.Extensions.Logging.ILogger,T1,T2,T3,T4,T5,T6,Exception&gt; Define&lt;T1,T2,T3,T4,T5,T6&gt; (Microsoft.Extensions.Logging.LogLevel logLevel, Microsoft.Extensions.Logging.EventId eventId, string formatString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`8&lt;class Microsoft.Extensions.Logging.ILogger, !!T1, !!T2, !!T3, !!T4, !!T5, !!T6, class System.Exception&gt; Define&lt;T1, T2, T3, T4, T5, T6&gt;(valuetype Microsoft.Extensions.Logging.LogLevel logLevel, valuetype Microsoft.Extensions.Logging.EventId eventId, string formatString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerMessage.Define``6(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA; static Action&lt;Microsoft::Extensions::Logging::ILogger ^, T1, T2, T3, T4, T5, T6, Exception ^&gt; ^ Define(Microsoft::Extensions::Logging::LogLevel logLevel, Microsoft::Extensions::Logging::EventId eventId, System::String ^ formatString);" />
      <MemberSignature Language="F#" Value="static member Define : Microsoft.Extensions.Logging.LogLevel * Microsoft.Extensions.Logging.EventId * string -&gt; Action&lt;Microsoft.Extensions.Logging.ILogger, 'T1, 'T2, 'T3, 'T4, 'T5, 'T6, Exception&gt;" Usage="Microsoft.Extensions.Logging.LoggerMessage.Define (logLevel, eventId, formatString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.Extensions.Logging.ILogger,T1,T2,T3,T4,T5,T6,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="formatString" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="8c370-147">名前付き書式指定文字列に渡される最初のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-147">The type of the first parameter passed to the named format string.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="8c370-148">名前付き書式指定文字列に渡される2番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-148">The type of the second parameter passed to the named format string.</span></span></typeparam>
        <typeparam name="T3"><span data-ttu-id="8c370-149">名前付き書式指定文字列に渡される3番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-149">The type of the third parameter passed to the named format string.</span></span></typeparam>
        <typeparam name="T4"><span data-ttu-id="8c370-150">名前付き書式指定文字列に渡される4番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-150">The type of the fourth parameter passed to the named format string.</span></span></typeparam>
        <typeparam name="T5"><span data-ttu-id="8c370-151">名前付き書式指定文字列に渡される5番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-151">The type of the fifth parameter passed to the named format string.</span></span></typeparam>
        <typeparam name="T6"><span data-ttu-id="8c370-152">名前付き書式指定文字列に渡される6番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-152">The type of the sixth parameter passed to the named format string.</span></span></typeparam>
        <param name="logLevel"><span data-ttu-id="8c370-153"><see cref="T:Microsoft.Extensions.Logging.LogLevel" /></span><span class="sxs-lookup"><span data-stu-id="8c370-153">The <see cref="T:Microsoft.Extensions.Logging.LogLevel" /></span></span></param>
        <param name="eventId"><span data-ttu-id="8c370-154">イベント ID</span><span class="sxs-lookup"><span data-stu-id="8c370-154">The event id</span></span></param>
        <param name="formatString"><span data-ttu-id="8c370-155">名前付き書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8c370-155">The named format string</span></span></param>
        <summary><span data-ttu-id="8c370-156">メッセージをログに記録するために呼び出すことができるデリゲートを作成します。</span><span class="sxs-lookup"><span data-stu-id="8c370-156">Creates a delegate which can be invoked for logging a message.</span></span></summary>
        <returns><span data-ttu-id="8c370-157">呼び出されたときにログ メッセージを作成するデリゲート。</span><span class="sxs-lookup"><span data-stu-id="8c370-157">A delegate which when invoked creates a log message.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineScope">
      <MemberSignature Language="C#" Value="public static Func&lt;Microsoft.Extensions.Logging.ILogger,IDisposable&gt; DefineScope (string formatString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;class Microsoft.Extensions.Logging.ILogger, class System.IDisposable&gt; DefineScope(string formatString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerMessage.DefineScope(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineScope (formatString As String) As Func(Of ILogger, IDisposable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Func&lt;Microsoft::Extensions::Logging::ILogger ^, IDisposable ^&gt; ^ DefineScope(System::String ^ formatString);" />
      <MemberSignature Language="F#" Value="static member DefineScope : string -&gt; Func&lt;Microsoft.Extensions.Logging.ILogger, IDisposable&gt;" Usage="Microsoft.Extensions.Logging.LoggerMessage.DefineScope formatString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.Extensions.Logging.ILogger,System.IDisposable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formatString"><span data-ttu-id="8c370-158">名前付き書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8c370-158">The named format string</span></span></param>
        <summary><span data-ttu-id="8c370-159">ログ スコープを作成するために呼び出すことができるデリゲートを作成します。</span><span class="sxs-lookup"><span data-stu-id="8c370-159">Creates a delegate which can be invoked to create a log scope.</span></span></summary>
        <returns><span data-ttu-id="8c370-160">呼び出されたときにログ スコープを作成するデリゲート。</span><span class="sxs-lookup"><span data-stu-id="8c370-160">A delegate which when invoked creates a log scope.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineScope&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;Microsoft.Extensions.Logging.ILogger,T1,IDisposable&gt; DefineScope&lt;T1&gt; (string formatString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`3&lt;class Microsoft.Extensions.Logging.ILogger, !!T1, class System.IDisposable&gt; DefineScope&lt;T1&gt;(string formatString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerMessage.DefineScope``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineScope(Of T1) (formatString As String) As Func(Of ILogger, T1, IDisposable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1&gt;&#xA; static Func&lt;Microsoft::Extensions::Logging::ILogger ^, T1, IDisposable ^&gt; ^ DefineScope(System::String ^ formatString);" />
      <MemberSignature Language="F#" Value="static member DefineScope : string -&gt; Func&lt;Microsoft.Extensions.Logging.ILogger, 'T1, IDisposable&gt;" Usage="Microsoft.Extensions.Logging.LoggerMessage.DefineScope formatString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.Extensions.Logging.ILogger,T1,System.IDisposable&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="formatString" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="8c370-161">名前付き書式指定文字列に渡される最初のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-161">The type of the first parameter passed to the named format string.</span></span></typeparam>
        <param name="formatString"><span data-ttu-id="8c370-162">名前付き書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8c370-162">The named format string</span></span></param>
        <summary><span data-ttu-id="8c370-163">ログ スコープを作成するために呼び出すことができるデリゲートを作成します。</span><span class="sxs-lookup"><span data-stu-id="8c370-163">Creates a delegate which can be invoked to create a log scope.</span></span></summary>
        <returns><span data-ttu-id="8c370-164">呼び出されたときにログ スコープを作成するデリゲート。</span><span class="sxs-lookup"><span data-stu-id="8c370-164">A delegate which when invoked creates a log scope.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineScope&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;Microsoft.Extensions.Logging.ILogger,T1,T2,IDisposable&gt; DefineScope&lt;T1,T2&gt; (string formatString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`4&lt;class Microsoft.Extensions.Logging.ILogger, !!T1, !!T2, class System.IDisposable&gt; DefineScope&lt;T1, T2&gt;(string formatString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerMessage.DefineScope``2(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineScope(Of T1, T2) (formatString As String) As Func(Of ILogger, T1, T2, IDisposable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static Func&lt;Microsoft::Extensions::Logging::ILogger ^, T1, T2, IDisposable ^&gt; ^ DefineScope(System::String ^ formatString);" />
      <MemberSignature Language="F#" Value="static member DefineScope : string -&gt; Func&lt;Microsoft.Extensions.Logging.ILogger, 'T1, 'T2, IDisposable&gt;" Usage="Microsoft.Extensions.Logging.LoggerMessage.DefineScope formatString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.Extensions.Logging.ILogger,T1,T2,System.IDisposable&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="formatString" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="8c370-165">名前付き書式指定文字列に渡される最初のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-165">The type of the first parameter passed to the named format string.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="8c370-166">名前付き書式指定文字列に渡される2番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-166">The type of the second parameter passed to the named format string.</span></span></typeparam>
        <param name="formatString"><span data-ttu-id="8c370-167">名前付き書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8c370-167">The named format string</span></span></param>
        <summary><span data-ttu-id="8c370-168">ログ スコープを作成するために呼び出すことができるデリゲートを作成します。</span><span class="sxs-lookup"><span data-stu-id="8c370-168">Creates a delegate which can be invoked to create a log scope.</span></span></summary>
        <returns><span data-ttu-id="8c370-169">呼び出されたときにログ スコープを作成するデリゲート。</span><span class="sxs-lookup"><span data-stu-id="8c370-169">A delegate which when invoked creates a log scope.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineScope&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;Microsoft.Extensions.Logging.ILogger,T1,T2,T3,IDisposable&gt; DefineScope&lt;T1,T2,T3&gt; (string formatString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`5&lt;class Microsoft.Extensions.Logging.ILogger, !!T1, !!T2, !!T3, class System.IDisposable&gt; DefineScope&lt;T1, T2, T3&gt;(string formatString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerMessage.DefineScope``3(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineScope(Of T1, T2, T3) (formatString As String) As Func(Of ILogger, T1, T2, T3, IDisposable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static Func&lt;Microsoft::Extensions::Logging::ILogger ^, T1, T2, T3, IDisposable ^&gt; ^ DefineScope(System::String ^ formatString);" />
      <MemberSignature Language="F#" Value="static member DefineScope : string -&gt; Func&lt;Microsoft.Extensions.Logging.ILogger, 'T1, 'T2, 'T3, IDisposable&gt;" Usage="Microsoft.Extensions.Logging.LoggerMessage.DefineScope formatString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.Extensions.Logging.ILogger,T1,T2,T3,System.IDisposable&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="formatString" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="8c370-170">名前付き書式指定文字列に渡される最初のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-170">The type of the first parameter passed to the named format string.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="8c370-171">名前付き書式指定文字列に渡される2番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-171">The type of the second parameter passed to the named format string.</span></span></typeparam>
        <typeparam name="T3"><span data-ttu-id="8c370-172">名前付き書式指定文字列に渡される3番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="8c370-172">The type of the third parameter passed to the named format string.</span></span></typeparam>
        <param name="formatString"><span data-ttu-id="8c370-173">名前付き書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8c370-173">The named format string</span></span></param>
        <summary><span data-ttu-id="8c370-174">ログ スコープを作成するために呼び出すことができるデリゲートを作成します。</span><span class="sxs-lookup"><span data-stu-id="8c370-174">Creates a delegate which can be invoked to create a log scope.</span></span></summary>
        <returns><span data-ttu-id="8c370-175">呼び出されたときにログ スコープを作成するデリゲート。</span><span class="sxs-lookup"><span data-stu-id="8c370-175">A delegate which when invoked creates a log scope.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
